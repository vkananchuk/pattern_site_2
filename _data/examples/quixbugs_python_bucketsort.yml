---
language: python
before_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: bucketsort
        children: []
        pos: 4
        length: 10
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: arr
          children: []
          pos: 15
          length: 3
        pos: 0
        length: 204
      body:
        type: block
        fields: {}
        children:
        - type: expression_statement
          fields:
            text: counts = [0] * k
          children: []
          pos: 28
          length: 16
        - type: for_statement
          fields:
            text: |-
              for x in arr:
                      counts[x] += 1
          children: []
          pos: 49
          length: 36
        - type: expression_statement
          fields:
            text: sorted_arr = []
          children: []
          pos: 91
          length: 15
        - type: for_statement
          fields:
            text: |-
              for i, count in enumerate(arr):
                      sorted_arr.extend([i] * count)
          children: []
          pos: 111
          length: 70
        - type: return_statement
          fields:
            text: return sorted_arr
          children: []
          pos: 187
          length: 17
        pos: 28
        length: 176
    children: []
    pos: 0
    length: 204
  pos: 0
  length: 205
after_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: bucketsort
        children: []
        pos: 4
        length: 10
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: arr
          children: []
          pos: 15
          length: 3
        pos: 0
        length: 207
      body:
        type: block
        fields: {}
        children:
        - type: expression_statement
          fields:
            text: counts = [0] * k
          children: []
          pos: 28
          length: 16
        - type: for_statement
          fields:
            text: |-
              for x in arr:
                      counts[x] += 1
          children: []
          pos: 49
          length: 36
        - type: expression_statement
          fields:
            text: sorted_arr = []
          children: []
          pos: 91
          length: 15
        - type: for_statement
          fields:
            text: |-
              for i, count in enumerate(counts):
                      sorted_arr.extend([i] * count)
          children: []
          pos: 111
          length: 73
        - type: return_statement
          fields:
            text: return sorted_arr
          children: []
          pos: 190
          length: 17
        pos: 28
        length: 179
    children: []
    pos: 0
    length: 207
  pos: 0
  length: 208
text_diff: "--- before\n+++ after\n@@ -4,7 +4,7 @@\n         counts[x] += 1\n \n     sorted_arr
  = []\n-    for i, count in enumerate(arr):\n+    for i, count in enumerate(counts):\n
  \        sorted_arr.extend([i] * count)\n \n     return sorted_arr\n"
tree_diff: |+
  New cluster:
  UPDATE from for i, count in enumerate(arr):
          sorted_arr.extend([i] * count) to for i, count in enumerate(counts):
          sorted_arr.extend([i] * count)
  ------------
  ===
  update-node
  ---
  for_statement: for i, count in enumerate(arr):
          sorted_arr.extend([i] * count) [111,181]
  replace for i, count in enumerate(arr):
          sorted_arr.extend([i] * count) by for i, count in enumerate(counts):
          sorted_arr.extend([i] * count)

...
