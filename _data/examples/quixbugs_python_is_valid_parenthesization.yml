---
language: python
before_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: is_valid_parenthesization
        children: []
        pos: 4
        length: 25
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: parens
          children: []
          pos: 30
          length: 6
        pos: 0
        length: 234
      body:
        type: block
        fields: {}
        children:
        - type: expression_statement
          fields:
            text: depth = 0
          children: []
          pos: 43
          length: 9
        - type: for_statement
          fields:
            text: |-
              for paren in parens:
                      if paren == '(':
                          depth += 1
                      else:
                          depth -= 1
                          if depth < 0:
                              return False
          children: []
          pos: 57
          length: 160
        - type: return_statement
          fields:
            text: return True
          children: []
          pos: 223
          length: 11
        pos: 43
        length: 191
    children: []
    pos: 0
    length: 234
  pos: 0
  length: 235
after_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: is_valid_parenthesization
        children: []
        pos: 4
        length: 25
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: parens
          children: []
          pos: 30
          length: 6
        pos: 0
        length: 240
      body:
        type: block
        fields: {}
        children:
        - type: expression_statement
          fields:
            text: depth = 0
          children: []
          pos: 43
          length: 9
        - type: for_statement
          fields:
            text: |-
              for paren in parens:
                      if paren == '(':
                          depth += 1
                      else:
                          depth -= 1
                          if depth < 0:
                              return False
          children: []
          pos: 57
          length: 160
        - type: return_statement
          fields:
            text: return depth == 0
          children: []
          pos: 223
          length: 17
        pos: 43
        length: 197
    children: []
    pos: 0
    length: 240
  pos: 0
  length: 241
text_diff: "--- before\n+++ after\n@@ -8,4 +8,4 @@\n             if depth < 0:\n                 return
  False\n \n-    return True\n+    return depth == 0\n"
tree_diff: |+
  New cluster:
  UPDATE from return True to return depth == 0
  ------------
  ===
  update-node
  ---
  return_statement: return True [223,234]
  replace return True by return depth == 0

...
