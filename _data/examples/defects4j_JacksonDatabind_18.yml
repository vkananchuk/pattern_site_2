---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: MappingIterator
        children: []
        pos: 381
        length: 15
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: |-
              protected final static MappingIterator<?> EMPTY_ITERATOR =
                      new MappingIterator<Object>(null, null, null, null, false, null);
          children: []
          pos: 440
          length: 132
        - type: field_declaration
          fields:
            text: protected final static int STATE_CLOSED = 0;
          children: []
          pos: 802
          length: 44
        - type: field_declaration
          fields:
            text: protected final static int STATE_NEED_RESYNC = 1;
          children: []
          pos: 912
          length: 49
        - type: field_declaration
          fields:
            text: protected final static int STATE_MAY_HAVE_VALUE = 2;
          children: []
          pos: 1085
          length: 52
        - type: field_declaration
          fields:
            text: protected final static int STATE_HAS_VALUE = 3;
          children: []
          pos: 1279
          length: 47
        - type: field_declaration
          fields:
            text: protected final JavaType _type;
          children: []
          pos: 1557
          length: 31
        - type: field_declaration
          fields:
            text: protected final DeserializationContext _context;
          children: []
          pos: 1685
          length: 48
        - type: field_declaration
          fields:
            text: protected final JsonDeserializer<T> _deserializer;
          children: []
          pos: 1806
          length: 50
        - type: field_declaration
          fields:
            text: protected final JsonParser _parser;
          children: []
          pos: 2061
          length: 35
        - type: field_declaration
          fields:
            text: protected final JsonStreamContext _seqContext;
          children: []
          pos: 2244
          length: 46
        - type: field_declaration
          fields:
            text: protected final T _updatedValue;
          children: []
          pos: 2411
          length: 32
        - type: field_declaration
          fields:
            text: protected final boolean _closeParser;
          children: []
          pos: 2644
          length: 37
        - type: field_declaration
          fields:
            text: protected int _state;
          children: []
          pos: 2901
          length: 21
        - type: constructor_declaration
          fields:
            text: |-
              @SuppressWarnings("unchecked")
                  protected MappingIterator(JavaType type, JsonParser p, DeserializationContext ctxt,
                          JsonDeserializer<?> deser,
                          boolean managedParser, Object valueToUpdate)
                  {
                      _type = type;
                      _parser = p;
                      _context = ctxt;
                      _deserializer = (JsonDeserializer<T>) deser;
                      _closeParser = managedParser;
                      if (valueToUpdate == null) {
                          _updatedValue = null;
                      } else {
                          _updatedValue = (T) valueToUpdate;
                      }

                      /* Ok: one more thing; we may have to skip START_ARRAY, assuming
                       * "wrapped" sequence; but this is ONLY done for 'managed' parsers
                       * and never if JsonParser was directly passed by caller (if it
                       * was, caller must have either positioned it over first token of
                       * the first element, or cleared the START_ARRAY token explicitly).
                       * Note, however, that we do not try to guess whether this could be
                       * an unwrapped sequence of arrays/Lists: we just assume it is wrapped;
                       * and if not, caller needs to hand us JsonParser instead, pointing to
                       * the first token of the first element.
                       */
                      if (p == null) { // can this occur?
                          _seqContext = null;
                          _state = STATE_CLOSED;
                      } else {
                          JsonStreamContext sctxt = p.getParsingContext();
                          if (managedParser && p.isExpectedStartArrayToken()) {
                              // If pointing to START_ARRAY, context should be that ARRAY
                              p.clearCurrentToken();
                          } else {
                              // regardless, recovery context should be whatever context we have now,
                              // with sole exception of pointing to a start marker, in which case it's
                              // the parent
                              JsonToken t = p.getCurrentToken();
                              if ((t == JsonToken.START_OBJECT) || (t == JsonToken.START_ARRAY)) {
                                  sctxt = sctxt.getParent();
                              }
                          }
                          _seqContext = sctxt;
                          _state = STATE_MAY_HAVE_VALUE;
                      }
                  }
          children: []
          pos: 3381
          length: 2096
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: emptyIterator
              children: []
              pos: 5558
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 5483
              length: 150
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return (MappingIterator<T>) EMPTY_ITERATOR;
                children: []
                pos: 5584
                length: 43
              pos: 5574
              length: 59
          children: []
          pos: 5483
          length: 150
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: hasNext
              children: []
              pos: 5843
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 5814
              length: 295
            body:
              type: block
              fields: {}
              children:
              - type: try_statement
                fields:
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: return_statement
                      fields:
                        text: return hasNextValue();
                      children: []
                      pos: 5885
                      length: 22
                    pos: 5871
                    length: 46
                  excepts:
                    type: excepts
                    fields: {}
                    children:
                    - type: catch_clause
                      fields:
                        text: |-
                          catch (JsonMappingException e) {
                                      return (Boolean) _handleMappingException(e);
                                  }
                      children: []
                      pos: 5918
                      length: 99
                    - type: catch_clause
                      fields:
                        text: |-
                          catch (IOException e) {
                                      return (Boolean) _handleIOException(e);
                                  }
                      children: []
                      pos: 6018
                      length: 85
                    pos: 5867
                    length: 236
                children: []
                pos: 5867
                length: 236
              pos: 5857
              length: 252
          children: []
          pos: 5814
          length: 295
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: next
              children: []
              pos: 6142
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6119
              length: 303
            body:
              type: block
              fields: {}
              children:
              - type: try_statement
                fields:
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: return_statement
                      fields:
                        text: return nextValue();
                      children: []
                      pos: 6181
                      length: 19
                    pos: 6167
                    length: 43
                  excepts:
                    type: excepts
                    fields: {}
                    children:
                    - type: catch_clause
                      fields:
                        text: |-
                          catch (JsonMappingException e) {
                                      throw new RuntimeJsonMappingException(e.getMessage(), e);
                                  }
                      children: []
                      pos: 6211
                      length: 112
                    - type: catch_clause
                      fields:
                        text: |-
                          catch (IOException e) {
                                      throw new RuntimeException(e.getMessage(), e);
                                  }
                      children: []
                      pos: 6324
                      length: 92
                    pos: 6163
                    length: 253
                children: []
                pos: 6163
                length: 253
              pos: 6153
              length: 269
          children: []
          pos: 6119
          length: 303
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: remove
              children: []
              pos: 6454
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6428
              length: 93
            body:
              type: block
              fields: {}
              children:
              - type: throw_statement
                fields:
                  text: throw new UnsupportedOperationException();
                children: []
                pos: 6473
                length: 42
              pos: 6463
              length: 58
          children: []
          pos: 6428
          length: 93
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: close
              children: []
              pos: 6557
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6531
              length: 225
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: _state
                            children: []
                            pos: 6598
                            length: 6
                          right:
                            type: identifier
                            fields:
                              text: STATE_CLOSED
                            children: []
                            pos: 6608
                            length: 12
                        children: []
                        pos: 6598
                        length: 22
                    children: []
                    pos: 6597
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: _state = STATE_CLOSED;
                    children: []
                    pos: 6636
                    length: 22
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: _parser
                                children: []
                                pos: 6675
                                length: 7
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 6686
                                length: 4
                            children: []
                            pos: 6675
                            length: 15
                        children: []
                        pos: 6674
                        length: 17
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: _parser.close();
                        children: []
                        pos: 6710
                        length: 16
                      pos: 6692
                      length: 48
                    pos: 6671
                    length: 69
                  pos: 6622
                  length: 128
                pos: 6594
                length: 156
              pos: 6584
              length: 172
          children: []
          pos: 6531
          length: 225
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: hasNextValue
              children: []
              pos: 7108
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 7093
              length: 962
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: _state
                        children: []
                        pos: 7164
                        length: 6
                    children: []
                    pos: 7163
                    length: 8
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                                case STATE_CLOSED:
                                    return false;
                                case STATE_NEED_RESYNC:
                                    _resync();
                                    // fall-through
                                case STATE_MAY_HAVE_VALUE:
                                    JsonToken t = _parser.getCurrentToken();
                                    if (t == null) { // un-initialized or cleared; find next
                                        t = _parser.nextToken();
                                        // If EOF, no more, or if we hit END_ARRAY (although we don't clear the token).
                                        if (t == null || t == JsonToken.END_ARRAY) {
                                            _state = STATE_CLOSED;
                                            if (_closeParser && (_parser != null)) {
                                                _parser.close();
                                            }
                                            return false;
                                        }
                                    }
                                    _state = STATE_HAS_VALUE;
                                    return true;
                                case STATE_HAS_VALUE:
                                    // fall through
                                }
                    children: []
                    pos: 7172
                    length: 856
                children: []
                pos: 7156
                length: 872
              - type: return_statement
                fields:
                  text: return true;
                children: []
                pos: 8037
                length: 12
              pos: 7146
              length: 909
          children: []
          pos: 7093
          length: 962
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: nextValue
              children: []
              pos: 8070
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 8061
              length: 1160
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: _state
                        children: []
                        pos: 8123
                        length: 6
                    children: []
                    pos: 8122
                    length: 8
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                                case STATE_CLOSED:
                                    return _throwNoSuchElement();
                                case STATE_NEED_RESYNC: // fall-through, will do re-sync
                                case STATE_MAY_HAVE_VALUE:
                                    if (!hasNextValue()) {
                                        return _throwNoSuchElement();
                                    }
                                    break;
                                case STATE_HAS_VALUE:
                                    break;
                                }
                    children: []
                    pos: 8131
                    length: 343
                children: []
                pos: 8115
                length: 359
              - type: local_variable_declaration
                fields:
                  text: int nextState = STATE_NEED_RESYNC;
                children: []
                pos: 8484
                length: 34
              - type: try_statement
                fields:
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: local_variable_declaration
                      fields:
                        text: T value;
                      children: []
                      pos: 8545
                      length: 8
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: equals
                              fields:
                                left:
                                  type: identifier
                                  fields:
                                    text: _updatedValue
                                  children: []
                                  pos: 8570
                                  length: 13
                                right:
                                  type: null_literal
                                  fields: {}
                                  children: []
                                  pos: 8587
                                  length: 4
                              children: []
                              pos: 8570
                              length: 21
                          children: []
                          pos: 8569
                          length: 23
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: expression_statement
                          fields:
                            text: value = _deserializer.deserialize(_parser, _context);
                          children: []
                          pos: 8611
                          length: 53
                        pos: 8593
                        length: 85
                      pos: 8566
                      length: 248
                    - type: expression_statement
                      fields:
                        text: nextState = STATE_MAY_HAVE_VALUE;
                      children: []
                      pos: 8827
                      length: 33
                    - type: return_statement
                      fields:
                        text: return value;
                      children: []
                      pos: 8873
                      length: 13
                    pos: 8531
                    length: 365
                  excepts:
                    type: excepts
                    fields: {}
                    children: []
                    pos: 8527
                    length: 688
                children: []
                pos: 8527
                length: 688
              pos: 8105
              length: 1116
          children: []
          pos: 8061
          length: 1160
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: readAll
              children: []
              pos: 9474
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 9459
              length: 95
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return readAll(new ArrayList<T>());
                children: []
                pos: 9513
                length: 35
              pos: 9503
              length: 51
          children: []
          pos: 9459
          length: 95
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: readAll
              children: []
              pos: 9798
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: L resultList
                children: []
                pos: 9806
                length: 12
              pos: 9761
              length: 200
            body:
              type: block
              fields: {}
              children:
              - type: while_statement
                fields:
                  text: |-
                    while (hasNextValue()) {
                                resultList.add(nextValue());
                            }
                children: []
                pos: 9853
                length: 75
              - type: return_statement
                fields:
                  text: return resultList;
                children: []
                pos: 9937
                length: 18
              pos: 9843
              length: 118
          children: []
          pos: 9761
          length: 200
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: readAll
              children: []
              pos: 10138
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: C results
                children: []
                pos: 10146
                length: 9
              pos: 10095
              length: 197
            body:
              type: block
              fields: {}
              children:
              - type: while_statement
                fields:
                  text: |-
                    while (hasNextValue()) {
                                results.add(nextValue());
                            }
                children: []
                pos: 10190
                length: 72
              - type: return_statement
                fields:
                  text: return results;
                children: []
                pos: 10271
                length: 15
              pos: 10180
              length: 112
          children: []
          pos: 10095
          length: 197
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getParser
              children: []
              pos: 10603
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 10585
              length: 61
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return _parser;
                children: []
                pos: 10625
                length: 15
              pos: 10615
              length: 31
          children: []
          pos: 10585
          length: 61
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getParserSchema
              children: []
              pos: 10901
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 10881
              length: 78
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return _parser.getSchema();
                children: []
                pos: 10926
                length: 27
              pos: 10919
              length: 40
          children: []
          pos: 10881
          length: 78
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getCurrentLocation
              children: []
              pos: 11239
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 11219
              length: 93
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return _parser.getCurrentLocation();
                children: []
                pos: 11270
                length: 36
              pos: 11260
              length: 52
          children: []
          pos: 11219
          length: 93
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: _resync
              children: []
              pos: 11499
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 11484
              length: 761
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final JsonParser p = _parser;
                children: []
                pos: 11542
                length: 29
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: p.getParsingContext()
                            children: []
                            pos: 11673
                            length: 21
                          right:
                            type: identifier
                            fields:
                              text: _seqContext
                            children: []
                            pos: 11698
                            length: 11
                        children: []
                        pos: 11673
                        length: 36
                    children: []
                    pos: 11672
                    length: 38
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 11725
                    length: 7
                  pos: 11711
                  length: 31
                pos: 11669
                length: 73
              - type: while_statement
                fields:
                  text: |-
                    while (true) {
                                JsonToken t = p.nextToken();
                                if ((t == JsonToken.END_ARRAY) || (t == JsonToken.END_OBJECT)) {
                                    if (p.getParsingContext() == _seqContext) {
                                        p.clearCurrentToken();
                                        return;
                                    }
                                } else if ((t == JsonToken.START_ARRAY) || (t == JsonToken.START_OBJECT)) {
                                    p.skipChildren();
                                } else if (t == null) {
                                    return;
                                }
                            }
                children: []
                pos: 11752
                length: 487
              pos: 11532
              length: 713
          children: []
          pos: 11484
          length: 761
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: _throwNoSuchElement
              children: []
              pos: 12267
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 12251
              length: 89
            body:
              type: block
              fields: {}
              children:
              - type: throw_statement
                fields:
                  text: throw new NoSuchElementException();
                children: []
                pos: 12299
                length: 35
              pos: 12289
              length: 51
          children: []
          pos: 12251
          length: 89
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: _handleMappingException
              children: []
              pos: 12366
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonMappingException e
                children: []
                pos: 12390
                length: 22
              pos: 12350
              length: 137
            body:
              type: block
              fields: {}
              children:
              - type: throw_statement
                fields:
                  text: throw new RuntimeJsonMappingException(e.getMessage(), e);
                children: []
                pos: 12424
                length: 57
              pos: 12414
              length: 73
          children: []
          pos: 12350
          length: 137
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: _handleIOException
              children: []
              pos: 12509
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: IOException e
                children: []
                pos: 12528
                length: 13
              pos: 12493
              length: 112
            body:
              type: block
              fields: {}
              children:
              - type: throw_statement
                fields:
                  text: throw new RuntimeException(e.getMessage(), e);
                children: []
                pos: 12553
                length: 46
              pos: 12543
              length: 62
          children: []
          pos: 12493
          length: 112
        pos: 368
        length: 12239
    children: []
    pos: 368
    length: 12239
  pos: 0
  length: 12608
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: MappingIterator
        children: []
        pos: 381
        length: 15
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: |-
              protected final static MappingIterator<?> EMPTY_ITERATOR =
                      new MappingIterator<Object>(null, null, null, null, false, null);
          children: []
          pos: 440
          length: 132
        - type: field_declaration
          fields:
            text: protected final JavaType _type;
          children: []
          pos: 1345
          length: 31
        - type: field_declaration
          fields:
            text: protected final DeserializationContext _context;
          children: []
          pos: 1473
          length: 48
        - type: field_declaration
          fields:
            text: protected final JsonDeserializer<T> _deserializer;
          children: []
          pos: 1594
          length: 50
        - type: field_declaration
          fields:
            text: protected JsonParser _parser;
          children: []
          pos: 1849
          length: 29
        - type: field_declaration
          fields:
            text: protected final T _updatedValue;
          children: []
          pos: 2142
          length: 32
        - type: field_declaration
          fields:
            text: protected final boolean _closeParser;
          children: []
          pos: 2375
          length: 37
        - type: field_declaration
          fields:
            text: protected boolean _hasNextChecked;
          children: []
          pos: 2632
          length: 34
        - type: constructor_declaration
          fields:
            text: |-
              @SuppressWarnings("unchecked")
                  protected MappingIterator(JavaType type, JsonParser p, DeserializationContext ctxt,
                          JsonDeserializer<?> deser,
                          boolean managedParser, Object valueToUpdate)
                  {
                      _type = type;
                      _parser = p;
                      _context = ctxt;
                      _deserializer = (JsonDeserializer<T>) deser;
                      _closeParser = managedParser;
                      if (valueToUpdate == null) {
                          _updatedValue = null;
                      } else {
                          _updatedValue = (T) valueToUpdate;
                      }

                      /* Ok: one more thing; we may have to skip START_ARRAY, assuming
                       * "wrapped" sequence; but this is ONLY done for 'managed' parsers
                       * and never if JsonParser was directly passed by caller (if it
                       * was, caller must have either positioned it over first token of
                       * the first element, or cleared the START_ARRAY token explicitly).
                       * Note, however, that we do not try to guess whether this could be
                       * an unwrapped sequence of arrays/Lists: we just assume it is wrapped;
                       * and if not, caller needs to hand us JsonParser instead, pointing to
                       * the first token of the first element.
                       */
                      if (managedParser && (p != null) && p.isExpectedStartArrayToken()) {
                              // If pointing to START_ARRAY, context should be that ARRAY
                              p.clearCurrentToken();
                              // regardless, recovery context should be whatever context we have now,
                              // with sole exception of pointing to a start marker, in which case it's
                              // the parent
                      }
                  }
          children: []
          pos: 3125
          length: 1606
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: emptyIterator
              children: []
              pos: 4812
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 4737
              length: 150
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return (MappingIterator<T>) EMPTY_ITERATOR;
                children: []
                pos: 4838
                length: 43
              pos: 4828
              length: 59
          children: []
          pos: 4737
          length: 150
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: hasNext
              children: []
              pos: 5097
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 5068
              length: 295
            body:
              type: block
              fields: {}
              children:
              - type: try_statement
                fields:
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: return_statement
                      fields:
                        text: return hasNextValue();
                      children: []
                      pos: 5139
                      length: 22
                    pos: 5125
                    length: 46
                  excepts:
                    type: excepts
                    fields: {}
                    children:
                    - type: catch_clause
                      fields:
                        text: |-
                          catch (JsonMappingException e) {
                                      return (Boolean) _handleMappingException(e);
                                  }
                      children: []
                      pos: 5172
                      length: 99
                    - type: catch_clause
                      fields:
                        text: |-
                          catch (IOException e) {
                                      return (Boolean) _handleIOException(e);
                                  }
                      children: []
                      pos: 5272
                      length: 85
                    pos: 5121
                    length: 236
                children: []
                pos: 5121
                length: 236
              pos: 5111
              length: 252
          children: []
          pos: 5068
          length: 295
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: next
              children: []
              pos: 5396
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 5373
              length: 303
            body:
              type: block
              fields: {}
              children:
              - type: try_statement
                fields:
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: return_statement
                      fields:
                        text: return nextValue();
                      children: []
                      pos: 5435
                      length: 19
                    pos: 5421
                    length: 43
                  excepts:
                    type: excepts
                    fields: {}
                    children:
                    - type: catch_clause
                      fields:
                        text: |-
                          catch (JsonMappingException e) {
                                      throw new RuntimeJsonMappingException(e.getMessage(), e);
                                  }
                      children: []
                      pos: 5465
                      length: 112
                    - type: catch_clause
                      fields:
                        text: |-
                          catch (IOException e) {
                                      throw new RuntimeException(e.getMessage(), e);
                                  }
                      children: []
                      pos: 5578
                      length: 92
                    pos: 5417
                    length: 253
                children: []
                pos: 5417
                length: 253
              pos: 5407
              length: 269
          children: []
          pos: 5373
          length: 303
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: remove
              children: []
              pos: 5708
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 5682
              length: 93
            body:
              type: block
              fields: {}
              children:
              - type: throw_statement
                fields:
                  text: throw new UnsupportedOperationException();
                children: []
                pos: 5727
                length: 42
              pos: 5717
              length: 58
          children: []
          pos: 5682
          length: 93
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: close
              children: []
              pos: 5811
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 5785
              length: 142
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: _parser
                            children: []
                            pos: 5856
                            length: 7
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 5867
                            length: 4
                        children: []
                        pos: 5856
                        length: 15
                    children: []
                    pos: 5855
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: _parser.close();
                    children: []
                    pos: 5891
                    length: 16
                  pos: 5873
                  length: 48
                pos: 5852
                length: 69
              pos: 5838
              length: 89
          children: []
          pos: 5785
          length: 142
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: hasNextValue
              children: []
              pos: 6279
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6264
              length: 847
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: _parser
                            children: []
                            pos: 6331
                            length: 7
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 6342
                            length: 4
                        children: []
                        pos: 6331
                        length: 15
                    children: []
                    pos: 6330
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return false;
                    children: []
                    pos: 6362
                    length: 13
                  pos: 6348
                  length: 65
                pos: 6327
                length: 86
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!_hasNextChecked"
                        children: []
                        pos: 6426
                        length: 16
                    children: []
                    pos: 6425
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JsonToken t = _parser.getCurrentToken();
                    children: []
                    pos: 6458
                    length: 40
                  - type: expression_statement
                    fields:
                      text: _hasNextChecked = true;
                    children: []
                    pos: 6511
                    length: 23
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: t
                                children: []
                                pos: 6551
                                length: 1
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 6556
                                length: 4
                            children: []
                            pos: 6551
                            length: 9
                        children: []
                        pos: 6550
                        length: 11
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: t = _parser.nextToken();
                        children: []
                        pos: 6620
                        length: 24
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: or
                                fields:
                                  left:
                                    type: equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: t
                                        children: []
                                        pos: 6761
                                        length: 1
                                      right:
                                        type: null_literal
                                        fields: {}
                                        children: []
                                        pos: 6766
                                        length: 4
                                    children: []
                                    pos: 6761
                                    length: 9
                                  right:
                                    type: equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: t
                                        children: []
                                        pos: 6774
                                        length: 1
                                      right:
                                        type: field_access
                                        fields:
                                          text: JsonToken.END_ARRAY
                                        children: []
                                        pos: 6779
                                        length: 19
                                    children: []
                                    pos: 6774
                                    length: 24
                                children: []
                                pos: 6761
                                length: 37
                            children: []
                            pos: 6760
                            length: 39
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: local_variable_declaration
                            fields:
                              text: JsonParser jp = _parser;
                            children: []
                            pos: 6822
                            length: 24
                          - type: expression_statement
                            fields:
                              text: _parser = null;
                            children: []
                            pos: 6867
                            length: 15
                          - type: if_statement
                            fields:
                              condition:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: identifier
                                    fields:
                                      text: _closeParser
                                    children: []
                                    pos: 6907
                                    length: 12
                                children: []
                                pos: 6906
                                length: 14
                            children:
                            - type: block
                              fields: {}
                              children:
                              - type: expression_statement
                                fields:
                                  text: jp.close();
                                children: []
                                pos: 6947
                                length: 11
                              pos: 6921
                              length: 59
                            pos: 6903
                            length: 77
                          - type: return_statement
                            fields:
                              text: return false;
                            children: []
                            pos: 7001
                            length: 13
                          pos: 6800
                          length: 232
                        pos: 6757
                        length: 275
                      pos: 6562
                      length: 484
                    pos: 6547
                    length: 499
                  pos: 6444
                  length: 640
                pos: 6422
                length: 662
              - type: return_statement
                fields:
                  text: return true;
                children: []
                pos: 7093
                length: 12
              pos: 6317
              length: 794
          children: []
          pos: 6264
          length: 847
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: nextValue
              children: []
              pos: 7126
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 7117
              length: 924
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!_hasNextChecked"
                        children: []
                        pos: 7175
                        length: 16
                    children: []
                    pos: 7174
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: unary_expression
                            fields:
                              text: "!hasNextValue()"
                            children: []
                            pos: 7211
                            length: 15
                        children: []
                        pos: 7210
                        length: 17
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return _throwNoSuchElement();
                        children: []
                        pos: 7246
                        length: 29
                      pos: 7228
                      length: 61
                    pos: 7207
                    length: 82
                  pos: 7193
                  length: 106
                pos: 7171
                length: 128
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: _parser
                            children: []
                            pos: 7312
                            length: 7
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 7323
                            length: 4
                        children: []
                        pos: 7312
                        length: 15
                    children: []
                    pos: 7311
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return _throwNoSuchElement();
                    children: []
                    pos: 7343
                    length: 29
                  pos: 7329
                  length: 53
                pos: 7308
                length: 74
              - type: expression_statement
                fields:
                  text: _hasNextChecked = false;
                children: []
                pos: 7391
                length: 24
              - type: try_statement
                fields:
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: local_variable_declaration
                      fields:
                        text: T value;
                      children: []
                      pos: 7443
                      length: 8
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: equals
                              fields:
                                left:
                                  type: identifier
                                  fields:
                                    text: _updatedValue
                                  children: []
                                  pos: 7468
                                  length: 13
                                right:
                                  type: null_literal
                                  fields: {}
                                  children: []
                                  pos: 7485
                                  length: 4
                              children: []
                              pos: 7468
                              length: 21
                          children: []
                          pos: 7467
                          length: 23
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: expression_statement
                          fields:
                            text: value = _deserializer.deserialize(_parser, _context);
                          children: []
                          pos: 7509
                          length: 53
                        pos: 7491
                        length: 85
                      pos: 7464
                      length: 248
                    - type: return_statement
                      fields:
                        text: return value;
                      children: []
                      pos: 7725
                      length: 13
                    pos: 7429
                    length: 319
                  excepts:
                    type: excepts
                    fields: {}
                    children: []
                    pos: 7425
                    length: 610
                children: []
                pos: 7425
                length: 610
              pos: 7161
              length: 880
          children: []
          pos: 7117
          length: 924
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: readAll
              children: []
              pos: 8294
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 8279
              length: 95
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return readAll(new ArrayList<T>());
                children: []
                pos: 8333
                length: 35
              pos: 8323
              length: 51
          children: []
          pos: 8279
          length: 95
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: readAll
              children: []
              pos: 8618
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: L resultList
                children: []
                pos: 8626
                length: 12
              pos: 8581
              length: 200
            body:
              type: block
              fields: {}
              children:
              - type: while_statement
                fields:
                  text: |-
                    while (hasNextValue()) {
                                resultList.add(nextValue());
                            }
                children: []
                pos: 8673
                length: 75
              - type: return_statement
                fields:
                  text: return resultList;
                children: []
                pos: 8757
                length: 18
              pos: 8663
              length: 118
          children: []
          pos: 8581
          length: 200
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: readAll
              children: []
              pos: 8958
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: C results
                children: []
                pos: 8966
                length: 9
              pos: 8915
              length: 197
            body:
              type: block
              fields: {}
              children:
              - type: while_statement
                fields:
                  text: |-
                    while (hasNextValue()) {
                                results.add(nextValue());
                            }
                children: []
                pos: 9010
                length: 72
              - type: return_statement
                fields:
                  text: return results;
                children: []
                pos: 9091
                length: 15
              pos: 9000
              length: 112
          children: []
          pos: 8915
          length: 197
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getParser
              children: []
              pos: 9423
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 9405
              length: 61
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return _parser;
                children: []
                pos: 9445
                length: 15
              pos: 9435
              length: 31
          children: []
          pos: 9405
          length: 61
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getParserSchema
              children: []
              pos: 9721
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 9701
              length: 78
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return _parser.getSchema();
                children: []
                pos: 9746
                length: 27
              pos: 9739
              length: 40
          children: []
          pos: 9701
          length: 78
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getCurrentLocation
              children: []
              pos: 10059
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 10039
              length: 93
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return _parser.getCurrentLocation();
                children: []
                pos: 10090
                length: 36
              pos: 10080
              length: 52
          children: []
          pos: 10039
          length: 93
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: _throwNoSuchElement
              children: []
              pos: 10411
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 10395
              length: 89
            body:
              type: block
              fields: {}
              children:
              - type: throw_statement
                fields:
                  text: throw new NoSuchElementException();
                children: []
                pos: 10443
                length: 35
              pos: 10433
              length: 51
          children: []
          pos: 10395
          length: 89
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: _handleMappingException
              children: []
              pos: 10510
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonMappingException e
                children: []
                pos: 10534
                length: 22
              pos: 10494
              length: 137
            body:
              type: block
              fields: {}
              children:
              - type: throw_statement
                fields:
                  text: throw new RuntimeJsonMappingException(e.getMessage(), e);
                children: []
                pos: 10568
                length: 57
              pos: 10558
              length: 73
          children: []
          pos: 10494
          length: 137
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: _handleIOException
              children: []
              pos: 10653
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: IOException e
                children: []
                pos: 10672
                length: 13
              pos: 10637
              length: 112
            body:
              type: block
              fields: {}
              children:
              - type: throw_statement
                fields:
                  text: throw new RuntimeException(e.getMessage(), e);
                children: []
                pos: 10697
                length: 46
              pos: 10687
              length: 62
          children: []
          pos: 10637
          length: 112
        pos: 368
        length: 10383
    children: []
    pos: 368
    length: 10383
  pos: 0
  length: 10752
text_diff: "--- before\n+++ after\n@@ -25,24 +25,20 @@\n     /**\n      * State in
  which iterator is closed\n      */\n-    protected final static int STATE_CLOSED
  = 0;\n     \n     /**\n      * State in which value read failed\n      */\n-    protected
  final static int STATE_NEED_RESYNC = 1;\n     \n     /**\n      * State in which
  no recovery is needed, but \"hasNextValue()\" needs\n      * to be called first\n
  \     */\n-    protected final static int STATE_MAY_HAVE_VALUE = 2;\n \n     /**\n
  \     * State in which \"hasNextValue()\" has been succesfully called\n      * and
  deserializer can be called to fetch value\n      */\n-    protected final static
  int STATE_HAS_VALUE = 3;\n \n     /*\n     /**********************************************************\n@@
  -70,13 +66,12 @@\n      * as not <code>null</code> but set as <code>null</null>
  when\n      * iterator is closed, to denote closing.\n      */\n-    protected final
  JsonParser _parser;\n+    protected JsonParser _parser;\n \n     /**\n      * Context
  to resynchronize to, in case an exception is encountered\n      * but caller wants
  to try to read more elements.\n      */\n-    protected final JsonStreamContext
  _seqContext;\n     \n     /**\n      * If not null, \"value to update\" instead
  of creating a new instance\n@@ -100,7 +95,7 @@\n     /**\n      * State of the iterator\n
  \     */\n-    protected int _state;\n+    protected boolean _hasNextChecked;\n
  \n     /*\n     /**********************************************************\n@@
  -140,25 +135,12 @@\n          * and if not, caller needs to hand us JsonParser instead,
  pointing to\n          * the first token of the first element.\n          */\n-
  \       if (p == null) { // can this occur?\n-            _seqContext = null;\n-
  \           _state = STATE_CLOSED;\n-        } else {\n-            JsonStreamContext
  sctxt = p.getParsingContext();\n-            if (managedParser && p.isExpectedStartArrayToken())
  {\n+        if (managedParser && (p != null) && p.isExpectedStartArrayToken()) {\n
  \                // If pointing to START_ARRAY, context should be that ARRAY\n                 p.clearCurrentToken();\n-
  \           } else {\n                 // regardless, recovery context should be
  whatever context we have now,\n                 // with sole exception of pointing
  to a start marker, in which case it's\n                 // the parent\n-                JsonToken
  t = p.getCurrentToken();\n-                if ((t == JsonToken.START_OBJECT) ||
  (t == JsonToken.START_ARRAY)) {\n-                    sctxt = sctxt.getParent();\n-
  \               }\n-            }\n-            _seqContext = sctxt;\n-            _state
  = STATE_MAY_HAVE_VALUE;\n         }\n     }\n \n@@ -204,12 +186,9 @@\n     \n     @Override\n
  \    public void close() throws IOException {\n-        if (_state != STATE_CLOSED)
  {\n-            _state = STATE_CLOSED;\n             if (_parser != null) {\n                 _parser.close();\n
  \            }\n-        }\n     }\n \n     /*\n@@ -228,28 +207,25 @@\n      */\n
  \    public boolean hasNextValue() throws IOException\n     {\n-        switch (_state)
  {\n-        case STATE_CLOSED:\n+        if (_parser == null) {\n             return
  false;\n-        case STATE_NEED_RESYNC:\n-            _resync();\n             //
  fall-through\n-        case STATE_MAY_HAVE_VALUE:\n+        }\n+        if (!_hasNextChecked)
  {\n             JsonToken t = _parser.getCurrentToken();\n+            _hasNextChecked
  = true;\n             if (t == null) { // un-initialized or cleared; find next\n
  \                t = _parser.nextToken();\n                 // If EOF, no more,
  or if we hit END_ARRAY (although we don't clear the token).\n                 if
  (t == null || t == JsonToken.END_ARRAY) {\n-                    _state = STATE_CLOSED;\n-
  \                   if (_closeParser && (_parser != null)) {\n-                        _parser.close();\n+
  \                   JsonParser jp = _parser;\n+                    _parser = null;\n+
  \                   if (_closeParser) {\n+                        jp.close();\n
  \                    }\n                     return false;\n                 }\n
  \            }\n-            _state = STATE_HAS_VALUE;\n-            return true;\n-
  \       case STATE_HAS_VALUE:\n             // fall through\n         }\n         return
  true;\n@@ -257,20 +233,16 @@\n \n     public T nextValue() throws IOException\n
  \    {\n-        switch (_state) {\n-        case STATE_CLOSED:\n-            return
  _throwNoSuchElement();\n-        case STATE_NEED_RESYNC: // fall-through, will do
  re-sync\n-        case STATE_MAY_HAVE_VALUE:\n+        if (!_hasNextChecked) {\n
  \            if (!hasNextValue()) {\n                 return _throwNoSuchElement();\n
  \            }\n-            break;\n-        case STATE_HAS_VALUE:\n-            break;\n
  \        }\n+        if (_parser == null) {\n+            return _throwNoSuchElement();\n+
  \       }\n+        _hasNextChecked = false;\n \n-        int nextState = STATE_NEED_RESYNC;\n
  \        try {\n             T value;\n             if (_updatedValue == null) {\n@@
  -279,10 +251,8 @@\n                 _deserializer.deserialize(_parser, _context,
  _updatedValue);\n                 value = _updatedValue;\n             }\n-            nextState
  = STATE_MAY_HAVE_VALUE;\n             return value;\n         } finally {\n-            _state
  = nextState;\n             /* 24-Mar-2015, tatu: As per [#733], need to mark token
  consumed no\n              *   matter what, to avoid infinite loop for certain failure
  cases.\n              *   For 2.6 need to improve further.\n@@ -379,28 +349,8 @@\n
  \    /**********************************************************\n      */\n \n-
  \   protected void _resync() throws IOException\n-    {\n-        final JsonParser
  p = _parser;\n         // First, a quick check to see if we might have been lucky
  and no re-sync needed\n-        if (p.getParsingContext() == _seqContext) {\n-            return;\n-
  \       }\n \n-        while (true) {\n-            JsonToken t = p.nextToken();\n-
  \           if ((t == JsonToken.END_ARRAY) || (t == JsonToken.END_OBJECT)) {\n-
  \               if (p.getParsingContext() == _seqContext) {\n-                    p.clearCurrentToken();\n-
  \                   return;\n-                }\n-            } else if ((t == JsonToken.START_ARRAY)
  || (t == JsonToken.START_OBJECT)) {\n-                p.skipChildren();\n-            }
  else if (t == null) {\n-                return;\n-            }\n-        }\n-    }\n
  \n     protected <R> R _throwNoSuchElement() {\n         throw new NoSuchElementException();\n"
tree_diff: |+
  New cluster:
  MOVE from class_body [368,12607]
  ------------
  ===
  move-tree
  ---
  field_declaration: protected final static int STATE_CLOSED = 0; [802,846]
  to
  class_body [368,12607]
  at 7
  ===
  move-tree
  ---
  field_declaration: protected final static int STATE_NEED_RESYNC = 1; [912,961]
  to
  class_body [368,12607]
  at 11

  New cluster:
  UPDATE from protected final static int STATE_CLOSED = 0; to protected JsonParser _parser;
  ------------
  ===
  update-node
  ---
  field_declaration: protected final static int STATE_CLOSED = 0; [802,846]
  replace protected final static int STATE_CLOSED = 0; by protected JsonParser _parser;

  New cluster:
  UPDATE from protected final static int STATE_NEED_RESYNC = 1; to protected boolean _hasNextChecked;
  ------------
  ===
  update-node
  ---
  field_declaration: protected final static int STATE_NEED_RESYNC = 1; [912,961]
  replace protected final static int STATE_NEED_RESYNC = 1; by protected boolean _hasNextChecked;

  New cluster:
  UPDATE from @SuppressWarnings("unchecked")
      protected MappingIterator(JavaType type, JsonParser p, DeserializationContext ctxt,
              JsonDeserializer<?> deser,
              boolean managedParser, Object valueToUpdate)
      {
          _type = type;
          _parser = p;
          _context = ctxt;
          _deserializer = (JsonDeserializer<T>) deser;
          _closeParser = managedParser;
          if (valueToUpdate == null) {
              _updatedValue = null;
          } else {
              _updatedValue = (T) valueToUpdate;
          }

          /* Ok: one more thing; we may have to skip START_ARRAY, assuming
           * "wrapped" sequence; but this is ONLY done for 'managed' parsers
           * and never if JsonParser was directly passed by caller (if it
           * was, caller must have either positioned it over first token of
           * the first element, or cleared the START_ARRAY token explicitly).
           * Note, however, that we do not try to guess whether this could be
           * an unwrapped sequence of arrays/Lists: we just assume it is wrapped;
           * and if not, caller needs to hand us JsonParser instead, pointing to
           * the first token of the first element.
           */
          if (p == null) { // can this occur?
              _seqContext = null;
              _state = STATE_CLOSED;
          } else {
              JsonStreamContext sctxt = p.getParsingContext();
              if (managedParser && p.isExpectedStartArrayToken()) {
                  // If pointing to START_ARRAY, context should be that ARRAY
                  p.clearCurrentToken();
              } else {
                  // regardless, recovery context should be whatever context we have now,
                  // with sole exception of pointing to a start marker, in which case it's
                  // the parent
                  JsonToken t = p.getCurrentToken();
                  if ((t == JsonToken.START_OBJECT) || (t == JsonToken.START_ARRAY)) {
                      sctxt = sctxt.getParent();
                  }
              }
              _seqContext = sctxt;
              _state = STATE_MAY_HAVE_VALUE;
          }
      } to @SuppressWarnings("unchecked")
      protected MappingIterator(JavaType type, JsonParser p, DeserializationContext ctxt,
              JsonDeserializer<?> deser,
              boolean managedParser, Object valueToUpdate)
      {
          _type = type;
          _parser = p;
          _context = ctxt;
          _deserializer = (JsonDeserializer<T>) deser;
          _closeParser = managedParser;
          if (valueToUpdate == null) {
              _updatedValue = null;
          } else {
              _updatedValue = (T) valueToUpdate;
          }

          /* Ok: one more thing; we may have to skip START_ARRAY, assuming
           * "wrapped" sequence; but this is ONLY done for 'managed' parsers
           * and never if JsonParser was directly passed by caller (if it
           * was, caller must have either positioned it over first token of
           * the first element, or cleared the START_ARRAY token explicitly).
           * Note, however, that we do not try to guess whether this could be
           * an unwrapped sequence of arrays/Lists: we just assume it is wrapped;
           * and if not, caller needs to hand us JsonParser instead, pointing to
           * the first token of the first element.
           */
          if (managedParser && (p != null) && p.isExpectedStartArrayToken()) {
                  // If pointing to START_ARRAY, context should be that ARRAY
                  p.clearCurrentToken();
                  // regardless, recovery context should be whatever context we have now,
                  // with sole exception of pointing to a start marker, in which case it's
                  // the parent
          }
      }
  ------------
  ===
  update-node
  ---
  constructor_declaration: @SuppressWarnings("unchecked")
      protected MappingIterator(JavaType type, JsonParser p, DeserializationContext ctxt,
              JsonDeserializer<?> deser,
              boolean managedParser, Object valueToUpdate)
      {
          _type = type;
          _parser = p;
          _context = ctxt;
          _deserializer = (JsonDeserializer<T>) deser;
          _closeParser = managedParser;
          if (valueToUpdate == null) {
              _updatedValue = null;
          } else {
              _updatedValue = (T) valueToUpdate;
          }

          /* Ok: one more thing; we may have to skip START_ARRAY, assuming
           * "wrapped" sequence; but this is ONLY done for 'managed' parsers
           * and never if JsonParser was directly passed by caller (if it
           * was, caller must have either positioned it over first token of
           * the first element, or cleared the START_ARRAY token explicitly).
           * Note, however, that we do not try to guess whether this could be
           * an unwrapped sequence of arrays/Lists: we just assume it is wrapped;
           * and if not, caller needs to hand us JsonParser instead, pointing to
           * the first token of the first element.
           */
          if (p == null) { // can this occur?
              _seqContext = null;
              _state = STATE_CLOSED;
          } else {
              JsonStreamContext sctxt = p.getParsingContext();
              if (managedParser && p.isExpectedStartArrayToken()) {
                  // If pointing to START_ARRAY, context should be that ARRAY
                  p.clearCurrentToken();
              } else {
                  // regardless, recovery context should be whatever context we have now,
                  // with sole exception of pointing to a start marker, in which case it's
                  // the parent
                  JsonToken t = p.getCurrentToken();
                  if ((t == JsonToken.START_OBJECT) || (t == JsonToken.START_ARRAY)) {
                      sctxt = sctxt.getParent();
                  }
              }
              _seqContext = sctxt;
              _state = STATE_MAY_HAVE_VALUE;
          }
      } [3381,5477]
  replace @SuppressWarnings("unchecked")
      protected MappingIterator(JavaType type, JsonParser p, DeserializationContext ctxt,
              JsonDeserializer<?> deser,
              boolean managedParser, Object valueToUpdate)
      {
          _type = type;
          _parser = p;
          _context = ctxt;
          _deserializer = (JsonDeserializer<T>) deser;
          _closeParser = managedParser;
          if (valueToUpdate == null) {
              _updatedValue = null;
          } else {
              _updatedValue = (T) valueToUpdate;
          }

          /* Ok: one more thing; we may have to skip START_ARRAY, assuming
           * "wrapped" sequence; but this is ONLY done for 'managed' parsers
           * and never if JsonParser was directly passed by caller (if it
           * was, caller must have either positioned it over first token of
           * the first element, or cleared the START_ARRAY token explicitly).
           * Note, however, that we do not try to guess whether this could be
           * an unwrapped sequence of arrays/Lists: we just assume it is wrapped;
           * and if not, caller needs to hand us JsonParser instead, pointing to
           * the first token of the first element.
           */
          if (p == null) { // can this occur?
              _seqContext = null;
              _state = STATE_CLOSED;
          } else {
              JsonStreamContext sctxt = p.getParsingContext();
              if (managedParser && p.isExpectedStartArrayToken()) {
                  // If pointing to START_ARRAY, context should be that ARRAY
                  p.clearCurrentToken();
              } else {
                  // regardless, recovery context should be whatever context we have now,
                  // with sole exception of pointing to a start marker, in which case it's
                  // the parent
                  JsonToken t = p.getCurrentToken();
                  if ((t == JsonToken.START_OBJECT) || (t == JsonToken.START_ARRAY)) {
                      sctxt = sctxt.getParent();
                  }
              }
              _seqContext = sctxt;
              _state = STATE_MAY_HAVE_VALUE;
          }
      } by @SuppressWarnings("unchecked")
      protected MappingIterator(JavaType type, JsonParser p, DeserializationContext ctxt,
              JsonDeserializer<?> deser,
              boolean managedParser, Object valueToUpdate)
      {
          _type = type;
          _parser = p;
          _context = ctxt;
          _deserializer = (JsonDeserializer<T>) deser;
          _closeParser = managedParser;
          if (valueToUpdate == null) {
              _updatedValue = null;
          } else {
              _updatedValue = (T) valueToUpdate;
          }

          /* Ok: one more thing; we may have to skip START_ARRAY, assuming
           * "wrapped" sequence; but this is ONLY done for 'managed' parsers
           * and never if JsonParser was directly passed by caller (if it
           * was, caller must have either positioned it over first token of
           * the first element, or cleared the START_ARRAY token explicitly).
           * Note, however, that we do not try to guess whether this could be
           * an unwrapped sequence of arrays/Lists: we just assume it is wrapped;
           * and if not, caller needs to hand us JsonParser instead, pointing to
           * the first token of the first element.
           */
          if (managedParser && (p != null) && p.isExpectedStartArrayToken()) {
                  // If pointing to START_ARRAY, context should be that ARRAY
                  p.clearCurrentToken();
                  // regardless, recovery context should be whatever context we have now,
                  // with sole exception of pointing to a start marker, in which case it's
                  // the parent
          }
      }

  New cluster:
  Unknown cluster type
  ------------
  ===
  insert-tree
  ---
  method_declaration [6264,7111]
      identifier: hasNextValue [6279,6291]
      method_parameters [6264,7111]
      block [6317,7111]
          if_statement [6327,6413]
              parenthesized_expression [6330,6347]
                  equals [6331,6346]
                      identifier: _parser [6331,6338]
                      null_literal [6342,6346]
              block [6348,6413]
                  return_statement: return false; [6362,6375]
          if_statement [6422,7084]
              parenthesized_expression [6425,6443]
                  unary_expression: !_hasNextChecked [6426,6442]
              block [6444,7084]
                  local_variable_declaration: JsonToken t = _parser.getCurrentToken(); [6458,6498]
                  expression_statement: _hasNextChecked = true; [6511,6534]
                  if_statement [6547,7046]
                      parenthesized_expression [6550,6561]
                          equals [6551,6560]
                              identifier: t [6551,6552]
                              null_literal [6556,6560]
                      block [6562,7046]
                          expression_statement: t = _parser.nextToken(); [6620,6644]
                          if_statement [6757,7032]
                              parenthesized_expression [6760,6799]
                                  or [6761,6798]
                                      equals [6761,6770]
                                          identifier: t [6761,6762]
                                          null_literal [6766,6770]
                                      equals [6774,6798]
                                          identifier: t [6774,6775]
                                          field_access: JsonToken.END_ARRAY [6779,6798]
                              block [6800,7032]
                                  local_variable_declaration: JsonParser jp = _parser; [6822,6846]
                                  expression_statement: _parser = null; [6867,6882]
                                  if_statement [6903,6980]
                                      parenthesized_expression [6906,6920]
                                          identifier: _closeParser [6907,6919]
                                      block [6921,6980]
                                          expression_statement: jp.close(); [6947,6958]
                                  return_statement: return false; [7001,7014]
          return_statement: return true; [7093,7105]
  to
  class_body [368,12607]
  at 19

  New cluster:
  MOVE from method_declaration [6531,6756]
  ------------
  ===
  move-tree
  ---
  block [6622,6750]
      expression_statement: _state = STATE_CLOSED; [6636,6658]
      if_statement [6671,6740]
          parenthesized_expression [6674,6691]
              not_equals [6675,6690]
                  identifier: _parser [6675,6682]
                  null_literal [6686,6690]
          block [6692,6740]
              expression_statement: _parser.close(); [6710,6726]
  to
  method_declaration [6531,6756]
  at 2

  New cluster:
  Unknown cluster type
  ------------
  ===
  insert-tree
  ---
  if_statement [7171,7299]
      parenthesized_expression [7174,7192]
          unary_expression: !_hasNextChecked [7175,7191]
      block [7193,7299]
          if_statement [7207,7289]
              parenthesized_expression [7210,7227]
                  unary_expression: !hasNextValue() [7211,7226]
              block [7228,7289]
                  return_statement: return _throwNoSuchElement(); [7246,7275]
  to
  block [8105,9221]
  at 0

  New cluster:
  Unknown cluster type
  ------------
  ===
  insert-tree
  ---
  if_statement [7308,7382]
      parenthesized_expression [7311,7328]
          equals [7312,7327]
              identifier: _parser [7312,7319]
              null_literal [7323,7327]
      block [7329,7382]
          return_statement: return _throwNoSuchElement(); [7343,7372]
  to
  block [8105,9221]
  at 1

  New cluster:
  ===
  insert-node
  ---
  expression_statement: _hasNextChecked = false; [7391,7415]
  to
  block [8105,9221]
  at 2
  ------------
  ===
  insert-node
  ---
  expression_statement: _hasNextChecked = false; [7391,7415]
  to
  block [8105,9221]
  at 2

  New cluster:
  ===
  delete-node
  ---
  field_declaration: protected final static int STATE_MAY_HAVE_VALUE = 2; [1085,1137]
  ===
  ------------
  ===
  delete-node
  ---
  field_declaration: protected final static int STATE_MAY_HAVE_VALUE = 2; [1085,1137]
  ===

  New cluster:
  ===
  delete-node
  ---
  field_declaration: protected final static int STATE_HAS_VALUE = 3; [1279,1326]
  ===
  ------------
  ===
  delete-node
  ---
  field_declaration: protected final static int STATE_HAS_VALUE = 3; [1279,1326]
  ===

  New cluster:
  ===
  delete-node
  ---
  field_declaration: protected final JsonParser _parser; [2061,2096]
  ===
  ------------
  ===
  delete-node
  ---
  field_declaration: protected final JsonParser _parser; [2061,2096]
  ===

  New cluster:
  ===
  delete-node
  ---
  field_declaration: protected final JsonStreamContext _seqContext; [2244,2290]
  ===
  ------------
  ===
  delete-node
  ---
  field_declaration: protected final JsonStreamContext _seqContext; [2244,2290]
  ===

  New cluster:
  ===
  delete-node
  ---
  field_declaration: protected int _state; [2901,2922]
  ===
  ------------
  ===
  delete-node
  ---
  field_declaration: protected int _state; [2901,2922]
  ===

  New cluster:
  ===
  delete-node
  ---
  expression_statement: _state = STATE_CLOSED; [6636,6658]
  ===
  ------------
  ===
  delete-node
  ---
  expression_statement: _state = STATE_CLOSED; [6636,6658]
  ===

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  parenthesized_expression [6597,6621]
      not_equals [6598,6620]
          identifier: _state [6598,6604]
          identifier: STATE_CLOSED [6608,6620]

  New cluster:
  ===
  delete-node
  ---
  block [6584,6756]
  ===
  ------------
  ===
  delete-node
  ---
  block [6584,6756]
  ===
  ===
  delete-node
  ---
  if_statement [6594,6750]
  ===

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  method_declaration [7093,8055]
      identifier: hasNextValue [7108,7120]
      method_parameters [7093,8055]
      block [7146,8055]
          switch_expression [7156,8028]
              parenthesized_expression [7163,7171]
                  identifier: _state [7164,7170]
              switch_block: {
          case STATE_CLOSED:
              return false;
          case STATE_NEED_RESYNC:
              _resync();
              // fall-through
          case STATE_MAY_HAVE_VALUE:
              JsonToken t = _parser.getCurrentToken();
              if (t == null) { // un-initialized or cleared; find next
                  t = _parser.nextToken();
                  // If EOF, no more, or if we hit END_ARRAY (although we don't clear the token).
                  if (t == null || t == JsonToken.END_ARRAY) {
                      _state = STATE_CLOSED;
                      if (_closeParser && (_parser != null)) {
                          _parser.close();
                      }
                      return false;
                  }
              }
              _state = STATE_HAS_VALUE;
              return true;
          case STATE_HAS_VALUE:
              // fall through
          } [7172,8028]
          return_statement: return true; [8037,8049]

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  switch_expression [8115,8474]
      parenthesized_expression [8122,8130]
          identifier: _state [8123,8129]
      switch_block: {
          case STATE_CLOSED:
              return _throwNoSuchElement();
          case STATE_NEED_RESYNC: // fall-through, will do re-sync
          case STATE_MAY_HAVE_VALUE:
              if (!hasNextValue()) {
                  return _throwNoSuchElement();
              }
              break;
          case STATE_HAS_VALUE:
              break;
          } [8131,8474]

  New cluster:
  ===
  delete-node
  ---
  local_variable_declaration: int nextState = STATE_NEED_RESYNC; [8484,8518]
  ===
  ------------
  ===
  delete-node
  ---
  local_variable_declaration: int nextState = STATE_NEED_RESYNC; [8484,8518]
  ===

  New cluster:
  ===
  delete-node
  ---
  expression_statement: nextState = STATE_MAY_HAVE_VALUE; [8827,8860]
  ===
  ------------
  ===
  delete-node
  ---
  expression_statement: nextState = STATE_MAY_HAVE_VALUE; [8827,8860]
  ===

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  method_declaration [11484,12245]
      identifier: _resync [11499,11506]
      method_parameters [11484,12245]
      block [11532,12245]
          local_variable_declaration: final JsonParser p = _parser; [11542,11571]
          if_statement [11669,11742]
              parenthesized_expression [11672,11710]
                  equals [11673,11709]
                      method_invocation: p.getParsingContext() [11673,11694]
                      identifier: _seqContext [11698,11709]
              block [11711,11742]
                  return_statement: return; [11725,11732]
          while_statement: while (true) {
              JsonToken t = p.nextToken();
              if ((t == JsonToken.END_ARRAY) || (t == JsonToken.END_OBJECT)) {
                  if (p.getParsingContext() == _seqContext) {
                      p.clearCurrentToken();
                      return;
                  }
              } else if ((t == JsonToken.START_ARRAY) || (t == JsonToken.START_OBJECT)) {
                  p.skipChildren();
              } else if (t == null) {
                  return;
              }
          } [11752,12239]

...
