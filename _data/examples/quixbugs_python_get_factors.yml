---
language: python
before_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: get_factors
        children: []
        pos: 4
        length: 11
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: "n"
          children: []
          pos: 16
          length: 1
        pos: 0
        length: 178
      body:
        type: block
        fields: {}
        children:
        - type: if_statement
          fields:
            condition:
              type: equals
              fields:
                left:
                  type: identifier
                  fields:
                    text: "n"
                  children: []
                  pos: 27
                  length: 1
                right:
                  type: integer
                  fields:
                    text: '1'
                  children: []
                  pos: 32
                  length: 1
              children: []
              pos: 27
              length: 6
          children:
          - type: block
            fields: {}
            children:
            - type: return_statement
              fields:
                text: return []
              children: []
              pos: 43
              length: 9
            pos: 43
            length: 9
          pos: 24
          length: 28
        - type: for_statement
          fields:
            text: |-
              for i in range(2, int(n ** 0.5) + 1):
                      if n % i == 0:
                          return [i] + get_factors(n // i)
          children: []
          pos: 58
          length: 105
        - type: return_statement
          fields:
            text: return []
          children: []
          pos: 169
          length: 9
        pos: 24
        length: 154
    children: []
    pos: 0
    length: 178
  pos: 0
  length: 179
after_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: get_factors
        children: []
        pos: 4
        length: 11
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: "n"
          children: []
          pos: 16
          length: 1
        pos: 0
        length: 179
      body:
        type: block
        fields: {}
        children:
        - type: if_statement
          fields:
            condition:
              type: equals
              fields:
                left:
                  type: identifier
                  fields:
                    text: "n"
                  children: []
                  pos: 27
                  length: 1
                right:
                  type: integer
                  fields:
                    text: '1'
                  children: []
                  pos: 32
                  length: 1
              children: []
              pos: 27
              length: 6
          children:
          - type: block
            fields: {}
            children:
            - type: return_statement
              fields:
                text: return []
              children: []
              pos: 43
              length: 9
            pos: 43
            length: 9
          pos: 24
          length: 28
        - type: for_statement
          fields:
            text: |-
              for i in range(2, int(n ** 0.5) + 1):
                      if n % i == 0:
                          return [i] + get_factors(n // i)
          children: []
          pos: 58
          length: 105
        - type: return_statement
          fields:
            text: return [n]
          children: []
          pos: 169
          length: 10
        pos: 24
        length: 155
    children: []
    pos: 0
    length: 179
  pos: 0
  length: 180
text_diff: "--- before\n+++ after\n@@ -6,4 +6,4 @@\n         if n % i == 0:\n             return
  [i] + get_factors(n // i)\n \n-    return []\n+    return [n]\n"
tree_diff: |+
  New cluster:
  UPDATE from return [] to return [n]
  ------------
  ===
  update-node
  ---
  return_statement: return [] [169,178]
  replace return [] by return [n]

...
