---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: DefaultInjectionEngine
        children: []
        pos: 946
        length: 22
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private final MockCandidateFilter mockCandidateFilter = new TypeBasedCandidateFilter(new
              NameBasedCandidateFilter(new FinalMockCandidateFilter()));
          children: []
          pos: 978
          length: 147
        - type: field_declaration
          fields:
            text: "private Comparator<Field> supertypesLast = new Comparator<Field>()
              {\r\n        public int compare(Field field1, Field field2) {\r\n            Class<?>
              field1Type = field1.getType();\r\n            Class<?> field2Type =
              field2.getType();\r\n\r\n            if(field1Type.isAssignableFrom(field2Type))
              {\r\n                return 1;\r\n            }\r\n            if(field2Type.isAssignableFrom(field1Type))
              {\r\n                return -1;\r\n            }\r\n            return
              0;\r\n        }\r\n    };"
          children: []
          pos: 1131
          length: 479
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: injectMocksOnFields
              children: []
              pos: 2683
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Set<Field> injectMocksFields
                children: []
                pos: 2703
                length: 28
              pos: 2671
              length: 924
            body:
              type: block
              fields: {}
              children:
              - type: enhanced_for_statement
                fields:
                  text: "for (Field field : injectMocksFields) {\r\n            Set<Object>
                    mocksToBeInjected = new HashSet<Object>(mocks);\r\n            Object
                    injectMocksFieldInstance = null;\r\n            try {\r\n                injectMocksFieldInstance
                    = new FieldInitializer(testClassInstance, field).initialize();\r\n
                    \           } catch (MockitoException e) {\r\n                new
                    Reporter().cannotInitializeForInjectMocksAnnotation(field.getName(),
                    e);\r\n            }\r\n\r\n            // for each field in the
                    class hierarchy\r\n            Class<?> fieldClass = injectMocksFieldInstance.getClass();\r\n
                    \           while (fieldClass != Object.class) {\r\n                injectMockCandidate(fieldClass,
                    mocksToBeInjected, injectMocksFieldInstance);\r\n                fieldClass
                    = fieldClass.getSuperclass();\r\n            }\r\n        }"
                children: []
                pos: 2789
                length: 799
              pos: 2778
              length: 817
          children: []
          pos: 2671
          length: 924
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: injectMockCandidate
              children: []
              pos: 3616
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Class<?> awaitingInjectionClazz
                children: []
                pos: 3636
                length: 31
              pos: 3603
              length: 353
            body:
              type: block
              fields: {}
              children:
              - type: enhanced_for_statement
                fields:
                  text: "for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz))
                    {\r\n            Object injected = mockCandidateFilter.filterCandidate(mocks,
                    field, fieldInstance).thenInject();\r\n            mocks.remove(injected);\r\n
                    \       }"
                children: []
                pos: 3721
                length: 228
              pos: 3710
              length: 246
          children: []
          pos: 3603
          length: 353
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: orderedInstanceFieldsFrom
              children: []
              pos: 3980
              length: 25
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Class<?> awaitingInjectionClazz
                children: []
                pos: 4006
                length: 31
              pos: 3964
              length: 247
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Field[] declaredFields = awaitingInjectionClazz.getDeclaredFields();
                children: []
                pos: 4050
                length: 68
              - type: expression_statement
                fields:
                  text: Arrays.sort(declaredFields, supertypesLast);
                children: []
                pos: 4128
                length: 44
              - type: return_statement
                fields:
                  text: return declaredFields;
                children: []
                pos: 4182
                length: 22
              pos: 4039
              length: 172
          children: []
          pos: 3964
          length: 247
        pos: 933
        length: 3283
    children: []
    pos: 933
    length: 3283
  pos: 0
  length: 4218
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: DefaultInjectionEngine
        children: []
        pos: 946
        length: 22
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private final MockCandidateFilter mockCandidateFilter = new TypeBasedCandidateFilter(new
              NameBasedCandidateFilter(new FinalMockCandidateFilter()));
          children: []
          pos: 978
          length: 147
        - type: field_declaration
          fields:
            text: "private Comparator<Field> supertypesLast = new Comparator<Field>()
              {\r\n        public int compare(Field field1, Field field2) {\r\n            Class<?>
              field1Type = field1.getType();\r\n            Class<?> field2Type =
              field2.getType();\r\n\r\n            if(field1Type.isAssignableFrom(field2Type))
              {\r\n                return 1;\r\n            }\r\n            if(field2Type.isAssignableFrom(field1Type))
              {\r\n                return -1;\r\n            }\r\n            return
              0;\r\n        }\r\n    };"
          children: []
          pos: 1131
          length: 479
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: injectMocksOnFields
              children: []
              pos: 2683
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Set<Field> injectMocksFields
                children: []
                pos: 2703
                length: 28
              pos: 2671
              length: 924
            body:
              type: block
              fields: {}
              children:
              - type: enhanced_for_statement
                fields:
                  text: "for (Field field : injectMocksFields) {\r\n            Set<Object>
                    mocksToBeInjected = new HashSet<Object>(mocks);\r\n            Object
                    injectMocksFieldInstance = null;\r\n            try {\r\n                injectMocksFieldInstance
                    = new FieldInitializer(testClassInstance, field).initialize();\r\n
                    \           } catch (MockitoException e) {\r\n                new
                    Reporter().cannotInitializeForInjectMocksAnnotation(field.getName(),
                    e);\r\n            }\r\n\r\n            // for each field in the
                    class hierarchy\r\n            Class<?> fieldClass = injectMocksFieldInstance.getClass();\r\n
                    \           while (fieldClass != Object.class) {\r\n                injectMockCandidate(fieldClass,
                    mocksToBeInjected, injectMocksFieldInstance);\r\n                fieldClass
                    = fieldClass.getSuperclass();\r\n            }\r\n        }"
                children: []
                pos: 2789
                length: 799
              pos: 2778
              length: 817
          children: []
          pos: 2671
          length: 924
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: injectMockCandidate
              children: []
              pos: 3616
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Class<?> awaitingInjectionClazz
                children: []
                pos: 3636
                length: 31
              pos: 3603
              length: 298
            body:
              type: block
              fields: {}
              children:
              - type: enhanced_for_statement
                fields:
                  text: "for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz))
                    {\r\n            mockCandidateFilter.filterCandidate(mocks, field,
                    fieldInstance).thenInject();\r\n        }"
                children: []
                pos: 3721
                length: 173
              pos: 3710
              length: 191
          children: []
          pos: 3603
          length: 298
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: orderedInstanceFieldsFrom
              children: []
              pos: 3925
              length: 25
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Class<?> awaitingInjectionClazz
                children: []
                pos: 3951
                length: 31
              pos: 3909
              length: 247
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Field[] declaredFields = awaitingInjectionClazz.getDeclaredFields();
                children: []
                pos: 3995
                length: 68
              - type: expression_statement
                fields:
                  text: Arrays.sort(declaredFields, supertypesLast);
                children: []
                pos: 4073
                length: 44
              - type: return_statement
                fields:
                  text: return declaredFields;
                children: []
                pos: 4127
                length: 22
              pos: 3984
              length: 172
          children: []
          pos: 3909
          length: 247
        pos: 933
        length: 3228
    children: []
    pos: 933
    length: 3228
  pos: 0
  length: 4163
text_diff: "--- before\n+++ after\n@@ -90,8 +90,7 @@\n \r\n     private void injectMockCandidate(Class<?>
  awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\r\n         for(Field
  field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\r\n-            Object
  injected = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\r\n-
  \           mocks.remove(injected);\r\n+            mockCandidateFilter.filterCandidate(mocks,
  field, fieldInstance).thenInject();\r\n         }\r\n     }\r\n \r\n"
tree_diff: "New cluster:\nUPDATE from for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz))
  {\r\n            Object injected = mockCandidateFilter.filterCandidate(mocks, field,
  fieldInstance).thenInject();\r\n            mocks.remove(injected);\r\n        }
  to for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\r\n            mockCandidateFilter.filterCandidate(mocks,
  field, fieldInstance).thenInject();\r\n        }\n------------\n===\nupdate-node\n---\nenhanced_for_statement:
  for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\r\n            Object
  injected = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\r\n
  \           mocks.remove(injected);\r\n        } [3721,3949]\nreplace for(Field
  field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\r\n            Object
  injected = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\r\n
  \           mocks.remove(injected);\r\n        } by for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz))
  {\r\n            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\r\n
  \       }\n\n"
