---
language: python
before_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: levenshtein
        children: []
        pos: 4
        length: 11
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: source
          children: []
          pos: 16
          length: 6
        pos: 0
        length: 387
      body:
        type: block
        fields: {}
        children:
        - type: if_statement
          fields:
            condition:
              type: or
              fields:
                left:
                  type: equals
                  fields:
                    left:
                      type: identifier
                      fields:
                        text: source
                      children: []
                      pos: 40
                      length: 6
                    right:
                      type: string
                      fields:
                        text: "''"
                      children: []
                      pos: 50
                      length: 2
                  children: []
                  pos: 40
                  length: 12
                right:
                  type: equals
                  fields:
                    left:
                      type: identifier
                      fields:
                        text: target
                      children: []
                      pos: 56
                      length: 6
                    right:
                      type: string
                      fields:
                        text: "''"
                      children: []
                      pos: 66
                      length: 2
                  children: []
                  pos: 56
                  length: 12
              children: []
              pos: 40
              length: 28
          children:
          - type: block
            fields: {}
            children:
            - type: return_statement
              fields:
                text: return len(source) or len(target)
              children: []
              pos: 78
              length: 33
            pos: 78
            length: 33
          - type: elif_clause
            fields:
              condition:
                type: equals
                fields:
                  left:
                    type: subscript
                    fields:
                      value:
                        type: identifier
                        fields:
                          text: source
                        children: []
                        pos: 122
                        length: 6
                      subscript:
                        type: integer
                        fields:
                          text: '0'
                        children: []
                        pos: 129
                        length: 1
                    children: []
                    pos: 122
                    length: 9
                  right:
                    type: subscript
                    fields:
                      value:
                        type: identifier
                        fields:
                          text: target
                        children: []
                        pos: 135
                        length: 6
                      subscript:
                        type: integer
                        fields:
                          text: '0'
                        children: []
                        pos: 142
                        length: 1
                    children: []
                    pos: 135
                    length: 9
                children: []
                pos: 122
                length: 22
              consequence:
                type: block
                fields: {}
                children:
                - type: return_statement
                  fields:
                    text: return 1 + levenshtein(source[1:], target[1:])
                  children: []
                  pos: 154
                  length: 46
                pos: 154
                length: 46
            children: []
            pos: 117
            length: 83
          - type: else_clause
            fields:
              body:
                type: block
                fields: {}
                children:
                - type: return_statement
                  fields:
                    text: |-
                      return 1 + min(
                                  levenshtein(source,     target[1:]),
                                  levenshtein(source[1:], target[1:]),
                                  levenshtein(source[1:], target)
                              )
                  children: []
                  pos: 220
                  length: 167
                pos: 220
                length: 167
            children: []
            pos: 206
            length: 181
          pos: 37
          length: 350
        pos: 37
        length: 350
    children: []
    pos: 0
    length: 387
  pos: 0
  length: 388
after_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: levenshtein
        children: []
        pos: 4
        length: 11
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: source
          children: []
          pos: 16
          length: 6
        pos: 0
        length: 383
      body:
        type: block
        fields: {}
        children:
        - type: if_statement
          fields:
            condition:
              type: or
              fields:
                left:
                  type: equals
                  fields:
                    left:
                      type: identifier
                      fields:
                        text: source
                      children: []
                      pos: 40
                      length: 6
                    right:
                      type: string
                      fields:
                        text: "''"
                      children: []
                      pos: 50
                      length: 2
                  children: []
                  pos: 40
                  length: 12
                right:
                  type: equals
                  fields:
                    left:
                      type: identifier
                      fields:
                        text: target
                      children: []
                      pos: 56
                      length: 6
                    right:
                      type: string
                      fields:
                        text: "''"
                      children: []
                      pos: 66
                      length: 2
                  children: []
                  pos: 56
                  length: 12
              children: []
              pos: 40
              length: 28
          children:
          - type: block
            fields: {}
            children:
            - type: return_statement
              fields:
                text: return len(source) or len(target)
              children: []
              pos: 78
              length: 33
            pos: 78
            length: 33
          - type: elif_clause
            fields:
              condition:
                type: equals
                fields:
                  left:
                    type: subscript
                    fields:
                      value:
                        type: identifier
                        fields:
                          text: source
                        children: []
                        pos: 122
                        length: 6
                      subscript:
                        type: integer
                        fields:
                          text: '0'
                        children: []
                        pos: 129
                        length: 1
                    children: []
                    pos: 122
                    length: 9
                  right:
                    type: subscript
                    fields:
                      value:
                        type: identifier
                        fields:
                          text: target
                        children: []
                        pos: 135
                        length: 6
                      subscript:
                        type: integer
                        fields:
                          text: '0'
                        children: []
                        pos: 142
                        length: 1
                    children: []
                    pos: 135
                    length: 9
                children: []
                pos: 122
                length: 22
              consequence:
                type: block
                fields: {}
                children:
                - type: return_statement
                  fields:
                    text: return levenshtein(source[1:], target[1:])
                  children: []
                  pos: 154
                  length: 42
                pos: 154
                length: 42
            children: []
            pos: 117
            length: 79
          - type: else_clause
            fields:
              body:
                type: block
                fields: {}
                children:
                - type: return_statement
                  fields:
                    text: |-
                      return 1 + min(
                                  levenshtein(source,     target[1:]),
                                  levenshtein(source[1:], target[1:]),
                                  levenshtein(source[1:], target)
                              )
                  children: []
                  pos: 216
                  length: 167
                pos: 216
                length: 167
            children: []
            pos: 202
            length: 181
          pos: 37
          length: 346
        pos: 37
        length: 346
    children: []
    pos: 0
    length: 383
  pos: 0
  length: 385
text_diff: "--- before\n+++ after\n@@ -3,7 +3,7 @@\n         return len(source) or
  len(target)\n \n     elif source[0] == target[0]:\n-        return 1 + levenshtein(source[1:],
  target[1:])\n+        return levenshtein(source[1:], target[1:])\n \n     else:\n
  \        return 1 + min(\n@@ -11,3 +11,4 @@\n             levenshtein(source[1:],
  target[1:]),\n             levenshtein(source[1:], target)\n         )\n+\n"
tree_diff: |+
  New cluster:
  UPDATE from return 1 + levenshtein(source[1:], target[1:]) to return levenshtein(source[1:], target[1:])
  ------------
  ===
  update-node
  ---
  return_statement: return 1 + levenshtein(source[1:], target[1:]) [154,200]
  replace return 1 + levenshtein(source[1:], target[1:]) by return levenshtein(source[1:], target[1:])

...
