---
language: java
text_diff: "--- before\n+++ after\n@@ -154,7 +154,6 @@\n                 && this.minimumRangeValueColumn
  == c))  {\r\n             updateBounds();\r\n         }\r\n-        else {\r\n         \r\n
  \            double minval = Double.NaN;\r\n             if (item.getMinOutlier()
  != null) {\r\n@@ -186,7 +185,6 @@\n                 this.minimumRangeValueRow =
  r;\r\n                 this.minimumRangeValueColumn = c;\r\n             }\r\n-
  \       }\r\n         \r\n         this.rangeBounds = new Range(this.minimumRangeValue,\r\n
  \              this.maximumRangeValue);\r\n@@ -740,44 +738,7 @@\n      */\r\n     private
  void updateBounds() {\r\n         this.minimumRangeValue = Double.NaN;\r\n-        this.minimumRangeValueRow
  = -1;\r\n-        this.minimumRangeValueColumn = -1;\r\n         this.maximumRangeValue
  = Double.NaN;\r\n-        this.maximumRangeValueRow = -1;\r\n-        this.maximumRangeValueColumn
  = -1;\r\n-        int rowCount = getRowCount();\r\n-        int columnCount = getColumnCount();\r\n-
  \       for (int r = 0; r < rowCount; r++) {\r\n-            for (int c = 0; c <
  columnCount; c++) {\r\n-                BoxAndWhiskerItem item = getItem(r, c);\r\n-
  \               if (item != null) {\r\n-                    Number min = item.getMinOutlier();\r\n-
  \                   if (min != null) {\r\n-                        double minv =
  min.doubleValue();\r\n-                        if (!Double.isNaN(minv)) {\r\n-                            if
  (minv < this.minimumRangeValue || Double.isNaN(\r\n-                                    this.minimumRangeValue))
  {\r\n-                                this.minimumRangeValue = minv;\r\n-                                this.minimumRangeValueRow
  = r;\r\n-                                this.minimumRangeValueColumn = c;\r\n-
  \                           }\r\n-                        }\r\n-                    }\r\n-
  \                   Number max = item.getMaxOutlier();\r\n-                    if
  (max != null) {\r\n-                        double maxv = max.doubleValue();\r\n-
  \                       if (!Double.isNaN(maxv)) {\r\n-                            if
  (maxv > this.maximumRangeValue || Double.isNaN(\r\n-                                    this.maximumRangeValue))
  {\r\n-                                this.maximumRangeValue = maxv;\r\n-                                this.maximumRangeValueRow
  = r;\r\n-                                this.maximumRangeValueColumn = c;\r\n-
  \                           }\r\n-                        }\r\n-                    }\r\n-
  \               }\r\n-            }\r\n-        }\r\n     }\r\n     \r\n     /**\r\n"
tree_diff: "New cluster:\n===\ninsert-node\n---\nlocal_variable_declaration: double
  minval = Double.NaN; [6310,6337]\nto\nblock [5835,7713]\nat 4\n------------\n===\ninsert-node\n---\nlocal_variable_declaration:
  double minval = Double.NaN; [6310,6337]\nto\nblock [5835,7713]\nat 4\n\nNew cluster:\nUnknown
  cluster type\n------------\n===\ninsert-tree\n---\nif_statement [6351,6463]\n    parenthesized_expression
  [6354,6384]\n        not_equals [6355,6383]\n            method_invocation: item.getMinOutlier()
  [6355,6375]\n            null_literal [6379,6383]\n    block [6385,6463]\n        expression_statement:
  minval = item.getMinOutlier().doubleValue(); [6404,6448]\nto\nblock [5835,7713]\nat
  5\n\nNew cluster:\n===\ninsert-node\n---\nlocal_variable_declaration: double maxval
  = Double.NaN; [6477,6504]\nto\nblock [5835,7713]\nat 6\n------------\n===\ninsert-node\n---\nlocal_variable_declaration:
  double maxval = Double.NaN; [6477,6504]\nto\nblock [5835,7713]\nat 6\n\nNew cluster:\nUnknown
  cluster type\n------------\n===\ninsert-tree\n---\nif_statement [6518,6630]\n    parenthesized_expression
  [6521,6551]\n        not_equals [6522,6550]\n            method_invocation: item.getMaxOutlier()
  [6522,6542]\n            null_literal [6546,6550]\n    block [6552,6630]\n        expression_statement:
  maxval = item.getMaxOutlier().doubleValue(); [6571,6615]\nto\nblock [5835,7713]\nat
  7\n\nNew cluster:\nUnknown cluster type\n------------\n===\ninsert-tree\n---\nif_statement
  [6654,7082]\n    parenthesized_expression [6657,6695]\n        method_invocation:
  Double.isNaN(this.maximumRangeValue) [6658,6694]\n    block [6696,6861]\n        expression_statement:
  this.maximumRangeValue = maxval; [6715,6747]\n        expression_statement: this.maximumRangeValueRow
  = r; [6765,6795]\n        expression_statement: this.maximumRangeValueColumn = c;
  [6813,6846]\nto\nblock [5835,7713]\nat 8\n\nNew cluster:\nUnknown cluster type\n------------\n===\ninsert-tree\n---\nif_statement
  [7106,7534]\n    parenthesized_expression [7109,7147]\n        method_invocation:
  Double.isNaN(this.minimumRangeValue) [7110,7146]\n    block [7148,7313]\n        expression_statement:
  this.minimumRangeValue = minval; [7167,7199]\n        expression_statement: this.minimumRangeValueRow
  = r; [7217,7247]\n        expression_statement: this.minimumRangeValueColumn = c;
  [7265,7298]\nto\nblock [5835,7713]\nat 9\n\nNew cluster:\n===\ndelete-node\n---\nexpression_statement:
  this.minimumRangeValueRow = -1; [22801,22832]\n===\n------------\n===\ndelete-node\n---\nexpression_statement:
  this.minimumRangeValueRow = -1; [22801,22832]\n===\n\nNew cluster:\n===\ndelete-node\n---\nexpression_statement:
  this.minimumRangeValueColumn = -1; [22842,22876]\n===\n------------\n===\ndelete-node\n---\nexpression_statement:
  this.minimumRangeValueColumn = -1; [22842,22876]\n===\n\nNew cluster:\n===\ndelete-node\n---\nexpression_statement:
  this.maximumRangeValueRow = -1; [22932,22963]\n===\n------------\n===\ndelete-node\n---\nexpression_statement:
  this.maximumRangeValueRow = -1; [22932,22963]\n===\n\nNew cluster:\n===\ndelete-node\n---\nexpression_statement:
  this.maximumRangeValueColumn = -1; [22973,23007]\n===\n------------\n===\ndelete-node\n---\nexpression_statement:
  this.maximumRangeValueColumn = -1; [22973,23007]\n===\n\nNew cluster:\n===\ndelete-node\n---\nlocal_variable_declaration:
  int rowCount = getRowCount(); [23017,23046]\n===\n------------\n===\ndelete-node\n---\nlocal_variable_declaration:
  int rowCount = getRowCount(); [23017,23046]\n===\n\nNew cluster:\n===\ndelete-node\n---\nlocal_variable_declaration:
  int columnCount = getColumnCount(); [23056,23091]\n===\n------------\n===\ndelete-node\n---\nlocal_variable_declaration:
  int columnCount = getColumnCount(); [23056,23091]\n===\n\nNew cluster:\n===\ndelete-node\n---\nfor_statement:
  for (int r = 0; r < rowCount; r++) {\r\n            for (int c = 0; c < columnCount;
  c++) {\r\n                BoxAndWhiskerItem item = getItem(r, c);\r\n                if
  (item != null) {\r\n                    Number min = item.getMinOutlier();\r\n                    if
  (min != null) {\r\n                        double minv = min.doubleValue();\r\n
  \                       if (!Double.isNaN(minv)) {\r\n                            if
  (minv < this.minimumRangeValue || Double.isNaN(\r\n                                    this.minimumRangeValue))
  {\r\n                                this.minimumRangeValue = minv;\r\n                                this.minimumRangeValueRow
  = r;\r\n                                this.minimumRangeValueColumn = c;\r\n                            }\r\n
  \                       }\r\n                    }\r\n                    Number
  max = item.getMaxOutlier();\r\n                    if (max != null) {\r\n                        double
  maxv = max.doubleValue();\r\n                        if (!Double.isNaN(maxv)) {\r\n
  \                           if (maxv > this.maximumRangeValue || Double.isNaN(\r\n
  \                                   this.maximumRangeValue)) {\r\n                                this.maximumRangeValue
  = maxv;\r\n                                this.maximumRangeValueRow = r;\r\n                                this.maximumRangeValueColumn
  = c;\r\n                            }\r\n                        }\r\n                    }\r\n
  \               }\r\n            }\r\n        } [23101,24581]\n===\n------------\n===\ndelete-node\n---\nfor_statement:
  for (int r = 0; r < rowCount; r++) {\r\n            for (int c = 0; c < columnCount;
  c++) {\r\n                BoxAndWhiskerItem item = getItem(r, c);\r\n                if
  (item != null) {\r\n                    Number min = item.getMinOutlier();\r\n                    if
  (min != null) {\r\n                        double minv = min.doubleValue();\r\n
  \                       if (!Double.isNaN(minv)) {\r\n                            if
  (minv < this.minimumRangeValue || Double.isNaN(\r\n                                    this.minimumRangeValue))
  {\r\n                                this.minimumRangeValue = minv;\r\n                                this.minimumRangeValueRow
  = r;\r\n                                this.minimumRangeValueColumn = c;\r\n                            }\r\n
  \                       }\r\n                    }\r\n                    Number
  max = item.getMaxOutlier();\r\n                    if (max != null) {\r\n                        double
  maxv = max.doubleValue();\r\n                        if (!Double.isNaN(maxv)) {\r\n
  \                           if (maxv > this.maximumRangeValue || Double.isNaN(\r\n
  \                                   this.maximumRangeValue)) {\r\n                                this.maximumRangeValue
  = maxv;\r\n                                this.maximumRangeValueRow = r;\r\n                                this.maximumRangeValueColumn
  = c;\r\n                            }\r\n                        }\r\n                    }\r\n
  \               }\r\n            }\r\n        } [23101,24581]\n===\n\n"
