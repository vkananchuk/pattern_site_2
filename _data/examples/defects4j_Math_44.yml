---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: AbstractIntegrator
        children: []
        pos: 2124
        length: 18
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: protected Collection<StepHandler> stepHandlers;
          children: []
          pos: 2207
          length: 47
        - type: field_declaration
          fields:
            text: protected double stepStart;
          children: []
          pos: 2296
          length: 27
        - type: field_declaration
          fields:
            text: protected double stepSize;
          children: []
          pos: 2358
          length: 26
        - type: field_declaration
          fields:
            text: protected boolean isLastStep;
          children: []
          pos: 2426
          length: 29
        - type: field_declaration
          fields:
            text: protected boolean resetOccurred;
          children: []
          pos: 2544
          length: 32
        - type: field_declaration
          fields:
            text: private Collection<EventState> eventsStates;
          children: []
          pos: 2608
          length: 44
        - type: field_declaration
          fields:
            text: private boolean statesInitialized;
          children: []
          pos: 2712
          length: 34
        - type: field_declaration
          fields:
            text: private final String name;
          children: []
          pos: 2783
          length: 26
        - type: field_declaration
          fields:
            text: private Incrementor evaluations;
          children: []
          pos: 2861
          length: 32
        - type: field_declaration
          fields:
            text: private transient ExpandableStatefulODE expandable;
          children: []
          pos: 2947
          length: 51
        - type: constructor_declaration
          fields:
            text: |-
              public AbstractIntegrator(final String name) {
                      this.name = name;
                      stepHandlers = new ArrayList<StepHandler>();
                      stepStart = Double.NaN;
                      stepSize  = Double.NaN;
                      eventsStates = new ArrayList<EventState>();
                      statesInitialized = false;
                      evaluations = new Incrementor();
                      setMaxEvaluations(-1);
                      resetEvaluations();
                  }
          children: []
          pos: 3077
          length: 382
        - type: constructor_declaration
          fields:
            text: |-
              protected AbstractIntegrator() {
                      this(null);
                  }
          children: []
          pos: 3517
          length: 58
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getName
              children: []
              pos: 3620
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 3606
              length: 52
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return name;
                children: []
                pos: 3640
                length: 12
              pos: 3630
              length: 28
          children: []
          pos: 3606
          length: 52
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: addStepHandler
              children: []
              pos: 3701
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final StepHandler handler
                children: []
                pos: 3716
                length: 25
              pos: 3689
              length: 96
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: stepHandlers.add(handler);
                children: []
                pos: 3753
                length: 26
              pos: 3743
              length: 42
          children: []
          pos: 3689
          length: 96
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getStepHandlers
              children: []
              pos: 3847
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 3816
              length: 121
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return Collections.unmodifiableCollection(stepHandlers);
                children: []
                pos: 3875
                length: 56
              pos: 3865
              length: 72
          children: []
          pos: 3816
          length: 121
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: clearStepHandlers
              children: []
              pos: 3980
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 3968
              length: 69
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: stepHandlers.clear();
                children: []
                pos: 4010
                length: 21
              pos: 4000
              length: 37
          children: []
          pos: 3968
          length: 69
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: addEventHandler
              children: []
              pos: 4080
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final EventHandler handler
                children: []
                pos: 4096
                length: 26
              pos: 4068
              length: 428
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    addEventHandler(handler, maxCheckInterval, convergence,
                                            maxIterationCount,
                                            new BracketingNthOrderBrentSolver(convergence, 5));
                children: []
                pos: 4316
                length: 174
              pos: 4306
              length: 190
          children: []
          pos: 4068
          length: 428
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: addEventHandler
              children: []
              pos: 4539
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final EventHandler handler
                children: []
                pos: 4555
                length: 26
              pos: 4527
              length: 461
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    eventsStates.add(new EventState(handler, maxCheckInterval, convergence,
                                                            maxIterationCount, solver));
                children: []
                pos: 4842
                length: 140
              pos: 4832
              length: 156
          children: []
          pos: 4527
          length: 461
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getEventHandlers
              children: []
              pos: 5051
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 5019
              length: 291
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final List<EventHandler> list = new ArrayList<EventHandler>();
                children: []
                pos: 5080
                length: 62
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (EventState state : eventsStates) {
                                list.add(state.getEventHandler());
                            }
                children: []
                pos: 5151
                length: 96
              - type: return_statement
                fields:
                  text: return Collections.unmodifiableCollection(list);
                children: []
                pos: 5256
                length: 48
              pos: 5070
              length: 240
          children: []
          pos: 5019
          length: 291
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: clearEventHandlers
              children: []
              pos: 5353
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 5341
              length: 70
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: eventsStates.clear();
                children: []
                pos: 5384
                length: 21
              pos: 5374
              length: 37
          children: []
          pos: 5341
          length: 70
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getCurrentStepStart
              children: []
              pos: 5456
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 5442
              length: 69
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return stepStart;
                children: []
                pos: 5488
                length: 17
              pos: 5478
              length: 33
          children: []
          pos: 5442
          length: 69
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getCurrentSignedStepsize
              children: []
              pos: 5556
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 5542
              length: 73
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return stepSize;
                children: []
                pos: 5593
                length: 16
              pos: 5583
              length: 32
          children: []
          pos: 5542
          length: 73
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: setMaxEvaluations
              children: []
              pos: 5658
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int maxEvaluations
                children: []
                pos: 5676
                length: 18
              pos: 5646
              length: 153
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: 'evaluations.setMaximalCount((maxEvaluations < 0) ? Integer.MAX_VALUE
                    : maxEvaluations);'
                children: []
                pos: 5706
                length: 87
              pos: 5696
              length: 103
          children: []
          pos: 5646
          length: 153
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getMaxEvaluations
              children: []
              pos: 5841
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 5830
              length: 84
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return evaluations.getMaximalCount();
                children: []
                pos: 5871
                length: 37
              pos: 5861
              length: 53
          children: []
          pos: 5830
          length: 84
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getEvaluations
              children: []
              pos: 5956
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 5945
              length: 74
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return evaluations.getCount();
                children: []
                pos: 5983
                length: 30
              pos: 5973
              length: 46
          children: []
          pos: 5945
          length: 74
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: resetEvaluations
              children: []
              pos: 6097
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6082
              length: 75
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: evaluations.resetCount();
                children: []
                pos: 6126
                length: 25
              pos: 6116
              length: 41
          children: []
          pos: 6082
          length: 75
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: setEquations
              children: []
              pos: 6254
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final ExpandableStatefulODE equations
                children: []
                pos: 6267
                length: 37
              pos: 6239
              length: 111
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: this.expandable = equations;
                children: []
                pos: 6316
                length: 28
              pos: 6306
              length: 44
          children: []
          pos: 6239
          length: 111
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: integrate
              children: []
              pos: 6395
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final FirstOrderDifferentialEquations equations
                children: []
                pos: 6405
                length: 47
              pos: 6381
              length: 1015
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: field_access
                            fields:
                              text: y0.length
                            children: []
                            pos: 6638
                            length: 9
                          right:
                            type: method_invocation
                            fields:
                              text: equations.getDimension()
                            children: []
                            pos: 6651
                            length: 24
                        children: []
                        pos: 6638
                        length: 37
                    children: []
                    pos: 6637
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new DimensionMismatchException(y0.length, equations.getDimension());
                    children: []
                    pos: 6691
                    length: 74
                  pos: 6677
                  length: 98
                pos: 6634
                length: 141
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: field_access
                            fields:
                              text: y.length
                            children: []
                            pos: 6788
                            length: 8
                          right:
                            type: method_invocation
                            fields:
                              text: equations.getDimension()
                            children: []
                            pos: 6800
                            length: 24
                        children: []
                        pos: 6788
                        length: 36
                    children: []
                    pos: 6787
                    length: 38
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new DimensionMismatchException(y.length, equations.getDimension());
                    children: []
                    pos: 6840
                    length: 73
                  pos: 6826
                  length: 97
                pos: 6784
                length: 139
              - type: local_variable_declaration
                fields:
                  text: final ExpandableStatefulODE expandableODE = new ExpandableStatefulODE(equations);
                children: []
                pos: 6982
                length: 81
              - type: expression_statement
                fields:
                  text: expandableODE.setTime(t0);
                children: []
                pos: 7072
                length: 26
              - type: expression_statement
                fields:
                  text: expandableODE.setPrimaryState(y0);
                children: []
                pos: 7107
                length: 34
              - type: expression_statement
                fields:
                  text: integrate(expandableODE, t);
                children: []
                pos: 7182
                length: 28
              - type: expression_statement
                fields:
                  text: System.arraycopy(expandableODE.getPrimaryState(), 0, y, 0,
                    y.length);
                children: []
                pos: 7280
                length: 69
              - type: return_statement
                fields:
                  text: return expandableODE.getTime();
                children: []
                pos: 7358
                length: 31
              pos: 6623
              length: 773
          children: []
          pos: 6381
          length: 1015
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: integrate
              children: []
              pos: 8544
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: ExpandableStatefulODE equations
                children: []
                pos: 8554
                length: 31
              pos: 8523
              length: 145
          children: []
          pos: 8523
          length: 145
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: computeDerivatives
              children: []
              pos: 9089
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final double t
                children: []
                pos: 9108
                length: 14
              pos: 9077
              length: 223
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: evaluations.incrementCount();
                children: []
                pos: 9214
                length: 29
              - type: expression_statement
                fields:
                  text: expandable.computeDerivatives(t, y, yDot);
                children: []
                pos: 9252
                length: 42
              pos: 9204
              length: 96
          children: []
          pos: 9077
          length: 223
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: setStateInitialized
              children: []
              pos: 9643
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final boolean stateInitialized
                children: []
                pos: 9663
                length: 30
              pos: 9628
              length: 125
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: this.statesInitialized = stateInitialized;
                children: []
                pos: 9705
                length: 42
              pos: 9695
              length: 58
          children: []
          pos: 9628
          length: 125
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: acceptStep
              children: []
              pos: 10319
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final AbstractStepInterpolator interpolator
                children: []
                pos: 10330
                length: 43
              pos: 10302
              length: 4566
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: double previousT = interpolator.getGlobalPreviousTime();
                children: []
                pos: 10521
                length: 56
              - type: local_variable_declaration
                fields:
                  text: final double currentT = interpolator.getGlobalCurrentTime();
                children: []
                pos: 10590
                length: 60
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "! statesInitialized"
                        children: []
                        pos: 10722
                        length: 19
                    children: []
                    pos: 10721
                    length: 21
                children:
                - type: block
                  fields: {}
                  children:
                  - type: enhanced_for_statement
                    fields:
                      text: |-
                        for (EventState state : eventsStates) {
                                            state.reinitializeBegin(interpolator);
                                        }
                    children: []
                    pos: 10761
                    length: 116
                  - type: expression_statement
                    fields:
                      text: statesInitialized = true;
                    children: []
                    pos: 10894
                    length: 25
                  pos: 10743
                  length: 190
                pos: 10718
                length: 215
              - type: local_variable_declaration
                fields:
                  text: 'final int orderingSign = interpolator.isForward() ? +1 :
                    -1;'
                children: []
                pos: 11016
                length: 60
              - type: local_variable_declaration
                fields:
                  text: |-
                    SortedSet<EventState> occuringEvents = new TreeSet<EventState>(new Comparator<EventState>() {

                                    /** {@inheritDoc} */
                                    public int compare(EventState es0, EventState es1) {
                                        return orderingSign * Double.compare(es0.getEventTime(), es1.getEventTime());
                                    }

                                });
                children: []
                pos: 11089
                length: 333
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (final EventState state : eventsStates) {
                                    if (state.evaluateStep(interpolator)) {
                                        // the event occurs during the current step
                                        occuringEvents.add(state);
                                    }
                                }
                children: []
                pos: 11436
                length: 244
              - type: while_statement
                fields:
                  text: |-
                    while (!occuringEvents.isEmpty()) {

                                    // handle the chronologically first event
                                    final Iterator<EventState> iterator = occuringEvents.iterator();
                                    final EventState currentEvent = iterator.next();
                                    iterator.remove();

                                    // restrict the interpolator to the first part of the step, up to the event
                                    final double eventT = currentEvent.getEventTime();
                                    interpolator.setSoftPreviousTime(previousT);
                                    interpolator.setSoftCurrentTime(eventT);

                                    // trigger the event
                                    interpolator.setInterpolatedTime(eventT);
                                    final double[] eventY = interpolator.getInterpolatedState();
                                    currentEvent.stepAccepted(eventT, eventY);
                                    isLastStep = currentEvent.stop();

                                    // handle the first part of the step, up to the event
                                    for (final StepHandler handler : stepHandlers) {
                                        handler.handleStep(interpolator, isLastStep);
                                    }

                                    if (isLastStep) {
                                        // the event asked to stop integration
                                        System.arraycopy(eventY, 0, y, 0, y.length);
                                        for (final EventState remaining : occuringEvents) {
                                            remaining.stepAccepted(eventT, eventY);
                                        }
                                        return eventT;
                                    }

                                    if (currentEvent.reset(eventT, eventY)) {
                                        // some event handler has triggered changes that
                                        // invalidate the derivatives, we need to recompute them
                                        System.arraycopy(eventY, 0, y, 0, y.length);
                                        computeDerivatives(eventT, y, yDot);
                                        resetOccurred = true;
                                        for (final EventState remaining : occuringEvents) {
                                            remaining.stepAccepted(eventT, eventY);
                                        }
                                        return eventT;
                                    }

                                    // prepare handling of the remaining part of the step
                                    previousT = eventT;
                                    interpolator.setSoftPreviousTime(eventT);
                                    interpolator.setSoftCurrentTime(currentT);

                                    // check if the same event occurs again in the remaining part of the step
                                    if (currentEvent.evaluateStep(interpolator)) {
                                        // the event occurs during the current step
                                        occuringEvents.add(currentEvent);
                                    }

                                }
                children: []
                pos: 11694
                length: 2534
              - type: expression_statement
                fields:
                  text: interpolator.setInterpolatedTime(currentT);
                children: []
                pos: 14242
                length: 43
              - type: local_variable_declaration
                fields:
                  text: final double[] currentY = interpolator.getInterpolatedState();
                children: []
                pos: 14298
                length: 62
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (final EventState state : eventsStates) {
                                    state.stepAccepted(currentT, currentY);
                                    isLastStep = isLastStep || state.stop();
                                }
                children: []
                pos: 14373
                length: 172
              - type: expression_statement
                fields:
                  text: isLastStep = isLastStep || Precision.equals(currentT, tEnd,
                    1);
                children: []
                pos: 14558
                length: 63
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (StepHandler handler : stepHandlers) {
                                    handler.handleStep(interpolator, isLastStep);
                                }
                children: []
                pos: 14713
                length: 118
              - type: return_statement
                fields:
                  text: return currentT;
                children: []
                pos: 14845
                length: 16
              pos: 10506
              length: 4362
          children: []
          pos: 10302
          length: 4566
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sanityChecks
              children: []
              pos: 15112
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final ExpandableStatefulODE equations
                children: []
                pos: 15125
                length: 37
              pos: 15097
              length: 593
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: |-
                    final double threshold = 1000 * FastMath.ulp(FastMath.max(FastMath.abs(equations.getTime()),
                                                                                      FastMath.abs(t)));
                children: []
                pos: 15232
                length: 177
              - type: local_variable_declaration
                fields:
                  text: final double dt = FastMath.abs(equations.getTime() - t);
                children: []
                pos: 15418
                length: 56
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_or_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: dt
                            children: []
                            pos: 15487
                            length: 2
                          right:
                            type: identifier
                            fields:
                              text: threshold
                            children: []
                            pos: 15493
                            length: 9
                        children: []
                        pos: 15487
                        length: 15
                    children: []
                    pos: 15486
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: |-
                        throw new NumberIsTooSmallException(LocalizedFormats.TOO_SMALL_INTEGRATION_INTERVAL,
                                                                        dt, threshold, false);
                    children: []
                    pos: 15518
                    length: 155
                  pos: 15504
                  length: 179
                pos: 15483
                length: 200
              pos: 15221
              length: 469
          children: []
          pos: 15097
          length: 593
        pos: 2102
        length: 13591
    children: []
    pos: 2102
    length: 13591
  pos: 0
  length: 15694
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: AbstractIntegrator
        children: []
        pos: 2124
        length: 18
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: protected Collection<StepHandler> stepHandlers;
          children: []
          pos: 2207
          length: 47
        - type: field_declaration
          fields:
            text: protected double stepStart;
          children: []
          pos: 2296
          length: 27
        - type: field_declaration
          fields:
            text: protected double stepSize;
          children: []
          pos: 2358
          length: 26
        - type: field_declaration
          fields:
            text: protected boolean isLastStep;
          children: []
          pos: 2426
          length: 29
        - type: field_declaration
          fields:
            text: protected boolean resetOccurred;
          children: []
          pos: 2544
          length: 32
        - type: field_declaration
          fields:
            text: private Collection<EventState> eventsStates;
          children: []
          pos: 2608
          length: 44
        - type: field_declaration
          fields:
            text: private boolean statesInitialized;
          children: []
          pos: 2712
          length: 34
        - type: field_declaration
          fields:
            text: private final String name;
          children: []
          pos: 2783
          length: 26
        - type: field_declaration
          fields:
            text: private Incrementor evaluations;
          children: []
          pos: 2861
          length: 32
        - type: field_declaration
          fields:
            text: private transient ExpandableStatefulODE expandable;
          children: []
          pos: 2947
          length: 51
        - type: constructor_declaration
          fields:
            text: |-
              public AbstractIntegrator(final String name) {
                      this.name = name;
                      stepHandlers = new ArrayList<StepHandler>();
                      stepStart = Double.NaN;
                      stepSize  = Double.NaN;
                      eventsStates = new ArrayList<EventState>();
                      statesInitialized = false;
                      evaluations = new Incrementor();
                      setMaxEvaluations(-1);
                      resetEvaluations();
                  }
          children: []
          pos: 3077
          length: 382
        - type: constructor_declaration
          fields:
            text: |-
              protected AbstractIntegrator() {
                      this(null);
                  }
          children: []
          pos: 3517
          length: 58
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getName
              children: []
              pos: 3620
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 3606
              length: 52
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return name;
                children: []
                pos: 3640
                length: 12
              pos: 3630
              length: 28
          children: []
          pos: 3606
          length: 52
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: addStepHandler
              children: []
              pos: 3701
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final StepHandler handler
                children: []
                pos: 3716
                length: 25
              pos: 3689
              length: 96
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: stepHandlers.add(handler);
                children: []
                pos: 3753
                length: 26
              pos: 3743
              length: 42
          children: []
          pos: 3689
          length: 96
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getStepHandlers
              children: []
              pos: 3847
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 3816
              length: 121
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return Collections.unmodifiableCollection(stepHandlers);
                children: []
                pos: 3875
                length: 56
              pos: 3865
              length: 72
          children: []
          pos: 3816
          length: 121
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: clearStepHandlers
              children: []
              pos: 3980
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 3968
              length: 69
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: stepHandlers.clear();
                children: []
                pos: 4010
                length: 21
              pos: 4000
              length: 37
          children: []
          pos: 3968
          length: 69
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: addEventHandler
              children: []
              pos: 4080
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final EventHandler handler
                children: []
                pos: 4096
                length: 26
              pos: 4068
              length: 428
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    addEventHandler(handler, maxCheckInterval, convergence,
                                            maxIterationCount,
                                            new BracketingNthOrderBrentSolver(convergence, 5));
                children: []
                pos: 4316
                length: 174
              pos: 4306
              length: 190
          children: []
          pos: 4068
          length: 428
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: addEventHandler
              children: []
              pos: 4539
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final EventHandler handler
                children: []
                pos: 4555
                length: 26
              pos: 4527
              length: 461
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    eventsStates.add(new EventState(handler, maxCheckInterval, convergence,
                                                            maxIterationCount, solver));
                children: []
                pos: 4842
                length: 140
              pos: 4832
              length: 156
          children: []
          pos: 4527
          length: 461
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getEventHandlers
              children: []
              pos: 5051
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 5019
              length: 291
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final List<EventHandler> list = new ArrayList<EventHandler>();
                children: []
                pos: 5080
                length: 62
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (EventState state : eventsStates) {
                                list.add(state.getEventHandler());
                            }
                children: []
                pos: 5151
                length: 96
              - type: return_statement
                fields:
                  text: return Collections.unmodifiableCollection(list);
                children: []
                pos: 5256
                length: 48
              pos: 5070
              length: 240
          children: []
          pos: 5019
          length: 291
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: clearEventHandlers
              children: []
              pos: 5353
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 5341
              length: 70
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: eventsStates.clear();
                children: []
                pos: 5384
                length: 21
              pos: 5374
              length: 37
          children: []
          pos: 5341
          length: 70
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getCurrentStepStart
              children: []
              pos: 5456
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 5442
              length: 69
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return stepStart;
                children: []
                pos: 5488
                length: 17
              pos: 5478
              length: 33
          children: []
          pos: 5442
          length: 69
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getCurrentSignedStepsize
              children: []
              pos: 5556
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 5542
              length: 73
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return stepSize;
                children: []
                pos: 5593
                length: 16
              pos: 5583
              length: 32
          children: []
          pos: 5542
          length: 73
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: setMaxEvaluations
              children: []
              pos: 5658
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int maxEvaluations
                children: []
                pos: 5676
                length: 18
              pos: 5646
              length: 153
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: 'evaluations.setMaximalCount((maxEvaluations < 0) ? Integer.MAX_VALUE
                    : maxEvaluations);'
                children: []
                pos: 5706
                length: 87
              pos: 5696
              length: 103
          children: []
          pos: 5646
          length: 153
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getMaxEvaluations
              children: []
              pos: 5841
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 5830
              length: 84
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return evaluations.getMaximalCount();
                children: []
                pos: 5871
                length: 37
              pos: 5861
              length: 53
          children: []
          pos: 5830
          length: 84
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getEvaluations
              children: []
              pos: 5956
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 5945
              length: 74
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return evaluations.getCount();
                children: []
                pos: 5983
                length: 30
              pos: 5973
              length: 46
          children: []
          pos: 5945
          length: 74
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: resetEvaluations
              children: []
              pos: 6097
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6082
              length: 75
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: evaluations.resetCount();
                children: []
                pos: 6126
                length: 25
              pos: 6116
              length: 41
          children: []
          pos: 6082
          length: 75
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: setEquations
              children: []
              pos: 6254
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final ExpandableStatefulODE equations
                children: []
                pos: 6267
                length: 37
              pos: 6239
              length: 111
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: this.expandable = equations;
                children: []
                pos: 6316
                length: 28
              pos: 6306
              length: 44
          children: []
          pos: 6239
          length: 111
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: integrate
              children: []
              pos: 6395
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final FirstOrderDifferentialEquations equations
                children: []
                pos: 6405
                length: 47
              pos: 6381
              length: 1015
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: field_access
                            fields:
                              text: y0.length
                            children: []
                            pos: 6638
                            length: 9
                          right:
                            type: method_invocation
                            fields:
                              text: equations.getDimension()
                            children: []
                            pos: 6651
                            length: 24
                        children: []
                        pos: 6638
                        length: 37
                    children: []
                    pos: 6637
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new DimensionMismatchException(y0.length, equations.getDimension());
                    children: []
                    pos: 6691
                    length: 74
                  pos: 6677
                  length: 98
                pos: 6634
                length: 141
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: field_access
                            fields:
                              text: y.length
                            children: []
                            pos: 6788
                            length: 8
                          right:
                            type: method_invocation
                            fields:
                              text: equations.getDimension()
                            children: []
                            pos: 6800
                            length: 24
                        children: []
                        pos: 6788
                        length: 36
                    children: []
                    pos: 6787
                    length: 38
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new DimensionMismatchException(y.length, equations.getDimension());
                    children: []
                    pos: 6840
                    length: 73
                  pos: 6826
                  length: 97
                pos: 6784
                length: 139
              - type: local_variable_declaration
                fields:
                  text: final ExpandableStatefulODE expandableODE = new ExpandableStatefulODE(equations);
                children: []
                pos: 6982
                length: 81
              - type: expression_statement
                fields:
                  text: expandableODE.setTime(t0);
                children: []
                pos: 7072
                length: 26
              - type: expression_statement
                fields:
                  text: expandableODE.setPrimaryState(y0);
                children: []
                pos: 7107
                length: 34
              - type: expression_statement
                fields:
                  text: integrate(expandableODE, t);
                children: []
                pos: 7182
                length: 28
              - type: expression_statement
                fields:
                  text: System.arraycopy(expandableODE.getPrimaryState(), 0, y, 0,
                    y.length);
                children: []
                pos: 7280
                length: 69
              - type: return_statement
                fields:
                  text: return expandableODE.getTime();
                children: []
                pos: 7358
                length: 31
              pos: 6623
              length: 773
          children: []
          pos: 6381
          length: 1015
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: integrate
              children: []
              pos: 8544
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: ExpandableStatefulODE equations
                children: []
                pos: 8554
                length: 31
              pos: 8523
              length: 145
          children: []
          pos: 8523
          length: 145
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: computeDerivatives
              children: []
              pos: 9089
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final double t
                children: []
                pos: 9108
                length: 14
              pos: 9077
              length: 223
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: evaluations.incrementCount();
                children: []
                pos: 9214
                length: 29
              - type: expression_statement
                fields:
                  text: expandable.computeDerivatives(t, y, yDot);
                children: []
                pos: 9252
                length: 42
              pos: 9204
              length: 96
          children: []
          pos: 9077
          length: 223
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: setStateInitialized
              children: []
              pos: 9643
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final boolean stateInitialized
                children: []
                pos: 9663
                length: 30
              pos: 9628
              length: 125
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: this.statesInitialized = stateInitialized;
                children: []
                pos: 9705
                length: 42
              pos: 9695
              length: 58
          children: []
          pos: 9628
          length: 125
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: acceptStep
              children: []
              pos: 10319
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final AbstractStepInterpolator interpolator
                children: []
                pos: 10330
                length: 43
              pos: 10302
              length: 4285
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: double previousT = interpolator.getGlobalPreviousTime();
                children: []
                pos: 10521
                length: 56
              - type: local_variable_declaration
                fields:
                  text: final double currentT = interpolator.getGlobalCurrentTime();
                children: []
                pos: 10590
                length: 60
              - type: expression_statement
                fields:
                  text: resetOccurred = false;
                children: []
                pos: 10663
                length: 22
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "! statesInitialized"
                        children: []
                        pos: 10757
                        length: 19
                    children: []
                    pos: 10756
                    length: 21
                children:
                - type: block
                  fields: {}
                  children:
                  - type: enhanced_for_statement
                    fields:
                      text: |-
                        for (EventState state : eventsStates) {
                                            state.reinitializeBegin(interpolator);
                                        }
                    children: []
                    pos: 10796
                    length: 116
                  - type: expression_statement
                    fields:
                      text: statesInitialized = true;
                    children: []
                    pos: 10929
                    length: 25
                  pos: 10778
                  length: 190
                pos: 10753
                length: 215
              - type: local_variable_declaration
                fields:
                  text: 'final int orderingSign = interpolator.isForward() ? +1 :
                    -1;'
                children: []
                pos: 11051
                length: 60
              - type: local_variable_declaration
                fields:
                  text: |-
                    SortedSet<EventState> occuringEvents = new TreeSet<EventState>(new Comparator<EventState>() {

                                    /** {@inheritDoc} */
                                    public int compare(EventState es0, EventState es1) {
                                        return orderingSign * Double.compare(es0.getEventTime(), es1.getEventTime());
                                    }

                                });
                children: []
                pos: 11124
                length: 333
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (final EventState state : eventsStates) {
                                    if (state.evaluateStep(interpolator)) {
                                        // the event occurs during the current step
                                        occuringEvents.add(state);
                                    }
                                }
                children: []
                pos: 11471
                length: 244
              - type: while_statement
                fields:
                  text: |-
                    while (!occuringEvents.isEmpty()) {

                                    // handle the chronologically first event
                                    final Iterator<EventState> iterator = occuringEvents.iterator();
                                    final EventState currentEvent = iterator.next();
                                    iterator.remove();

                                    // restrict the interpolator to the first part of the step, up to the event
                                    final double eventT = currentEvent.getEventTime();
                                    interpolator.setSoftPreviousTime(previousT);
                                    interpolator.setSoftCurrentTime(eventT);

                                    // trigger the event
                                    interpolator.setInterpolatedTime(eventT);
                                    final double[] eventY = interpolator.getInterpolatedState();
                                    currentEvent.stepAccepted(eventT, eventY);
                                    isLastStep = currentEvent.stop();

                                    // handle the first part of the step, up to the event
                                    for (final StepHandler handler : stepHandlers) {
                                        handler.handleStep(interpolator, isLastStep);
                                    }

                                    if (isLastStep) {
                                        // the event asked to stop integration
                                        System.arraycopy(eventY, 0, y, 0, y.length);
                                        return eventT;
                                    }

                                    if (currentEvent.reset(eventT, eventY)) {
                                        // some event handler has triggered changes that
                                        // invalidate the derivatives, we need to recompute them
                                        System.arraycopy(eventY, 0, y, 0, y.length);
                                        computeDerivatives(eventT, y, yDot);
                                        resetOccurred = true;
                                        return eventT;
                                    }

                                    // prepare handling of the remaining part of the step
                                    previousT = eventT;
                                    interpolator.setSoftPreviousTime(eventT);
                                    interpolator.setSoftCurrentTime(currentT);

                                    // check if the same event occurs again in the remaining part of the step
                                    if (currentEvent.evaluateStep(interpolator)) {
                                        // the event occurs during the current step
                                        occuringEvents.add(currentEvent);
                                    }

                                }
                children: []
                pos: 11729
                length: 2218
              - type: expression_statement
                fields:
                  text: interpolator.setInterpolatedTime(currentT);
                children: []
                pos: 13961
                length: 43
              - type: local_variable_declaration
                fields:
                  text: final double[] currentY = interpolator.getInterpolatedState();
                children: []
                pos: 14017
                length: 62
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (final EventState state : eventsStates) {
                                    state.stepAccepted(currentT, currentY);
                                    isLastStep = isLastStep || state.stop();
                                }
                children: []
                pos: 14092
                length: 172
              - type: expression_statement
                fields:
                  text: isLastStep = isLastStep || Precision.equals(currentT, tEnd,
                    1);
                children: []
                pos: 14277
                length: 63
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (StepHandler handler : stepHandlers) {
                                    handler.handleStep(interpolator, isLastStep);
                                }
                children: []
                pos: 14432
                length: 118
              - type: return_statement
                fields:
                  text: return currentT;
                children: []
                pos: 14564
                length: 16
              pos: 10506
              length: 4081
          children: []
          pos: 10302
          length: 4285
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sanityChecks
              children: []
              pos: 14831
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final ExpandableStatefulODE equations
                children: []
                pos: 14844
                length: 37
              pos: 14816
              length: 593
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: |-
                    final double threshold = 1000 * FastMath.ulp(FastMath.max(FastMath.abs(equations.getTime()),
                                                                                      FastMath.abs(t)));
                children: []
                pos: 14951
                length: 177
              - type: local_variable_declaration
                fields:
                  text: final double dt = FastMath.abs(equations.getTime() - t);
                children: []
                pos: 15137
                length: 56
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_or_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: dt
                            children: []
                            pos: 15206
                            length: 2
                          right:
                            type: identifier
                            fields:
                              text: threshold
                            children: []
                            pos: 15212
                            length: 9
                        children: []
                        pos: 15206
                        length: 15
                    children: []
                    pos: 15205
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: |-
                        throw new NumberIsTooSmallException(LocalizedFormats.TOO_SMALL_INTEGRATION_INTERVAL,
                                                                        dt, threshold, false);
                    children: []
                    pos: 15237
                    length: 155
                  pos: 15223
                  length: 179
                pos: 15202
                length: 200
              pos: 14940
              length: 469
          children: []
          pos: 14816
          length: 593
        pos: 2102
        length: 13310
    children: []
    pos: 2102
    length: 13310
  pos: 0
  length: 15413
text_diff: "--- before\n+++ after\n@@ -277,6 +277,7 @@\n \n             double previousT
  = interpolator.getGlobalPreviousTime();\n             final double currentT = interpolator.getGlobalCurrentTime();\n+
  \           resetOccurred = false;\n \n             // initialize the events states
  if needed\n             if (! statesInitialized) {\n@@ -330,9 +331,6 @@\n                 if
  (isLastStep) {\n                     // the event asked to stop integration\n                     System.arraycopy(eventY,
  0, y, 0, y.length);\n-                    for (final EventState remaining : occuringEvents)
  {\n-                        remaining.stepAccepted(eventT, eventY);\n-                    }\n
  \                    return eventT;\n                 }\n \n@@ -342,9 +340,6 @@\n
  \                    System.arraycopy(eventY, 0, y, 0, y.length);\n                     computeDerivatives(eventT,
  y, yDot);\n                     resetOccurred = true;\n-                    for
  (final EventState remaining : occuringEvents) {\n-                        remaining.stepAccepted(eventT,
  eventY);\n-                    }\n                     return eventT;\n                 }\n
  \n"
tree_diff: |+
  New cluster:
  ===
  insert-node
  ---
  expression_statement: resetOccurred = false; [10663,10685]
  to
  block [10506,14868]
  at 2
  ------------
  ===
  insert-node
  ---
  expression_statement: resetOccurred = false; [10663,10685]
  to
  block [10506,14868]
  at 2

  New cluster:
  UPDATE from while (!occuringEvents.isEmpty()) {

                  // handle the chronologically first event
                  final Iterator<EventState> iterator = occuringEvents.iterator();
                  final EventState currentEvent = iterator.next();
                  iterator.remove();

                  // restrict the interpolator to the first part of the step, up to the event
                  final double eventT = currentEvent.getEventTime();
                  interpolator.setSoftPreviousTime(previousT);
                  interpolator.setSoftCurrentTime(eventT);

                  // trigger the event
                  interpolator.setInterpolatedTime(eventT);
                  final double[] eventY = interpolator.getInterpolatedState();
                  currentEvent.stepAccepted(eventT, eventY);
                  isLastStep = currentEvent.stop();

                  // handle the first part of the step, up to the event
                  for (final StepHandler handler : stepHandlers) {
                      handler.handleStep(interpolator, isLastStep);
                  }

                  if (isLastStep) {
                      // the event asked to stop integration
                      System.arraycopy(eventY, 0, y, 0, y.length);
                      for (final EventState remaining : occuringEvents) {
                          remaining.stepAccepted(eventT, eventY);
                      }
                      return eventT;
                  }

                  if (currentEvent.reset(eventT, eventY)) {
                      // some event handler has triggered changes that
                      // invalidate the derivatives, we need to recompute them
                      System.arraycopy(eventY, 0, y, 0, y.length);
                      computeDerivatives(eventT, y, yDot);
                      resetOccurred = true;
                      for (final EventState remaining : occuringEvents) {
                          remaining.stepAccepted(eventT, eventY);
                      }
                      return eventT;
                  }

                  // prepare handling of the remaining part of the step
                  previousT = eventT;
                  interpolator.setSoftPreviousTime(eventT);
                  interpolator.setSoftCurrentTime(currentT);

                  // check if the same event occurs again in the remaining part of the step
                  if (currentEvent.evaluateStep(interpolator)) {
                      // the event occurs during the current step
                      occuringEvents.add(currentEvent);
                  }

              } to while (!occuringEvents.isEmpty()) {

                  // handle the chronologically first event
                  final Iterator<EventState> iterator = occuringEvents.iterator();
                  final EventState currentEvent = iterator.next();
                  iterator.remove();

                  // restrict the interpolator to the first part of the step, up to the event
                  final double eventT = currentEvent.getEventTime();
                  interpolator.setSoftPreviousTime(previousT);
                  interpolator.setSoftCurrentTime(eventT);

                  // trigger the event
                  interpolator.setInterpolatedTime(eventT);
                  final double[] eventY = interpolator.getInterpolatedState();
                  currentEvent.stepAccepted(eventT, eventY);
                  isLastStep = currentEvent.stop();

                  // handle the first part of the step, up to the event
                  for (final StepHandler handler : stepHandlers) {
                      handler.handleStep(interpolator, isLastStep);
                  }

                  if (isLastStep) {
                      // the event asked to stop integration
                      System.arraycopy(eventY, 0, y, 0, y.length);
                      return eventT;
                  }

                  if (currentEvent.reset(eventT, eventY)) {
                      // some event handler has triggered changes that
                      // invalidate the derivatives, we need to recompute them
                      System.arraycopy(eventY, 0, y, 0, y.length);
                      computeDerivatives(eventT, y, yDot);
                      resetOccurred = true;
                      return eventT;
                  }

                  // prepare handling of the remaining part of the step
                  previousT = eventT;
                  interpolator.setSoftPreviousTime(eventT);
                  interpolator.setSoftCurrentTime(currentT);

                  // check if the same event occurs again in the remaining part of the step
                  if (currentEvent.evaluateStep(interpolator)) {
                      // the event occurs during the current step
                      occuringEvents.add(currentEvent);
                  }

              }
  ------------
  ===
  update-node
  ---
  while_statement: while (!occuringEvents.isEmpty()) {

                  // handle the chronologically first event
                  final Iterator<EventState> iterator = occuringEvents.iterator();
                  final EventState currentEvent = iterator.next();
                  iterator.remove();

                  // restrict the interpolator to the first part of the step, up to the event
                  final double eventT = currentEvent.getEventTime();
                  interpolator.setSoftPreviousTime(previousT);
                  interpolator.setSoftCurrentTime(eventT);

                  // trigger the event
                  interpolator.setInterpolatedTime(eventT);
                  final double[] eventY = interpolator.getInterpolatedState();
                  currentEvent.stepAccepted(eventT, eventY);
                  isLastStep = currentEvent.stop();

                  // handle the first part of the step, up to the event
                  for (final StepHandler handler : stepHandlers) {
                      handler.handleStep(interpolator, isLastStep);
                  }

                  if (isLastStep) {
                      // the event asked to stop integration
                      System.arraycopy(eventY, 0, y, 0, y.length);
                      for (final EventState remaining : occuringEvents) {
                          remaining.stepAccepted(eventT, eventY);
                      }
                      return eventT;
                  }

                  if (currentEvent.reset(eventT, eventY)) {
                      // some event handler has triggered changes that
                      // invalidate the derivatives, we need to recompute them
                      System.arraycopy(eventY, 0, y, 0, y.length);
                      computeDerivatives(eventT, y, yDot);
                      resetOccurred = true;
                      for (final EventState remaining : occuringEvents) {
                          remaining.stepAccepted(eventT, eventY);
                      }
                      return eventT;
                  }

                  // prepare handling of the remaining part of the step
                  previousT = eventT;
                  interpolator.setSoftPreviousTime(eventT);
                  interpolator.setSoftCurrentTime(currentT);

                  // check if the same event occurs again in the remaining part of the step
                  if (currentEvent.evaluateStep(interpolator)) {
                      // the event occurs during the current step
                      occuringEvents.add(currentEvent);
                  }

              } [11694,14228]
  replace while (!occuringEvents.isEmpty()) {

                  // handle the chronologically first event
                  final Iterator<EventState> iterator = occuringEvents.iterator();
                  final EventState currentEvent = iterator.next();
                  iterator.remove();

                  // restrict the interpolator to the first part of the step, up to the event
                  final double eventT = currentEvent.getEventTime();
                  interpolator.setSoftPreviousTime(previousT);
                  interpolator.setSoftCurrentTime(eventT);

                  // trigger the event
                  interpolator.setInterpolatedTime(eventT);
                  final double[] eventY = interpolator.getInterpolatedState();
                  currentEvent.stepAccepted(eventT, eventY);
                  isLastStep = currentEvent.stop();

                  // handle the first part of the step, up to the event
                  for (final StepHandler handler : stepHandlers) {
                      handler.handleStep(interpolator, isLastStep);
                  }

                  if (isLastStep) {
                      // the event asked to stop integration
                      System.arraycopy(eventY, 0, y, 0, y.length);
                      for (final EventState remaining : occuringEvents) {
                          remaining.stepAccepted(eventT, eventY);
                      }
                      return eventT;
                  }

                  if (currentEvent.reset(eventT, eventY)) {
                      // some event handler has triggered changes that
                      // invalidate the derivatives, we need to recompute them
                      System.arraycopy(eventY, 0, y, 0, y.length);
                      computeDerivatives(eventT, y, yDot);
                      resetOccurred = true;
                      for (final EventState remaining : occuringEvents) {
                          remaining.stepAccepted(eventT, eventY);
                      }
                      return eventT;
                  }

                  // prepare handling of the remaining part of the step
                  previousT = eventT;
                  interpolator.setSoftPreviousTime(eventT);
                  interpolator.setSoftCurrentTime(currentT);

                  // check if the same event occurs again in the remaining part of the step
                  if (currentEvent.evaluateStep(interpolator)) {
                      // the event occurs during the current step
                      occuringEvents.add(currentEvent);
                  }

              } by while (!occuringEvents.isEmpty()) {

                  // handle the chronologically first event
                  final Iterator<EventState> iterator = occuringEvents.iterator();
                  final EventState currentEvent = iterator.next();
                  iterator.remove();

                  // restrict the interpolator to the first part of the step, up to the event
                  final double eventT = currentEvent.getEventTime();
                  interpolator.setSoftPreviousTime(previousT);
                  interpolator.setSoftCurrentTime(eventT);

                  // trigger the event
                  interpolator.setInterpolatedTime(eventT);
                  final double[] eventY = interpolator.getInterpolatedState();
                  currentEvent.stepAccepted(eventT, eventY);
                  isLastStep = currentEvent.stop();

                  // handle the first part of the step, up to the event
                  for (final StepHandler handler : stepHandlers) {
                      handler.handleStep(interpolator, isLastStep);
                  }

                  if (isLastStep) {
                      // the event asked to stop integration
                      System.arraycopy(eventY, 0, y, 0, y.length);
                      return eventT;
                  }

                  if (currentEvent.reset(eventT, eventY)) {
                      // some event handler has triggered changes that
                      // invalidate the derivatives, we need to recompute them
                      System.arraycopy(eventY, 0, y, 0, y.length);
                      computeDerivatives(eventT, y, yDot);
                      resetOccurred = true;
                      return eventT;
                  }

                  // prepare handling of the remaining part of the step
                  previousT = eventT;
                  interpolator.setSoftPreviousTime(eventT);
                  interpolator.setSoftCurrentTime(currentT);

                  // check if the same event occurs again in the remaining part of the step
                  if (currentEvent.evaluateStep(interpolator)) {
                      // the event occurs during the current step
                      occuringEvents.add(currentEvent);
                  }

              }

...
