---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: ArchiveStreamFactory
        children: []
        pos: 3043
        length: 20
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: public static final String AR = "ar";
          children: []
          pos: 3178
          length: 37
        - type: field_declaration
          fields:
            text: public static final String CPIO = "cpio";
          children: []
          pos: 3329
          length: 41
        - type: field_declaration
          fields:
            text: public static final String DUMP = "dump";
          children: []
          pos: 3489
          length: 41
        - type: field_declaration
          fields:
            text: public static final String JAR = "jar";
          children: []
          pos: 3643
          length: 39
        - type: field_declaration
          fields:
            text: public static final String TAR = "tar";
          children: []
          pos: 3795
          length: 39
        - type: field_declaration
          fields:
            text: public static final String ZIP = "zip";
          children: []
          pos: 3947
          length: 39
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createArchiveInputStream
              children: []
              pos: 4436
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final String archiverName
                children: []
                pos: 4474
                length: 25
              pos: 4410
              length: 1172
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: archiverName
                            children: []
                            pos: 4582
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 4598
                            length: 4
                        children: []
                        pos: 4582
                        length: 20
                    children: []
                    pos: 4581
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("Archivername must
                        not be null.");
                    children: []
                    pos: 4618
                    length: 69
                  pos: 4604
                  length: 93
                pos: 4578
                length: 119
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: in
                            children: []
                            pos: 4719
                            length: 2
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 4725
                            length: 4
                        children: []
                        pos: 4719
                        length: 10
                    children: []
                    pos: 4718
                    length: 12
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("InputStream must not
                        be null.");
                    children: []
                    pos: 4745
                    length: 68
                  pos: 4731
                  length: 92
                pos: 4715
                length: 108
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: AR.equalsIgnoreCase(archiverName)
                        children: []
                        pos: 4837
                        length: 33
                    children: []
                    pos: 4836
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return new ArArchiveInputStream(in);
                    children: []
                    pos: 4886
                    length: 36
                  pos: 4872
                  length: 60
                pos: 4833
                length: 99
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: ZIP.equalsIgnoreCase(archiverName)
                        children: []
                        pos: 4945
                        length: 34
                    children: []
                    pos: 4944
                    length: 36
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return new ZipArchiveInputStream(in);
                    children: []
                    pos: 4995
                    length: 37
                  pos: 4981
                  length: 61
                pos: 4941
                length: 101
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: TAR.equalsIgnoreCase(archiverName)
                        children: []
                        pos: 5055
                        length: 34
                    children: []
                    pos: 5054
                    length: 36
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return new TarArchiveInputStream(in);
                    children: []
                    pos: 5105
                    length: 37
                  pos: 5091
                  length: 61
                pos: 5051
                length: 101
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: JAR.equalsIgnoreCase(archiverName)
                        children: []
                        pos: 5165
                        length: 34
                    children: []
                    pos: 5164
                    length: 36
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return new JarArchiveInputStream(in);
                    children: []
                    pos: 5215
                    length: 37
                  pos: 5201
                  length: 61
                pos: 5161
                length: 101
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: CPIO.equalsIgnoreCase(archiverName)
                        children: []
                        pos: 5275
                        length: 35
                    children: []
                    pos: 5274
                    length: 37
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return new CpioArchiveInputStream(in);
                    children: []
                    pos: 5326
                    length: 38
                  pos: 5312
                  length: 62
                pos: 5271
                length: 103
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: DUMP.equalsIgnoreCase(archiverName)
                        children: []
                        pos: 5387
                        length: 35
                    children: []
                    pos: 5386
                    length: 37
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return new DumpArchiveInputStream(in);
                    children: []
                    pos: 5438
                    length: 38
                  pos: 5424
                  length: 62
                pos: 5383
                length: 103
              - type: throw_statement
                fields:
                  text: 'throw new ArchiveException("Archiver: " + archiverName +
                    " not found.");'
                children: []
                pos: 5504
                length: 72
              pos: 4559
              length: 1023
          children: []
          pos: 4410
          length: 1172
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createArchiveOutputStream
              children: []
              pos: 6029
              length: 25
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final String archiverName
                children: []
                pos: 6068
                length: 25
              pos: 6002
              length: 1049
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: archiverName
                            children: []
                            pos: 6169
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 6185
                            length: 4
                        children: []
                        pos: 6169
                        length: 20
                    children: []
                    pos: 6168
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("Archivername must
                        not be null.");
                    children: []
                    pos: 6205
                    length: 69
                  pos: 6191
                  length: 93
                pos: 6165
                length: 119
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: out
                            children: []
                            pos: 6297
                            length: 3
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 6304
                            length: 4
                        children: []
                        pos: 6297
                        length: 11
                    children: []
                    pos: 6296
                    length: 13
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("OutputStream must
                        not be null.");
                    children: []
                    pos: 6324
                    length: 69
                  pos: 6310
                  length: 93
                pos: 6293
                length: 110
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: AR.equalsIgnoreCase(archiverName)
                        children: []
                        pos: 6417
                        length: 33
                    children: []
                    pos: 6416
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return new ArArchiveOutputStream(out);
                    children: []
                    pos: 6466
                    length: 38
                  pos: 6452
                  length: 62
                pos: 6413
                length: 101
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: ZIP.equalsIgnoreCase(archiverName)
                        children: []
                        pos: 6527
                        length: 34
                    children: []
                    pos: 6526
                    length: 36
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return new ZipArchiveOutputStream(out);
                    children: []
                    pos: 6577
                    length: 39
                  pos: 6563
                  length: 63
                pos: 6523
                length: 103
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: TAR.equalsIgnoreCase(archiverName)
                        children: []
                        pos: 6639
                        length: 34
                    children: []
                    pos: 6638
                    length: 36
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return new TarArchiveOutputStream(out);
                    children: []
                    pos: 6689
                    length: 39
                  pos: 6675
                  length: 63
                pos: 6635
                length: 103
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: JAR.equalsIgnoreCase(archiverName)
                        children: []
                        pos: 6751
                        length: 34
                    children: []
                    pos: 6750
                    length: 36
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return new JarArchiveOutputStream(out);
                    children: []
                    pos: 6801
                    length: 39
                  pos: 6787
                  length: 63
                pos: 6747
                length: 103
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: CPIO.equalsIgnoreCase(archiverName)
                        children: []
                        pos: 6863
                        length: 35
                    children: []
                    pos: 6862
                    length: 37
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return new CpioArchiveOutputStream(out);
                    children: []
                    pos: 6914
                    length: 40
                  pos: 6900
                  length: 64
                pos: 6859
                length: 105
              - type: throw_statement
                fields:
                  text: 'throw new ArchiveException("Archiver: " + archiverName +
                    " not found.");'
                children: []
                pos: 6973
                length: 72
              pos: 6155
              length: 896
          children: []
          pos: 6002
          length: 1049
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createArchiveInputStream
              children: []
              pos: 7541
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final InputStream in
                children: []
                pos: 7566
                length: 20
              pos: 7515
              length: 2615
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: in
                            children: []
                            pos: 7638
                            length: 2
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 7644
                            length: 4
                        children: []
                        pos: 7638
                        length: 10
                    children: []
                    pos: 7637
                    length: 12
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("Stream must not be
                        null.");
                    children: []
                    pos: 7664
                    length: 63
                  pos: 7650
                  length: 87
                pos: 7634
                length: 103
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!in.markSupported()"
                        children: []
                        pos: 7751
                        length: 19
                    children: []
                    pos: 7750
                    length: 21
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("Mark is not supported.");
                    children: []
                    pos: 7786
                    length: 61
                  pos: 7772
                  length: 85
                pos: 7747
                length: 110
              - type: local_variable_declaration
                fields:
                  text: final byte[] signature = new byte[12];
                children: []
                pos: 7867
                length: 38
              - type: expression_statement
                fields:
                  text: in.mark(signature.length);
                children: []
                pos: 7914
                length: 26
              - type: try_statement
                fields:
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: local_variable_declaration
                      fields:
                        text: int signatureLength = in.read(signature);
                      children: []
                      pos: 7967
                      length: 41
                    - type: expression_statement
                      fields:
                        text: in.reset();
                      children: []
                      pos: 8021
                      length: 11
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: method_invocation
                              fields:
                                text: ZipArchiveInputStream.matches(signature, signatureLength)
                              children: []
                              pos: 8049
                              length: 57
                          children: []
                          pos: 8048
                          length: 59
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: return_statement
                          fields:
                            text: return new ZipArchiveInputStream(in);
                          children: []
                          pos: 8126
                          length: 37
                        pos: 8108
                        length: 69
                      pos: 8045
                      length: 546
                    - type: local_variable_declaration
                      fields:
                        text: final byte[] dumpsig = new byte[32];
                      children: []
                      pos: 8671
                      length: 36
                    - type: expression_statement
                      fields:
                        text: in.mark(dumpsig.length);
                      children: []
                      pos: 8720
                      length: 24
                    - type: expression_statement
                      fields:
                        text: signatureLength = in.read(dumpsig);
                      children: []
                      pos: 8757
                      length: 35
                    - type: expression_statement
                      fields:
                        text: in.reset();
                      children: []
                      pos: 8805
                      length: 11
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: method_invocation
                              fields:
                                text: DumpArchiveInputStream.matches(dumpsig, signatureLength)
                              children: []
                              pos: 8833
                              length: 56
                          children: []
                          pos: 8832
                          length: 58
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: return_statement
                          fields:
                            text: return new DumpArchiveInputStream(in);
                          children: []
                          pos: 8909
                          length: 38
                        pos: 8891
                        length: 70
                      pos: 8829
                      length: 132
                    - type: local_variable_declaration
                      fields:
                        text: final byte[] tarheader = new byte[512];
                      children: []
                      pos: 9067
                      length: 39
                    - type: expression_statement
                      fields:
                        text: in.mark(tarheader.length);
                      children: []
                      pos: 9119
                      length: 26
                    - type: expression_statement
                      fields:
                        text: signatureLength = in.read(tarheader);
                      children: []
                      pos: 9158
                      length: 37
                    - type: expression_statement
                      fields:
                        text: in.reset();
                      children: []
                      pos: 9208
                      length: 11
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: method_invocation
                              fields:
                                text: TarArchiveInputStream.matches(tarheader, signatureLength)
                              children: []
                              pos: 9236
                              length: 57
                          children: []
                          pos: 9235
                          length: 59
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: return_statement
                          fields:
                            text: return new TarArchiveInputStream(in);
                          children: []
                          pos: 9313
                          length: 37
                        pos: 9295
                        length: 69
                      pos: 9232
                      length: 132
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: greater_or_equals
                              fields:
                                left:
                                  type: identifier
                                  fields:
                                    text: signatureLength
                                  children: []
                                  pos: 9436
                                  length: 15
                                right:
                                  type: decimal_integer_literal
                                  fields:
                                    text: '512'
                                  children: []
                                  pos: 9455
                                  length: 3
                              children: []
                              pos: 9436
                              length: 22
                          children: []
                          pos: 9435
                          length: 24
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: try_statement
                          fields:
                            body:
                              type: block
                              fields: {}
                              children:
                              - type: local_variable_declaration
                                fields:
                                  text: TarArchiveInputStream tais = new TarArchiveInputStream(new
                                    ByteArrayInputStream(tarheader));
                                children: []
                                pos: 9496
                                length: 92
                              - type: expression_statement
                                fields:
                                  text: tais.getNextEntry();
                                children: []
                                pos: 9605
                                length: 20
                              - type: return_statement
                                fields:
                                  text: return new TarArchiveInputStream(in);
                                children: []
                                pos: 9642
                                length: 37
                              pos: 9478
                              length: 215
                            excepts:
                              type: excepts
                              fields: {}
                              children:
                              - type: catch_clause
                                fields:
                                  text: |-
                                    catch (Exception e) { // NOPMD
                                                    // can generate IllegalArgumentException as well as IOException
                                                    // autodetection, simply not a TAR
                                                    // ignored
                                                }
                                children: []
                                pos: 9694
                                length: 202
                              pos: 9474
                              length: 422
                          children: []
                          pos: 9474
                          length: 422
                        pos: 9460
                        length: 450
                      pos: 9432
                      length: 478
                    pos: 7953
                    length: 1967
                  excepts:
                    type: excepts
                    fields: {}
                    children:
                    - type: catch_clause
                      fields:
                        text: |-
                          catch (IOException e) {
                                      throw new ArchiveException("Could not use reset and mark operations.", e);
                                  }
                      children: []
                      pos: 9921
                      length: 120
                    pos: 7949
                    length: 2092
                children: []
                pos: 7949
                length: 2092
              - type: throw_statement
                fields:
                  text: throw new ArchiveException("No Archiver found for the stream
                    signature");
                children: []
                pos: 10051
                length: 73
              pos: 7624
              length: 2506
          children: []
          pos: 7515
          length: 2615
        pos: 3030
        length: 7102
    children: []
    pos: 3030
    length: 7102
  pos: 0
  length: 10133
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: ArchiveStreamFactory
        children: []
        pos: 3043
        length: 20
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: public static final String AR = "ar";
          children: []
          pos: 3178
          length: 37
        - type: field_declaration
          fields:
            text: public static final String CPIO = "cpio";
          children: []
          pos: 3329
          length: 41
        - type: field_declaration
          fields:
            text: public static final String DUMP = "dump";
          children: []
          pos: 3489
          length: 41
        - type: field_declaration
          fields:
            text: public static final String JAR = "jar";
          children: []
          pos: 3643
          length: 39
        - type: field_declaration
          fields:
            text: public static final String TAR = "tar";
          children: []
          pos: 3795
          length: 39
        - type: field_declaration
          fields:
            text: public static final String ZIP = "zip";
          children: []
          pos: 3947
          length: 39
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createArchiveInputStream
              children: []
              pos: 4436
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final String archiverName
                children: []
                pos: 4474
                length: 25
              pos: 4410
              length: 1172
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: archiverName
                            children: []
                            pos: 4582
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 4598
                            length: 4
                        children: []
                        pos: 4582
                        length: 20
                    children: []
                    pos: 4581
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("Archivername must
                        not be null.");
                    children: []
                    pos: 4618
                    length: 69
                  pos: 4604
                  length: 93
                pos: 4578
                length: 119
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: in
                            children: []
                            pos: 4719
                            length: 2
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 4725
                            length: 4
                        children: []
                        pos: 4719
                        length: 10
                    children: []
                    pos: 4718
                    length: 12
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("InputStream must not
                        be null.");
                    children: []
                    pos: 4745
                    length: 68
                  pos: 4731
                  length: 92
                pos: 4715
                length: 108
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: AR.equalsIgnoreCase(archiverName)
                        children: []
                        pos: 4837
                        length: 33
                    children: []
                    pos: 4836
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return new ArArchiveInputStream(in);
                    children: []
                    pos: 4886
                    length: 36
                  pos: 4872
                  length: 60
                pos: 4833
                length: 99
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: ZIP.equalsIgnoreCase(archiverName)
                        children: []
                        pos: 4945
                        length: 34
                    children: []
                    pos: 4944
                    length: 36
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return new ZipArchiveInputStream(in);
                    children: []
                    pos: 4995
                    length: 37
                  pos: 4981
                  length: 61
                pos: 4941
                length: 101
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: TAR.equalsIgnoreCase(archiverName)
                        children: []
                        pos: 5055
                        length: 34
                    children: []
                    pos: 5054
                    length: 36
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return new TarArchiveInputStream(in);
                    children: []
                    pos: 5105
                    length: 37
                  pos: 5091
                  length: 61
                pos: 5051
                length: 101
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: JAR.equalsIgnoreCase(archiverName)
                        children: []
                        pos: 5165
                        length: 34
                    children: []
                    pos: 5164
                    length: 36
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return new JarArchiveInputStream(in);
                    children: []
                    pos: 5215
                    length: 37
                  pos: 5201
                  length: 61
                pos: 5161
                length: 101
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: CPIO.equalsIgnoreCase(archiverName)
                        children: []
                        pos: 5275
                        length: 35
                    children: []
                    pos: 5274
                    length: 37
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return new CpioArchiveInputStream(in);
                    children: []
                    pos: 5326
                    length: 38
                  pos: 5312
                  length: 62
                pos: 5271
                length: 103
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: DUMP.equalsIgnoreCase(archiverName)
                        children: []
                        pos: 5387
                        length: 35
                    children: []
                    pos: 5386
                    length: 37
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return new DumpArchiveInputStream(in);
                    children: []
                    pos: 5438
                    length: 38
                  pos: 5424
                  length: 62
                pos: 5383
                length: 103
              - type: throw_statement
                fields:
                  text: 'throw new ArchiveException("Archiver: " + archiverName +
                    " not found.");'
                children: []
                pos: 5504
                length: 72
              pos: 4559
              length: 1023
          children: []
          pos: 4410
          length: 1172
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createArchiveOutputStream
              children: []
              pos: 6029
              length: 25
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final String archiverName
                children: []
                pos: 6068
                length: 25
              pos: 6002
              length: 1049
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: archiverName
                            children: []
                            pos: 6169
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 6185
                            length: 4
                        children: []
                        pos: 6169
                        length: 20
                    children: []
                    pos: 6168
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("Archivername must
                        not be null.");
                    children: []
                    pos: 6205
                    length: 69
                  pos: 6191
                  length: 93
                pos: 6165
                length: 119
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: out
                            children: []
                            pos: 6297
                            length: 3
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 6304
                            length: 4
                        children: []
                        pos: 6297
                        length: 11
                    children: []
                    pos: 6296
                    length: 13
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("OutputStream must
                        not be null.");
                    children: []
                    pos: 6324
                    length: 69
                  pos: 6310
                  length: 93
                pos: 6293
                length: 110
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: AR.equalsIgnoreCase(archiverName)
                        children: []
                        pos: 6417
                        length: 33
                    children: []
                    pos: 6416
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return new ArArchiveOutputStream(out);
                    children: []
                    pos: 6466
                    length: 38
                  pos: 6452
                  length: 62
                pos: 6413
                length: 101
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: ZIP.equalsIgnoreCase(archiverName)
                        children: []
                        pos: 6527
                        length: 34
                    children: []
                    pos: 6526
                    length: 36
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return new ZipArchiveOutputStream(out);
                    children: []
                    pos: 6577
                    length: 39
                  pos: 6563
                  length: 63
                pos: 6523
                length: 103
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: TAR.equalsIgnoreCase(archiverName)
                        children: []
                        pos: 6639
                        length: 34
                    children: []
                    pos: 6638
                    length: 36
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return new TarArchiveOutputStream(out);
                    children: []
                    pos: 6689
                    length: 39
                  pos: 6675
                  length: 63
                pos: 6635
                length: 103
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: JAR.equalsIgnoreCase(archiverName)
                        children: []
                        pos: 6751
                        length: 34
                    children: []
                    pos: 6750
                    length: 36
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return new JarArchiveOutputStream(out);
                    children: []
                    pos: 6801
                    length: 39
                  pos: 6787
                  length: 63
                pos: 6747
                length: 103
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: CPIO.equalsIgnoreCase(archiverName)
                        children: []
                        pos: 6863
                        length: 35
                    children: []
                    pos: 6862
                    length: 37
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return new CpioArchiveOutputStream(out);
                    children: []
                    pos: 6914
                    length: 40
                  pos: 6900
                  length: 64
                pos: 6859
                length: 105
              - type: throw_statement
                fields:
                  text: 'throw new ArchiveException("Archiver: " + archiverName +
                    " not found.");'
                children: []
                pos: 6973
                length: 72
              pos: 6155
              length: 896
          children: []
          pos: 6002
          length: 1049
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createArchiveInputStream
              children: []
              pos: 7541
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final InputStream in
                children: []
                pos: 7566
                length: 20
              pos: 7515
              length: 2559
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: in
                            children: []
                            pos: 7638
                            length: 2
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 7644
                            length: 4
                        children: []
                        pos: 7638
                        length: 10
                    children: []
                    pos: 7637
                    length: 12
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("Stream must not be
                        null.");
                    children: []
                    pos: 7664
                    length: 63
                  pos: 7650
                  length: 87
                pos: 7634
                length: 103
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!in.markSupported()"
                        children: []
                        pos: 7751
                        length: 19
                    children: []
                    pos: 7750
                    length: 21
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("Mark is not supported.");
                    children: []
                    pos: 7786
                    length: 61
                  pos: 7772
                  length: 85
                pos: 7747
                length: 110
              - type: local_variable_declaration
                fields:
                  text: final byte[] signature = new byte[12];
                children: []
                pos: 7867
                length: 38
              - type: expression_statement
                fields:
                  text: in.mark(signature.length);
                children: []
                pos: 7914
                length: 26
              - type: try_statement
                fields:
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: local_variable_declaration
                      fields:
                        text: int signatureLength = in.read(signature);
                      children: []
                      pos: 7967
                      length: 41
                    - type: expression_statement
                      fields:
                        text: in.reset();
                      children: []
                      pos: 8021
                      length: 11
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: method_invocation
                              fields:
                                text: ZipArchiveInputStream.matches(signature, signatureLength)
                              children: []
                              pos: 8049
                              length: 57
                          children: []
                          pos: 8048
                          length: 59
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: return_statement
                          fields:
                            text: return new ZipArchiveInputStream(in);
                          children: []
                          pos: 8126
                          length: 37
                        pos: 8108
                        length: 69
                      pos: 8045
                      length: 546
                    - type: local_variable_declaration
                      fields:
                        text: final byte[] dumpsig = new byte[32];
                      children: []
                      pos: 8671
                      length: 36
                    - type: expression_statement
                      fields:
                        text: in.mark(dumpsig.length);
                      children: []
                      pos: 8720
                      length: 24
                    - type: expression_statement
                      fields:
                        text: signatureLength = in.read(dumpsig);
                      children: []
                      pos: 8757
                      length: 35
                    - type: expression_statement
                      fields:
                        text: in.reset();
                      children: []
                      pos: 8805
                      length: 11
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: method_invocation
                              fields:
                                text: DumpArchiveInputStream.matches(dumpsig, signatureLength)
                              children: []
                              pos: 8833
                              length: 56
                          children: []
                          pos: 8832
                          length: 58
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: return_statement
                          fields:
                            text: return new DumpArchiveInputStream(in);
                          children: []
                          pos: 8909
                          length: 38
                        pos: 8891
                        length: 70
                      pos: 8829
                      length: 132
                    - type: local_variable_declaration
                      fields:
                        text: final byte[] tarheader = new byte[512];
                      children: []
                      pos: 9067
                      length: 39
                    - type: expression_statement
                      fields:
                        text: in.mark(tarheader.length);
                      children: []
                      pos: 9119
                      length: 26
                    - type: expression_statement
                      fields:
                        text: signatureLength = in.read(tarheader);
                      children: []
                      pos: 9158
                      length: 37
                    - type: expression_statement
                      fields:
                        text: in.reset();
                      children: []
                      pos: 9208
                      length: 11
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: method_invocation
                              fields:
                                text: TarArchiveInputStream.matches(tarheader, signatureLength)
                              children: []
                              pos: 9236
                              length: 57
                          children: []
                          pos: 9235
                          length: 59
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: return_statement
                          fields:
                            text: return new TarArchiveInputStream(in);
                          children: []
                          pos: 9313
                          length: 37
                        pos: 9295
                        length: 69
                      pos: 9232
                      length: 132
                    - type: try_statement
                      fields:
                        body:
                          type: block
                          fields: {}
                          children:
                          - type: local_variable_declaration
                            fields:
                              text: TarArchiveInputStream tais = new TarArchiveInputStream(new
                                ByteArrayInputStream(tarheader));
                            children: []
                            pos: 9454
                            length: 92
                          - type: expression_statement
                            fields:
                              text: tais.getNextEntry();
                            children: []
                            pos: 9563
                            length: 20
                          - type: return_statement
                            fields:
                              text: return new TarArchiveInputStream(in);
                            children: []
                            pos: 9600
                            length: 37
                          pos: 9436
                          length: 215
                        excepts:
                          type: excepts
                          fields: {}
                          children:
                          - type: catch_clause
                            fields:
                              text: |-
                                catch (Exception e) { // NOPMD
                                                // can generate IllegalArgumentException as well as IOException
                                                // autodetection, simply not a TAR
                                                // ignored
                                            }
                            children: []
                            pos: 9652
                            length: 202
                          pos: 9432
                          length: 422
                      children: []
                      pos: 9432
                      length: 422
                    pos: 7953
                    length: 1911
                  excepts:
                    type: excepts
                    fields: {}
                    children:
                    - type: catch_clause
                      fields:
                        text: |-
                          catch (IOException e) {
                                      throw new ArchiveException("Could not use reset and mark operations.", e);
                                  }
                      children: []
                      pos: 9865
                      length: 120
                    pos: 7949
                    length: 2036
                children: []
                pos: 7949
                length: 2036
              - type: throw_statement
                fields:
                  text: throw new ArchiveException("No Archiver found for the stream
                    signature");
                children: []
                pos: 9995
                length: 73
              pos: 7624
              length: 2450
          children: []
          pos: 7515
          length: 2559
        pos: 3030
        length: 7046
    children: []
    pos: 3030
    length: 7046
  pos: 0
  length: 10077
text_diff: |
  --- before
  +++ after
  @@ -237,7 +237,6 @@
                   return new TarArchiveInputStream(in);
               }
               // COMPRESS-117 - improve auto-recognition
  -            if (signatureLength >= 512) {
               try {
                   TarArchiveInputStream tais = new TarArchiveInputStream(new ByteArrayInputStream(tarheader));
                   tais.getNextEntry();
  @@ -247,7 +246,6 @@
                   // autodetection, simply not a TAR
                   // ignored
               }
  -            }
           } catch (IOException e) {
               throw new ArchiveException("Could not use reset and mark operations.", e);
           }
tree_diff: |+
  New cluster:
  MOVE from method_declaration [7515,10130]
  ------------
  ===
  move-tree
  ---
  block [7953,9920]
      local_variable_declaration: int signatureLength = in.read(signature); [7967,8008]
      expression_statement: in.reset(); [8021,8032]
      if_statement [8045,8591]
          parenthesized_expression [8048,8107]
              method_invocation: ZipArchiveInputStream.matches(signature, signatureLength) [8049,8106]
          block [8108,8177]
              return_statement: return new ZipArchiveInputStream(in); [8126,8163]
      local_variable_declaration: final byte[] dumpsig = new byte[32]; [8671,8707]
      expression_statement: in.mark(dumpsig.length); [8720,8744]
      expression_statement: signatureLength = in.read(dumpsig); [8757,8792]
      expression_statement: in.reset(); [8805,8816]
      if_statement [8829,8961]
          parenthesized_expression [8832,8890]
              method_invocation: DumpArchiveInputStream.matches(dumpsig, signatureLength) [8833,8889]
          block [8891,8961]
              return_statement: return new DumpArchiveInputStream(in); [8909,8947]
      local_variable_declaration: final byte[] tarheader = new byte[512]; [9067,9106]
      expression_statement: in.mark(tarheader.length); [9119,9145]
      expression_statement: signatureLength = in.read(tarheader); [9158,9195]
      expression_statement: in.reset(); [9208,9219]
      if_statement [9232,9364]
          parenthesized_expression [9235,9294]
              method_invocation: TarArchiveInputStream.matches(tarheader, signatureLength) [9236,9293]
          block [9295,9364]
              return_statement: return new TarArchiveInputStream(in); [9313,9350]
      if_statement [9432,9910]
          parenthesized_expression [9435,9459]
              greater_or_equals [9436,9458]
                  identifier: signatureLength [9436,9451]
                  decimal_integer_literal: 512 [9455,9458]
          block [9460,9910]
              try_statement [9474,9896]
                  block [9478,9693]
                      local_variable_declaration: TarArchiveInputStream tais = new TarArchiveInputStream(new ByteArrayInputStream(tarheader)); [9496,9588]
                      expression_statement: tais.getNextEntry(); [9605,9625]
                      return_statement: return new TarArchiveInputStream(in); [9642,9679]
                  excepts [9474,9896]
                      catch_clause: catch (Exception e) { // NOPMD
                  // can generate IllegalArgumentException as well as IOException
                  // autodetection, simply not a TAR
                  // ignored
              } [9694,9896]
  to
  method_declaration [7515,10130]
  at 2

  New cluster:
  MOVE from block [7953,9920]
  ------------
  ===
  move-tree
  ---
  if_statement [7747,7857]
      parenthesized_expression [7750,7771]
          unary_expression: !in.markSupported() [7751,7770]
      block [7772,7857]
          throw_statement: throw new IllegalArgumentException("Mark is not supported."); [7786,7847]
  to
  block [7953,9920]
  at 1
  ===
  move-tree
  ---
  try_statement [7949,10041]
      block [7953,9920]
          local_variable_declaration: int signatureLength = in.read(signature); [7967,8008]
          expression_statement: in.reset(); [8021,8032]
          if_statement [8045,8591]
              parenthesized_expression [8048,8107]
                  method_invocation: ZipArchiveInputStream.matches(signature, signatureLength) [8049,8106]
              block [8108,8177]
                  return_statement: return new ZipArchiveInputStream(in); [8126,8163]
          local_variable_declaration: final byte[] dumpsig = new byte[32]; [8671,8707]
          expression_statement: in.mark(dumpsig.length); [8720,8744]
          expression_statement: signatureLength = in.read(dumpsig); [8757,8792]
          expression_statement: in.reset(); [8805,8816]
          if_statement [8829,8961]
              parenthesized_expression [8832,8890]
                  method_invocation: DumpArchiveInputStream.matches(dumpsig, signatureLength) [8833,8889]
              block [8891,8961]
                  return_statement: return new DumpArchiveInputStream(in); [8909,8947]
          local_variable_declaration: final byte[] tarheader = new byte[512]; [9067,9106]
          expression_statement: in.mark(tarheader.length); [9119,9145]
          expression_statement: signatureLength = in.read(tarheader); [9158,9195]
          expression_statement: in.reset(); [9208,9219]
          if_statement [9232,9364]
              parenthesized_expression [9235,9294]
                  method_invocation: TarArchiveInputStream.matches(tarheader, signatureLength) [9236,9293]
              block [9295,9364]
                  return_statement: return new TarArchiveInputStream(in); [9313,9350]
          if_statement [9432,9910]
              parenthesized_expression [9435,9459]
                  greater_or_equals [9436,9458]
                      identifier: signatureLength [9436,9451]
                      decimal_integer_literal: 512 [9455,9458]
              block [9460,9910]
                  try_statement [9474,9896]
                      block [9478,9693]
                          local_variable_declaration: TarArchiveInputStream tais = new TarArchiveInputStream(new ByteArrayInputStream(tarheader)); [9496,9588]
                          expression_statement: tais.getNextEntry(); [9605,9625]
                          return_statement: return new TarArchiveInputStream(in); [9642,9679]
                      excepts [9474,9896]
                          catch_clause: catch (Exception e) { // NOPMD
                  // can generate IllegalArgumentException as well as IOException
                  // autodetection, simply not a TAR
                  // ignored
              } [9694,9896]
      excepts [7949,10041]
          catch_clause: catch (IOException e) {
              throw new ArchiveException("Could not use reset and mark operations.", e);
          } [9921,10041]
  to
  block [7953,9920]
  at 4
  ===
  move-tree
  ---
  if_statement [7634,7737]
      parenthesized_expression [7637,7649]
          equals [7638,7648]
              identifier: in [7638,7640]
              null_literal [7644,7648]
      block [7650,7737]
          throw_statement: throw new IllegalArgumentException("Stream must not be null."); [7664,7727]
  to
  block [7953,9920]
  at 0

  New cluster:
  UPDATE from int signatureLength = in.read(signature); to final byte[] signature = new byte[12];
  ------------
  ===
  update-node
  ---
  local_variable_declaration: int signatureLength = in.read(signature); [7967,8008]
  replace int signatureLength = in.read(signature); by final byte[] signature = new byte[12];

  New cluster:
  UPDATE from in.reset(); to in.mark(signature.length);
  ------------
  ===
  update-node
  ---
  expression_statement: in.reset(); [8021,8032]
  replace in.reset(); by in.mark(signature.length);

  New cluster:
  ===
  insert-node
  ---
  throw_statement: throw new ArchiveException("No Archiver found for the stream signature"); [9995,10068]
  to
  block [7953,9920]
  at 5
  ------------
  ===
  insert-node
  ---
  throw_statement: throw new ArchiveException("No Archiver found for the stream signature"); [9995,10068]
  to
  block [7953,9920]
  at 5

  New cluster:
  MOVE from try_statement [7949,10041]
  ------------
  ===
  move-tree
  ---
  block [9460,9910]
      try_statement [9474,9896]
          block [9478,9693]
              local_variable_declaration: TarArchiveInputStream tais = new TarArchiveInputStream(new ByteArrayInputStream(tarheader)); [9496,9588]
              expression_statement: tais.getNextEntry(); [9605,9625]
              return_statement: return new TarArchiveInputStream(in); [9642,9679]
          excepts [9474,9896]
              catch_clause: catch (Exception e) { // NOPMD
                  // can generate IllegalArgumentException as well as IOException
                  // autodetection, simply not a TAR
                  // ignored
              } [9694,9896]
  to
  try_statement [7949,10041]
  at 0

  New cluster:
  ===
  insert-node
  ---
  local_variable_declaration: int signatureLength = in.read(signature); [7967,8008]
  to
  block [9460,9910]
  at 0
  ------------
  ===
  insert-node
  ---
  local_variable_declaration: int signatureLength = in.read(signature); [7967,8008]
  to
  block [9460,9910]
  at 0

  New cluster:
  ===
  insert-node
  ---
  expression_statement: in.reset(); [8021,8032]
  to
  block [9460,9910]
  at 1
  ------------
  ===
  insert-node
  ---
  expression_statement: in.reset(); [8021,8032]
  to
  block [9460,9910]
  at 1

  New cluster:
  MOVE from block [9460,9910]
  ------------
  ===
  move-tree
  ---
  if_statement [9232,9364]
      parenthesized_expression [9235,9294]
          method_invocation: TarArchiveInputStream.matches(tarheader, signatureLength) [9236,9293]
      block [9295,9364]
          return_statement: return new TarArchiveInputStream(in); [9313,9350]
  to
  block [9460,9910]
  at 12
  ===
  move-tree
  ---
  if_statement [8829,8961]
      parenthesized_expression [8832,8890]
          method_invocation: DumpArchiveInputStream.matches(dumpsig, signatureLength) [8833,8889]
      block [8891,8961]
          return_statement: return new DumpArchiveInputStream(in); [8909,8947]
  to
  block [9460,9910]
  at 7
  ===
  move-tree
  ---
  if_statement [8045,8591]
      parenthesized_expression [8048,8107]
          method_invocation: ZipArchiveInputStream.matches(signature, signatureLength) [8049,8106]
      block [8108,8177]
          return_statement: return new ZipArchiveInputStream(in); [8126,8163]
  to
  block [9460,9910]
  at 2

  New cluster:
  ===
  insert-node
  ---
  local_variable_declaration: final byte[] dumpsig = new byte[32]; [8671,8707]
  to
  block [9460,9910]
  at 3
  ------------
  ===
  insert-node
  ---
  local_variable_declaration: final byte[] dumpsig = new byte[32]; [8671,8707]
  to
  block [9460,9910]
  at 3

  New cluster:
  ===
  insert-node
  ---
  expression_statement: in.mark(dumpsig.length); [8720,8744]
  to
  block [9460,9910]
  at 4
  ------------
  ===
  insert-node
  ---
  expression_statement: in.mark(dumpsig.length); [8720,8744]
  to
  block [9460,9910]
  at 4

  New cluster:
  ===
  insert-node
  ---
  expression_statement: signatureLength = in.read(dumpsig); [8757,8792]
  to
  block [9460,9910]
  at 5
  ------------
  ===
  insert-node
  ---
  expression_statement: signatureLength = in.read(dumpsig); [8757,8792]
  to
  block [9460,9910]
  at 5

  New cluster:
  ===
  insert-node
  ---
  expression_statement: in.reset(); [8805,8816]
  to
  block [9460,9910]
  at 6
  ------------
  ===
  insert-node
  ---
  expression_statement: in.reset(); [8805,8816]
  to
  block [9460,9910]
  at 6

  New cluster:
  ===
  insert-node
  ---
  local_variable_declaration: final byte[] tarheader = new byte[512]; [9067,9106]
  to
  block [9460,9910]
  at 8
  ------------
  ===
  insert-node
  ---
  local_variable_declaration: final byte[] tarheader = new byte[512]; [9067,9106]
  to
  block [9460,9910]
  at 8

  New cluster:
  ===
  insert-node
  ---
  expression_statement: in.mark(tarheader.length); [9119,9145]
  to
  block [9460,9910]
  at 9
  ------------
  ===
  insert-node
  ---
  expression_statement: in.mark(tarheader.length); [9119,9145]
  to
  block [9460,9910]
  at 9

  New cluster:
  ===
  insert-node
  ---
  expression_statement: signatureLength = in.read(tarheader); [9158,9195]
  to
  block [9460,9910]
  at 10
  ------------
  ===
  insert-node
  ---
  expression_statement: signatureLength = in.read(tarheader); [9158,9195]
  to
  block [9460,9910]
  at 10

  New cluster:
  ===
  insert-node
  ---
  expression_statement: in.reset(); [9208,9219]
  to
  block [9460,9910]
  at 11
  ------------
  ===
  insert-node
  ---
  expression_statement: in.reset(); [9208,9219]
  to
  block [9460,9910]
  at 11

  New cluster:
  ===
  delete-node
  ---
  local_variable_declaration: final byte[] dumpsig = new byte[32]; [8671,8707]
  ===
  ------------
  ===
  delete-node
  ---
  local_variable_declaration: final byte[] dumpsig = new byte[32]; [8671,8707]
  ===

  New cluster:
  ===
  delete-node
  ---
  expression_statement: in.mark(dumpsig.length); [8720,8744]
  ===
  ------------
  ===
  delete-node
  ---
  expression_statement: in.mark(dumpsig.length); [8720,8744]
  ===

  New cluster:
  ===
  delete-node
  ---
  expression_statement: signatureLength = in.read(dumpsig); [8757,8792]
  ===
  ------------
  ===
  delete-node
  ---
  expression_statement: signatureLength = in.read(dumpsig); [8757,8792]
  ===

  New cluster:
  ===
  delete-node
  ---
  expression_statement: in.reset(); [8805,8816]
  ===
  ------------
  ===
  delete-node
  ---
  expression_statement: in.reset(); [8805,8816]
  ===

  New cluster:
  ===
  delete-node
  ---
  local_variable_declaration: final byte[] tarheader = new byte[512]; [9067,9106]
  ===
  ------------
  ===
  delete-node
  ---
  local_variable_declaration: final byte[] tarheader = new byte[512]; [9067,9106]
  ===

  New cluster:
  ===
  delete-node
  ---
  expression_statement: in.mark(tarheader.length); [9119,9145]
  ===
  ------------
  ===
  delete-node
  ---
  expression_statement: in.mark(tarheader.length); [9119,9145]
  ===

  New cluster:
  ===
  delete-node
  ---
  expression_statement: signatureLength = in.read(tarheader); [9158,9195]
  ===
  ------------
  ===
  delete-node
  ---
  expression_statement: signatureLength = in.read(tarheader); [9158,9195]
  ===

  New cluster:
  ===
  delete-node
  ---
  expression_statement: in.reset(); [9208,9219]
  ===
  ------------
  ===
  delete-node
  ---
  expression_statement: in.reset(); [9208,9219]
  ===

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  parenthesized_expression [9435,9459]
      greater_or_equals [9436,9458]
          identifier: signatureLength [9436,9451]
          decimal_integer_literal: 512 [9455,9458]

  New cluster:
  ===
  delete-node
  ---
  if_statement [9432,9910]
  ===
  ------------
  ===
  delete-node
  ---
  if_statement [9432,9910]
  ===

  New cluster:
  ===
  delete-node
  ---
  block [7624,10130]
  ===
  ------------
  ===
  delete-node
  ---
  local_variable_declaration: final byte[] signature = new byte[12]; [7867,7905]
  ===
  ===
  delete-node
  ---
  throw_statement: throw new ArchiveException("No Archiver found for the stream signature"); [10051,10124]
  ===
  ===
  delete-node
  ---
  expression_statement: in.mark(signature.length); [7914,7940]
  ===
  ===
  delete-node
  ---
  block [7624,10130]
  ===

...
