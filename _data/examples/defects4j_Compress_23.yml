---
language: java
text_diff: |
  --- before
  +++ after
  @@ -109,7 +109,7 @@
               byte propsByte = coder.properties[0];
               long dictSize = coder.properties[1];
               for (int i = 1; i < 4; i++) {
  -                dictSize |= (coder.properties[i + 1] & 0xffl) << (8 * i);
  +                dictSize |= (coder.properties[i + 1] << (8 * i));
               }
               if (dictSize > LZMAInputStream.DICT_SIZE_MAX) {
                   throw new IOException("Dictionary larger than 4GiB maximum size");
tree_diff: |+
  New cluster:
  UPDATE from for (int i = 1; i < 4; i++) {
                  dictSize |= (coder.properties[i + 1] & 0xffl) << (8 * i);
              } to for (int i = 1; i < 4; i++) {
                  dictSize |= (coder.properties[i + 1] << (8 * i));
              }
  ------------
  ===
  update-node
  ---
  for_statement: for (int i = 1; i < 4; i++) {
                  dictSize |= (coder.properties[i + 1] & 0xffl) << (8 * i);
              } [4349,4466]
  replace for (int i = 1; i < 4; i++) {
                  dictSize |= (coder.properties[i + 1] & 0xffl) << (8 * i);
              } by for (int i = 1; i < 4; i++) {
                  dictSize |= (coder.properties[i + 1] << (8 * i));
              }

...
