---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: ClassNameIdResolver
        children: []
        pos: 493
        length: 19
      body:
        type: class_body
        fields: {}
        children:
        - type: constructor_declaration
          fields:
            text: |-
              public ClassNameIdResolver(JavaType baseType, TypeFactory typeFactory) {
                      super(baseType, typeFactory);
                  }
          children: []
          pos: 550
          length: 116
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getMechanism
              children: []
              pos: 709
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 672
              length: 85
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return JsonTypeInfo.Id.CLASS;
                children: []
                pos: 726
                length: 29
              pos: 724
              length: 33
          children: []
          pos: 672
          length: 85
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: registerSubtype
              children: []
              pos: 775
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Class<?> type
                children: []
                pos: 791
                length: 13
              pos: 763
              length: 117
            body:
              type: block
              fields: {}
              children: []
              pos: 819
              length: 61
          children: []
          pos: 763
          length: 117
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: idFromValue
              children: []
              pos: 918
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Object value
                children: []
                pos: 930
                length: 12
              pos: 890
              length: 124
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return _idFrom(value, value.getClass(), _typeFactory);
                children: []
                pos: 954
                length: 54
              pos: 944
              length: 70
          children: []
          pos: 890
          length: 124
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: idFromValueAndType
              children: []
              pos: 1048
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Object value
                children: []
                pos: 1067
                length: 12
              pos: 1020
              length: 134
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return _idFrom(value, type, _typeFactory);
                children: []
                pos: 1106
                length: 42
              pos: 1096
              length: 58
          children: []
          pos: 1020
          length: 134
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: typeFromId
              children: []
              pos: 1190
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: DatabindContext context
                children: []
                pos: 1201
                length: 23
              pos: 1160
              length: 144
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return _typeFromId(id, context);
                children: []
                pos: 1266
                length: 32
              pos: 1256
              length: 48
          children: []
          pos: 1160
          length: 144
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: _typeFromId
              children: []
              pos: 1329
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: String id
                children: []
                pos: 1341
                length: 9
              pos: 1310
              length: 1995
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: TypeFactory tf = ctxt.getTypeFactory();
                children: []
                pos: 1620
                length: 39
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: greater_than
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: id.indexOf('<')
                            children: []
                            pos: 1672
                            length: 15
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 1690
                            length: 1
                        children: []
                        pos: 1672
                        length: 19
                    children: []
                    pos: 1671
                    length: 21
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JavaType t = tf.constructFromCanonical(id);
                    children: []
                    pos: 1993
                    length: 43
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: unary_expression
                            fields:
                              text: "!t.isTypeOrSubTypeOf(_baseType.getRawClass())"
                            children: []
                            pos: 2053
                            length: 45
                        children: []
                        pos: 2052
                        length: 47
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: throw_statement
                        fields:
                          text: |-
                            throw new IllegalArgumentException(String.format(
                                                    "Class %s not subtype of %s", t.getRawClass().getName(), _baseType));
                        children: []
                        pos: 2211
                        length: 143
                      pos: 2100
                      length: 268
                    pos: 2049
                    length: 319
                  - type: return_statement
                    fields:
                      text: return t;
                    children: []
                    pos: 2381
                    length: 9
                  pos: 1693
                  length: 707
                pos: 1668
                length: 732
              - type: local_variable_declaration
                fields:
                  text: Class<?> cls;
                children: []
                pos: 2409
                length: 13
              - type: try_statement
                fields:
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: expression_statement
                      fields:
                        text: cls =  tf.findClass(id);
                      children: []
                      pos: 2449
                      length: 24
                    pos: 2435
                    length: 48
                  excepts:
                    type: excepts
                    fields: {}
                    children:
                    - type: catch_clause
                      fields:
                        text: |-
                          catch (ClassNotFoundException e) {
                                      // 24-May-2016, tatu: Ok, this is pretty ugly, but we should always get
                                      //   DeserializationContext, just playing it safe
                                      if (ctxt instanceof DeserializationContext) {
                                          DeserializationContext dctxt = (DeserializationContext) ctxt;
                                          // First: we may have problem handlers that can deal with it?
                                          return dctxt.handleUnknownTypeId(_baseType, id, this, "no such class found");
                                      }
                                      // ... meaning that we really should never get here.
                                      return null;
                                  }
                      children: []
                      pos: 2484
                      length: 602
                    - type: catch_clause
                      fields:
                        text: |-
                          catch (Exception e) {
                                      throw new IllegalArgumentException("Invalid type id '"+id+"' (for id type 'Id.class'): "+e.getMessage(), e);
                                  }
                      children: []
                      pos: 3087
                      length: 152
                    pos: 2431
                    length: 808
                children: []
                pos: 2431
                length: 808
              - type: return_statement
                fields:
                  text: return tf.constructSpecializedType(_baseType, cls);
                children: []
                pos: 3248
                length: 51
              pos: 1397
              length: 1908
          children: []
          pos: 1310
          length: 1995
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: _idFrom
              children: []
              pos: 3510
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Object value
                children: []
                pos: 3518
                length: 12
              pos: 3487
              length: 3417
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: Enum.class.isAssignableFrom(cls)
                        children: []
                        pos: 3645
                        length: 32
                    children: []
                    pos: 3644
                    length: 34
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: unary_expression
                            fields:
                              text: "!cls.isEnum()"
                            children: []
                            pos: 3697
                            length: 13
                        children: []
                        pos: 3696
                        length: 15
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: cls = cls.getSuperclass();
                        children: []
                        pos: 3777
                        length: 26
                      pos: 3712
                      length: 105
                    pos: 3693
                    length: 124
                  pos: 3679
                  length: 148
                pos: 3641
                length: 186
              - type: local_variable_declaration
                fields:
                  text: String str = cls.getName();
                children: []
                pos: 3836
                length: 27
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: str.startsWith("java.util")
                        children: []
                        pos: 3876
                        length: 27
                    children: []
                    pos: 3875
                    length: 29
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: instanceof_expression
                            fields:
                              text: value instanceof EnumSet<?>
                            children: []
                            pos: 4293
                            length: 27
                        children: []
                        pos: 4292
                        length: 29
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: Class<?> enumClass = ClassUtil.findEnumType((EnumSet<?>)
                            value);
                        children: []
                        pos: 4372
                        length: 64
                      - type: expression_statement
                        fields:
                          text: str = typeFactory.constructCollectionType(EnumSet.class,
                            enumClass).toCanonical();
                        children: []
                        pos: 4545
                        length: 82
                      pos: 4322
                      length: 319
                    pos: 4289
                    length: 1406
                  pos: 3905
                  length: 1800
                pos: 3872
                length: 3006
              - type: return_statement
                fields:
                  text: return str;
                children: []
                pos: 6887
                length: 11
              pos: 3575
              length: 3329
          children: []
          pos: 3487
          length: 3417
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getDescForKnownTypeIds
              children: []
              pos: 6938
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6910
              length: 105
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return "class name used as type id";
                children: []
                pos: 6973
                length: 36
              pos: 6963
              length: 52
          children: []
          pos: 6910
          length: 105
        pos: 480
        length: 6537
    children: []
    pos: 480
    length: 6537
  pos: 0
  length: 7018
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: ClassNameIdResolver
        children: []
        pos: 493
        length: 19
      body:
        type: class_body
        fields: {}
        children:
        - type: constructor_declaration
          fields:
            text: |-
              public ClassNameIdResolver(JavaType baseType, TypeFactory typeFactory) {
                      super(baseType, typeFactory);
                  }
          children: []
          pos: 550
          length: 116
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getMechanism
              children: []
              pos: 709
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 672
              length: 85
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return JsonTypeInfo.Id.CLASS;
                children: []
                pos: 726
                length: 29
              pos: 724
              length: 33
          children: []
          pos: 672
          length: 85
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: registerSubtype
              children: []
              pos: 775
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Class<?> type
                children: []
                pos: 791
                length: 13
              pos: 763
              length: 117
            body:
              type: block
              fields: {}
              children: []
              pos: 819
              length: 61
          children: []
          pos: 763
          length: 117
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: idFromValue
              children: []
              pos: 918
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Object value
                children: []
                pos: 930
                length: 12
              pos: 890
              length: 124
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return _idFrom(value, value.getClass(), _typeFactory);
                children: []
                pos: 954
                length: 54
              pos: 944
              length: 70
          children: []
          pos: 890
          length: 124
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: idFromValueAndType
              children: []
              pos: 1048
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Object value
                children: []
                pos: 1067
                length: 12
              pos: 1020
              length: 134
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return _idFrom(value, type, _typeFactory);
                children: []
                pos: 1106
                length: 42
              pos: 1096
              length: 58
          children: []
          pos: 1020
          length: 134
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: typeFromId
              children: []
              pos: 1190
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: DatabindContext context
                children: []
                pos: 1201
                length: 23
              pos: 1160
              length: 144
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return _typeFromId(id, context);
                children: []
                pos: 1266
                length: 32
              pos: 1256
              length: 48
          children: []
          pos: 1160
          length: 144
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: _typeFromId
              children: []
              pos: 1329
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: String id
                children: []
                pos: 1341
                length: 9
              pos: 1310
              length: 1756
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: TypeFactory tf = ctxt.getTypeFactory();
                children: []
                pos: 1620
                length: 39
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: greater_than
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: id.indexOf('<')
                            children: []
                            pos: 1672
                            length: 15
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 1690
                            length: 1
                        children: []
                        pos: 1672
                        length: 19
                    children: []
                    pos: 1671
                    length: 21
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JavaType t = tf.constructFromCanonical(id);
                    children: []
                    pos: 1993
                    length: 43
                  - type: return_statement
                    fields:
                      text: return t;
                    children: []
                    pos: 2142
                    length: 9
                  pos: 1693
                  length: 468
                pos: 1668
                length: 493
              - type: local_variable_declaration
                fields:
                  text: Class<?> cls;
                children: []
                pos: 2170
                length: 13
              - type: try_statement
                fields:
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: expression_statement
                      fields:
                        text: cls =  tf.findClass(id);
                      children: []
                      pos: 2210
                      length: 24
                    pos: 2196
                    length: 48
                  excepts:
                    type: excepts
                    fields: {}
                    children:
                    - type: catch_clause
                      fields:
                        text: |-
                          catch (ClassNotFoundException e) {
                                      // 24-May-2016, tatu: Ok, this is pretty ugly, but we should always get
                                      //   DeserializationContext, just playing it safe
                                      if (ctxt instanceof DeserializationContext) {
                                          DeserializationContext dctxt = (DeserializationContext) ctxt;
                                          // First: we may have problem handlers that can deal with it?
                                          return dctxt.handleUnknownTypeId(_baseType, id, this, "no such class found");
                                      }
                                      // ... meaning that we really should never get here.
                                      return null;
                                  }
                      children: []
                      pos: 2245
                      length: 602
                    - type: catch_clause
                      fields:
                        text: |-
                          catch (Exception e) {
                                      throw new IllegalArgumentException("Invalid type id '"+id+"' (for id type 'Id.class'): "+e.getMessage(), e);
                                  }
                      children: []
                      pos: 2848
                      length: 152
                    pos: 2192
                    length: 808
                children: []
                pos: 2192
                length: 808
              - type: return_statement
                fields:
                  text: return tf.constructSpecializedType(_baseType, cls);
                children: []
                pos: 3009
                length: 51
              pos: 1397
              length: 1669
          children: []
          pos: 1310
          length: 1756
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: _idFrom
              children: []
              pos: 3271
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Object value
                children: []
                pos: 3279
                length: 12
              pos: 3248
              length: 3417
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: Enum.class.isAssignableFrom(cls)
                        children: []
                        pos: 3406
                        length: 32
                    children: []
                    pos: 3405
                    length: 34
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: unary_expression
                            fields:
                              text: "!cls.isEnum()"
                            children: []
                            pos: 3458
                            length: 13
                        children: []
                        pos: 3457
                        length: 15
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: cls = cls.getSuperclass();
                        children: []
                        pos: 3538
                        length: 26
                      pos: 3473
                      length: 105
                    pos: 3454
                    length: 124
                  pos: 3440
                  length: 148
                pos: 3402
                length: 186
              - type: local_variable_declaration
                fields:
                  text: String str = cls.getName();
                children: []
                pos: 3597
                length: 27
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: str.startsWith("java.util")
                        children: []
                        pos: 3637
                        length: 27
                    children: []
                    pos: 3636
                    length: 29
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: instanceof_expression
                            fields:
                              text: value instanceof EnumSet<?>
                            children: []
                            pos: 4054
                            length: 27
                        children: []
                        pos: 4053
                        length: 29
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: Class<?> enumClass = ClassUtil.findEnumType((EnumSet<?>)
                            value);
                        children: []
                        pos: 4133
                        length: 64
                      - type: expression_statement
                        fields:
                          text: str = typeFactory.constructCollectionType(EnumSet.class,
                            enumClass).toCanonical();
                        children: []
                        pos: 4306
                        length: 82
                      pos: 4083
                      length: 319
                    pos: 4050
                    length: 1406
                  pos: 3666
                  length: 1800
                pos: 3633
                length: 3006
              - type: return_statement
                fields:
                  text: return str;
                children: []
                pos: 6648
                length: 11
              pos: 3336
              length: 3329
          children: []
          pos: 3248
          length: 3417
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getDescForKnownTypeIds
              children: []
              pos: 6699
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6671
              length: 105
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return "class name used as type id";
                children: []
                pos: 6734
                length: 36
              pos: 6724
              length: 52
          children: []
          pos: 6671
          length: 105
        pos: 480
        length: 6298
    children: []
    pos: 480
    length: 6298
  pos: 0
  length: 6779
text_diff: |
  --- before
  +++ after
  @@ -55,11 +55,7 @@
               //    compatibility -- needed later anyway, and not doing so may open
               //    security issues.
               JavaType t = tf.constructFromCanonical(id);
  -            if (!t.isTypeOrSubTypeOf(_baseType.getRawClass())) {
                   // Probably cleaner to have a method in `TypeFactory` but can't add in patch
  -                throw new IllegalArgumentException(String.format(
  -                        "Class %s not subtype of %s", t.getRawClass().getName(), _baseType));
  -            }
               return t;
           }
           Class<?> cls;
tree_diff: |+
  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  if_statement [2049,2368]
      parenthesized_expression [2052,2099]
          unary_expression: !t.isTypeOrSubTypeOf(_baseType.getRawClass()) [2053,2098]
      block [2100,2368]
          throw_statement: throw new IllegalArgumentException(String.format(
                          "Class %s not subtype of %s", t.getRawClass().getName(), _baseType)); [2211,2354]

...
