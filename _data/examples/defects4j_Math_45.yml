---
language: java
text_diff: |
  --- before
  +++ after
  @@ -47,11 +47,6 @@
        */
       public OpenMapRealMatrix(int rowDimension, int columnDimension) {
           super(rowDimension, columnDimension);
  -        long lRow = (long) rowDimension;
  -        long lCol = (long) columnDimension;
  -        if (lRow * lCol >= (long) Integer.MAX_VALUE) {
  -            throw new NumberIsTooLargeException(lRow * lCol, Integer.MAX_VALUE, false);
  -        }
           this.rows = rowDimension;
           this.columns = columnDimension;
           this.entries = new OpenIntToDoubleHashMap(0.0);
tree_diff: |+
  New cluster:
  UPDATE from public OpenMapRealMatrix(int rowDimension, int columnDimension) {
          super(rowDimension, columnDimension);
          long lRow = (long) rowDimension;
          long lCol = (long) columnDimension;
          if (lRow * lCol >= (long) Integer.MAX_VALUE) {
              throw new NumberIsTooLargeException(lRow * lCol, Integer.MAX_VALUE, false);
          }
          this.rows = rowDimension;
          this.columns = columnDimension;
          this.entries = new OpenIntToDoubleHashMap(0.0);
      } to public OpenMapRealMatrix(int rowDimension, int columnDimension) {
          super(rowDimension, columnDimension);
          this.rows = rowDimension;
          this.columns = columnDimension;
          this.entries = new OpenIntToDoubleHashMap(0.0);
      }
  ------------
  ===
  update-node
  ---
  constructor_declaration: public OpenMapRealMatrix(int rowDimension, int columnDimension) {
          super(rowDimension, columnDimension);
          long lRow = (long) rowDimension;
          long lCol = (long) columnDimension;
          if (lRow * lCol >= (long) Integer.MAX_VALUE) {
              throw new NumberIsTooLargeException(lRow * lCol, Integer.MAX_VALUE, false);
          }
          this.rows = rowDimension;
          this.columns = columnDimension;
          this.entries = new OpenIntToDoubleHashMap(0.0);
      } [1797,2282]
  replace public OpenMapRealMatrix(int rowDimension, int columnDimension) {
          super(rowDimension, columnDimension);
          long lRow = (long) rowDimension;
          long lCol = (long) columnDimension;
          if (lRow * lCol >= (long) Integer.MAX_VALUE) {
              throw new NumberIsTooLargeException(lRow * lCol, Integer.MAX_VALUE, false);
          }
          this.rows = rowDimension;
          this.columns = columnDimension;
          this.entries = new OpenIntToDoubleHashMap(0.0);
      } by public OpenMapRealMatrix(int rowDimension, int columnDimension) {
          super(rowDimension, columnDimension);
          this.rows = rowDimension;
          this.columns = columnDimension;
          this.entries = new OpenIntToDoubleHashMap(0.0);
      }

...
