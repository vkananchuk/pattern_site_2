---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: Complex
        children: []
        pos: 2336
        length: 7
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: public static final Complex I = new Complex(0.0, 1.0);
          children: []
          pos: 2467
          length: 54
        - type: field_declaration
          fields:
            text: public static final Complex NaN = new Complex(Double.NaN, Double.NaN);
          children: []
          pos: 2617
          length: 70
        - type: field_declaration
          fields:
            text: public static final Complex INF = new Complex(Double.POSITIVE_INFINITY,
              Double.POSITIVE_INFINITY);
          children: []
          pos: 2786
          length: 98
        - type: field_declaration
          fields:
            text: public static final Complex ONE = new Complex(1.0, 0.0);
          children: []
          pos: 2943
          length: 56
        - type: field_declaration
          fields:
            text: public static final Complex ZERO = new Complex(0.0, 0.0);
          children: []
          pos: 3058
          length: 57
        - type: field_declaration
          fields:
            text: private static final long serialVersionUID = -6195664516687396620L;
          children: []
          pos: 3164
          length: 67
        - type: field_declaration
          fields:
            text: private final double imaginary;
          children: []
          pos: 3268
          length: 31
        - type: field_declaration
          fields:
            text: private final double real;
          children: []
          pos: 3330
          length: 26
        - type: field_declaration
          fields:
            text: private final transient boolean isNaN;
          children: []
          pos: 3424
          length: 38
        - type: field_declaration
          fields:
            text: private final transient boolean isInfinite;
          children: []
          pos: 3526
          length: 43
        - type: constructor_declaration
          fields:
            text: |-
              public Complex(double real) {
                      this(real, 0.0);
                  }
          children: []
          pos: 3685
          length: 60
        - type: constructor_declaration
          fields:
            text: |-
              public Complex(double real, double imaginary) {
                      this.real = real;
                      this.imaginary = imaginary;

                      isNaN = Double.isNaN(real) || Double.isNaN(imaginary);
                      isInfinite = !isNaN &&
                          (Double.isInfinite(real) || Double.isInfinite(imaginary));
                  }
          children: []
          pos: 3911
          length: 281
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: abs
              children: []
              pos: 4520
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 4506
              length: 664
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 4540
                        length: 5
                    children: []
                    pos: 4539
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Double.NaN;
                    children: []
                    pos: 4561
                    length: 18
                  pos: 4547
                  length: 42
                pos: 4536
                length: 53
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isInfinite()
                        children: []
                        pos: 4602
                        length: 12
                    children: []
                    pos: 4601
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Double.POSITIVE_INFINITY;
                    children: []
                    pos: 4630
                    length: 32
                  pos: 4616
                  length: 56
                pos: 4598
                length: 74
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(real)
                            children: []
                            pos: 4685
                            length: 18
                          right:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(imaginary)
                            children: []
                            pos: 4706
                            length: 23
                        children: []
                        pos: 4685
                        length: 44
                    children: []
                    pos: 4684
                    length: 46
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: imaginary
                                children: []
                                pos: 4749
                                length: 9
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 4762
                                length: 3
                            children: []
                            pos: 4749
                            length: 16
                        children: []
                        pos: 4748
                        length: 18
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return FastMath.abs(real);
                        children: []
                        pos: 4785
                        length: 26
                      pos: 4767
                      length: 58
                    pos: 4745
                    length: 80
                  - type: local_variable_declaration
                    fields:
                      text: double q = real / imaginary;
                    children: []
                    pos: 4838
                    length: 28
                  - type: return_statement
                    fields:
                      text: return FastMath.abs(imaginary) * FastMath.sqrt(1 + q *
                        q);
                    children: []
                    pos: 4879
                    length: 58
                  pos: 4731
                  length: 216
                pos: 4681
                length: 483
              pos: 4526
              length: 644
          children: []
          pos: 4506
          length: 664
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: add
              children: []
              pos: 5912
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex addend
                children: []
                pos: 5916
                length: 14
              pos: 5897
              length: 302
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(addend);
                children: []
                pos: 5971
                length: 31
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 6015
                            length: 5
                          right:
                            type: field_access
                            fields:
                              text: addend.isNaN
                            children: []
                            pos: 6024
                            length: 12
                        children: []
                        pos: 6015
                        length: 21
                    children: []
                    pos: 6014
                    length: 23
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 6052
                    length: 11
                  pos: 6038
                  length: 35
                pos: 6011
                length: 62
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real + addend.getReal(),
                                                 imaginary + addend.getImaginary());
                children: []
                pos: 6083
                length: 110
              pos: 5961
              length: 238
          children: []
          pos: 5897
          length: 302
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: add
              children: []
              pos: 6501
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double addend
                children: []
                pos: 6505
                length: 13
              pos: 6486
              length: 177
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 6534
                            length: 5
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isNaN(addend)
                            children: []
                            pos: 6543
                            length: 20
                        children: []
                        pos: 6534
                        length: 29
                    children: []
                    pos: 6533
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 6579
                    length: 11
                  pos: 6565
                  length: 35
                pos: 6530
                length: 70
              - type: return_statement
                fields:
                  text: return createComplex(real + addend, imaginary);
                children: []
                pos: 6610
                length: 47
              pos: 6520
              length: 143
          children: []
          pos: 6486
          length: 177
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: conjugate
              children: []
              pos: 7283
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 7268
              length: 138
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 7309
                        length: 5
                    children: []
                    pos: 7308
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 7330
                    length: 11
                  pos: 7316
                  length: 35
                pos: 7305
                length: 46
              - type: return_statement
                fields:
                  text: return createComplex(real, -imaginary);
                children: []
                pos: 7361
                length: 39
              pos: 7295
              length: 111
          children: []
          pos: 7268
          length: 138
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: divide
              children: []
              pos: 9165
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex divisor
                children: []
                pos: 9172
                length: 15
              pos: 9150
              length: 926
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(divisor);
                children: []
                pos: 9236
                length: 32
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 9281
                            length: 5
                          right:
                            type: field_access
                            fields:
                              text: divisor.isNaN
                            children: []
                            pos: 9290
                            length: 13
                        children: []
                        pos: 9281
                        length: 22
                    children: []
                    pos: 9280
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 9319
                    length: 11
                  pos: 9305
                  length: 35
                pos: 9277
                length: 63
              - type: local_variable_declaration
                fields:
                  text: final double c = divisor.getReal();
                children: []
                pos: 9350
                length: 35
              - type: local_variable_declaration
                fields:
                  text: final double d = divisor.getImaginary();
                children: []
                pos: 9394
                length: 40
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: c
                                children: []
                                pos: 9447
                                length: 1
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 9452
                                length: 3
                            children: []
                            pos: 9447
                            length: 8
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: d
                                children: []
                                pos: 9459
                                length: 1
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 9464
                                length: 3
                            children: []
                            pos: 9459
                            length: 8
                        children: []
                        pos: 9447
                        length: 20
                    children: []
                    pos: 9446
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 9483
                    length: 11
                  pos: 9469
                  length: 35
                pos: 9443
                length: 61
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: divisor.isInfinite()
                            children: []
                            pos: 9518
                            length: 20
                          right:
                            type: unary_expression
                            fields:
                              text: "!isInfinite()"
                            children: []
                            pos: 9542
                            length: 13
                        children: []
                        pos: 9518
                        length: 37
                    children: []
                    pos: 9517
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return ZERO;
                    children: []
                    pos: 9571
                    length: 12
                  pos: 9557
                  length: 36
                pos: 9514
                length: 79
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(c)
                            children: []
                            pos: 9607
                            length: 15
                          right:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(d)
                            children: []
                            pos: 9625
                            length: 15
                        children: []
                        pos: 9607
                        length: 33
                    children: []
                    pos: 9606
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: double q = c / d;
                    children: []
                    pos: 9656
                    length: 17
                  - type: local_variable_declaration
                    fields:
                      text: double denominator = c * q + d;
                    children: []
                    pos: 9686
                    length: 31
                  - type: return_statement
                    fields:
                      text: |-
                        return createComplex((real * q + imaginary) / denominator,
                                        (imaginary * q - real) / denominator);
                    children: []
                    pos: 9730
                    length: 113
                  pos: 9642
                  length: 211
                pos: 9603
                length: 467
              pos: 9226
              length: 850
          children: []
          pos: 9150
          length: 926
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: divide
              children: []
              pos: 10397
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double divisor
                children: []
                pos: 10404
                length: 14
              pos: 10382
              length: 384
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 10434
                            length: 5
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isNaN(divisor)
                            children: []
                            pos: 10443
                            length: 21
                        children: []
                        pos: 10434
                        length: 30
                    children: []
                    pos: 10433
                    length: 32
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 10480
                    length: 11
                  pos: 10466
                  length: 35
                pos: 10430
                length: 71
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: divisor
                            children: []
                            pos: 10514
                            length: 7
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: 0d
                            children: []
                            pos: 10525
                            length: 2
                        children: []
                        pos: 10514
                        length: 13
                    children: []
                    pos: 10513
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 10543
                    length: 11
                  pos: 10529
                  length: 35
                pos: 10510
                length: 54
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: Double.isInfinite(divisor)
                        children: []
                        pos: 10577
                        length: 26
                    children: []
                    pos: 10576
                    length: 28
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: 'return !isInfinite() ? ZERO : NaN;'
                    children: []
                    pos: 10619
                    length: 34
                  pos: 10605
                  length: 58
                pos: 10573
                length: 90
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real / divisor,
                                                 imaginary  / divisor);
                children: []
                pos: 10672
                length: 88
              pos: 10420
              length: 346
          children: []
          pos: 10382
          length: 384
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: reciprocal
              children: []
              pos: 10812
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 10797
              length: 622
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 10839
                        length: 5
                    children: []
                    pos: 10838
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 10860
                    length: 11
                  pos: 10846
                  length: 35
                pos: 10835
                length: 46
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: real
                                children: []
                                pos: 10895
                                length: 4
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 10903
                                length: 3
                            children: []
                            pos: 10895
                            length: 11
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: imaginary
                                children: []
                                pos: 10910
                                length: 9
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 10923
                                length: 3
                            children: []
                            pos: 10910
                            length: 16
                        children: []
                        pos: 10895
                        length: 31
                    children: []
                    pos: 10894
                    length: 33
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return INF;
                    children: []
                    pos: 10942
                    length: 11
                  pos: 10928
                  length: 35
                pos: 10891
                length: 72
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isInfinite
                        children: []
                        pos: 10977
                        length: 10
                    children: []
                    pos: 10976
                    length: 12
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return ZERO;
                    children: []
                    pos: 11003
                    length: 12
                  pos: 10989
                  length: 36
                pos: 10973
                length: 52
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(real)
                            children: []
                            pos: 11039
                            length: 18
                          right:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(imaginary)
                            children: []
                            pos: 11060
                            length: 23
                        children: []
                        pos: 11039
                        length: 44
                    children: []
                    pos: 11038
                    length: 46
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: double q = real / imaginary;
                    children: []
                    pos: 11099
                    length: 28
                  - type: local_variable_declaration
                    fields:
                      text: double scale = 1. / (real * q + imaginary);
                    children: []
                    pos: 11140
                    length: 43
                  - type: return_statement
                    fields:
                      text: return createComplex(scale * q, -scale);
                    children: []
                    pos: 11196
                    length: 40
                  pos: 11085
                  length: 161
                pos: 11035
                length: 378
              pos: 10825
              length: 594
          children: []
          pos: 10797
          length: 622
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: equals
              children: []
              pos: 12173
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Object other
                children: []
                pos: 12180
                length: 12
              pos: 12144
              length: 395
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: this
                            fields: {}
                            children: []
                            pos: 12208
                            length: 4
                          right:
                            type: identifier
                            fields:
                              text: other
                            children: []
                            pos: 12216
                            length: 5
                        children: []
                        pos: 12208
                        length: 13
                    children: []
                    pos: 12207
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return true;
                    children: []
                    pos: 12237
                    length: 12
                  pos: 12223
                  length: 36
                pos: 12204
                length: 55
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: other instanceof Complex
                        children: []
                        pos: 12272
                        length: 24
                    children: []
                    pos: 12271
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Complex c = (Complex)other;
                    children: []
                    pos: 12311
                    length: 27
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: field_access
                            fields:
                              text: c.isNaN
                            children: []
                            pos: 12355
                            length: 7
                        children: []
                        pos: 12354
                        length: 9
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return isNaN;
                        children: []
                        pos: 12382
                        length: 13
                      pos: 12364
                      length: 45
                    pos: 12351
                    length: 150
                  pos: 12297
                  length: 214
                pos: 12268
                length: 243
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 12520
                length: 13
              pos: 12194
              length: 345
          children: []
          pos: 12144
          length: 395
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: hashCode
              children: []
              pos: 12797
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 12772
              length: 185
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 12822
                        length: 5
                    children: []
                    pos: 12821
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return 7;
                    children: []
                    pos: 12843
                    length: 9
                  pos: 12829
                  length: 33
                pos: 12818
                length: 44
              - type: return_statement
                fields:
                  text: |-
                    return 37 * (17 * MathUtils.hash(imaginary) +
                                MathUtils.hash(real));
                children: []
                pos: 12871
                length: 80
              pos: 12808
              length: 149
          children: []
          pos: 12772
          length: 185
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getImaginary
              children: []
              pos: 13069
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 13055
              length: 62
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return imaginary;
                children: []
                pos: 13094
                length: 17
              pos: 13084
              length: 33
          children: []
          pos: 13055
          length: 62
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getReal
              children: []
              pos: 13219
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 13205
              length: 52
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return real;
                children: []
                pos: 13239
                length: 12
              pos: 13229
              length: 28
          children: []
          pos: 13205
          length: 52
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isNaN
              children: []
              pos: 13497
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 13482
              length: 52
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return isNaN;
                children: []
                pos: 13515
                length: 13
              pos: 13505
              length: 29
          children: []
          pos: 13482
          length: 52
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isInfinite
              children: []
              pos: 13930
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 13915
              length: 62
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return isInfinite;
                children: []
                pos: 13953
                length: 18
              pos: 13943
              length: 34
          children: []
          pos: 13915
          length: 62
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: multiply
              children: []
              pos: 15016
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex factor
                children: []
                pos: 15025
                length: 14
              pos: 15001
              length: 642
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(factor);
                children: []
                pos: 15088
                length: 31
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 15132
                            length: 5
                          right:
                            type: field_access
                            fields:
                              text: factor.isNaN
                            children: []
                            pos: 15141
                            length: 12
                        children: []
                        pos: 15132
                        length: 21
                    children: []
                    pos: 15131
                    length: 23
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 15169
                    length: 11
                  pos: 15155
                  length: 35
                pos: 15128
                length: 62
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: or
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: Double.isInfinite(real)
                                    children: []
                                    pos: 15203
                                    length: 23
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: Double.isInfinite(imaginary)
                                    children: []
                                    pos: 15242
                                    length: 28
                                children: []
                                pos: 15203
                                length: 67
                              right:
                                type: method_invocation
                                fields:
                                  text: Double.isInfinite(factor.real)
                                children: []
                                pos: 15286
                                length: 30
                            children: []
                            pos: 15203
                            length: 113
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isInfinite(factor.imaginary)
                            children: []
                            pos: 15332
                            length: 35
                        children: []
                        pos: 15203
                        length: 164
                    children: []
                    pos: 15202
                    length: 166
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return INF;
                    children: []
                    pos: 15455
                    length: 11
                  pos: 15369
                  length: 107
                pos: 15199
                length: 277
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real * factor.real - imaginary * factor.imaginary,
                                                 real * factor.imaginary + imaginary * factor.real);
                children: []
                pos: 15485
                length: 152
              pos: 15078
              length: 565
          children: []
          pos: 15001
          length: 642
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: multiply
              children: []
              pos: 15957
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final int factor
                children: []
                pos: 15966
                length: 16
              pos: 15942
              length: 286
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 15998
                        length: 5
                    children: []
                    pos: 15997
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 16019
                    length: 11
                  pos: 16005
                  length: 35
                pos: 15994
                length: 46
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: Double.isInfinite(real)
                            children: []
                            pos: 16053
                            length: 23
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isInfinite(imaginary)
                            children: []
                            pos: 16092
                            length: 28
                        children: []
                        pos: 16053
                        length: 67
                    children: []
                    pos: 16052
                    length: 69
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return INF;
                    children: []
                    pos: 16136
                    length: 11
                  pos: 16122
                  length: 35
                pos: 16049
                length: 108
              - type: return_statement
                fields:
                  text: return createComplex(real * factor, imaginary * factor);
                children: []
                pos: 16166
                length: 56
              pos: 15984
              length: 244
          children: []
          pos: 15942
          length: 286
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: multiply
              children: []
              pos: 16539
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double factor
                children: []
                pos: 16548
                length: 13
              pos: 16524
              length: 420
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 16577
                            length: 5
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isNaN(factor)
                            children: []
                            pos: 16586
                            length: 20
                        children: []
                        pos: 16577
                        length: 29
                    children: []
                    pos: 16576
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 16622
                    length: 11
                  pos: 16608
                  length: 35
                pos: 16573
                length: 70
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: Double.isInfinite(real)
                                children: []
                                pos: 16656
                                length: 23
                              right:
                                type: method_invocation
                                fields:
                                  text: Double.isInfinite(imaginary)
                                children: []
                                pos: 16695
                                length: 28
                            children: []
                            pos: 16656
                            length: 67
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isInfinite(factor)
                            children: []
                            pos: 16739
                            length: 25
                        children: []
                        pos: 16656
                        length: 108
                    children: []
                    pos: 16655
                    length: 110
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return INF;
                    children: []
                    pos: 16852
                    length: 11
                  pos: 16766
                  length: 107
                pos: 16652
                length: 221
              - type: return_statement
                fields:
                  text: return createComplex(real * factor, imaginary * factor);
                children: []
                pos: 16882
                length: 56
              pos: 16563
              length: 381
          children: []
          pos: 16524
          length: 420
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: negate
              children: []
              pos: 17200
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 17185
              length: 136
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 17223
                        length: 5
                    children: []
                    pos: 17222
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 17244
                    length: 11
                  pos: 17230
                  length: 35
                pos: 17219
                length: 46
              - type: return_statement
                fields:
                  text: return createComplex(-real, -imaginary);
                children: []
                pos: 17275
                length: 40
              pos: 17209
              length: 112
          children: []
          pos: 17185
          length: 136
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: subtract
              children: []
              pos: 18070
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex subtrahend
                children: []
                pos: 18079
                length: 18
              pos: 18055
              length: 335
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(subtrahend);
                children: []
                pos: 18146
                length: 35
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 18194
                            length: 5
                          right:
                            type: field_access
                            fields:
                              text: subtrahend.isNaN
                            children: []
                            pos: 18203
                            length: 16
                        children: []
                        pos: 18194
                        length: 25
                    children: []
                    pos: 18193
                    length: 27
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 18235
                    length: 11
                  pos: 18221
                  length: 35
                pos: 18190
                length: 66
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real - subtrahend.getReal(),
                                                 imaginary - subtrahend.getImaginary());
                children: []
                pos: 18266
                length: 118
              pos: 18136
              length: 254
          children: []
          pos: 18055
          length: 335
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: subtract
              children: []
              pos: 18667
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double subtrahend
                children: []
                pos: 18676
                length: 17
              pos: 18652
              length: 193
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 18709
                            length: 5
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isNaN(subtrahend)
                            children: []
                            pos: 18718
                            length: 24
                        children: []
                        pos: 18709
                        length: 33
                    children: []
                    pos: 18708
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 18758
                    length: 11
                  pos: 18744
                  length: 35
                pos: 18705
                length: 74
              - type: return_statement
                fields:
                  text: return createComplex(real - subtrahend, imaginary);
                children: []
                pos: 18788
                length: 51
              pos: 18695
              length: 150
          children: []
          pos: 18652
          length: 193
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: acos
              children: []
              pos: 19389
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 19374
              length: 164
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 19410
                        length: 5
                    children: []
                    pos: 19409
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 19431
                    length: 11
                  pos: 19417
                  length: 35
                pos: 19406
                length: 46
              - type: return_statement
                fields:
                  text: return this.add(this.sqrt1z().multiply(I)).log().multiply(I.negate());
                children: []
                pos: 19462
                length: 70
              pos: 19396
              length: 142
          children: []
          pos: 19374
          length: 164
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: asin
              children: []
              pos: 20073
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 20058
              length: 159
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 20094
                        length: 5
                    children: []
                    pos: 20093
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 20115
                    length: 11
                  pos: 20101
                  length: 35
                pos: 20090
                length: 46
              - type: return_statement
                fields:
                  text: return sqrt1z().add(this.multiply(I)).log().multiply(I.negate());
                children: []
                pos: 20146
                length: 65
              pos: 20080
              length: 137
          children: []
          pos: 20058
          length: 159
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: atan
              children: []
              pos: 20748
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 20733
              length: 205
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 20769
                        length: 5
                    children: []
                    pos: 20768
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 20790
                    length: 11
                  pos: 20776
                  length: 35
                pos: 20765
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return this.add(I).divide(I.subtract(this)).log()
                                    .multiply(I.divide(createComplex(2.0, 0.0)));
                children: []
                pos: 20821
                length: 111
              pos: 20755
              length: 183
          children: []
          pos: 20733
          length: 205
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: cos
              children: []
              pos: 22043
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 22028
              length: 238
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 22063
                        length: 5
                    children: []
                    pos: 22062
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 22084
                    length: 11
                  pos: 22070
                  length: 35
                pos: 22059
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.cos(real) * FastMath.cosh(imaginary),
                                                 -FastMath.sin(real) * FastMath.sinh(imaginary));
                children: []
                pos: 22115
                length: 145
              pos: 22049
              length: 217
          children: []
          pos: 22028
          length: 238
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: cosh
              children: []
              pos: 23408
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 23393
              length: 238
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 23429
                        length: 5
                    children: []
                    pos: 23428
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 23450
                    length: 11
                  pos: 23436
                  length: 35
                pos: 23425
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.cosh(real) * FastMath.cos(imaginary),
                                                 FastMath.sinh(real) * FastMath.sin(imaginary));
                children: []
                pos: 23481
                length: 144
              pos: 23415
              length: 216
          children: []
          pos: 23393
          length: 238
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: exp
              children: []
              pos: 24769
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 24754
              length: 259
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 24789
                        length: 5
                    children: []
                    pos: 24788
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 24810
                    length: 11
                  pos: 24796
                  length: 35
                pos: 24785
                length: 46
              - type: local_variable_declaration
                fields:
                  text: double expReal = FastMath.exp(real);
                children: []
                pos: 24841
                length: 36
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(expReal *  FastMath.cos(imaginary),
                                                 expReal * FastMath.sin(imaginary));
                children: []
                pos: 24886
                length: 121
              pos: 24775
              length: 238
          children: []
          pos: 24754
          length: 259
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: log
              children: []
              pos: 26382
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 26367
              length: 197
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 26402
                        length: 5
                    children: []
                    pos: 26401
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 26423
                    length: 11
                  pos: 26409
                  length: 35
                pos: 26398
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.log(abs()),
                                                 FastMath.atan2(imaginary, real));
                children: []
                pos: 26454
                length: 104
              pos: 26388
              length: 176
          children: []
          pos: 26367
          length: 197
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: pow
              children: []
              pos: 27316
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex x
                children: []
                pos: 27320
                length: 9
              pos: 27301
              length: 154
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(x);
                children: []
                pos: 27378
                length: 26
              - type: return_statement
                fields:
                  text: return this.log().multiply(x).exp();
                children: []
                pos: 27413
                length: 36
              pos: 27368
              length: 87
          children: []
          pos: 27301
          length: 154
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: pow
              children: []
              pos: 27726
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double x
                children: []
                pos: 27730
                length: 8
              pos: 27711
              length: 81
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return this.log().multiply(x).exp();
                children: []
                pos: 27750
                length: 36
              pos: 27740
              length: 52
          children: []
          pos: 27711
          length: 81
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sin
              children: []
              pos: 28899
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 28884
              length: 237
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 28919
                        length: 5
                    children: []
                    pos: 28918
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 28940
                    length: 11
                  pos: 28926
                  length: 35
                pos: 28915
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.sin(real) * FastMath.cosh(imaginary),
                                                 FastMath.cos(real) * FastMath.sinh(imaginary));
                children: []
                pos: 28971
                length: 144
              pos: 28905
              length: 216
          children: []
          pos: 28884
          length: 237
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sinh
              children: []
              pos: 30252
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 30237
              length: 221
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 30273
                        length: 5
                    children: []
                    pos: 30272
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 30294
                    length: 11
                  pos: 30280
                  length: 35
                pos: 30269
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.sinh(real) * FastMath.cos(imaginary),
                                FastMath.cosh(real) * FastMath.sin(imaginary));
                children: []
                pos: 30325
                length: 127
              pos: 30259
              length: 199
          children: []
          pos: 30237
          length: 221
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sqrt
              children: []
              pos: 31855
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 31840
              length: 513
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 31876
                        length: 5
                    children: []
                    pos: 31875
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 31897
                    length: 11
                  pos: 31883
                  length: 35
                pos: 31872
                length: 46
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: real
                                children: []
                                pos: 31932
                                length: 4
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 31940
                                length: 3
                            children: []
                            pos: 31932
                            length: 11
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: imaginary
                                children: []
                                pos: 31947
                                length: 9
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 31960
                                length: 3
                            children: []
                            pos: 31947
                            length: 16
                        children: []
                        pos: 31932
                        length: 31
                    children: []
                    pos: 31931
                    length: 33
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return createComplex(0.0, 0.0);
                    children: []
                    pos: 31979
                    length: 31
                  pos: 31965
                  length: 55
                pos: 31928
                length: 92
              - type: local_variable_declaration
                fields:
                  text: double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
                children: []
                pos: 32030
                length: 61
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: greater_or_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: real
                            children: []
                            pos: 32104
                            length: 4
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: '0.0'
                            children: []
                            pos: 32112
                            length: 3
                        children: []
                        pos: 32104
                        length: 11
                    children: []
                    pos: 32103
                    length: 13
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return createComplex(t, imaginary / (2.0 * t));
                    children: []
                    pos: 32131
                    length: 47
                  pos: 32117
                  length: 71
                pos: 32100
                length: 247
              pos: 31862
              length: 491
          children: []
          pos: 31840
          length: 513
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sqrt1z
              children: []
              pos: 33040
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 33025
              length: 108
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
                children: []
                pos: 33059
                length: 68
              pos: 33049
              length: 84
          children: []
          pos: 33025
          length: 108
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: tan
              children: []
              pos: 34312
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 34297
              length: 549
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 34332
                            length: 5
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isInfinite(real)
                            children: []
                            pos: 34341
                            length: 23
                        children: []
                        pos: 34332
                        length: 32
                    children: []
                    pos: 34331
                    length: 34
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 34380
                    length: 11
                  pos: 34366
                  length: 35
                pos: 34328
                length: 73
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: greater_than
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: imaginary
                            children: []
                            pos: 34414
                            length: 9
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: '20.0'
                            children: []
                            pos: 34426
                            length: 4
                        children: []
                        pos: 34414
                        length: 16
                    children: []
                    pos: 34413
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return createComplex(0.0, 1.0);
                    children: []
                    pos: 34446
                    length: 31
                  pos: 34432
                  length: 55
                pos: 34410
                length: 77
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: imaginary
                            children: []
                            pos: 34500
                            length: 9
                          right:
                            type: unary_expression
                            fields:
                              text: "-20.0"
                            children: []
                            pos: 34512
                            length: 5
                        children: []
                        pos: 34500
                        length: 17
                    children: []
                    pos: 34499
                    length: 19
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return createComplex(0.0, -1.0);
                    children: []
                    pos: 34533
                    length: 32
                  pos: 34519
                  length: 56
                pos: 34496
                length: 79
              - type: local_variable_declaration
                fields:
                  text: double real2 = 2.0 * real;
                children: []
                pos: 34585
                length: 26
              - type: local_variable_declaration
                fields:
                  text: double imaginary2 = 2.0 * imaginary;
                children: []
                pos: 34620
                length: 36
              - type: local_variable_declaration
                fields:
                  text: double d = FastMath.cos(real2) + FastMath.cosh(imaginary2);
                children: []
                pos: 34665
                length: 59
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.sin(real2) / d,
                                                 FastMath.sinh(imaginary2) / d);
                children: []
                pos: 34734
                length: 106
              pos: 34318
              length: 528
          children: []
          pos: 34297
          length: 549
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: tanh
              children: []
              pos: 36035
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 36020
              length: 544
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 36056
                            length: 5
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isInfinite(imaginary)
                            children: []
                            pos: 36065
                            length: 28
                        children: []
                        pos: 36056
                        length: 37
                    children: []
                    pos: 36055
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 36109
                    length: 11
                  pos: 36095
                  length: 35
                pos: 36052
                length: 78
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: greater_than
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: real
                            children: []
                            pos: 36143
                            length: 4
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: '20.0'
                            children: []
                            pos: 36150
                            length: 4
                        children: []
                        pos: 36143
                        length: 11
                    children: []
                    pos: 36142
                    length: 13
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return createComplex(1.0, 0.0);
                    children: []
                    pos: 36170
                    length: 31
                  pos: 36156
                  length: 55
                pos: 36139
                length: 72
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: real
                            children: []
                            pos: 36224
                            length: 4
                          right:
                            type: unary_expression
                            fields:
                              text: "-20.0"
                            children: []
                            pos: 36231
                            length: 5
                        children: []
                        pos: 36224
                        length: 12
                    children: []
                    pos: 36223
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return createComplex(-1.0, 0.0);
                    children: []
                    pos: 36252
                    length: 32
                  pos: 36238
                  length: 56
                pos: 36220
                length: 74
              - type: local_variable_declaration
                fields:
                  text: double real2 = 2.0 * real;
                children: []
                pos: 36303
                length: 26
              - type: local_variable_declaration
                fields:
                  text: double imaginary2 = 2.0 * imaginary;
                children: []
                pos: 36338
                length: 36
              - type: local_variable_declaration
                fields:
                  text: double d = FastMath.cosh(real2) + FastMath.cos(imaginary2);
                children: []
                pos: 36383
                length: 59
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.sinh(real2) / d,
                                                 FastMath.sin(imaginary2) / d);
                children: []
                pos: 36452
                length: 106
              pos: 36042
              length: 522
          children: []
          pos: 36020
          length: 544
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getArgument
              children: []
              pos: 37412
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 37398
              length: 93
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return FastMath.atan2(getImaginary(), getReal());
                children: []
                pos: 37436
                length: 49
              pos: 37426
              length: 65
          children: []
          pos: 37398
          length: 93
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: nthRoot
              children: []
              pos: 38434
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int n
                children: []
                pos: 38442
                length: 5
              pos: 38413
              length: 1198
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_or_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: "n"
                            children: []
                            pos: 38492
                            length: 1
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 38497
                            length: 1
                        children: []
                        pos: 38492
                        length: 6
                    children: []
                    pos: 38491
                    length: 8
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: |-
                        throw new NotPositiveException(LocalizedFormats.CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N,
                                                                   n);
                    children: []
                    pos: 38514
                    length: 134
                  pos: 38500
                  length: 158
                pos: 38488
                length: 170
              - type: local_variable_declaration
                fields:
                  text: final List<Complex> result = new ArrayList<Complex>();
                children: []
                pos: 38668
                length: 54
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 38736
                        length: 5
                    children: []
                    pos: 38735
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: result.add(NaN);
                    children: []
                    pos: 38757
                    length: 16
                  - type: return_statement
                    fields:
                      text: return result;
                    children: []
                    pos: 38786
                    length: 14
                  pos: 38743
                  length: 67
                pos: 38732
                length: 78
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isInfinite()
                        children: []
                        pos: 38823
                        length: 12
                    children: []
                    pos: 38822
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: result.add(INF);
                    children: []
                    pos: 38851
                    length: 16
                  - type: return_statement
                    fields:
                      text: return result;
                    children: []
                    pos: 38880
                    length: 14
                  pos: 38837
                  length: 67
                pos: 38819
                length: 85
              - type: local_variable_declaration
                fields:
                  text: final double nthRootOfAbs = FastMath.pow(abs(), 1.0 / n);
                children: []
                pos: 38989
                length: 57
              - type: local_variable_declaration
                fields:
                  text: final double nthPhi = getArgument() / n;
                children: []
                pos: 39126
                length: 40
              - type: local_variable_declaration
                fields:
                  text: final double slice = 2 * FastMath.PI / n;
                children: []
                pos: 39175
                length: 41
              - type: local_variable_declaration
                fields:
                  text: double innerPart = nthPhi;
                children: []
                pos: 39225
                length: 26
              - type: for_statement
                fields:
                  text: |-
                    for (int k = 0; k < n ; k++) {
                                // inner part
                                final double realPart = nthRootOfAbs *  FastMath.cos(innerPart);
                                final double imaginaryPart = nthRootOfAbs *  FastMath.sin(innerPart);
                                result.add(createComplex(realPart, imaginaryPart));
                                innerPart += slice;
                            }
                children: []
                pos: 39260
                length: 321
              - type: return_statement
                fields:
                  text: return result;
                children: []
                pos: 39591
                length: 14
              pos: 38477
              length: 1134
          children: []
          pos: 38413
          length: 1198
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createComplex
              children: []
              pos: 39904
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double realPart
                children: []
                pos: 39918
                length: 15
              pos: 39886
              length: 167
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return new Complex(realPart, imaginaryPart);
                children: []
                pos: 40003
                length: 44
              pos: 39993
              length: 60
          children: []
          pos: 39886
          length: 167
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: valueOf
              children: []
              pos: 40284
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double realPart
                children: []
                pos: 40292
                length: 15
              pos: 40262
              length: 278
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: Double.isNaN(realPart)
                            children: []
                            pos: 40379
                            length: 22
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isNaN(imaginaryPart)
                            children: []
                            pos: 40417
                            length: 27
                        children: []
                        pos: 40379
                        length: 65
                    children: []
                    pos: 40378
                    length: 67
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 40460
                    length: 11
                  pos: 40446
                  length: 35
                pos: 40375
                length: 106
              - type: return_statement
                fields:
                  text: return new Complex(realPart, imaginaryPart);
                children: []
                pos: 40490
                length: 44
              pos: 40365
              length: 175
          children: []
          pos: 40262
          length: 278
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: valueOf
              children: []
              pos: 40717
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double realPart
                children: []
                pos: 40725
                length: 15
              pos: 40695
              length: 164
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: Double.isNaN(realPart)
                        children: []
                        pos: 40756
                        length: 22
                    children: []
                    pos: 40755
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 40794
                    length: 11
                  pos: 40780
                  length: 35
                pos: 40752
                length: 63
              - type: return_statement
                fields:
                  text: return new Complex(realPart);
                children: []
                pos: 40824
                length: 29
              pos: 40742
              length: 117
          children: []
          pos: 40695
          length: 164
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: readResolve
              children: []
              pos: 41154
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 41131
              length: 91
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return createComplex(real, imaginary);
                children: []
                pos: 41178
                length: 38
              pos: 41168
              length: 54
          children: []
          pos: 41131
          length: 91
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getField
              children: []
              pos: 41273
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 41253
              length: 81
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return ComplexField.getInstance();
                children: []
                pos: 41294
                length: 34
              pos: 41284
              length: 50
          children: []
          pos: 41253
          length: 81
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: toString
              children: []
              pos: 41393
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 41365
              length: 98
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return "(" + real + ", " + imaginary + ")";
                children: []
                pos: 41414
                length: 43
              pos: 41404
              length: 59
          children: []
          pos: 41365
          length: 98
        pos: 2323
        length: 39143
    children: []
    pos: 2323
    length: 39143
  pos: 0
  length: 41467
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: Complex
        children: []
        pos: 2336
        length: 7
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: public static final Complex I = new Complex(0.0, 1.0);
          children: []
          pos: 2467
          length: 54
        - type: field_declaration
          fields:
            text: public static final Complex NaN = new Complex(Double.NaN, Double.NaN);
          children: []
          pos: 2617
          length: 70
        - type: field_declaration
          fields:
            text: public static final Complex INF = new Complex(Double.POSITIVE_INFINITY,
              Double.POSITIVE_INFINITY);
          children: []
          pos: 2786
          length: 98
        - type: field_declaration
          fields:
            text: public static final Complex ONE = new Complex(1.0, 0.0);
          children: []
          pos: 2943
          length: 56
        - type: field_declaration
          fields:
            text: public static final Complex ZERO = new Complex(0.0, 0.0);
          children: []
          pos: 3058
          length: 57
        - type: field_declaration
          fields:
            text: private static final long serialVersionUID = -6195664516687396620L;
          children: []
          pos: 3164
          length: 67
        - type: field_declaration
          fields:
            text: private final double imaginary;
          children: []
          pos: 3268
          length: 31
        - type: field_declaration
          fields:
            text: private final double real;
          children: []
          pos: 3330
          length: 26
        - type: field_declaration
          fields:
            text: private final transient boolean isNaN;
          children: []
          pos: 3424
          length: 38
        - type: field_declaration
          fields:
            text: private final transient boolean isInfinite;
          children: []
          pos: 3526
          length: 43
        - type: constructor_declaration
          fields:
            text: |-
              public Complex(double real) {
                      this(real, 0.0);
                  }
          children: []
          pos: 3685
          length: 60
        - type: constructor_declaration
          fields:
            text: |-
              public Complex(double real, double imaginary) {
                      this.real = real;
                      this.imaginary = imaginary;

                      isNaN = Double.isNaN(real) || Double.isNaN(imaginary);
                      isInfinite = !isNaN &&
                          (Double.isInfinite(real) || Double.isInfinite(imaginary));
                  }
          children: []
          pos: 3911
          length: 281
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: abs
              children: []
              pos: 4520
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 4506
              length: 664
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 4540
                        length: 5
                    children: []
                    pos: 4539
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Double.NaN;
                    children: []
                    pos: 4561
                    length: 18
                  pos: 4547
                  length: 42
                pos: 4536
                length: 53
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isInfinite()
                        children: []
                        pos: 4602
                        length: 12
                    children: []
                    pos: 4601
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Double.POSITIVE_INFINITY;
                    children: []
                    pos: 4630
                    length: 32
                  pos: 4616
                  length: 56
                pos: 4598
                length: 74
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(real)
                            children: []
                            pos: 4685
                            length: 18
                          right:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(imaginary)
                            children: []
                            pos: 4706
                            length: 23
                        children: []
                        pos: 4685
                        length: 44
                    children: []
                    pos: 4684
                    length: 46
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: imaginary
                                children: []
                                pos: 4749
                                length: 9
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 4762
                                length: 3
                            children: []
                            pos: 4749
                            length: 16
                        children: []
                        pos: 4748
                        length: 18
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return FastMath.abs(real);
                        children: []
                        pos: 4785
                        length: 26
                      pos: 4767
                      length: 58
                    pos: 4745
                    length: 80
                  - type: local_variable_declaration
                    fields:
                      text: double q = real / imaginary;
                    children: []
                    pos: 4838
                    length: 28
                  - type: return_statement
                    fields:
                      text: return FastMath.abs(imaginary) * FastMath.sqrt(1 + q *
                        q);
                    children: []
                    pos: 4879
                    length: 58
                  pos: 4731
                  length: 216
                pos: 4681
                length: 483
              pos: 4526
              length: 644
          children: []
          pos: 4506
          length: 664
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: add
              children: []
              pos: 5912
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex addend
                children: []
                pos: 5916
                length: 14
              pos: 5897
              length: 302
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(addend);
                children: []
                pos: 5971
                length: 31
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 6015
                            length: 5
                          right:
                            type: field_access
                            fields:
                              text: addend.isNaN
                            children: []
                            pos: 6024
                            length: 12
                        children: []
                        pos: 6015
                        length: 21
                    children: []
                    pos: 6014
                    length: 23
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 6052
                    length: 11
                  pos: 6038
                  length: 35
                pos: 6011
                length: 62
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real + addend.getReal(),
                                                 imaginary + addend.getImaginary());
                children: []
                pos: 6083
                length: 110
              pos: 5961
              length: 238
          children: []
          pos: 5897
          length: 302
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: add
              children: []
              pos: 6501
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double addend
                children: []
                pos: 6505
                length: 13
              pos: 6486
              length: 177
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 6534
                            length: 5
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isNaN(addend)
                            children: []
                            pos: 6543
                            length: 20
                        children: []
                        pos: 6534
                        length: 29
                    children: []
                    pos: 6533
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 6579
                    length: 11
                  pos: 6565
                  length: 35
                pos: 6530
                length: 70
              - type: return_statement
                fields:
                  text: return createComplex(real + addend, imaginary);
                children: []
                pos: 6610
                length: 47
              pos: 6520
              length: 143
          children: []
          pos: 6486
          length: 177
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: conjugate
              children: []
              pos: 7283
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 7268
              length: 138
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 7309
                        length: 5
                    children: []
                    pos: 7308
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 7330
                    length: 11
                  pos: 7316
                  length: 35
                pos: 7305
                length: 46
              - type: return_statement
                fields:
                  text: return createComplex(real, -imaginary);
                children: []
                pos: 7361
                length: 39
              pos: 7295
              length: 111
          children: []
          pos: 7268
          length: 138
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: divide
              children: []
              pos: 9165
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex divisor
                children: []
                pos: 9172
                length: 15
              pos: 9150
              length: 926
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(divisor);
                children: []
                pos: 9236
                length: 32
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 9281
                            length: 5
                          right:
                            type: field_access
                            fields:
                              text: divisor.isNaN
                            children: []
                            pos: 9290
                            length: 13
                        children: []
                        pos: 9281
                        length: 22
                    children: []
                    pos: 9280
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 9319
                    length: 11
                  pos: 9305
                  length: 35
                pos: 9277
                length: 63
              - type: local_variable_declaration
                fields:
                  text: final double c = divisor.getReal();
                children: []
                pos: 9350
                length: 35
              - type: local_variable_declaration
                fields:
                  text: final double d = divisor.getImaginary();
                children: []
                pos: 9394
                length: 40
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: c
                                children: []
                                pos: 9447
                                length: 1
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 9452
                                length: 3
                            children: []
                            pos: 9447
                            length: 8
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: d
                                children: []
                                pos: 9459
                                length: 1
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 9464
                                length: 3
                            children: []
                            pos: 9459
                            length: 8
                        children: []
                        pos: 9447
                        length: 20
                    children: []
                    pos: 9446
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 9483
                    length: 11
                  pos: 9469
                  length: 35
                pos: 9443
                length: 61
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: divisor.isInfinite()
                            children: []
                            pos: 9518
                            length: 20
                          right:
                            type: unary_expression
                            fields:
                              text: "!isInfinite()"
                            children: []
                            pos: 9542
                            length: 13
                        children: []
                        pos: 9518
                        length: 37
                    children: []
                    pos: 9517
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return ZERO;
                    children: []
                    pos: 9571
                    length: 12
                  pos: 9557
                  length: 36
                pos: 9514
                length: 79
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(c)
                            children: []
                            pos: 9607
                            length: 15
                          right:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(d)
                            children: []
                            pos: 9625
                            length: 15
                        children: []
                        pos: 9607
                        length: 33
                    children: []
                    pos: 9606
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: double q = c / d;
                    children: []
                    pos: 9656
                    length: 17
                  - type: local_variable_declaration
                    fields:
                      text: double denominator = c * q + d;
                    children: []
                    pos: 9686
                    length: 31
                  - type: return_statement
                    fields:
                      text: |-
                        return createComplex((real * q + imaginary) / denominator,
                                        (imaginary * q - real) / denominator);
                    children: []
                    pos: 9730
                    length: 113
                  pos: 9642
                  length: 211
                pos: 9603
                length: 467
              pos: 9226
              length: 850
          children: []
          pos: 9150
          length: 926
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: divide
              children: []
              pos: 10397
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double divisor
                children: []
                pos: 10404
                length: 14
              pos: 10382
              length: 384
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 10434
                            length: 5
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isNaN(divisor)
                            children: []
                            pos: 10443
                            length: 21
                        children: []
                        pos: 10434
                        length: 30
                    children: []
                    pos: 10433
                    length: 32
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 10480
                    length: 11
                  pos: 10466
                  length: 35
                pos: 10430
                length: 71
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: divisor
                            children: []
                            pos: 10514
                            length: 7
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: 0d
                            children: []
                            pos: 10525
                            length: 2
                        children: []
                        pos: 10514
                        length: 13
                    children: []
                    pos: 10513
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 10543
                    length: 11
                  pos: 10529
                  length: 35
                pos: 10510
                length: 54
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: Double.isInfinite(divisor)
                        children: []
                        pos: 10577
                        length: 26
                    children: []
                    pos: 10576
                    length: 28
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: 'return !isInfinite() ? ZERO : NaN;'
                    children: []
                    pos: 10619
                    length: 34
                  pos: 10605
                  length: 58
                pos: 10573
                length: 90
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real / divisor,
                                                 imaginary  / divisor);
                children: []
                pos: 10672
                length: 88
              pos: 10420
              length: 346
          children: []
          pos: 10382
          length: 384
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: reciprocal
              children: []
              pos: 10812
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 10797
              length: 622
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 10839
                        length: 5
                    children: []
                    pos: 10838
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 10860
                    length: 11
                  pos: 10846
                  length: 35
                pos: 10835
                length: 46
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: real
                                children: []
                                pos: 10895
                                length: 4
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 10903
                                length: 3
                            children: []
                            pos: 10895
                            length: 11
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: imaginary
                                children: []
                                pos: 10910
                                length: 9
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 10923
                                length: 3
                            children: []
                            pos: 10910
                            length: 16
                        children: []
                        pos: 10895
                        length: 31
                    children: []
                    pos: 10894
                    length: 33
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 10942
                    length: 11
                  pos: 10928
                  length: 35
                pos: 10891
                length: 72
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isInfinite
                        children: []
                        pos: 10977
                        length: 10
                    children: []
                    pos: 10976
                    length: 12
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return ZERO;
                    children: []
                    pos: 11003
                    length: 12
                  pos: 10989
                  length: 36
                pos: 10973
                length: 52
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(real)
                            children: []
                            pos: 11039
                            length: 18
                          right:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(imaginary)
                            children: []
                            pos: 11060
                            length: 23
                        children: []
                        pos: 11039
                        length: 44
                    children: []
                    pos: 11038
                    length: 46
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: double q = real / imaginary;
                    children: []
                    pos: 11099
                    length: 28
                  - type: local_variable_declaration
                    fields:
                      text: double scale = 1. / (real * q + imaginary);
                    children: []
                    pos: 11140
                    length: 43
                  - type: return_statement
                    fields:
                      text: return createComplex(scale * q, -scale);
                    children: []
                    pos: 11196
                    length: 40
                  pos: 11085
                  length: 161
                pos: 11035
                length: 378
              pos: 10825
              length: 594
          children: []
          pos: 10797
          length: 622
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: equals
              children: []
              pos: 12173
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Object other
                children: []
                pos: 12180
                length: 12
              pos: 12144
              length: 395
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: this
                            fields: {}
                            children: []
                            pos: 12208
                            length: 4
                          right:
                            type: identifier
                            fields:
                              text: other
                            children: []
                            pos: 12216
                            length: 5
                        children: []
                        pos: 12208
                        length: 13
                    children: []
                    pos: 12207
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return true;
                    children: []
                    pos: 12237
                    length: 12
                  pos: 12223
                  length: 36
                pos: 12204
                length: 55
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: other instanceof Complex
                        children: []
                        pos: 12272
                        length: 24
                    children: []
                    pos: 12271
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Complex c = (Complex)other;
                    children: []
                    pos: 12311
                    length: 27
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: field_access
                            fields:
                              text: c.isNaN
                            children: []
                            pos: 12355
                            length: 7
                        children: []
                        pos: 12354
                        length: 9
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return isNaN;
                        children: []
                        pos: 12382
                        length: 13
                      pos: 12364
                      length: 45
                    pos: 12351
                    length: 150
                  pos: 12297
                  length: 214
                pos: 12268
                length: 243
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 12520
                length: 13
              pos: 12194
              length: 345
          children: []
          pos: 12144
          length: 395
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: hashCode
              children: []
              pos: 12797
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 12772
              length: 185
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 12822
                        length: 5
                    children: []
                    pos: 12821
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return 7;
                    children: []
                    pos: 12843
                    length: 9
                  pos: 12829
                  length: 33
                pos: 12818
                length: 44
              - type: return_statement
                fields:
                  text: |-
                    return 37 * (17 * MathUtils.hash(imaginary) +
                                MathUtils.hash(real));
                children: []
                pos: 12871
                length: 80
              pos: 12808
              length: 149
          children: []
          pos: 12772
          length: 185
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getImaginary
              children: []
              pos: 13069
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 13055
              length: 62
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return imaginary;
                children: []
                pos: 13094
                length: 17
              pos: 13084
              length: 33
          children: []
          pos: 13055
          length: 62
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getReal
              children: []
              pos: 13219
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 13205
              length: 52
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return real;
                children: []
                pos: 13239
                length: 12
              pos: 13229
              length: 28
          children: []
          pos: 13205
          length: 52
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isNaN
              children: []
              pos: 13497
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 13482
              length: 52
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return isNaN;
                children: []
                pos: 13515
                length: 13
              pos: 13505
              length: 29
          children: []
          pos: 13482
          length: 52
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isInfinite
              children: []
              pos: 13930
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 13915
              length: 62
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return isInfinite;
                children: []
                pos: 13953
                length: 18
              pos: 13943
              length: 34
          children: []
          pos: 13915
          length: 62
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: multiply
              children: []
              pos: 15016
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex factor
                children: []
                pos: 15025
                length: 14
              pos: 15001
              length: 642
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(factor);
                children: []
                pos: 15088
                length: 31
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 15132
                            length: 5
                          right:
                            type: field_access
                            fields:
                              text: factor.isNaN
                            children: []
                            pos: 15141
                            length: 12
                        children: []
                        pos: 15132
                        length: 21
                    children: []
                    pos: 15131
                    length: 23
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 15169
                    length: 11
                  pos: 15155
                  length: 35
                pos: 15128
                length: 62
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: or
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: Double.isInfinite(real)
                                    children: []
                                    pos: 15203
                                    length: 23
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: Double.isInfinite(imaginary)
                                    children: []
                                    pos: 15242
                                    length: 28
                                children: []
                                pos: 15203
                                length: 67
                              right:
                                type: method_invocation
                                fields:
                                  text: Double.isInfinite(factor.real)
                                children: []
                                pos: 15286
                                length: 30
                            children: []
                            pos: 15203
                            length: 113
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isInfinite(factor.imaginary)
                            children: []
                            pos: 15332
                            length: 35
                        children: []
                        pos: 15203
                        length: 164
                    children: []
                    pos: 15202
                    length: 166
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return INF;
                    children: []
                    pos: 15455
                    length: 11
                  pos: 15369
                  length: 107
                pos: 15199
                length: 277
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real * factor.real - imaginary * factor.imaginary,
                                                 real * factor.imaginary + imaginary * factor.real);
                children: []
                pos: 15485
                length: 152
              pos: 15078
              length: 565
          children: []
          pos: 15001
          length: 642
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: multiply
              children: []
              pos: 15957
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final int factor
                children: []
                pos: 15966
                length: 16
              pos: 15942
              length: 286
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 15998
                        length: 5
                    children: []
                    pos: 15997
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 16019
                    length: 11
                  pos: 16005
                  length: 35
                pos: 15994
                length: 46
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: Double.isInfinite(real)
                            children: []
                            pos: 16053
                            length: 23
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isInfinite(imaginary)
                            children: []
                            pos: 16092
                            length: 28
                        children: []
                        pos: 16053
                        length: 67
                    children: []
                    pos: 16052
                    length: 69
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return INF;
                    children: []
                    pos: 16136
                    length: 11
                  pos: 16122
                  length: 35
                pos: 16049
                length: 108
              - type: return_statement
                fields:
                  text: return createComplex(real * factor, imaginary * factor);
                children: []
                pos: 16166
                length: 56
              pos: 15984
              length: 244
          children: []
          pos: 15942
          length: 286
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: multiply
              children: []
              pos: 16539
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double factor
                children: []
                pos: 16548
                length: 13
              pos: 16524
              length: 420
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 16577
                            length: 5
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isNaN(factor)
                            children: []
                            pos: 16586
                            length: 20
                        children: []
                        pos: 16577
                        length: 29
                    children: []
                    pos: 16576
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 16622
                    length: 11
                  pos: 16608
                  length: 35
                pos: 16573
                length: 70
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: Double.isInfinite(real)
                                children: []
                                pos: 16656
                                length: 23
                              right:
                                type: method_invocation
                                fields:
                                  text: Double.isInfinite(imaginary)
                                children: []
                                pos: 16695
                                length: 28
                            children: []
                            pos: 16656
                            length: 67
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isInfinite(factor)
                            children: []
                            pos: 16739
                            length: 25
                        children: []
                        pos: 16656
                        length: 108
                    children: []
                    pos: 16655
                    length: 110
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return INF;
                    children: []
                    pos: 16852
                    length: 11
                  pos: 16766
                  length: 107
                pos: 16652
                length: 221
              - type: return_statement
                fields:
                  text: return createComplex(real * factor, imaginary * factor);
                children: []
                pos: 16882
                length: 56
              pos: 16563
              length: 381
          children: []
          pos: 16524
          length: 420
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: negate
              children: []
              pos: 17200
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 17185
              length: 136
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 17223
                        length: 5
                    children: []
                    pos: 17222
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 17244
                    length: 11
                  pos: 17230
                  length: 35
                pos: 17219
                length: 46
              - type: return_statement
                fields:
                  text: return createComplex(-real, -imaginary);
                children: []
                pos: 17275
                length: 40
              pos: 17209
              length: 112
          children: []
          pos: 17185
          length: 136
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: subtract
              children: []
              pos: 18070
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex subtrahend
                children: []
                pos: 18079
                length: 18
              pos: 18055
              length: 335
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(subtrahend);
                children: []
                pos: 18146
                length: 35
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 18194
                            length: 5
                          right:
                            type: field_access
                            fields:
                              text: subtrahend.isNaN
                            children: []
                            pos: 18203
                            length: 16
                        children: []
                        pos: 18194
                        length: 25
                    children: []
                    pos: 18193
                    length: 27
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 18235
                    length: 11
                  pos: 18221
                  length: 35
                pos: 18190
                length: 66
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real - subtrahend.getReal(),
                                                 imaginary - subtrahend.getImaginary());
                children: []
                pos: 18266
                length: 118
              pos: 18136
              length: 254
          children: []
          pos: 18055
          length: 335
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: subtract
              children: []
              pos: 18667
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double subtrahend
                children: []
                pos: 18676
                length: 17
              pos: 18652
              length: 193
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 18709
                            length: 5
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isNaN(subtrahend)
                            children: []
                            pos: 18718
                            length: 24
                        children: []
                        pos: 18709
                        length: 33
                    children: []
                    pos: 18708
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 18758
                    length: 11
                  pos: 18744
                  length: 35
                pos: 18705
                length: 74
              - type: return_statement
                fields:
                  text: return createComplex(real - subtrahend, imaginary);
                children: []
                pos: 18788
                length: 51
              pos: 18695
              length: 150
          children: []
          pos: 18652
          length: 193
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: acos
              children: []
              pos: 19389
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 19374
              length: 164
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 19410
                        length: 5
                    children: []
                    pos: 19409
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 19431
                    length: 11
                  pos: 19417
                  length: 35
                pos: 19406
                length: 46
              - type: return_statement
                fields:
                  text: return this.add(this.sqrt1z().multiply(I)).log().multiply(I.negate());
                children: []
                pos: 19462
                length: 70
              pos: 19396
              length: 142
          children: []
          pos: 19374
          length: 164
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: asin
              children: []
              pos: 20073
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 20058
              length: 159
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 20094
                        length: 5
                    children: []
                    pos: 20093
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 20115
                    length: 11
                  pos: 20101
                  length: 35
                pos: 20090
                length: 46
              - type: return_statement
                fields:
                  text: return sqrt1z().add(this.multiply(I)).log().multiply(I.negate());
                children: []
                pos: 20146
                length: 65
              pos: 20080
              length: 137
          children: []
          pos: 20058
          length: 159
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: atan
              children: []
              pos: 20748
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 20733
              length: 205
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 20769
                        length: 5
                    children: []
                    pos: 20768
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 20790
                    length: 11
                  pos: 20776
                  length: 35
                pos: 20765
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return this.add(I).divide(I.subtract(this)).log()
                                    .multiply(I.divide(createComplex(2.0, 0.0)));
                children: []
                pos: 20821
                length: 111
              pos: 20755
              length: 183
          children: []
          pos: 20733
          length: 205
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: cos
              children: []
              pos: 22043
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 22028
              length: 238
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 22063
                        length: 5
                    children: []
                    pos: 22062
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 22084
                    length: 11
                  pos: 22070
                  length: 35
                pos: 22059
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.cos(real) * FastMath.cosh(imaginary),
                                                 -FastMath.sin(real) * FastMath.sinh(imaginary));
                children: []
                pos: 22115
                length: 145
              pos: 22049
              length: 217
          children: []
          pos: 22028
          length: 238
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: cosh
              children: []
              pos: 23408
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 23393
              length: 238
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 23429
                        length: 5
                    children: []
                    pos: 23428
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 23450
                    length: 11
                  pos: 23436
                  length: 35
                pos: 23425
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.cosh(real) * FastMath.cos(imaginary),
                                                 FastMath.sinh(real) * FastMath.sin(imaginary));
                children: []
                pos: 23481
                length: 144
              pos: 23415
              length: 216
          children: []
          pos: 23393
          length: 238
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: exp
              children: []
              pos: 24769
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 24754
              length: 259
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 24789
                        length: 5
                    children: []
                    pos: 24788
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 24810
                    length: 11
                  pos: 24796
                  length: 35
                pos: 24785
                length: 46
              - type: local_variable_declaration
                fields:
                  text: double expReal = FastMath.exp(real);
                children: []
                pos: 24841
                length: 36
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(expReal *  FastMath.cos(imaginary),
                                                 expReal * FastMath.sin(imaginary));
                children: []
                pos: 24886
                length: 121
              pos: 24775
              length: 238
          children: []
          pos: 24754
          length: 259
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: log
              children: []
              pos: 26382
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 26367
              length: 197
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 26402
                        length: 5
                    children: []
                    pos: 26401
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 26423
                    length: 11
                  pos: 26409
                  length: 35
                pos: 26398
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.log(abs()),
                                                 FastMath.atan2(imaginary, real));
                children: []
                pos: 26454
                length: 104
              pos: 26388
              length: 176
          children: []
          pos: 26367
          length: 197
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: pow
              children: []
              pos: 27316
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex x
                children: []
                pos: 27320
                length: 9
              pos: 27301
              length: 154
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(x);
                children: []
                pos: 27378
                length: 26
              - type: return_statement
                fields:
                  text: return this.log().multiply(x).exp();
                children: []
                pos: 27413
                length: 36
              pos: 27368
              length: 87
          children: []
          pos: 27301
          length: 154
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: pow
              children: []
              pos: 27726
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double x
                children: []
                pos: 27730
                length: 8
              pos: 27711
              length: 81
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return this.log().multiply(x).exp();
                children: []
                pos: 27750
                length: 36
              pos: 27740
              length: 52
          children: []
          pos: 27711
          length: 81
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sin
              children: []
              pos: 28899
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 28884
              length: 237
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 28919
                        length: 5
                    children: []
                    pos: 28918
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 28940
                    length: 11
                  pos: 28926
                  length: 35
                pos: 28915
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.sin(real) * FastMath.cosh(imaginary),
                                                 FastMath.cos(real) * FastMath.sinh(imaginary));
                children: []
                pos: 28971
                length: 144
              pos: 28905
              length: 216
          children: []
          pos: 28884
          length: 237
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sinh
              children: []
              pos: 30252
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 30237
              length: 221
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 30273
                        length: 5
                    children: []
                    pos: 30272
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 30294
                    length: 11
                  pos: 30280
                  length: 35
                pos: 30269
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.sinh(real) * FastMath.cos(imaginary),
                                FastMath.cosh(real) * FastMath.sin(imaginary));
                children: []
                pos: 30325
                length: 127
              pos: 30259
              length: 199
          children: []
          pos: 30237
          length: 221
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sqrt
              children: []
              pos: 31855
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 31840
              length: 513
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 31876
                        length: 5
                    children: []
                    pos: 31875
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 31897
                    length: 11
                  pos: 31883
                  length: 35
                pos: 31872
                length: 46
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: real
                                children: []
                                pos: 31932
                                length: 4
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 31940
                                length: 3
                            children: []
                            pos: 31932
                            length: 11
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: imaginary
                                children: []
                                pos: 31947
                                length: 9
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 31960
                                length: 3
                            children: []
                            pos: 31947
                            length: 16
                        children: []
                        pos: 31932
                        length: 31
                    children: []
                    pos: 31931
                    length: 33
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return createComplex(0.0, 0.0);
                    children: []
                    pos: 31979
                    length: 31
                  pos: 31965
                  length: 55
                pos: 31928
                length: 92
              - type: local_variable_declaration
                fields:
                  text: double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
                children: []
                pos: 32030
                length: 61
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: greater_or_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: real
                            children: []
                            pos: 32104
                            length: 4
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: '0.0'
                            children: []
                            pos: 32112
                            length: 3
                        children: []
                        pos: 32104
                        length: 11
                    children: []
                    pos: 32103
                    length: 13
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return createComplex(t, imaginary / (2.0 * t));
                    children: []
                    pos: 32131
                    length: 47
                  pos: 32117
                  length: 71
                pos: 32100
                length: 247
              pos: 31862
              length: 491
          children: []
          pos: 31840
          length: 513
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sqrt1z
              children: []
              pos: 33040
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 33025
              length: 108
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
                children: []
                pos: 33059
                length: 68
              pos: 33049
              length: 84
          children: []
          pos: 33025
          length: 108
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: tan
              children: []
              pos: 34312
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 34297
              length: 549
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 34332
                            length: 5
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isInfinite(real)
                            children: []
                            pos: 34341
                            length: 23
                        children: []
                        pos: 34332
                        length: 32
                    children: []
                    pos: 34331
                    length: 34
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 34380
                    length: 11
                  pos: 34366
                  length: 35
                pos: 34328
                length: 73
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: greater_than
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: imaginary
                            children: []
                            pos: 34414
                            length: 9
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: '20.0'
                            children: []
                            pos: 34426
                            length: 4
                        children: []
                        pos: 34414
                        length: 16
                    children: []
                    pos: 34413
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return createComplex(0.0, 1.0);
                    children: []
                    pos: 34446
                    length: 31
                  pos: 34432
                  length: 55
                pos: 34410
                length: 77
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: imaginary
                            children: []
                            pos: 34500
                            length: 9
                          right:
                            type: unary_expression
                            fields:
                              text: "-20.0"
                            children: []
                            pos: 34512
                            length: 5
                        children: []
                        pos: 34500
                        length: 17
                    children: []
                    pos: 34499
                    length: 19
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return createComplex(0.0, -1.0);
                    children: []
                    pos: 34533
                    length: 32
                  pos: 34519
                  length: 56
                pos: 34496
                length: 79
              - type: local_variable_declaration
                fields:
                  text: double real2 = 2.0 * real;
                children: []
                pos: 34585
                length: 26
              - type: local_variable_declaration
                fields:
                  text: double imaginary2 = 2.0 * imaginary;
                children: []
                pos: 34620
                length: 36
              - type: local_variable_declaration
                fields:
                  text: double d = FastMath.cos(real2) + FastMath.cosh(imaginary2);
                children: []
                pos: 34665
                length: 59
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.sin(real2) / d,
                                                 FastMath.sinh(imaginary2) / d);
                children: []
                pos: 34734
                length: 106
              pos: 34318
              length: 528
          children: []
          pos: 34297
          length: 549
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: tanh
              children: []
              pos: 36035
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 36020
              length: 544
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 36056
                            length: 5
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isInfinite(imaginary)
                            children: []
                            pos: 36065
                            length: 28
                        children: []
                        pos: 36056
                        length: 37
                    children: []
                    pos: 36055
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 36109
                    length: 11
                  pos: 36095
                  length: 35
                pos: 36052
                length: 78
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: greater_than
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: real
                            children: []
                            pos: 36143
                            length: 4
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: '20.0'
                            children: []
                            pos: 36150
                            length: 4
                        children: []
                        pos: 36143
                        length: 11
                    children: []
                    pos: 36142
                    length: 13
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return createComplex(1.0, 0.0);
                    children: []
                    pos: 36170
                    length: 31
                  pos: 36156
                  length: 55
                pos: 36139
                length: 72
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: real
                            children: []
                            pos: 36224
                            length: 4
                          right:
                            type: unary_expression
                            fields:
                              text: "-20.0"
                            children: []
                            pos: 36231
                            length: 5
                        children: []
                        pos: 36224
                        length: 12
                    children: []
                    pos: 36223
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return createComplex(-1.0, 0.0);
                    children: []
                    pos: 36252
                    length: 32
                  pos: 36238
                  length: 56
                pos: 36220
                length: 74
              - type: local_variable_declaration
                fields:
                  text: double real2 = 2.0 * real;
                children: []
                pos: 36303
                length: 26
              - type: local_variable_declaration
                fields:
                  text: double imaginary2 = 2.0 * imaginary;
                children: []
                pos: 36338
                length: 36
              - type: local_variable_declaration
                fields:
                  text: double d = FastMath.cosh(real2) + FastMath.cos(imaginary2);
                children: []
                pos: 36383
                length: 59
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.sinh(real2) / d,
                                                 FastMath.sin(imaginary2) / d);
                children: []
                pos: 36452
                length: 106
              pos: 36042
              length: 522
          children: []
          pos: 36020
          length: 544
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getArgument
              children: []
              pos: 37412
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 37398
              length: 93
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return FastMath.atan2(getImaginary(), getReal());
                children: []
                pos: 37436
                length: 49
              pos: 37426
              length: 65
          children: []
          pos: 37398
          length: 93
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: nthRoot
              children: []
              pos: 38434
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int n
                children: []
                pos: 38442
                length: 5
              pos: 38413
              length: 1198
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_or_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: "n"
                            children: []
                            pos: 38492
                            length: 1
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 38497
                            length: 1
                        children: []
                        pos: 38492
                        length: 6
                    children: []
                    pos: 38491
                    length: 8
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: |-
                        throw new NotPositiveException(LocalizedFormats.CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N,
                                                                   n);
                    children: []
                    pos: 38514
                    length: 134
                  pos: 38500
                  length: 158
                pos: 38488
                length: 170
              - type: local_variable_declaration
                fields:
                  text: final List<Complex> result = new ArrayList<Complex>();
                children: []
                pos: 38668
                length: 54
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 38736
                        length: 5
                    children: []
                    pos: 38735
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: result.add(NaN);
                    children: []
                    pos: 38757
                    length: 16
                  - type: return_statement
                    fields:
                      text: return result;
                    children: []
                    pos: 38786
                    length: 14
                  pos: 38743
                  length: 67
                pos: 38732
                length: 78
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isInfinite()
                        children: []
                        pos: 38823
                        length: 12
                    children: []
                    pos: 38822
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: result.add(INF);
                    children: []
                    pos: 38851
                    length: 16
                  - type: return_statement
                    fields:
                      text: return result;
                    children: []
                    pos: 38880
                    length: 14
                  pos: 38837
                  length: 67
                pos: 38819
                length: 85
              - type: local_variable_declaration
                fields:
                  text: final double nthRootOfAbs = FastMath.pow(abs(), 1.0 / n);
                children: []
                pos: 38989
                length: 57
              - type: local_variable_declaration
                fields:
                  text: final double nthPhi = getArgument() / n;
                children: []
                pos: 39126
                length: 40
              - type: local_variable_declaration
                fields:
                  text: final double slice = 2 * FastMath.PI / n;
                children: []
                pos: 39175
                length: 41
              - type: local_variable_declaration
                fields:
                  text: double innerPart = nthPhi;
                children: []
                pos: 39225
                length: 26
              - type: for_statement
                fields:
                  text: |-
                    for (int k = 0; k < n ; k++) {
                                // inner part
                                final double realPart = nthRootOfAbs *  FastMath.cos(innerPart);
                                final double imaginaryPart = nthRootOfAbs *  FastMath.sin(innerPart);
                                result.add(createComplex(realPart, imaginaryPart));
                                innerPart += slice;
                            }
                children: []
                pos: 39260
                length: 321
              - type: return_statement
                fields:
                  text: return result;
                children: []
                pos: 39591
                length: 14
              pos: 38477
              length: 1134
          children: []
          pos: 38413
          length: 1198
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createComplex
              children: []
              pos: 39904
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double realPart
                children: []
                pos: 39918
                length: 15
              pos: 39886
              length: 167
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return new Complex(realPart, imaginaryPart);
                children: []
                pos: 40003
                length: 44
              pos: 39993
              length: 60
          children: []
          pos: 39886
          length: 167
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: valueOf
              children: []
              pos: 40284
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double realPart
                children: []
                pos: 40292
                length: 15
              pos: 40262
              length: 278
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: Double.isNaN(realPart)
                            children: []
                            pos: 40379
                            length: 22
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isNaN(imaginaryPart)
                            children: []
                            pos: 40417
                            length: 27
                        children: []
                        pos: 40379
                        length: 65
                    children: []
                    pos: 40378
                    length: 67
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 40460
                    length: 11
                  pos: 40446
                  length: 35
                pos: 40375
                length: 106
              - type: return_statement
                fields:
                  text: return new Complex(realPart, imaginaryPart);
                children: []
                pos: 40490
                length: 44
              pos: 40365
              length: 175
          children: []
          pos: 40262
          length: 278
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: valueOf
              children: []
              pos: 40717
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double realPart
                children: []
                pos: 40725
                length: 15
              pos: 40695
              length: 164
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: Double.isNaN(realPart)
                        children: []
                        pos: 40756
                        length: 22
                    children: []
                    pos: 40755
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 40794
                    length: 11
                  pos: 40780
                  length: 35
                pos: 40752
                length: 63
              - type: return_statement
                fields:
                  text: return new Complex(realPart);
                children: []
                pos: 40824
                length: 29
              pos: 40742
              length: 117
          children: []
          pos: 40695
          length: 164
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: readResolve
              children: []
              pos: 41154
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 41131
              length: 91
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return createComplex(real, imaginary);
                children: []
                pos: 41178
                length: 38
              pos: 41168
              length: 54
          children: []
          pos: 41131
          length: 91
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getField
              children: []
              pos: 41273
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 41253
              length: 81
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return ComplexField.getInstance();
                children: []
                pos: 41294
                length: 34
              pos: 41284
              length: 50
          children: []
          pos: 41253
          length: 81
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: toString
              children: []
              pos: 41393
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 41365
              length: 98
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return "(" + real + ", " + imaginary + ")";
                children: []
                pos: 41414
                length: 43
              pos: 41404
              length: 59
          children: []
          pos: 41365
          length: 98
        pos: 2323
        length: 39143
    children: []
    pos: 2323
    length: 39143
  pos: 0
  length: 41467
text_diff: "--- before\n+++ after\n@@ -302,7 +302,7 @@\n         }\n \n         if
  (real == 0.0 && imaginary == 0.0) {\n-            return INF;\n+            return
  NaN;\n         }\n \n         if (isInfinite) {\n"
tree_diff: |+
  New cluster:
  UPDATE from return INF; to return NaN;
  ------------
  ===
  update-node
  ---
  return_statement: return INF; [10942,10953]
  replace return INF; by return NaN;

...
