---
language: python
before_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: reverse_linked_list
        children: []
        pos: 4
        length: 19
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: node
          children: []
          pos: 24
          length: 4
        pos: 0
        length: 178
      body:
        type: block
        fields: {}
        children:
        - type: expression_statement
          fields:
            text: prevnode = None
          children: []
          pos: 35
          length: 15
        - type: while_statement
          fields:
            text: |-
              while node:
                      nextnode = node.successor
                      node.successor = prevnode
                      node = nextnode
          children: []
          pos: 55
          length: 103
        - type: return_statement
          fields:
            text: return prevnode
          children: []
          pos: 163
          length: 15
        pos: 35
        length: 143
    children: []
    pos: 0
    length: 178
  pos: 0
  length: 179
after_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: reverse_linked_list
        children: []
        pos: 4
        length: 19
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: node
          children: []
          pos: 24
          length: 4
        pos: 0
        length: 202
      body:
        type: block
        fields: {}
        children:
        - type: expression_statement
          fields:
            text: prevnode = None
          children: []
          pos: 35
          length: 15
        - type: while_statement
          fields:
            text: |-
              while node:
                      nextnode = node.successor
                      node.successor = prevnode
                      prevnode = node
                      node = nextnode
          children: []
          pos: 55
          length: 127
        - type: return_statement
          fields:
            text: return prevnode
          children: []
          pos: 187
          length: 15
        pos: 35
        length: 167
    children: []
    pos: 0
    length: 202
  pos: 0
  length: 203
text_diff: |
  --- before
  +++ after
  @@ -3,5 +3,6 @@
       while node:
           nextnode = node.successor
           node.successor = prevnode
  +        prevnode = node
           node = nextnode
       return prevnode
tree_diff: |+
  New cluster:
  UPDATE from while node:
          nextnode = node.successor
          node.successor = prevnode
          node = nextnode to while node:
          nextnode = node.successor
          node.successor = prevnode
          prevnode = node
          node = nextnode
  ------------
  ===
  update-node
  ---
  while_statement: while node:
          nextnode = node.successor
          node.successor = prevnode
          node = nextnode [55,158]
  replace while node:
          nextnode = node.successor
          node.successor = prevnode
          node = nextnode by while node:
          nextnode = node.successor
          node.successor = prevnode
          prevnode = node
          node = nextnode

...
