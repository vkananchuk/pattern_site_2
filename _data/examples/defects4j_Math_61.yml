---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: PoissonDistributionImpl
        children: []
        pos: 1310
        length: 23
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: public static final int DEFAULT_MAX_ITERATIONS = 10000000;
          children: []
          pos: 1549
          length: 58
        - type: field_declaration
          fields:
            text: public static final double DEFAULT_EPSILON = 1E-12;
          children: []
          pos: 1685
          length: 51
        - type: field_declaration
          fields:
            text: private static final long serialVersionUID = -3349935121172596109L;
          children: []
          pos: 1785
          length: 67
        - type: field_declaration
          fields:
            text: private NormalDistribution normal;
          children: []
          pos: 1920
          length: 34
        - type: field_declaration
          fields:
            text: private double mean;
          children: []
          pos: 2028
          length: 20
        - type: field_declaration
          fields:
            text: private int maxIterations = DEFAULT_MAX_ITERATIONS;
          children: []
          pos: 2327
          length: 51
        - type: field_declaration
          fields:
            text: private double epsilon = DEFAULT_EPSILON;
          children: []
          pos: 2457
          length: 41
        - type: constructor_declaration
          fields:
            text: |-
              public PoissonDistributionImpl(double p) {
                      this(p, DEFAULT_EPSILON, DEFAULT_MAX_ITERATIONS);
                  }
          children: []
          pos: 2771
          length: 106
        - type: constructor_declaration
          fields:
            text: |-
              public PoissonDistributionImpl(double p, double epsilon, int maxIterations) {
                      if (p <= 0) {
                          throw new NotStrictlyPositiveException(LocalizedFormats.MEAN, p);
                      }
                      mean = p;
                      normal = new NormalDistributionImpl(p, FastMath.sqrt(p));
                      this.epsilon = epsilon;
                      this.maxIterations = maxIterations;
                  }
          children: []
          pos: 3246
          length: 353
        - type: constructor_declaration
          fields:
            text: |-
              public PoissonDistributionImpl(double p, double epsilon) {
                      this(p, epsilon, DEFAULT_MAX_ITERATIONS);
                  }
          children: []
          pos: 3842
          length: 114
        - type: constructor_declaration
          fields:
            text: |-
              public PoissonDistributionImpl(double p, int maxIterations) {
                      this(p, DEFAULT_EPSILON, maxIterations);
                  }
          children: []
          pos: 4220
          length: 116
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getMean
              children: []
              pos: 4483
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 4469
              length: 52
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return mean;
                children: []
                pos: 4503
                length: 12
              pos: 4493
              length: 28
          children: []
          pos: 4469
          length: 52
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: probability
              children: []
              pos: 4801
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int x
                children: []
                pos: 4813
                length: 5
              pos: 4787
              length: 442
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: double ret;
                children: []
                pos: 4830
                length: 11
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: less_than
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: x
                                children: []
                                pos: 4854
                                length: 1
                              right:
                                type: decimal_integer_literal
                                fields:
                                  text: '0'
                                children: []
                                pos: 4858
                                length: 1
                            children: []
                            pos: 4854
                            length: 5
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: x
                                children: []
                                pos: 4863
                                length: 1
                              right:
                                type: field_access
                                fields:
                                  text: Integer.MAX_VALUE
                                children: []
                                pos: 4868
                                length: 17
                            children: []
                            pos: 4863
                            length: 22
                        children: []
                        pos: 4854
                        length: 31
                    children: []
                    pos: 4853
                    length: 33
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ret = 0.0;
                    children: []
                    pos: 4901
                    length: 10
                  pos: 4887
                  length: 34
                pos: 4850
                length: 353
              - type: return_statement
                fields:
                  text: return ret;
                children: []
                pos: 5212
                length: 11
              pos: 4820
              length: 409
          children: []
          pos: 4787
          length: 442
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: cumulativeProbability
              children: []
              pos: 5637
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int x
                children: []
                pos: 5659
                length: 5
              pos: 5609
              length: 294
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: x
                            children: []
                            pos: 5701
                            length: 1
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 5705
                            length: 1
                        children: []
                        pos: 5701
                        length: 5
                    children: []
                    pos: 5700
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return 0;
                    children: []
                    pos: 5722
                    length: 9
                  pos: 5708
                  length: 33
                pos: 5697
                length: 44
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: x
                            children: []
                            pos: 5754
                            length: 1
                          right:
                            type: field_access
                            fields:
                              text: Integer.MAX_VALUE
                            children: []
                            pos: 5759
                            length: 17
                        children: []
                        pos: 5754
                        length: 22
                    children: []
                    pos: 5753
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return 1;
                    children: []
                    pos: 5792
                    length: 9
                  pos: 5778
                  length: 33
                pos: 5750
                length: 61
              - type: return_statement
                fields:
                  text: return Gamma.regularizedGammaQ((double) x + 1, mean, epsilon,
                    maxIterations);
                children: []
                pos: 5820
                length: 77
              pos: 5687
              length: 216
          children: []
          pos: 5609
          length: 294
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: normalApproximateProbability
              children: []
              pos: 6535
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int x
                children: []
                pos: 6564
                length: 5
              pos: 6521
              length: 191
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return normal.cumulativeProbability(x + 0.5);
                children: []
                pos: 6661
                length: 45
              pos: 6592
              length: 120
          children: []
          pos: 6521
          length: 191
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sample
              children: []
              pos: 7529
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 7504
              length: 146
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return (int) FastMath.min(randomData.nextPoisson(mean), Integer.MAX_VALUE);
                children: []
                pos: 7569
                length: 75
              pos: 7559
              length: 91
          children: []
          pos: 7504
          length: 146
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getDomainLowerBound
              children: []
              pos: 8009
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double p
                children: []
                pos: 8029
                length: 8
              pos: 7981
              length: 83
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return 0;
                children: []
                pos: 8049
                length: 9
              pos: 8039
              length: 25
          children: []
          pos: 7981
          length: 83
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getDomainUpperBound
              children: []
              pos: 8423
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double p
                children: []
                pos: 8443
                length: 8
              pos: 8395
              length: 99
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return Integer.MAX_VALUE;
                children: []
                pos: 8463
                length: 25
              pos: 8453
              length: 41
          children: []
          pos: 8395
          length: 99
        pos: 1297
        length: 7199
    children: []
    pos: 1297
    length: 7199
  pos: 0
  length: 8497
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: PoissonDistributionImpl
        children: []
        pos: 1292
        length: 23
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: public static final int DEFAULT_MAX_ITERATIONS = 10000000;
          children: []
          pos: 1531
          length: 58
        - type: field_declaration
          fields:
            text: public static final double DEFAULT_EPSILON = 1E-12;
          children: []
          pos: 1667
          length: 51
        - type: field_declaration
          fields:
            text: private static final long serialVersionUID = -3349935121172596109L;
          children: []
          pos: 1767
          length: 67
        - type: field_declaration
          fields:
            text: private NormalDistribution normal;
          children: []
          pos: 1902
          length: 34
        - type: field_declaration
          fields:
            text: private double mean;
          children: []
          pos: 2010
          length: 20
        - type: field_declaration
          fields:
            text: private int maxIterations = DEFAULT_MAX_ITERATIONS;
          children: []
          pos: 2309
          length: 51
        - type: field_declaration
          fields:
            text: private double epsilon = DEFAULT_EPSILON;
          children: []
          pos: 2439
          length: 41
        - type: constructor_declaration
          fields:
            text: |-
              public PoissonDistributionImpl(double p) {
                      this(p, DEFAULT_EPSILON, DEFAULT_MAX_ITERATIONS);
                  }
          children: []
          pos: 2753
          length: 106
        - type: constructor_declaration
          fields:
            text: |-
              public PoissonDistributionImpl(double p, double epsilon, int maxIterations) {
                      if (p <= 0) {
                          throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);
                      }
                      mean = p;
                      normal = new NormalDistributionImpl(p, FastMath.sqrt(p));
                      this.epsilon = epsilon;
                      this.maxIterations = maxIterations;
                  }
          children: []
          pos: 3228
          length: 393
        - type: constructor_declaration
          fields:
            text: |-
              public PoissonDistributionImpl(double p, double epsilon) {
                      this(p, epsilon, DEFAULT_MAX_ITERATIONS);
                  }
          children: []
          pos: 3864
          length: 114
        - type: constructor_declaration
          fields:
            text: |-
              public PoissonDistributionImpl(double p, int maxIterations) {
                      this(p, DEFAULT_EPSILON, maxIterations);
                  }
          children: []
          pos: 4242
          length: 116
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getMean
              children: []
              pos: 4505
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 4491
              length: 52
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return mean;
                children: []
                pos: 4525
                length: 12
              pos: 4515
              length: 28
          children: []
          pos: 4491
          length: 52
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: probability
              children: []
              pos: 4823
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int x
                children: []
                pos: 4835
                length: 5
              pos: 4809
              length: 442
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: double ret;
                children: []
                pos: 4852
                length: 11
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: less_than
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: x
                                children: []
                                pos: 4876
                                length: 1
                              right:
                                type: decimal_integer_literal
                                fields:
                                  text: '0'
                                children: []
                                pos: 4880
                                length: 1
                            children: []
                            pos: 4876
                            length: 5
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: x
                                children: []
                                pos: 4885
                                length: 1
                              right:
                                type: field_access
                                fields:
                                  text: Integer.MAX_VALUE
                                children: []
                                pos: 4890
                                length: 17
                            children: []
                            pos: 4885
                            length: 22
                        children: []
                        pos: 4876
                        length: 31
                    children: []
                    pos: 4875
                    length: 33
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ret = 0.0;
                    children: []
                    pos: 4923
                    length: 10
                  pos: 4909
                  length: 34
                pos: 4872
                length: 353
              - type: return_statement
                fields:
                  text: return ret;
                children: []
                pos: 5234
                length: 11
              pos: 4842
              length: 409
          children: []
          pos: 4809
          length: 442
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: cumulativeProbability
              children: []
              pos: 5659
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int x
                children: []
                pos: 5681
                length: 5
              pos: 5631
              length: 294
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: x
                            children: []
                            pos: 5723
                            length: 1
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 5727
                            length: 1
                        children: []
                        pos: 5723
                        length: 5
                    children: []
                    pos: 5722
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return 0;
                    children: []
                    pos: 5744
                    length: 9
                  pos: 5730
                  length: 33
                pos: 5719
                length: 44
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: x
                            children: []
                            pos: 5776
                            length: 1
                          right:
                            type: field_access
                            fields:
                              text: Integer.MAX_VALUE
                            children: []
                            pos: 5781
                            length: 17
                        children: []
                        pos: 5776
                        length: 22
                    children: []
                    pos: 5775
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return 1;
                    children: []
                    pos: 5814
                    length: 9
                  pos: 5800
                  length: 33
                pos: 5772
                length: 61
              - type: return_statement
                fields:
                  text: return Gamma.regularizedGammaQ((double) x + 1, mean, epsilon,
                    maxIterations);
                children: []
                pos: 5842
                length: 77
              pos: 5709
              length: 216
          children: []
          pos: 5631
          length: 294
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: normalApproximateProbability
              children: []
              pos: 6557
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int x
                children: []
                pos: 6586
                length: 5
              pos: 6543
              length: 191
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return normal.cumulativeProbability(x + 0.5);
                children: []
                pos: 6683
                length: 45
              pos: 6614
              length: 120
          children: []
          pos: 6543
          length: 191
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sample
              children: []
              pos: 7551
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 7526
              length: 146
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return (int) FastMath.min(randomData.nextPoisson(mean), Integer.MAX_VALUE);
                children: []
                pos: 7591
                length: 75
              pos: 7581
              length: 91
          children: []
          pos: 7526
          length: 146
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getDomainLowerBound
              children: []
              pos: 8031
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double p
                children: []
                pos: 8051
                length: 8
              pos: 8003
              length: 83
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return 0;
                children: []
                pos: 8071
                length: 9
              pos: 8061
              length: 25
          children: []
          pos: 8003
          length: 83
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getDomainUpperBound
              children: []
              pos: 8445
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double p
                children: []
                pos: 8465
                length: 8
              pos: 8417
              length: 99
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return Integer.MAX_VALUE;
                children: []
                pos: 8485
                length: 25
              pos: 8475
              length: 41
          children: []
          pos: 8417
          length: 99
        pos: 1279
        length: 7239
    children: []
    pos: 1279
    length: 7239
  pos: 0
  length: 8519
text_diff: "--- before\n+++ after\n@@ -19,7 +19,7 @@\n import java.io.Serializable;\n
  \n import org.apache.commons.math.MathException;\n-import org.apache.commons.math.exception.NotStrictlyPositiveException;\n+import
  org.apache.commons.math.MathRuntimeException;\n import org.apache.commons.math.exception.util.LocalizedFormats;\n
  import org.apache.commons.math.special.Gamma;\n import org.apache.commons.math.util.MathUtils;\n@@
  -91,7 +91,7 @@\n      */\n     public PoissonDistributionImpl(double p, double epsilon,
  int maxIterations) {\n         if (p <= 0) {\n-            throw new NotStrictlyPositiveException(LocalizedFormats.MEAN,
  p);\n+            throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,
  p);\n         }\n         mean = p;\n         normal = new NormalDistributionImpl(p,
  FastMath.sqrt(p));\n"
tree_diff: |+
  New cluster:
  UPDATE from public PoissonDistributionImpl(double p, double epsilon, int maxIterations) {
          if (p <= 0) {
              throw new NotStrictlyPositiveException(LocalizedFormats.MEAN, p);
          }
          mean = p;
          normal = new NormalDistributionImpl(p, FastMath.sqrt(p));
          this.epsilon = epsilon;
          this.maxIterations = maxIterations;
      } to public PoissonDistributionImpl(double p, double epsilon, int maxIterations) {
          if (p <= 0) {
              throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);
          }
          mean = p;
          normal = new NormalDistributionImpl(p, FastMath.sqrt(p));
          this.epsilon = epsilon;
          this.maxIterations = maxIterations;
      }
  ------------
  ===
  update-node
  ---
  constructor_declaration: public PoissonDistributionImpl(double p, double epsilon, int maxIterations) {
          if (p <= 0) {
              throw new NotStrictlyPositiveException(LocalizedFormats.MEAN, p);
          }
          mean = p;
          normal = new NormalDistributionImpl(p, FastMath.sqrt(p));
          this.epsilon = epsilon;
          this.maxIterations = maxIterations;
      } [3246,3599]
  replace public PoissonDistributionImpl(double p, double epsilon, int maxIterations) {
          if (p <= 0) {
              throw new NotStrictlyPositiveException(LocalizedFormats.MEAN, p);
          }
          mean = p;
          normal = new NormalDistributionImpl(p, FastMath.sqrt(p));
          this.epsilon = epsilon;
          this.maxIterations = maxIterations;
      } by public PoissonDistributionImpl(double p, double epsilon, int maxIterations) {
          if (p <= 0) {
              throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);
          }
          mean = p;
          normal = new NormalDistributionImpl(p, FastMath.sqrt(p));
          this.epsilon = epsilon;
          this.maxIterations = maxIterations;
      }

...
