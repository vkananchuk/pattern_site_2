---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: ConstructorInstantiator
        children: []
        pos: 101
        length: 23
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private final Object outerClassInstance;
          children: []
          pos: 156
          length: 40
        - type: constructor_declaration
          fields:
            text: |-
              public ConstructorInstantiator(Object outerClassInstance) {
                      this.outerClassInstance = outerClassInstance;
                  }
          children: []
          pos: 202
          length: 119
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: newInstance
              children: []
              pos: 340
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Class<T> cls
                children: []
                pos: 352
                length: 12
              pos: 327
              length: 192
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: outerClassInstance
                            children: []
                            pos: 380
                            length: 18
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 402
                            length: 4
                        children: []
                        pos: 380
                        length: 26
                    children: []
                    pos: 379
                    length: 28
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return noArgConstructor(cls);
                    children: []
                    pos: 422
                    length: 29
                  pos: 408
                  length: 53
                pos: 376
                length: 85
              - type: return_statement
                fields:
                  text: return withParams(cls, outerClassInstance);
                children: []
                pos: 470
                length: 43
              pos: 366
              length: 153
          children: []
          pos: 327
          length: 192
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: withParams
              children: []
              pos: 546
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Class<T> cls
                children: []
                pos: 557
                length: 12
              pos: 525
              length: 650
            body:
              type: block
              fields: {}
              children:
              - type: try_statement
                fields:
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: enhanced_for_statement
                      fields:
                        text: |-
                          for (Constructor<?> constructor : cls.getDeclaredConstructors()) {
                                          Class<?>[] types = constructor.getParameterTypes();
                                          if (paramsMatch(types, params)) {
                                              return (T) constructor.newInstance(params);
                                          }
                                      }
                      children: []
                      pos: 762
                      length: 280
                    pos: 603
                    length: 449
                  excepts:
                    type: excepts
                    fields: {}
                    children:
                    - type: catch_clause
                      fields:
                        text: |-
                          catch (Exception e) {
                                      throw paramsException(cls, e);
                                  }
                      children: []
                      pos: 1053
                      length: 74
                    pos: 599
                    length: 528
                children: []
                pos: 599
                length: 528
              - type: throw_statement
                fields:
                  text: throw paramsException(cls, null);
                children: []
                pos: 1136
                length: 33
              pos: 589
              length: 586
          children: []
          pos: 525
          length: 650
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: paramsException
              children: []
              pos: 1222
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Class<T> cls
                children: []
                pos: 1238
                length: 12
              pos: 1181
              length: 334
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return new InstantationException("Unable to create mock instance of '"
                                    + cls.getSimpleName() + "'.\nPlease ensure that the outer instance has correct type and that the target class has parameter-less constructor.", e);
                children: []
                pos: 1275
                length: 234
              pos: 1265
              length: 250
          children: []
          pos: 1181
          length: 334
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: paramsMatch
              children: []
              pos: 1544
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Class<?>[] types
                children: []
                pos: 1556
                length: 16
              pos: 1521
              length: 334
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: field_access
                            fields:
                              text: params.length
                            children: []
                            pos: 1605
                            length: 13
                          right:
                            type: field_access
                            fields:
                              text: types.length
                            children: []
                            pos: 1622
                            length: 12
                        children: []
                        pos: 1605
                        length: 29
                    children: []
                    pos: 1604
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return false;
                    children: []
                    pos: 1650
                    length: 13
                  pos: 1636
                  length: 37
                pos: 1601
                length: 72
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < params.length; i++) {
                                if (!types[i].isInstance(params[i])) {
                                    return false;
                                }
                            }
                children: []
                pos: 1682
                length: 146
              - type: return_statement
                fields:
                  text: return true;
                children: []
                pos: 1837
                length: 12
              pos: 1591
              length: 264
          children: []
          pos: 1521
          length: 334
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: noArgConstructor
              children: []
              pos: 1882
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Class<T> cls
                children: []
                pos: 1899
                length: 12
              pos: 1861
              length: 339
            body:
              type: block
              fields: {}
              children:
              - type: try_statement
                fields:
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: return_statement
                      fields:
                        text: return cls.newInstance();
                      children: []
                      pos: 1941
                      length: 25
                    pos: 1927
                    length: 49
                  excepts:
                    type: excepts
                    fields: {}
                    children:
                    - type: catch_clause
                      fields:
                        text: |-
                          catch (Exception e) {
                                      throw new InstantationException("Unable to create mock instance of '"
                                              + cls.getSimpleName() + "'.\nPlease ensure it has parameter-less constructor.", e);
                                  }
                      children: []
                      pos: 1977
                      length: 217
                    pos: 1923
                    length: 271
                children: []
                pos: 1923
                length: 271
              pos: 1913
              length: 287
          children: []
          pos: 1861
          length: 339
        pos: 88
        length: 2114
    children: []
    pos: 88
    length: 2114
  pos: 0
  length: 2203
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: ConstructorInstantiator
        children: []
        pos: 101
        length: 23
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private final Object outerClassInstance;
          children: []
          pos: 156
          length: 40
        - type: constructor_declaration
          fields:
            text: |-
              public ConstructorInstantiator(Object outerClassInstance) {
                      this.outerClassInstance = outerClassInstance;
                  }
          children: []
          pos: 202
          length: 119
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: newInstance
              children: []
              pos: 340
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Class<T> cls
                children: []
                pos: 352
                length: 12
              pos: 327
              length: 176
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: outerClassInstance
                            children: []
                            pos: 380
                            length: 18
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 402
                            length: 4
                        children: []
                        pos: 380
                        length: 26
                    children: []
                    pos: 379
                    length: 28
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return noArgConstructor(cls);
                    children: []
                    pos: 422
                    length: 29
                  pos: 408
                  length: 53
                pos: 376
                length: 85
              - type: return_statement
                fields:
                  text: return withOuterClass(cls);
                children: []
                pos: 470
                length: 27
              pos: 366
              length: 137
          children: []
          pos: 327
          length: 176
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: withOuterClass
              children: []
              pos: 523
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Class<T> cls
                children: []
                pos: 538
                length: 12
              pos: 509
              length: 438
            body:
              type: block
              fields: {}
              children:
              - type: try_statement
                fields:
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: local_variable_declaration
                      fields:
                        text: Constructor<T> c = cls.getDeclaredConstructor(outerClassInstance.getClass());
                      children: []
                      pos: 725
                      length: 77
                    - type: return_statement
                      fields:
                        text: return c.newInstance(outerClassInstance);
                      children: []
                      pos: 815
                      length: 41
                    pos: 566
                    length: 300
                  excepts:
                    type: excepts
                    fields: {}
                    children:
                    - type: catch_clause
                      fields:
                        text: |-
                          catch (Exception e) {
                                      throw paramsException(cls, e);
                                  }
                      children: []
                      pos: 867
                      length: 74
                    pos: 562
                    length: 379
                children: []
                pos: 562
                length: 379
              pos: 552
              length: 395
          children: []
          pos: 509
          length: 438
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: paramsException
              children: []
              pos: 994
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Class<T> cls
                children: []
                pos: 1010
                length: 12
              pos: 953
              length: 334
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return new InstantationException("Unable to create mock instance of '"
                                    + cls.getSimpleName() + "'.\nPlease ensure that the outer instance has correct type and that the target class has parameter-less constructor.", e);
                children: []
                pos: 1047
                length: 234
              pos: 1037
              length: 250
          children: []
          pos: 953
          length: 334
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: noArgConstructor
              children: []
              pos: 1315
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Class<T> cls
                children: []
                pos: 1332
                length: 12
              pos: 1294
              length: 339
            body:
              type: block
              fields: {}
              children:
              - type: try_statement
                fields:
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: return_statement
                      fields:
                        text: return cls.newInstance();
                      children: []
                      pos: 1374
                      length: 25
                    pos: 1360
                    length: 49
                  excepts:
                    type: excepts
                    fields: {}
                    children:
                    - type: catch_clause
                      fields:
                        text: |-
                          catch (Exception e) {
                                      throw new InstantationException("Unable to create mock instance of '"
                                              + cls.getSimpleName() + "'.\nPlease ensure it has parameter-less constructor.", e);
                                  }
                      children: []
                      pos: 1410
                      length: 217
                    pos: 1356
                    length: 271
                children: []
                pos: 1356
                length: 271
              pos: 1346
              length: 287
          children: []
          pos: 1294
          length: 339
        pos: 88
        length: 1547
    children: []
    pos: 88
    length: 1547
  pos: 0
  length: 1636
text_diff: "--- before\n+++ after\n@@ -14,23 +14,18 @@\n         if (outerClassInstance
  == null) {\n             return noArgConstructor(cls);\n         }\n-        return
  withParams(cls, outerClassInstance);\n+        return withOuterClass(cls);\n     }\n
  \n-    private static <T> T withParams(Class<T> cls, Object... params) {\n+    private
  <T> T withOuterClass(Class<T> cls) {\n         try {\n             //this is kind
  of overengineered because we don't need to support more params\n             //however,
  I know we will be needing it :)\n-            for (Constructor<?> constructor :
  cls.getDeclaredConstructors()) {\n-                Class<?>[] types = constructor.getParameterTypes();\n-
  \               if (paramsMatch(types, params)) {\n-                    return (T)
  constructor.newInstance(params);\n-                }\n-            }\n+            Constructor<T>
  c = cls.getDeclaredConstructor(outerClassInstance.getClass());\n+            return
  c.newInstance(outerClassInstance);\n         } catch (Exception e) {\n             throw
  paramsException(cls, e);\n         }\n-        throw paramsException(cls, null);\n
  \    }\n \n     private static <T> InstantationException paramsException(Class<T>
  cls, Exception e) {\n@@ -38,17 +33,6 @@\n                 + cls.getSimpleName()
  + \"'.\\nPlease ensure that the outer instance has correct type and that the target
  class has parameter-less constructor.\", e);\n     }\n \n-    private static boolean
  paramsMatch(Class<?>[] types, Object[] params) {\n-        if (params.length !=
  types.length) {\n-            return false;\n-        }\n-        for (int i = 0;
  i < params.length; i++) {\n-            if (!types[i].isInstance(params[i])) {\n-
  \               return false;\n-            }\n-        }\n-        return true;\n-
  \   }\n \n     private static <T> T noArgConstructor(Class<T> cls) {\n         try
  {\n"
tree_diff: |+
  New cluster:
  UPDATE from withParams to withOuterClass
  ------------
  ===
  update-node
  ---
  identifier: withParams [546,556]
  replace withParams by withOuterClass

  New cluster:
  UPDATE from return withParams(cls, outerClassInstance); to return withOuterClass(cls);
  ------------
  ===
  update-node
  ---
  return_statement: return withParams(cls, outerClassInstance); [470,513]
  replace return withParams(cls, outerClassInstance); by return withOuterClass(cls);

  New cluster:
  ===
  insert-node
  ---
  local_variable_declaration: Constructor<T> c = cls.getDeclaredConstructor(outerClassInstance.getClass()); [725,802]
  to
  block [603,1052]
  at 0
  ------------
  ===
  insert-node
  ---
  local_variable_declaration: Constructor<T> c = cls.getDeclaredConstructor(outerClassInstance.getClass()); [725,802]
  to
  block [603,1052]
  at 0

  New cluster:
  ===
  insert-node
  ---
  return_statement: return c.newInstance(outerClassInstance); [815,856]
  to
  block [603,1052]
  at 1
  ------------
  ===
  insert-node
  ---
  return_statement: return c.newInstance(outerClassInstance); [815,856]
  to
  block [603,1052]
  at 1

  New cluster:
  ===
  delete-node
  ---
  enhanced_for_statement: for (Constructor<?> constructor : cls.getDeclaredConstructors()) {
                  Class<?>[] types = constructor.getParameterTypes();
                  if (paramsMatch(types, params)) {
                      return (T) constructor.newInstance(params);
                  }
              } [762,1042]
  ===
  ------------
  ===
  delete-node
  ---
  enhanced_for_statement: for (Constructor<?> constructor : cls.getDeclaredConstructors()) {
                  Class<?>[] types = constructor.getParameterTypes();
                  if (paramsMatch(types, params)) {
                      return (T) constructor.newInstance(params);
                  }
              } [762,1042]
  ===

  New cluster:
  ===
  delete-node
  ---
  throw_statement: throw paramsException(cls, null); [1136,1169]
  ===
  ------------
  ===
  delete-node
  ---
  throw_statement: throw paramsException(cls, null); [1136,1169]
  ===

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  method_declaration [1521,1855]
      identifier: paramsMatch [1544,1555]
      method_parameters [1521,1855]
          formal_parameter: Class<?>[] types [1556,1572]
      block [1591,1855]
          if_statement [1601,1673]
              parenthesized_expression [1604,1635]
                  not_equals [1605,1634]
                      field_access: params.length [1605,1618]
                      field_access: types.length [1622,1634]
              block [1636,1673]
                  return_statement: return false; [1650,1663]
          for_statement: for (int i = 0; i < params.length; i++) {
              if (!types[i].isInstance(params[i])) {
                  return false;
              }
          } [1682,1828]
          return_statement: return true; [1837,1849]

...
