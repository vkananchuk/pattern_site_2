---
language: python
before_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: detect_cycle
        children: []
        pos: 4
        length: 12
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: node
          children: []
          pos: 17
          length: 4
        pos: 0
        length: 260
      body:
        type: block
        fields: {}
        children:
        - type: expression_statement
          fields:
            text: hare = tortoise = node
          children: []
          pos: 28
          length: 22
        - type: while_statement
          fields:
            text: |-
              while True:
                      if hare.successor is None:
                          return False

                      tortoise = tortoise.successor
                      hare = hare.successor.successor

                      if hare is tortoise:
                          return True
          children: []
          pos: 56
          length: 204
        pos: 28
        length: 232
    children: []
    pos: 0
    length: 260
  pos: 0
  length: 261
after_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: detect_cycle
        children: []
        pos: 4
        length: 12
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: node
          children: []
          pos: 17
          length: 4
        pos: 0
        length: 276
      body:
        type: block
        fields: {}
        children:
        - type: expression_statement
          fields:
            text: hare = tortoise = node
          children: []
          pos: 28
          length: 22
        - type: while_statement
          fields:
            text: |-
              while True:
                      if hare is None or hare.successor is None:
                          return False

                      tortoise = tortoise.successor
                      hare = hare.successor.successor

                      if hare is tortoise:
                          return True
          children: []
          pos: 56
          length: 220
        pos: 28
        length: 248
    children: []
    pos: 0
    length: 276
  pos: 0
  length: 277
text_diff: "--- before\n+++ after\n@@ -2,7 +2,7 @@\n     hare = tortoise = node\n
  \n     while True:\n-        if hare.successor is None:\n+        if hare is None
  or hare.successor is None:\n             return False\n \n         tortoise = tortoise.successor\n"
tree_diff: |+
  New cluster:
  UPDATE from while True:
          if hare.successor is None:
              return False

          tortoise = tortoise.successor
          hare = hare.successor.successor

          if hare is tortoise:
              return True to while True:
          if hare is None or hare.successor is None:
              return False

          tortoise = tortoise.successor
          hare = hare.successor.successor

          if hare is tortoise:
              return True
  ------------
  ===
  update-node
  ---
  while_statement: while True:
          if hare.successor is None:
              return False

          tortoise = tortoise.successor
          hare = hare.successor.successor

          if hare is tortoise:
              return True [56,260]
  replace while True:
          if hare.successor is None:
              return False

          tortoise = tortoise.successor
          hare = hare.successor.successor

          if hare is tortoise:
              return True by while True:
          if hare is None or hare.successor is None:
              return False

          tortoise = tortoise.successor
          hare = hare.successor.successor

          if hare is tortoise:
              return True

...
