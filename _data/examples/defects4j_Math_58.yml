---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: GaussianFitter
        children: []
        pos: 2652
        length: 14
      body:
        type: class_body
        fields: {}
        children:
        - type: constructor_declaration
          fields:
            text: |-
              public GaussianFitter(DifferentiableMultivariateVectorialOptimizer optimizer) {
                      super(optimizer);
                  }
          children: []
          pos: 2835
          length: 111
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: fit
              children: []
              pos: 3336
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double[] initialGuess
                children: []
                pos: 3340
                length: 21
              pos: 3320
              length: 1143
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: |-
                    final ParametricUnivariateRealFunction f = new ParametricUnivariateRealFunction() {
                                    private final ParametricUnivariateRealFunction g = new Gaussian.Parametric();

                                    public double value(double x, double[] p) {
                                        double v = Double.POSITIVE_INFINITY;
                                        try {
                                            v = g.value(x, p);
                                        } catch (NotStrictlyPositiveException e) {
                                            // Do nothing.
                                        }
                                        return v;
                                    }

                                    public double[] gradient(double x, double[] p) {
                                        double[] v = { Double.POSITIVE_INFINITY,
                                                       Double.POSITIVE_INFINITY,
                                                       Double.POSITIVE_INFINITY };
                                        try {
                                            v = g.gradient(x, p);
                                        } catch (NotStrictlyPositiveException e) {
                                            // Do nothing.
                                        }
                                        return v;
                                    }
                                };
                children: []
                pos: 3373
                length: 1046
              - type: return_statement
                fields:
                  text: return fit(f, initialGuess);
                children: []
                pos: 4429
                length: 28
              pos: 3363
              length: 1100
          children: []
          pos: 3320
          length: 1143
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: fit
              children: []
              pos: 4691
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 4675
              length: 138
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final double[] guess = (new ParameterGuesser(getObservations())).guess();
                children: []
                pos: 4707
                length: 73
              - type: return_statement
                fields:
                  text: return fit(guess);
                children: []
                pos: 4789
                length: 18
              pos: 4697
              length: 116
          children: []
          pos: 4675
          length: 138
        - type: class_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ParameterGuesser
              children: []
              pos: 5060
              length: 16
            body:
              type: class_body
              fields: {}
              children:
              - type: field_declaration
                fields:
                  text: private final WeightedObservedPoint[] observations;
                children: []
                pos: 5119
                length: 51
              - type: field_declaration
                fields:
                  text: private double[] parameters;
                children: []
                pos: 5224
                length: 28
              - type: constructor_declaration
                fields:
                  text: |-
                    public ParameterGuesser(WeightedObservedPoint[] observations) {
                                if (observations == null) {
                                    throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
                                }
                                if (observations.length < 3) {
                                    throw new NumberIsTooSmallException(observations.length, 3, true);
                                }
                                this.observations = observations.clone();
                            }
                children: []
                pos: 5440
                length: 400
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: guess
                    children: []
                    pos: 6030
                    length: 5
                  parameters:
                    type: method_parameters
                    fields: {}
                    children: []
                    pos: 6014
                    length: 181
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: equals
                              fields:
                                left:
                                  type: identifier
                                  fields:
                                    text: parameters
                                  children: []
                                  pos: 6056
                                  length: 10
                                right:
                                  type: null_literal
                                  fields: {}
                                  children: []
                                  pos: 6070
                                  length: 4
                              children: []
                              pos: 6056
                              length: 18
                          children: []
                          pos: 6055
                          length: 20
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: expression_statement
                          fields:
                            text: parameters = basicGuess(observations);
                          children: []
                          pos: 6094
                          length: 38
                        pos: 6076
                        length: 70
                      pos: 6052
                      length: 94
                    - type: return_statement
                      fields:
                        text: return parameters.clone();
                      children: []
                      pos: 6159
                      length: 26
                    pos: 6038
                    length: 157
                children: []
                pos: 6014
                length: 181
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: basicGuess
                    children: []
                    pos: 6467
                    length: 10
                  parameters:
                    type: method_parameters
                    fields: {}
                    children:
                    - type: formal_parameter
                      fields:
                        text: WeightedObservedPoint[] points
                      children: []
                      pos: 6478
                      length: 30
                    pos: 6450
                    length: 904
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: expression_statement
                      fields:
                        text: Arrays.sort(points, createWeightedObservedPointComparator());
                      children: []
                      pos: 6524
                      length: 61
                    - type: local_variable_declaration
                      fields:
                        text: double[] params = new double[3];
                      children: []
                      pos: 6598
                      length: 32
                    - type: local_variable_declaration
                      fields:
                        text: int maxYIdx = findMaxY(points);
                      children: []
                      pos: 6644
                      length: 31
                    - type: expression_statement
                      fields:
                        text: params[0] = points[maxYIdx].getY();
                      children: []
                      pos: 6688
                      length: 35
                    - type: expression_statement
                      fields:
                        text: params[1] = points[maxYIdx].getX();
                      children: []
                      pos: 6736
                      length: 35
                    - type: local_variable_declaration
                      fields:
                        text: double fwhmApprox;
                      children: []
                      pos: 6785
                      length: 18
                    - type: try_statement
                      fields:
                        body:
                          type: block
                          fields: {}
                          children:
                          - type: local_variable_declaration
                            fields:
                              text: double halfY = params[0] + ((params[1] - params[0])
                                / 2.0);
                            children: []
                            pos: 6838
                            length: 59
                          - type: local_variable_declaration
                            fields:
                              text: double fwhmX1 = interpolateXAtY(points, maxYIdx,
                                -1, halfY);
                            children: []
                            pos: 6914
                            length: 60
                          - type: local_variable_declaration
                            fields:
                              text: double fwhmX2 = interpolateXAtY(points, maxYIdx,
                                +1, halfY);
                            children: []
                            pos: 6991
                            length: 60
                          - type: expression_statement
                            fields:
                              text: fwhmApprox = fwhmX2 - fwhmX1;
                            children: []
                            pos: 7068
                            length: 29
                          pos: 6820
                          length: 291
                        excepts:
                          type: excepts
                          fields: {}
                          children:
                          - type: catch_clause
                            fields:
                              text: |-
                                catch (OutOfRangeException e) {
                                                fwhmApprox = points[points.length - 1].getX() - points[0].getX();
                                            }
                            children: []
                            pos: 7112
                            length: 127
                          pos: 6816
                          length: 423
                      children: []
                      pos: 6816
                      length: 423
                    - type: expression_statement
                      fields:
                        text: params[2] = fwhmApprox / (2.0 * Math.sqrt(2.0 * Math.log(2.0)));
                      children: []
                      pos: 7252
                      length: 64
                    - type: return_statement
                      fields:
                        text: return params;
                      children: []
                      pos: 7330
                      length: 14
                    pos: 6510
                    length: 844
                children: []
                pos: 6450
                length: 904
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: findMaxY
                    children: []
                    pos: 7582
                    length: 8
                  parameters:
                    type: method_parameters
                    fields: {}
                    children:
                    - type: formal_parameter
                      fields:
                        text: WeightedObservedPoint[] points
                      children: []
                      pos: 7591
                      length: 30
                    pos: 7570
                    length: 305
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: local_variable_declaration
                      fields:
                        text: int maxYIdx = 0;
                      children: []
                      pos: 7637
                      length: 16
                    - type: for_statement
                      fields:
                        text: |-
                          for (int i = 1; i < points.length; i++) {
                                          if (points[i].getY() > points[maxYIdx].getY()) {
                                              maxYIdx = i;
                                          }
                                      }
                      children: []
                      pos: 7666
                      length: 171
                    - type: return_statement
                      fields:
                        text: return maxYIdx;
                      children: []
                      pos: 7850
                      length: 15
                    pos: 7623
                    length: 252
                children: []
                pos: 7570
                length: 305
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: interpolateXAtY
                    children: []
                    pos: 8594
                    length: 15
                  parameters:
                    type: method_parameters
                    fields: {}
                    children:
                    - type: formal_parameter
                      fields:
                        text: WeightedObservedPoint[] points
                      children: []
                      pos: 8610
                      length: 30
                    pos: 8579
                    length: 845
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: equals
                              fields:
                                left:
                                  type: identifier
                                  fields:
                                    text: idxStep
                                  children: []
                                  pos: 8775
                                  length: 7
                                right:
                                  type: decimal_integer_literal
                                  fields:
                                    text: '0'
                                  children: []
                                  pos: 8786
                                  length: 1
                              children: []
                              pos: 8775
                              length: 12
                          children: []
                          pos: 8774
                          length: 14
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: throw_statement
                          fields:
                            text: throw new ZeroException();
                          children: []
                          pos: 8807
                          length: 26
                        pos: 8789
                        length: 58
                      pos: 8771
                      length: 76
                    - type: local_variable_declaration
                      fields:
                        text: WeightedObservedPoint[] twoPoints = getInterpolationPointsForY(points,
                          startIdx, idxStep, y);
                      children: []
                      pos: 8860
                      length: 93
                    - type: local_variable_declaration
                      fields:
                        text: WeightedObservedPoint pointA = twoPoints[0];
                      children: []
                      pos: 8966
                      length: 44
                    - type: local_variable_declaration
                      fields:
                        text: WeightedObservedPoint pointB = twoPoints[1];
                      children: []
                      pos: 9023
                      length: 44
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: equals
                              fields:
                                left:
                                  type: method_invocation
                                  fields:
                                    text: pointA.getY()
                                  children: []
                                  pos: 9084
                                  length: 13
                                right:
                                  type: identifier
                                  fields:
                                    text: "y"
                                  children: []
                                  pos: 9101
                                  length: 1
                              children: []
                              pos: 9084
                              length: 18
                          children: []
                          pos: 9083
                          length: 20
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: return_statement
                          fields:
                            text: return pointA.getX();
                          children: []
                          pos: 9122
                          length: 21
                        pos: 9104
                        length: 53
                      pos: 9080
                      length: 77
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: equals
                              fields:
                                left:
                                  type: method_invocation
                                  fields:
                                    text: pointB.getY()
                                  children: []
                                  pos: 9174
                                  length: 13
                                right:
                                  type: identifier
                                  fields:
                                    text: "y"
                                  children: []
                                  pos: 9191
                                  length: 1
                              children: []
                              pos: 9174
                              length: 18
                          children: []
                          pos: 9173
                          length: 20
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: return_statement
                          fields:
                            text: return pointB.getX();
                          children: []
                          pos: 9212
                          length: 21
                        pos: 9194
                        length: 53
                      pos: 9170
                      length: 77
                    - type: return_statement
                      fields:
                        text: |-
                          return pointA.getX() +
                                             (((y - pointA.getY()) * (pointB.getX() - pointA.getX())) /
                                              (pointB.getY() - pointA.getY()));
                      children: []
                      pos: 9260
                      length: 154
                    pos: 8757
                    length: 667
                children: []
                pos: 8579
                length: 845
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: getInterpolationPointsForY
                    children: []
                    pos: 10255
                    length: 26
                  parameters:
                    type: method_parameters
                    fields: {}
                    children:
                    - type: formal_parameter
                      fields:
                        text: WeightedObservedPoint[] points
                      children: []
                      pos: 10282
                      length: 30
                    pos: 10223
                    length: 1173
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: equals
                              fields:
                                left:
                                  type: identifier
                                  fields:
                                    text: idxStep
                                  children: []
                                  pos: 10475
                                  length: 7
                                right:
                                  type: decimal_integer_literal
                                  fields:
                                    text: '0'
                                  children: []
                                  pos: 10486
                                  length: 1
                              children: []
                              pos: 10475
                              length: 12
                          children: []
                          pos: 10474
                          length: 14
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: throw_statement
                          fields:
                            text: throw new ZeroException();
                          children: []
                          pos: 10507
                          length: 26
                        pos: 10489
                        length: 58
                      pos: 10471
                      length: 76
                    - type: for_statement
                      fields:
                        text: |-
                          for (int i = startIdx;
                                           (idxStep < 0) ? (i + idxStep >= 0) : (i + idxStep < points.length);
                                           i += idxStep) {
                                          if (isBetween(y, points[i].getY(), points[i + idxStep].getY())) {
                                              return (idxStep < 0) ?
                                                     new WeightedObservedPoint[] { points[i + idxStep], points[i] } :
                                                     new WeightedObservedPoint[] { points[i], points[i + idxStep] };
                                          }
                                      }
                      children: []
                      pos: 10560
                      length: 480
                    - type: local_variable_declaration
                      fields:
                        text: double minY = Double.POSITIVE_INFINITY;
                      children: []
                      pos: 11054
                      length: 39
                    - type: local_variable_declaration
                      fields:
                        text: double maxY = Double.NEGATIVE_INFINITY;
                      children: []
                      pos: 11106
                      length: 39
                    - type: enhanced_for_statement
                      fields:
                        text: |-
                          for (final WeightedObservedPoint point : points) {
                                          minY = Math.min(minY, point.getY());
                                          maxY = Math.max(maxY, point.getY());
                                      }
                      children: []
                      pos: 11158
                      length: 170
                    - type: throw_statement
                      fields:
                        text: throw new OutOfRangeException(y, minY, maxY);
                      children: []
                      pos: 11341
                      length: 45
                    pos: 10457
                    length: 939
                children: []
                pos: 10223
                length: 1173
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: isBetween
                    children: []
                    pos: 11889
                    length: 9
                  parameters:
                    type: method_parameters
                    fields: {}
                    children:
                    - type: formal_parameter
                      fields:
                        text: double value
                      children: []
                      pos: 11899
                      length: 12
                    pos: 11873
                    length: 215
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: return_statement
                      fields:
                        text: |-
                          return (value >= boundary1 && value <= boundary2) ||
                                             (value >= boundary2 && value <= boundary1);
                      children: []
                      pos: 11963
                      length: 115
                    pos: 11949
                    length: 139
                children: []
                pos: 11873
                length: 215
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: createWeightedObservedPointComparator
                    children: []
                    pos: 12351
                    length: 37
                  parameters:
                    type: method_parameters
                    fields: {}
                    children: []
                    pos: 12309
                    length: 1256
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: return_statement
                      fields:
                        text: |-
                          return new Comparator<WeightedObservedPoint>() {
                                          public int compare(WeightedObservedPoint p1, WeightedObservedPoint p2) {
                                              if (p1 == null && p2 == null) {
                                                  return 0;
                                              }
                                              if (p1 == null) {
                                                  return -1;
                                              }
                                              if (p2 == null) {
                                                  return 1;
                                              }
                                              if (p1.getX() < p2.getX()) {
                                                  return -1;
                                              }
                                              if (p1.getX() > p2.getX()) {
                                                  return 1;
                                              }
                                              if (p1.getY() < p2.getY()) {
                                                  return -1;
                                              }
                                              if (p1.getY() > p2.getY()) {
                                                  return 1;
                                              }
                                              if (p1.getWeight() < p2.getWeight()) {
                                                  return -1;
                                              }
                                              if (p1.getWeight() > p2.getWeight()) {
                                                  return 1;
                                              }
                                              return 0;
                                          }
                                      };
                      children: []
                      pos: 12405
                      length: 1150
                    pos: 12391
                    length: 1174
                children: []
                pos: 12309
                length: 1256
              pos: 5040
              length: 8531
          children: []
          pos: 5040
          length: 8531
        pos: 2639
        length: 10934
    children: []
    pos: 2639
    length: 10934
  pos: 0
  length: 13574
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: GaussianFitter
        children: []
        pos: 2652
        length: 14
      body:
        type: class_body
        fields: {}
        children:
        - type: constructor_declaration
          fields:
            text: |-
              public GaussianFitter(DifferentiableMultivariateVectorialOptimizer optimizer) {
                      super(optimizer);
                  }
          children: []
          pos: 2835
          length: 111
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: fit
              children: []
              pos: 3336
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double[] initialGuess
                children: []
                pos: 3340
                length: 21
              pos: 3320
              length: 1143
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: |-
                    final ParametricUnivariateRealFunction f = new ParametricUnivariateRealFunction() {
                                    private final ParametricUnivariateRealFunction g = new Gaussian.Parametric();

                                    public double value(double x, double[] p) {
                                        double v = Double.POSITIVE_INFINITY;
                                        try {
                                            v = g.value(x, p);
                                        } catch (NotStrictlyPositiveException e) {
                                            // Do nothing.
                                        }
                                        return v;
                                    }

                                    public double[] gradient(double x, double[] p) {
                                        double[] v = { Double.POSITIVE_INFINITY,
                                                       Double.POSITIVE_INFINITY,
                                                       Double.POSITIVE_INFINITY };
                                        try {
                                            v = g.gradient(x, p);
                                        } catch (NotStrictlyPositiveException e) {
                                            // Do nothing.
                                        }
                                        return v;
                                    }
                                };
                children: []
                pos: 3373
                length: 1046
              - type: return_statement
                fields:
                  text: return fit(f, initialGuess);
                children: []
                pos: 4429
                length: 28
              pos: 3363
              length: 1100
          children: []
          pos: 3320
          length: 1143
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: fit
              children: []
              pos: 4691
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 4675
              length: 165
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final double[] guess = (new ParameterGuesser(getObservations())).guess();
                children: []
                pos: 4707
                length: 73
              - type: return_statement
                fields:
                  text: return fit(new Gaussian.Parametric(), guess);
                children: []
                pos: 4789
                length: 45
              pos: 4697
              length: 143
          children: []
          pos: 4675
          length: 165
        - type: class_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ParameterGuesser
              children: []
              pos: 5087
              length: 16
            body:
              type: class_body
              fields: {}
              children:
              - type: field_declaration
                fields:
                  text: private final WeightedObservedPoint[] observations;
                children: []
                pos: 5146
                length: 51
              - type: field_declaration
                fields:
                  text: private double[] parameters;
                children: []
                pos: 5251
                length: 28
              - type: constructor_declaration
                fields:
                  text: |-
                    public ParameterGuesser(WeightedObservedPoint[] observations) {
                                if (observations == null) {
                                    throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
                                }
                                if (observations.length < 3) {
                                    throw new NumberIsTooSmallException(observations.length, 3, true);
                                }
                                this.observations = observations.clone();
                            }
                children: []
                pos: 5467
                length: 400
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: guess
                    children: []
                    pos: 6057
                    length: 5
                  parameters:
                    type: method_parameters
                    fields: {}
                    children: []
                    pos: 6041
                    length: 181
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: equals
                              fields:
                                left:
                                  type: identifier
                                  fields:
                                    text: parameters
                                  children: []
                                  pos: 6083
                                  length: 10
                                right:
                                  type: null_literal
                                  fields: {}
                                  children: []
                                  pos: 6097
                                  length: 4
                              children: []
                              pos: 6083
                              length: 18
                          children: []
                          pos: 6082
                          length: 20
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: expression_statement
                          fields:
                            text: parameters = basicGuess(observations);
                          children: []
                          pos: 6121
                          length: 38
                        pos: 6103
                        length: 70
                      pos: 6079
                      length: 94
                    - type: return_statement
                      fields:
                        text: return parameters.clone();
                      children: []
                      pos: 6186
                      length: 26
                    pos: 6065
                    length: 157
                children: []
                pos: 6041
                length: 181
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: basicGuess
                    children: []
                    pos: 6494
                    length: 10
                  parameters:
                    type: method_parameters
                    fields: {}
                    children:
                    - type: formal_parameter
                      fields:
                        text: WeightedObservedPoint[] points
                      children: []
                      pos: 6505
                      length: 30
                    pos: 6477
                    length: 904
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: expression_statement
                      fields:
                        text: Arrays.sort(points, createWeightedObservedPointComparator());
                      children: []
                      pos: 6551
                      length: 61
                    - type: local_variable_declaration
                      fields:
                        text: double[] params = new double[3];
                      children: []
                      pos: 6625
                      length: 32
                    - type: local_variable_declaration
                      fields:
                        text: int maxYIdx = findMaxY(points);
                      children: []
                      pos: 6671
                      length: 31
                    - type: expression_statement
                      fields:
                        text: params[0] = points[maxYIdx].getY();
                      children: []
                      pos: 6715
                      length: 35
                    - type: expression_statement
                      fields:
                        text: params[1] = points[maxYIdx].getX();
                      children: []
                      pos: 6763
                      length: 35
                    - type: local_variable_declaration
                      fields:
                        text: double fwhmApprox;
                      children: []
                      pos: 6812
                      length: 18
                    - type: try_statement
                      fields:
                        body:
                          type: block
                          fields: {}
                          children:
                          - type: local_variable_declaration
                            fields:
                              text: double halfY = params[0] + ((params[1] - params[0])
                                / 2.0);
                            children: []
                            pos: 6865
                            length: 59
                          - type: local_variable_declaration
                            fields:
                              text: double fwhmX1 = interpolateXAtY(points, maxYIdx,
                                -1, halfY);
                            children: []
                            pos: 6941
                            length: 60
                          - type: local_variable_declaration
                            fields:
                              text: double fwhmX2 = interpolateXAtY(points, maxYIdx,
                                +1, halfY);
                            children: []
                            pos: 7018
                            length: 60
                          - type: expression_statement
                            fields:
                              text: fwhmApprox = fwhmX2 - fwhmX1;
                            children: []
                            pos: 7095
                            length: 29
                          pos: 6847
                          length: 291
                        excepts:
                          type: excepts
                          fields: {}
                          children:
                          - type: catch_clause
                            fields:
                              text: |-
                                catch (OutOfRangeException e) {
                                                fwhmApprox = points[points.length - 1].getX() - points[0].getX();
                                            }
                            children: []
                            pos: 7139
                            length: 127
                          pos: 6843
                          length: 423
                      children: []
                      pos: 6843
                      length: 423
                    - type: expression_statement
                      fields:
                        text: params[2] = fwhmApprox / (2.0 * Math.sqrt(2.0 * Math.log(2.0)));
                      children: []
                      pos: 7279
                      length: 64
                    - type: return_statement
                      fields:
                        text: return params;
                      children: []
                      pos: 7357
                      length: 14
                    pos: 6537
                    length: 844
                children: []
                pos: 6477
                length: 904
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: findMaxY
                    children: []
                    pos: 7609
                    length: 8
                  parameters:
                    type: method_parameters
                    fields: {}
                    children:
                    - type: formal_parameter
                      fields:
                        text: WeightedObservedPoint[] points
                      children: []
                      pos: 7618
                      length: 30
                    pos: 7597
                    length: 305
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: local_variable_declaration
                      fields:
                        text: int maxYIdx = 0;
                      children: []
                      pos: 7664
                      length: 16
                    - type: for_statement
                      fields:
                        text: |-
                          for (int i = 1; i < points.length; i++) {
                                          if (points[i].getY() > points[maxYIdx].getY()) {
                                              maxYIdx = i;
                                          }
                                      }
                      children: []
                      pos: 7693
                      length: 171
                    - type: return_statement
                      fields:
                        text: return maxYIdx;
                      children: []
                      pos: 7877
                      length: 15
                    pos: 7650
                    length: 252
                children: []
                pos: 7597
                length: 305
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: interpolateXAtY
                    children: []
                    pos: 8621
                    length: 15
                  parameters:
                    type: method_parameters
                    fields: {}
                    children:
                    - type: formal_parameter
                      fields:
                        text: WeightedObservedPoint[] points
                      children: []
                      pos: 8637
                      length: 30
                    pos: 8606
                    length: 845
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: equals
                              fields:
                                left:
                                  type: identifier
                                  fields:
                                    text: idxStep
                                  children: []
                                  pos: 8802
                                  length: 7
                                right:
                                  type: decimal_integer_literal
                                  fields:
                                    text: '0'
                                  children: []
                                  pos: 8813
                                  length: 1
                              children: []
                              pos: 8802
                              length: 12
                          children: []
                          pos: 8801
                          length: 14
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: throw_statement
                          fields:
                            text: throw new ZeroException();
                          children: []
                          pos: 8834
                          length: 26
                        pos: 8816
                        length: 58
                      pos: 8798
                      length: 76
                    - type: local_variable_declaration
                      fields:
                        text: WeightedObservedPoint[] twoPoints = getInterpolationPointsForY(points,
                          startIdx, idxStep, y);
                      children: []
                      pos: 8887
                      length: 93
                    - type: local_variable_declaration
                      fields:
                        text: WeightedObservedPoint pointA = twoPoints[0];
                      children: []
                      pos: 8993
                      length: 44
                    - type: local_variable_declaration
                      fields:
                        text: WeightedObservedPoint pointB = twoPoints[1];
                      children: []
                      pos: 9050
                      length: 44
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: equals
                              fields:
                                left:
                                  type: method_invocation
                                  fields:
                                    text: pointA.getY()
                                  children: []
                                  pos: 9111
                                  length: 13
                                right:
                                  type: identifier
                                  fields:
                                    text: "y"
                                  children: []
                                  pos: 9128
                                  length: 1
                              children: []
                              pos: 9111
                              length: 18
                          children: []
                          pos: 9110
                          length: 20
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: return_statement
                          fields:
                            text: return pointA.getX();
                          children: []
                          pos: 9149
                          length: 21
                        pos: 9131
                        length: 53
                      pos: 9107
                      length: 77
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: equals
                              fields:
                                left:
                                  type: method_invocation
                                  fields:
                                    text: pointB.getY()
                                  children: []
                                  pos: 9201
                                  length: 13
                                right:
                                  type: identifier
                                  fields:
                                    text: "y"
                                  children: []
                                  pos: 9218
                                  length: 1
                              children: []
                              pos: 9201
                              length: 18
                          children: []
                          pos: 9200
                          length: 20
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: return_statement
                          fields:
                            text: return pointB.getX();
                          children: []
                          pos: 9239
                          length: 21
                        pos: 9221
                        length: 53
                      pos: 9197
                      length: 77
                    - type: return_statement
                      fields:
                        text: |-
                          return pointA.getX() +
                                             (((y - pointA.getY()) * (pointB.getX() - pointA.getX())) /
                                              (pointB.getY() - pointA.getY()));
                      children: []
                      pos: 9287
                      length: 154
                    pos: 8784
                    length: 667
                children: []
                pos: 8606
                length: 845
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: getInterpolationPointsForY
                    children: []
                    pos: 10282
                    length: 26
                  parameters:
                    type: method_parameters
                    fields: {}
                    children:
                    - type: formal_parameter
                      fields:
                        text: WeightedObservedPoint[] points
                      children: []
                      pos: 10309
                      length: 30
                    pos: 10250
                    length: 1173
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: equals
                              fields:
                                left:
                                  type: identifier
                                  fields:
                                    text: idxStep
                                  children: []
                                  pos: 10502
                                  length: 7
                                right:
                                  type: decimal_integer_literal
                                  fields:
                                    text: '0'
                                  children: []
                                  pos: 10513
                                  length: 1
                              children: []
                              pos: 10502
                              length: 12
                          children: []
                          pos: 10501
                          length: 14
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: throw_statement
                          fields:
                            text: throw new ZeroException();
                          children: []
                          pos: 10534
                          length: 26
                        pos: 10516
                        length: 58
                      pos: 10498
                      length: 76
                    - type: for_statement
                      fields:
                        text: |-
                          for (int i = startIdx;
                                           (idxStep < 0) ? (i + idxStep >= 0) : (i + idxStep < points.length);
                                           i += idxStep) {
                                          if (isBetween(y, points[i].getY(), points[i + idxStep].getY())) {
                                              return (idxStep < 0) ?
                                                     new WeightedObservedPoint[] { points[i + idxStep], points[i] } :
                                                     new WeightedObservedPoint[] { points[i], points[i + idxStep] };
                                          }
                                      }
                      children: []
                      pos: 10587
                      length: 480
                    - type: local_variable_declaration
                      fields:
                        text: double minY = Double.POSITIVE_INFINITY;
                      children: []
                      pos: 11081
                      length: 39
                    - type: local_variable_declaration
                      fields:
                        text: double maxY = Double.NEGATIVE_INFINITY;
                      children: []
                      pos: 11133
                      length: 39
                    - type: enhanced_for_statement
                      fields:
                        text: |-
                          for (final WeightedObservedPoint point : points) {
                                          minY = Math.min(minY, point.getY());
                                          maxY = Math.max(maxY, point.getY());
                                      }
                      children: []
                      pos: 11185
                      length: 170
                    - type: throw_statement
                      fields:
                        text: throw new OutOfRangeException(y, minY, maxY);
                      children: []
                      pos: 11368
                      length: 45
                    pos: 10484
                    length: 939
                children: []
                pos: 10250
                length: 1173
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: isBetween
                    children: []
                    pos: 11916
                    length: 9
                  parameters:
                    type: method_parameters
                    fields: {}
                    children:
                    - type: formal_parameter
                      fields:
                        text: double value
                      children: []
                      pos: 11926
                      length: 12
                    pos: 11900
                    length: 215
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: return_statement
                      fields:
                        text: |-
                          return (value >= boundary1 && value <= boundary2) ||
                                             (value >= boundary2 && value <= boundary1);
                      children: []
                      pos: 11990
                      length: 115
                    pos: 11976
                    length: 139
                children: []
                pos: 11900
                length: 215
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: createWeightedObservedPointComparator
                    children: []
                    pos: 12378
                    length: 37
                  parameters:
                    type: method_parameters
                    fields: {}
                    children: []
                    pos: 12336
                    length: 1256
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: return_statement
                      fields:
                        text: |-
                          return new Comparator<WeightedObservedPoint>() {
                                          public int compare(WeightedObservedPoint p1, WeightedObservedPoint p2) {
                                              if (p1 == null && p2 == null) {
                                                  return 0;
                                              }
                                              if (p1 == null) {
                                                  return -1;
                                              }
                                              if (p2 == null) {
                                                  return 1;
                                              }
                                              if (p1.getX() < p2.getX()) {
                                                  return -1;
                                              }
                                              if (p1.getX() > p2.getX()) {
                                                  return 1;
                                              }
                                              if (p1.getY() < p2.getY()) {
                                                  return -1;
                                              }
                                              if (p1.getY() > p2.getY()) {
                                                  return 1;
                                              }
                                              if (p1.getWeight() < p2.getWeight()) {
                                                  return -1;
                                              }
                                              if (p1.getWeight() > p2.getWeight()) {
                                                  return 1;
                                              }
                                              return 0;
                                          }
                                      };
                      children: []
                      pos: 12432
                      length: 1150
                    pos: 12418
                    length: 1174
                children: []
                pos: 12336
                length: 1256
              pos: 5067
              length: 8531
          children: []
          pos: 5067
          length: 8531
        pos: 2639
        length: 10961
    children: []
    pos: 2639
    length: 10961
  pos: 0
  length: 13601
text_diff: "--- before\n+++ after\n@@ -118,7 +118,7 @@\n      */\n     public double[]
  fit() {\n         final double[] guess = (new ParameterGuesser(getObservations())).guess();\n-
  \       return fit(guess);\n+        return fit(new Gaussian.Parametric(), guess);\n
  \    }\n \n     /**\n"
tree_diff: |+
  New cluster:
  UPDATE from return fit(guess); to return fit(new Gaussian.Parametric(), guess);
  ------------
  ===
  update-node
  ---
  return_statement: return fit(guess); [4789,4807]
  replace return fit(guess); by return fit(new Gaussian.Parametric(), guess);

...
