---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: CoreOperationRelationalExpression
        children: []
        pos: 1340
        length: 33
      body:
        type: class_body
        fields: {}
        children:
        - type: constructor_declaration
          fields:
            text: |-
              protected CoreOperationRelationalExpression(Expression[] args) {
                      super(args);
                  }
          children: []
          pos: 1503
          length: 91
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: computeValue
              children: []
              pos: 1620
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: EvalContext context
                children: []
                pos: 1633
                length: 19
              pos: 1600
              length: 184
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return compute(args[0].compute(context), args[1].compute(context))
                                    ? Boolean.TRUE : Boolean.FALSE;
                children: []
                pos: 1664
                length: 114
              pos: 1654
              length: 130
          children: []
          pos: 1600
          length: 184
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getPrecedence
              children: []
              pos: 1810
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 1790
              length: 86
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return RELATIONAL_EXPR_PRECEDENCE;
                children: []
                pos: 1836
                length: 34
              pos: 1826
              length: 50
          children: []
          pos: 1790
          length: 86
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isSymmetric
              children: []
              pos: 1906
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 1882
              length: 67
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 1930
                length: 13
              pos: 1920
              length: 29
          children: []
          pos: 1882
          length: 67
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: evaluateCompare
              children: []
              pos: 2181
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int compare
                children: []
                pos: 2197
                length: 11
              pos: 2154
              length: 56
          children: []
          pos: 2154
          length: 56
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: compute
              children: []
              pos: 2385
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Object left
                children: []
                pos: 2393
                length: 11
              pos: 2369
              length: 988
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: left = reduce(left);
                children: []
                pos: 2430
                length: 20
              - type: expression_statement
                fields:
                  text: right = reduce(right);
                children: []
                pos: 2459
                length: 22
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: left instanceof InitialContext
                        children: []
                        pos: 2495
                        length: 30
                    children: []
                    pos: 2494
                    length: 32
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: "((InitialContext) left).reset();"
                    children: []
                    pos: 2541
                    length: 32
                  pos: 2527
                  length: 56
                pos: 2491
                length: 92
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: right instanceof InitialContext
                        children: []
                        pos: 2596
                        length: 31
                    children: []
                    pos: 2595
                    length: 33
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: "((InitialContext) right).reset();"
                    children: []
                    pos: 2643
                    length: 33
                  pos: 2629
                  length: 57
                pos: 2592
                length: 94
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: instanceof_expression
                            fields:
                              text: left instanceof Iterator
                            children: []
                            pos: 2699
                            length: 24
                          right:
                            type: instanceof_expression
                            fields:
                              text: right instanceof Iterator
                            children: []
                            pos: 2727
                            length: 25
                        children: []
                        pos: 2699
                        length: 53
                    children: []
                    pos: 2698
                    length: 55
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return findMatch((Iterator) left, (Iterator) right);
                    children: []
                    pos: 2768
                    length: 52
                  pos: 2754
                  length: 76
                pos: 2695
                length: 135
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: left instanceof Iterator
                        children: []
                        pos: 2843
                        length: 24
                    children: []
                    pos: 2842
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return containsMatch((Iterator) left, right);
                    children: []
                    pos: 2883
                    length: 45
                  pos: 2869
                  length: 69
                pos: 2839
                length: 99
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: right instanceof Iterator
                        children: []
                        pos: 2951
                        length: 25
                    children: []
                    pos: 2950
                    length: 27
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return containsMatch(left, (Iterator) right);
                    children: []
                    pos: 2992
                    length: 45
                  pos: 2978
                  length: 69
                pos: 2947
                length: 100
              - type: local_variable_declaration
                fields:
                  text: double ld = InfoSetUtil.doubleValue(left);
                children: []
                pos: 3056
                length: 42
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: Double.isNaN(ld)
                        children: []
                        pos: 3111
                        length: 16
                    children: []
                    pos: 3110
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return false;
                    children: []
                    pos: 3143
                    length: 13
                  pos: 3129
                  length: 37
                pos: 3107
                length: 59
              - type: local_variable_declaration
                fields:
                  text: double rd = InfoSetUtil.doubleValue(right);
                children: []
                pos: 3175
                length: 43
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: Double.isNaN(rd)
                        children: []
                        pos: 3231
                        length: 16
                    children: []
                    pos: 3230
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return false;
                    children: []
                    pos: 3263
                    length: 13
                  pos: 3249
                  length: 37
                pos: 3227
                length: 59
              - type: return_statement
                fields:
                  text: 'return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);'
                children: []
                pos: 3295
                length: 56
              pos: 2420
              length: 937
          children: []
          pos: 2369
          length: 988
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: reduce
              children: []
              pos: 3499
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Object o
                children: []
                pos: 3506
                length: 8
              pos: 3484
              length: 259
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: o instanceof SelfContext
                        children: []
                        pos: 3530
                        length: 24
                    children: []
                    pos: 3529
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: o = ((EvalContext) o).getSingleNodePointer();
                    children: []
                    pos: 3570
                    length: 45
                  pos: 3556
                  length: 69
                pos: 3526
                length: 99
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: o instanceof Collection
                        children: []
                        pos: 3638
                        length: 23
                    children: []
                    pos: 3637
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: o = ((Collection) o).iterator();
                    children: []
                    pos: 3677
                    length: 32
                  pos: 3663
                  length: 56
                pos: 3634
                length: 85
              - type: return_statement
                fields:
                  text: return o;
                children: []
                pos: 3728
                length: 9
              pos: 3516
              length: 227
          children: []
          pos: 3484
          length: 259
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: containsMatch
              children: []
              pos: 3962
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Iterator it
                children: []
                pos: 3976
                length: 11
              pos: 3946
              length: 253
            body:
              type: block
              fields: {}
              children:
              - type: while_statement
                fields:
                  text: |-
                    while (it.hasNext()) {
                                Object element = it.next();
                                if (compute(element, value)) {
                                    return true;
                                }
                            }
                children: []
                pos: 4013
                length: 158
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 4180
                length: 13
              pos: 4003
              length: 196
          children: []
          pos: 3946
          length: 253
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: containsMatch
              children: []
              pos: 4418
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Object value
                children: []
                pos: 4432
                length: 12
              pos: 4402
              length: 253
            body:
              type: block
              fields: {}
              children:
              - type: while_statement
                fields:
                  text: |-
                    while (it.hasNext()) {
                                Object element = it.next();
                                if (compute(value, element)) {
                                    return true;
                                }
                            }
                children: []
                pos: 4469
                length: 158
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 4636
                length: 13
              pos: 4459
              length: 196
          children: []
          pos: 4402
          length: 253
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: findMatch
              children: []
              pos: 4868
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Iterator lit
                children: []
                pos: 4878
                length: 12
              pos: 4852
              length: 344
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: HashSet left = new HashSet();
                children: []
                pos: 4916
                length: 29
              - type: while_statement
                fields:
                  text: |-
                    while (lit.hasNext()) {
                                left.add(lit.next());
                            }
                children: []
                pos: 4954
                length: 67
              - type: while_statement
                fields:
                  text: |-
                    while (rit.hasNext()) {
                                if (containsMatch(left.iterator(), rit.next())) {
                                    return true;
                                }
                            }
                children: []
                pos: 5030
                length: 138
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 5177
                length: 13
              pos: 4906
              length: 290
          children: []
          pos: 4852
          length: 344
        pos: 1318
        length: 3881
    children: []
    pos: 1318
    length: 3881
  pos: 0
  length: 5200
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: CoreOperationRelationalExpression
        children: []
        pos: 1340
        length: 33
      body:
        type: class_body
        fields: {}
        children:
        - type: constructor_declaration
          fields:
            text: |-
              protected CoreOperationRelationalExpression(Expression[] args) {
                      super(args);
                  }
          children: []
          pos: 1503
          length: 91
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: computeValue
              children: []
              pos: 1620
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: EvalContext context
                children: []
                pos: 1633
                length: 19
              pos: 1600
              length: 184
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return compute(args[0].compute(context), args[1].compute(context))
                                    ? Boolean.TRUE : Boolean.FALSE;
                children: []
                pos: 1664
                length: 114
              pos: 1654
              length: 130
          children: []
          pos: 1600
          length: 184
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getPrecedence
              children: []
              pos: 1810
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 1790
              length: 86
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return RELATIONAL_EXPR_PRECEDENCE;
                children: []
                pos: 1836
                length: 34
              pos: 1826
              length: 50
          children: []
          pos: 1790
          length: 86
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isSymmetric
              children: []
              pos: 1906
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 1882
              length: 67
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 1930
                length: 13
              pos: 1920
              length: 29
          children: []
          pos: 1882
          length: 67
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: evaluateCompare
              children: []
              pos: 2181
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int compare
                children: []
                pos: 2197
                length: 11
              pos: 2154
              length: 56
          children: []
          pos: 2154
          length: 56
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: compute
              children: []
              pos: 2385
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Object left
                children: []
                pos: 2393
                length: 11
              pos: 2369
              length: 988
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: left = reduce(left);
                children: []
                pos: 2430
                length: 20
              - type: expression_statement
                fields:
                  text: right = reduce(right);
                children: []
                pos: 2459
                length: 22
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: left instanceof InitialContext
                        children: []
                        pos: 2495
                        length: 30
                    children: []
                    pos: 2494
                    length: 32
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: "((InitialContext) left).reset();"
                    children: []
                    pos: 2541
                    length: 32
                  pos: 2527
                  length: 56
                pos: 2491
                length: 92
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: right instanceof InitialContext
                        children: []
                        pos: 2596
                        length: 31
                    children: []
                    pos: 2595
                    length: 33
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: "((InitialContext) right).reset();"
                    children: []
                    pos: 2643
                    length: 33
                  pos: 2629
                  length: 57
                pos: 2592
                length: 94
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: instanceof_expression
                            fields:
                              text: left instanceof Iterator
                            children: []
                            pos: 2699
                            length: 24
                          right:
                            type: instanceof_expression
                            fields:
                              text: right instanceof Iterator
                            children: []
                            pos: 2727
                            length: 25
                        children: []
                        pos: 2699
                        length: 53
                    children: []
                    pos: 2698
                    length: 55
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return findMatch((Iterator) left, (Iterator) right);
                    children: []
                    pos: 2768
                    length: 52
                  pos: 2754
                  length: 76
                pos: 2695
                length: 135
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: left instanceof Iterator
                        children: []
                        pos: 2843
                        length: 24
                    children: []
                    pos: 2842
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return containsMatch((Iterator) left, right);
                    children: []
                    pos: 2883
                    length: 45
                  pos: 2869
                  length: 69
                pos: 2839
                length: 99
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: right instanceof Iterator
                        children: []
                        pos: 2951
                        length: 25
                    children: []
                    pos: 2950
                    length: 27
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return containsMatch((Iterator) right, left);
                    children: []
                    pos: 2992
                    length: 45
                  pos: 2978
                  length: 69
                pos: 2947
                length: 100
              - type: local_variable_declaration
                fields:
                  text: double ld = InfoSetUtil.doubleValue(left);
                children: []
                pos: 3056
                length: 42
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: Double.isNaN(ld)
                        children: []
                        pos: 3111
                        length: 16
                    children: []
                    pos: 3110
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return false;
                    children: []
                    pos: 3143
                    length: 13
                  pos: 3129
                  length: 37
                pos: 3107
                length: 59
              - type: local_variable_declaration
                fields:
                  text: double rd = InfoSetUtil.doubleValue(right);
                children: []
                pos: 3175
                length: 43
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: Double.isNaN(rd)
                        children: []
                        pos: 3231
                        length: 16
                    children: []
                    pos: 3230
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return false;
                    children: []
                    pos: 3263
                    length: 13
                  pos: 3249
                  length: 37
                pos: 3227
                length: 59
              - type: return_statement
                fields:
                  text: 'return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);'
                children: []
                pos: 3295
                length: 56
              pos: 2420
              length: 937
          children: []
          pos: 2369
          length: 988
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: reduce
              children: []
              pos: 3499
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Object o
                children: []
                pos: 3506
                length: 8
              pos: 3484
              length: 259
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: o instanceof SelfContext
                        children: []
                        pos: 3530
                        length: 24
                    children: []
                    pos: 3529
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: o = ((EvalContext) o).getSingleNodePointer();
                    children: []
                    pos: 3570
                    length: 45
                  pos: 3556
                  length: 69
                pos: 3526
                length: 99
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: o instanceof Collection
                        children: []
                        pos: 3638
                        length: 23
                    children: []
                    pos: 3637
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: o = ((Collection) o).iterator();
                    children: []
                    pos: 3677
                    length: 32
                  pos: 3663
                  length: 56
                pos: 3634
                length: 85
              - type: return_statement
                fields:
                  text: return o;
                children: []
                pos: 3728
                length: 9
              pos: 3516
              length: 227
          children: []
          pos: 3484
          length: 259
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: containsMatch
              children: []
              pos: 3962
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Iterator it
                children: []
                pos: 3976
                length: 11
              pos: 3946
              length: 253
            body:
              type: block
              fields: {}
              children:
              - type: while_statement
                fields:
                  text: |-
                    while (it.hasNext()) {
                                Object element = it.next();
                                if (compute(element, value)) {
                                    return true;
                                }
                            }
                children: []
                pos: 4013
                length: 158
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 4180
                length: 13
              pos: 4003
              length: 196
          children: []
          pos: 3946
          length: 253
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: findMatch
              children: []
              pos: 4610
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Iterator lit
                children: []
                pos: 4620
                length: 12
              pos: 4594
              length: 344
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: HashSet left = new HashSet();
                children: []
                pos: 4658
                length: 29
              - type: while_statement
                fields:
                  text: |-
                    while (lit.hasNext()) {
                                left.add(lit.next());
                            }
                children: []
                pos: 4696
                length: 67
              - type: while_statement
                fields:
                  text: |-
                    while (rit.hasNext()) {
                                if (containsMatch(left.iterator(), rit.next())) {
                                    return true;
                                }
                            }
                children: []
                pos: 4772
                length: 138
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 4919
                length: 13
              pos: 4648
              length: 290
          children: []
          pos: 4594
          length: 344
        pos: 1318
        length: 3623
    children: []
    pos: 1318
    length: 3623
  pos: 0
  length: 4942
text_diff: "--- before\n+++ after\n@@ -85,7 +85,7 @@\n             return containsMatch((Iterator)
  left, right);\n         }\n         if (right instanceof Iterator) {\n-            return
  containsMatch(left, (Iterator) right);\n+            return containsMatch((Iterator)
  right, left);\n         }\n         double ld = InfoSetUtil.doubleValue(left);\n
  \        if (Double.isNaN(ld)) {\n@@ -135,15 +135,6 @@\n      * @param value to
  look for\n      * @return whether a match was found\n      */\n-    private boolean
  containsMatch(Object value, Iterator it) {\n-        while (it.hasNext()) {\n-            Object
  element = it.next();\n-            if (compute(value, element)) {\n-                return
  true;\n-            }\n-        }\n-        return false;\n-    }\n \n     /**\n
  \     * Learn whether there is an intersection between two Iterators.\n"
tree_diff: |+
  New cluster:
  UPDATE from return containsMatch(left, (Iterator) right); to return containsMatch((Iterator) right, left);
  ------------
  ===
  update-node
  ---
  return_statement: return containsMatch(left, (Iterator) right); [2992,3037]
  replace return containsMatch(left, (Iterator) right); by return containsMatch((Iterator) right, left);

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  method_declaration [4402,4655]
      identifier: containsMatch [4418,4431]
      method_parameters [4402,4655]
          formal_parameter: Object value [4432,4444]
      block [4459,4655]
          while_statement: while (it.hasNext()) {
              Object element = it.next();
              if (compute(value, element)) {
                  return true;
              }
          } [4469,4627]
          return_statement: return false; [4636,4649]

...
