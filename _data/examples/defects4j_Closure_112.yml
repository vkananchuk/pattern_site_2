---
language: java
text_diff: "--- before\n+++ after\n@@ -1189,15 +1189,9 @@\n     }\n \n     // Try
  to infer the template types\n-    Map<TemplateType, JSType> inferred = Maps.filterKeys(\n-
  \       inferTemplateTypesFromParameters(fnType, n),\n-        new Predicate<TemplateType>()
  {\n+    Map<TemplateType, JSType> inferred = \n+        inferTemplateTypesFromParameters(fnType,
  n);\n \n-          @Override\n-          public boolean apply(TemplateType key)
  {\n-            return keys.contains(key);\n-          }}\n-        );\n \n     //
  Replace all template types. If we couldn't find a replacement, we\n     // replace
  it with UNKNOWN.\n"
tree_diff: "New cluster:\nUPDATE from Map<TemplateType, JSType> inferred = Maps.filterKeys(\n
  \       inferTemplateTypesFromParameters(fnType, n),\n        new Predicate<TemplateType>()
  {\n\n          @Override\n          public boolean apply(TemplateType key) {\n            return
  keys.contains(key);\n          }}\n        ); to Map<TemplateType, JSType> inferred
  = \n        inferTemplateTypesFromParameters(fnType, n);\n------------\n===\nupdate-node\n---\nlocal_variable_declaration:
  Map<TemplateType, JSType> inferred = Maps.filterKeys(\n        inferTemplateTypesFromParameters(fnType,
  n),\n        new Predicate<TemplateType>() {\n\n          @Override\n          public
  boolean apply(TemplateType key) {\n            return keys.contains(key);\n          }}\n
  \       ); [42108,42389]\nreplace Map<TemplateType, JSType> inferred = Maps.filterKeys(\n
  \       inferTemplateTypesFromParameters(fnType, n),\n        new Predicate<TemplateType>()
  {\n\n          @Override\n          public boolean apply(TemplateType key) {\n            return
  keys.contains(key);\n          }}\n        ); by Map<TemplateType, JSType> inferred
  = \n        inferTemplateTypesFromParameters(fnType, n);\n\n"
