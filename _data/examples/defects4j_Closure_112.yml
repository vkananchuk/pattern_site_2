---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: TypeInference
        children: []
        pos: 3054
        length: 13
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType FUNCTION_LITERAL_UNDEFINED_THIS =
                  DiagnosticType.warning(
                      "JSC_FUNCTION_LITERAL_UNDEFINED_THIS",
                      "Function literal argument refers to undefined this argument");
          children: []
          pos: 3217
          length: 208
        - type: field_declaration
          fields:
            text: private final AbstractCompiler compiler;
          children: []
          pos: 3429
          length: 40
        - type: field_declaration
          fields:
            text: private final JSTypeRegistry registry;
          children: []
          pos: 3472
          length: 38
        - type: field_declaration
          fields:
            text: private final ReverseAbstractInterpreter reverseInterpreter;
          children: []
          pos: 3513
          length: 60
        - type: field_declaration
          fields:
            text: private final Scope syntacticScope;
          children: []
          pos: 3576
          length: 35
        - type: field_declaration
          fields:
            text: private final FlowScope functionScope;
          children: []
          pos: 3614
          length: 38
        - type: field_declaration
          fields:
            text: private final FlowScope bottomScope;
          children: []
          pos: 3655
          length: 36
        - type: field_declaration
          fields:
            text: private final Map<String, AssertionFunctionSpec> assertionFunctionsMap;
          children: []
          pos: 3694
          length: 71
        - type: field_declaration
          fields:
            text: private final ObjectType unknownType;
          children: []
          pos: 3790
          length: 37
        - type: constructor_declaration
          fields:
            text: |-
              TypeInference(AbstractCompiler compiler, ControlFlowGraph<Node> cfg,
                              ReverseAbstractInterpreter reverseInterpreter,
                              Scope functionScope,
                              Map<String, AssertionFunctionSpec> assertionFunctionsMap) {
                  super(cfg, new LinkedFlowScope.FlowScopeJoinOp());
                  this.compiler = compiler;
                  this.registry = compiler.getTypeRegistry();
                  this.reverseInterpreter = reverseInterpreter;
                  this.unknownType = registry.getNativeObjectType(UNKNOWN_TYPE);

                  this.syntacticScope = functionScope;
                  inferArguments(functionScope);

                  this.functionScope = LinkedFlowScope.createEntryLattice(functionScope);
                  this.assertionFunctionsMap = assertionFunctionsMap;

                  // For each local variable declared with the VAR keyword, the entry
                  // type is VOID.
                  Iterator<Var> varIt =
                      functionScope.getDeclarativelyUnboundVarsWithoutTypes();
                  while (varIt.hasNext()) {
                    Var var = varIt.next();
                    if (isUnflowable(var)) {
                      continue;
                    }

                    this.functionScope.inferSlotType(
                        var.getName(), getNativeType(VOID_TYPE));
                  }

                  this.bottomScope = LinkedFlowScope.createEntryLattice(
                      Scope.createLatticeBottom(functionScope.getRootNode()));
                }
          children: []
          pos: 3831
          length: 1234
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: inferArguments
              children: []
              pos: 5168
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Scope functionScope
                children: []
                pos: 5183
                length: 19
              pos: 5155
              length: 1514
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node functionNode = functionScope.getRootNode();
                children: []
                pos: 5210
                length: 48
              - type: local_variable_declaration
                fields:
                  text: Node astParameters = functionNode.getFirstChild().getNext();
                children: []
                pos: 5263
                length: 60
              - type: local_variable_declaration
                fields:
                  text: Node iifeArgumentNode = null;
                children: []
                pos: 5328
                length: 29
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: NodeUtil.isCallOrNewTarget(functionNode)
                        children: []
                        pos: 5367
                        length: 40
                    children: []
                    pos: 5366
                    length: 42
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: iifeArgumentNode = functionNode.getNext();
                    children: []
                    pos: 5417
                    length: 42
                  pos: 5409
                  length: 56
                pos: 5363
                length: 102
              - type: local_variable_declaration
                fields:
                  text: |-
                    FunctionType functionType =
                            JSType.toMaybeFunctionType(functionNode.getJSType());
                children: []
                pos: 5471
                length: 89
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: functionType
                            children: []
                            pos: 5569
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 5585
                            length: 4
                        children: []
                        pos: 5569
                        length: 20
                    children: []
                    pos: 5568
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Node parameterTypes = functionType.getParametersNode();
                    children: []
                    pos: 5599
                    length: 55
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: parameterTypes
                                children: []
                                pos: 5665
                                length: 14
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 5683
                                length: 4
                            children: []
                            pos: 5665
                            length: 22
                        children: []
                        pos: 5664
                        length: 24
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: Node parameterTypeNode = parameterTypes.getFirstChild();
                        children: []
                        pos: 5699
                        length: 56
                      - type: enhanced_for_statement
                        fields:
                          text: |-
                            for (Node astParameter : astParameters.children()) {
                                      Var var = functionScope.getVar(astParameter.getString());
                                      Preconditions.checkNotNull(var);
                                      if (var.isTypeInferred() &&
                                          var.getType() == unknownType) {
                                        JSType newType = null;

                                        if (iifeArgumentNode != null) {
                                          newType = iifeArgumentNode.getJSType();
                                        } else if (parameterTypeNode != null) {
                                          newType = parameterTypeNode.getJSType();
                                        }

                                        if (newType != null) {
                                          var.setType(newType);
                                          astParameter.setJSType(newType);
                                        }
                                      }

                                      if (parameterTypeNode != null) {
                                        parameterTypeNode = parameterTypeNode.getNext();
                                      }
                                      if (iifeArgumentNode != null) {
                                        iifeArgumentNode = iifeArgumentNode.getNext();
                                      }
                                    }
                        children: []
                        pos: 5764
                        length: 887
                      pos: 5689
                      length: 970
                    pos: 5661
                    length: 998
                  pos: 5591
                  length: 1074
                pos: 5565
                length: 1100
              pos: 5204
              length: 1465
          children: []
          pos: 5155
          length: 1514
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createInitialEstimateLattice
              children: []
              pos: 6695
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6673
              length: 82
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return bottomScope;
                children: []
                pos: 6732
                length: 19
              pos: 6726
              length: 29
          children: []
          pos: 6673
          length: 82
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createEntryLattice
              children: []
              pos: 6781
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6759
              length: 74
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return functionScope;
                children: []
                pos: 6808
                length: 21
              pos: 6802
              length: 31
          children: []
          pos: 6759
          length: 74
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: flowThrough
              children: []
              pos: 6859
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 6871
                length: 6
              pos: 6837
              length: 348
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: input
                            children: []
                            pos: 7025
                            length: 5
                          right:
                            type: identifier
                            fields:
                              text: bottomScope
                            children: []
                            pos: 7034
                            length: 11
                        children: []
                        pos: 7025
                        length: 20
                    children: []
                    pos: 7024
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return input;
                    children: []
                    pos: 7055
                    length: 13
                  pos: 7047
                  length: 27
                pos: 7021
                length: 53
              - type: local_variable_declaration
                fields:
                  text: FlowScope output = input.createChildFlowScope();
                children: []
                pos: 7080
                length: 48
              - type: expression_statement
                fields:
                  text: output = traverse(n, output);
                children: []
                pos: 7133
                length: 29
              - type: return_statement
                fields:
                  text: return output;
                children: []
                pos: 7167
                length: 14
              pos: 6896
              length: 289
          children: []
          pos: 6837
          length: 348
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: branchedFlowThrough
              children: []
              pos: 7275
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node source
                children: []
                pos: 7295
                length: 11
              pos: 7189
              length: 4755
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: FlowScope output = flowThrough(source, input);
                children: []
                pos: 7647
                length: 46
              - type: local_variable_declaration
                fields:
                  text: Node condition = null;
                children: []
                pos: 7698
                length: 22
              - type: local_variable_declaration
                fields:
                  text: FlowScope conditionFlowScope = null;
                children: []
                pos: 7725
                length: 36
              - type: local_variable_declaration
                fields:
                  text: BooleanOutcomePair conditionOutcomes = null;
                children: []
                pos: 7766
                length: 44
              - type: local_variable_declaration
                fields:
                  text: List<DiGraphEdge<Node, Branch>> branchEdges = getCfg().getOutEdges(source);
                children: []
                pos: 7816
                length: 75
              - type: local_variable_declaration
                fields:
                  text: List<FlowScope> result = Lists.newArrayListWithCapacity(branchEdges.size());
                children: []
                pos: 7896
                length: 76
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (DiGraphEdge<Node, Branch> branchEdge : branchEdges) {
                          Branch branch = branchEdge.getValue();
                          FlowScope newScope = output;

                          switch (branch) {
                            case ON_TRUE:
                              if (NodeUtil.isForIn(source)) {
                                // item is assigned a property name, so its type should be string.
                                Node item = source.getFirstChild();
                                Node obj = item.getNext();

                                FlowScope informed = traverse(obj, output.createChildFlowScope());

                                if (item.isVar()) {
                                  item = item.getFirstChild();
                                }
                                if (item.isName()) {
                                  JSType iterKeyType = getNativeType(STRING_TYPE);
                                  ObjectType objType = getJSType(obj).dereference();
                                  JSType objIndexType = objType == null ?
                                      null : objType.getTemplateTypeMap().getTemplateType(
                                          registry.getObjectIndexKey());
                                  if (objIndexType != null && !objIndexType.isUnknownType()) {
                                    JSType narrowedKeyType =
                                        iterKeyType.getGreatestSubtype(objIndexType);
                                    if (!narrowedKeyType.isEmptyType()) {
                                      iterKeyType = narrowedKeyType;
                                    }
                                  }
                                  redeclareSimpleVar(informed, item, iterKeyType);
                                }
                                newScope = informed;
                                break;
                              }

                              // FALL THROUGH

                            case ON_FALSE:
                              if (condition == null) {
                                condition = NodeUtil.getConditionExpression(source);
                                if (condition == null && source.isCase()) {
                                  condition = source;

                                  // conditionFlowScope is cached from previous iterations
                                  // of the loop.
                                  if (conditionFlowScope == null) {
                                    conditionFlowScope = traverse(
                                        condition.getFirstChild(), output.createChildFlowScope());
                                  }
                                }
                              }

                              if (condition != null) {
                                if (condition.isAnd() ||
                                    condition.isOr()) {
                                  // When handling the short-circuiting binary operators,
                                  // the outcome scope on true can be different than the outcome
                                  // scope on false.
                                  //
                                  // TODO(nicksantos): The "right" way to do this is to
                                  // carry the known outcome all the way through the
                                  // recursive traversal, so that we can construct a
                                  // different flow scope based on the outcome. However,
                                  // this would require a bunch of code and a bunch of
                                  // extra computation for an edge case. This seems to be
                                  // a "good enough" approximation.

                                  // conditionOutcomes is cached from previous iterations
                                  // of the loop.
                                  if (conditionOutcomes == null) {
                                    conditionOutcomes = condition.isAnd() ?
                                        traverseAnd(condition, output.createChildFlowScope()) :
                                        traverseOr(condition, output.createChildFlowScope());
                                  }
                                  newScope =
                                      reverseInterpreter.getPreciserScopeKnowingConditionOutcome(
                                          condition,
                                          conditionOutcomes.getOutcomeFlowScope(
                                              condition.getType(), branch == Branch.ON_TRUE),
                                          branch == Branch.ON_TRUE);
                                } else {
                                  // conditionFlowScope is cached from previous iterations
                                  // of the loop.
                                  if (conditionFlowScope == null) {
                                    conditionFlowScope =
                                        traverse(condition, output.createChildFlowScope());
                                  }
                                  newScope =
                                      reverseInterpreter.getPreciserScopeKnowingConditionOutcome(
                                          condition, conditionFlowScope, branch == Branch.ON_TRUE);
                                }
                              }
                              break;
                          }

                          result.add(newScope.optimize());
                        }
                children: []
                pos: 7977
                length: 3944
              - type: return_statement
                fields:
                  text: return result;
                children: []
                pos: 11926
                length: 14
              pos: 7325
              length: 4619
          children: []
          pos: 7189
          length: 4755
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverse
              children: []
              pos: 11966
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 11975
                length: 6
              pos: 11948
              length: 3810
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 12014
                        length: 11
                    children: []
                    pos: 12013
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.ASSIGN:
                                scope = traverseAssign(n, scope);
                                break;

                              case Token.NAME:
                                scope = traverseName(n, scope);
                                break;

                              case Token.GETPROP:
                                scope = traverseGetProp(n, scope);
                                break;

                              case Token.AND:
                                scope = traverseAnd(n, scope).getJoinedFlowScope()
                                    .createChildFlowScope();
                                break;

                              case Token.OR:
                                scope = traverseOr(n, scope).getJoinedFlowScope()
                                    .createChildFlowScope();
                                break;

                              case Token.HOOK:
                                scope = traverseHook(n, scope);
                                break;

                              case Token.OBJECTLIT:
                                scope = traverseObjectLiteral(n, scope);
                                break;

                              case Token.CALL:
                                scope = traverseCall(n, scope);
                                break;

                              case Token.NEW:
                                scope = traverseNew(n, scope);
                                break;

                              case Token.ASSIGN_ADD:
                              case Token.ADD:
                                scope = traverseAdd(n, scope);
                                break;

                              case Token.POS:
                              case Token.NEG:
                                scope = traverse(n.getFirstChild(), scope);  // Find types.
                                n.setJSType(getNativeType(NUMBER_TYPE));
                                break;

                              case Token.ARRAYLIT:
                                scope = traverseArrayLiteral(n, scope);
                                break;

                              case Token.THIS:
                                n.setJSType(scope.getTypeOfThis());
                                break;

                              case Token.ASSIGN_LSH:
                              case Token.ASSIGN_RSH:
                              case Token.LSH:
                              case Token.RSH:
                              case Token.ASSIGN_URSH:
                              case Token.URSH:
                              case Token.ASSIGN_DIV:
                              case Token.ASSIGN_MOD:
                              case Token.ASSIGN_BITAND:
                              case Token.ASSIGN_BITXOR:
                              case Token.ASSIGN_BITOR:
                              case Token.ASSIGN_MUL:
                              case Token.ASSIGN_SUB:
                              case Token.DIV:
                              case Token.MOD:
                              case Token.BITAND:
                              case Token.BITXOR:
                              case Token.BITOR:
                              case Token.MUL:
                              case Token.SUB:
                              case Token.DEC:
                              case Token.INC:
                              case Token.BITNOT:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getNativeType(NUMBER_TYPE));
                                break;

                              case Token.PARAM_LIST:
                                scope = traverse(n.getFirstChild(), scope);
                                n.setJSType(getJSType(n.getFirstChild()));
                                break;

                              case Token.COMMA:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getJSType(n.getLastChild()));
                                break;

                              case Token.TYPEOF:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getNativeType(STRING_TYPE));
                                break;

                              case Token.DELPROP:
                              case Token.LT:
                              case Token.LE:
                              case Token.GT:
                              case Token.GE:
                              case Token.NOT:
                              case Token.EQ:
                              case Token.NE:
                              case Token.SHEQ:
                              case Token.SHNE:
                              case Token.INSTANCEOF:
                              case Token.IN:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getNativeType(BOOLEAN_TYPE));
                                break;

                              case Token.GETELEM:
                                scope = traverseGetElem(n, scope);
                                break;

                              case Token.EXPR_RESULT:
                                scope = traverseChildren(n, scope);
                                if (n.getFirstChild().isGetProp()) {
                                  ensurePropertyDeclared(n.getFirstChild());
                                }
                                break;

                              case Token.SWITCH:
                                scope = traverse(n.getFirstChild(), scope);
                                break;

                              case Token.RETURN:
                                scope = traverseReturn(n, scope);
                                break;

                              case Token.VAR:
                              case Token.THROW:
                                scope = traverseChildren(n, scope);
                                break;

                              case Token.CATCH:
                                scope = traverseCatch(n, scope);
                                break;

                              case Token.CAST:
                                scope = traverseChildren(n, scope);
                                JSDocInfo info = n.getJSDocInfo();
                                if (info != null && info.hasType()) {
                                  n.setJSType(info.getType().evaluate(syntacticScope, registry));
                                }
                                break;
                            }
                    children: []
                    pos: 12027
                    length: 3708
                children: []
                pos: 12006
                length: 3729
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 15741
                length: 13
              pos: 12000
              length: 3758
          children: []
          pos: 11948
          length: 3810
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseReturn
              children: []
              pos: 15822
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 15837
                length: 6
              pos: 15804
              length: 496
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 15868
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node retValue = n.getFirstChild();
                children: []
                pos: 15909
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: retValue
                            children: []
                            pos: 15952
                            length: 8
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 15964
                            length: 4
                        children: []
                        pos: 15952
                        length: 16
                    children: []
                    pos: 15951
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType type = functionScope.getRootNode().getJSType();
                    children: []
                    pos: 15978
                    length: 54
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 16043
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 16051
                                length: 4
                            children: []
                            pos: 16043
                            length: 12
                        children: []
                        pos: 16042
                        length: 14
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: FunctionType fnType = type.toMaybeFunctionType();
                        children: []
                        pos: 16067
                        length: 49
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: fnType
                                    children: []
                                    pos: 16129
                                    length: 6
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 16139
                                    length: 4
                                children: []
                                pos: 16129
                                length: 14
                            children: []
                            pos: 16128
                            length: 16
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: |-
                                inferPropertyTypesToMatchConstraint(
                                              retValue.getJSType(), fnType.getReturnType());
                            children: []
                            pos: 16157
                            length: 97
                          pos: 16145
                          length: 119
                        pos: 16125
                        length: 139
                      pos: 16057
                      length: 215
                    pos: 16039
                    length: 233
                  pos: 15970
                  length: 308
                pos: 15948
                length: 330
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 16283
                length: 13
              pos: 15862
              length: 438
          children: []
          pos: 15804
          length: 496
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseCatch
              children: []
              pos: 16465
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node catchNode
                children: []
                pos: 16479
                length: 14
              pos: 16447
              length: 548
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node name = catchNode.getFirstChild();
                children: []
                pos: 16518
                length: 38
              - type: local_variable_declaration
                fields:
                  text: JSType type;
                children: []
                pos: 16561
                length: 12
              - type: local_variable_declaration
                fields:
                  text: JSDocInfo info = name.getJSDocInfo();
                children: []
                pos: 16687
                length: 37
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: info
                                children: []
                                pos: 16733
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 16741
                                length: 4
                            children: []
                            pos: 16733
                            length: 12
                          right:
                            type: method_invocation
                            fields:
                              text: info.hasType()
                            children: []
                            pos: 16749
                            length: 14
                        children: []
                        pos: 16733
                        length: 30
                    children: []
                    pos: 16732
                    length: 32
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: type = info.getType().evaluate(syntacticScope, registry);
                    children: []
                    pos: 16773
                    length: 57
                  pos: 16765
                  length: 71
                pos: 16729
                length: 175
              - type: expression_statement
                fields:
                  text: redeclareSimpleVar(scope, name, type);
                children: []
                pos: 16909
                length: 38
              - type: expression_statement
                fields:
                  text: name.setJSType(type);
                children: []
                pos: 16952
                length: 21
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 16978
                length: 13
              pos: 16512
              length: 483
          children: []
          pos: 16447
          length: 548
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseAssign
              children: []
              pos: 17017
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 17032
                length: 6
              pos: 16999
              length: 366
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 17063
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 17098
                length: 30
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 17133
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = left.getJSType();
                children: []
                pos: 17174
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = getJSType(right);
                children: []
                pos: 17214
                length: 36
              - type: expression_statement
                fields:
                  text: n.setJSType(rightType);
                children: []
                pos: 17255
                length: 23
              - type: expression_statement
                fields:
                  text: updateScopeForTypeChange(scope, left, leftType, rightType);
                children: []
                pos: 17284
                length: 59
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 17348
                length: 13
              pos: 17057
              length: 308
          children: []
          pos: 16999
          length: 366
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateScopeForTypeChange
              children: []
              pos: 17499
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 17531
                length: 15
              pos: 17486
              length: 1778
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(resultType);
                children: []
                pos: 17601
                length: 39
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: left.getType()
                        children: []
                        pos: 17653
                        length: 14
                    children: []
                    pos: 17652
                    length: 16
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.NAME:
                                String varName = left.getString();
                                Var var = syntacticScope.getVar(varName);

                                // When looking at VAR initializers for declared VARs, we trust
                                // the declared type over the type it's being initialized to.
                                // This has two purposes:
                                // 1) We avoid re-declaring declared variables so that built-in
                                //    types defined in externs are not redeclared.
                                // 2) When there's a lexical closure like
                                //    /** @type {?string} */ var x = null;
                                //    function f() { x = 'xyz'; }
                                //    the inference will ignore the lexical closure,
                                //    which is just wrong. This bug needs to be fixed eventually.
                                boolean isVarDeclaration = left.hasChildren();
                                if (!isVarDeclaration || var == null || var.isTypeInferred()) {
                                  redeclareSimpleVar(scope, left, resultType);
                                }
                                left.setJSType(isVarDeclaration || leftType == null ?
                                    resultType : null);

                                if (var != null && var.isTypeInferred()) {
                                  JSType oldType = var.getType();
                                  var.setType(oldType == null ?
                                      resultType : oldType.getLeastSupertype(resultType));
                                }
                                break;
                              case Token.GETPROP:
                                String qualifiedName = left.getQualifiedName();
                                if (qualifiedName != null) {
                                  scope.inferQualifiedSlot(left, qualifiedName,
                                      leftType == null ? unknownType : leftType,
                                      resultType);
                                }

                                left.setJSType(resultType);
                                ensurePropertyDefined(left, resultType);
                                break;
                            }
                    children: []
                    pos: 17669
                    length: 1591
                children: []
                pos: 17645
                length: 1615
              pos: 17595
              length: 1669
          children: []
          pos: 17486
          length: 1778
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensurePropertyDefined
              children: []
              pos: 19359
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getprop
                children: []
                pos: 19381
                length: 12
              pos: 19346
              length: 3233
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String propName = getprop.getLastChild().getString();
                children: []
                pos: 19419
                length: 53
              - type: local_variable_declaration
                fields:
                  text: Node obj = getprop.getFirstChild();
                children: []
                pos: 19477
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType nodeType = getJSType(obj);
                children: []
                pos: 19517
                length: 33
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType objectType = ObjectType.cast(
                            nodeType.restrictByNotNullOrUndefined());
                children: []
                pos: 19555
                length: 90
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean propCreationInConstructor = obj.isThis() &&
                            getJSType(syntacticScope.getRootNode()).isConstructor();
                children: []
                pos: 19650
                length: 116
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: objectType
                            children: []
                            pos: 19776
                            length: 10
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 19790
                            length: 4
                        children: []
                        pos: 19776
                        length: 18
                    children: []
                    pos: 19775
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: registry.registerPropertyOnType(propName, nodeType);
                    children: []
                    pos: 19804
                    length: 52
                  pos: 19796
                  length: 66
                pos: 19772
                length: 2803
              pos: 19413
              length: 3166
          children: []
          pos: 19346
          length: 3233
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensurePropertyDeclared
              children: []
              pos: 22863
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getprop
                children: []
                pos: 22886
                length: 12
              pos: 22850
              length: 266
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType ownerType = ObjectType.cast(
                            getJSType(getprop.getFirstChild()).restrictByNotNullOrUndefined());
                children: []
                pos: 22906
                length: 115
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: ownerType
                            children: []
                            pos: 23030
                            length: 9
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 23043
                            length: 4
                        children: []
                        pos: 23030
                        length: 17
                    children: []
                    pos: 23029
                    length: 19
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensurePropertyDeclaredHelper(getprop, ownerType);
                    children: []
                    pos: 23057
                    length: 49
                  pos: 23049
                  length: 63
                pos: 23026
                length: 86
              pos: 22900
              length: 216
          children: []
          pos: 22850
          length: 266
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensurePropertyDeclaredHelper
              children: []
              pos: 23247
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getprop
                children: []
                pos: 23283
                length: 12
              pos: 23231
              length: 834
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String propName = getprop.getLastChild().getString();
                children: []
                pos: 23326
                length: 53
              - type: local_variable_declaration
                fields:
                  text: String qName = getprop.getQualifiedName();
                children: []
                pos: 23384
                length: 42
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: qName
                            children: []
                            pos: 23435
                            length: 5
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 23444
                            length: 4
                        children: []
                        pos: 23435
                        length: 13
                    children: []
                    pos: 23434
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Var var = syntacticScope.getVar(qName);
                    children: []
                    pos: 23458
                    length: 39
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: var
                                    children: []
                                    pos: 23508
                                    length: 3
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 23515
                                    length: 4
                                children: []
                                pos: 23508
                                length: 11
                              right:
                                type: unary_expression
                                fields:
                                  text: "!var.isTypeInferred()"
                                children: []
                                pos: 23523
                                length: 21
                            children: []
                            pos: 23508
                            length: 36
                        children: []
                        pos: 23507
                        length: 38
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: or
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: propName.equals("prototype")
                                    children: []
                                    pos: 23635
                                    length: 28
                                  right:
                                    type: parenthesized_expression
                                    fields:
                                      expression:
                                        type: and
                                        fields:
                                          left:
                                            type: unary_expression
                                            fields:
                                              text: "!objectType.hasOwnProperty(propName)"
                                            children: []
                                            pos: 23758
                                            length: 36
                                          right:
                                            type: parenthesized_expression
                                            fields:
                                              expression:
                                                type: or
                                                fields:
                                                  left:
                                                    type: unary_expression
                                                    fields:
                                                      text: "!objectType.isInstanceType()"
                                                    children: []
                                                    pos: 23812
                                                    length: 28
                                                  right:
                                                    type: parenthesized_expression
                                                    fields:
                                                      expression:
                                                        type: and
                                                        fields:
                                                          left:
                                                            type: method_invocation
                                                            fields:
                                                              text: var.isExtern()
                                                            children: []
                                                            pos: 23862
                                                            length: 14
                                                          right:
                                                            type: unary_expression
                                                            fields:
                                                              text: "!objectType.isNativeObjectType()"
                                                            children: []
                                                            pos: 23880
                                                            length: 32
                                                        children: []
                                                        pos: 23862
                                                        length: 50
                                                    children: []
                                                    pos: 23861
                                                    length: 52
                                                children: []
                                                pos: 23812
                                                length: 101
                                            children: []
                                            pos: 23811
                                            length: 103
                                        children: []
                                        pos: 23758
                                        length: 156
                                    children: []
                                    pos: 23757
                                    length: 158
                                children: []
                                pos: 23635
                                length: 280
                            children: []
                            pos: 23634
                            length: 282
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: return_statement
                            fields:
                              text: |-
                                return objectType.defineDeclaredProperty(
                                              propName, var.getType(), getprop);
                            children: []
                            pos: 23929
                            length: 90
                          pos: 23917
                          length: 112
                        pos: 23631
                        length: 398
                      pos: 23546
                      length: 491
                    pos: 23504
                    length: 533
                  pos: 23450
                  length: 593
                pos: 23431
                length: 612
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 24048
                length: 13
              pos: 23320
              length: 745
          children: []
          pos: 23231
          length: 834
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseName
              children: []
              pos: 24087
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 24100
                length: 6
              pos: 24069
              length: 2002
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String varName = n.getString();
                children: []
                pos: 24131
                length: 31
              - type: local_variable_declaration
                fields:
                  text: Node value = n.getFirstChild();
                children: []
                pos: 24167
                length: 31
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 24203
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: value
                            children: []
                            pos: 24240
                            length: 5
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 24249
                            length: 4
                        children: []
                        pos: 24240
                        length: 13
                    children: []
                    pos: 24239
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: scope = traverse(value, scope);
                    children: []
                    pos: 24263
                    length: 31
                  - type: expression_statement
                    fields:
                      text: |-
                        updateScopeForTypeChange(scope, n, n.getJSType() /* could be null */,
                                  getJSType(value));
                    children: []
                    pos: 24301
                    length: 98
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 24406
                    length: 13
                  pos: 24255
                  length: 170
                pos: 24236
                length: 1790
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 26031
                length: 18
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 26054
                length: 13
              pos: 24125
              length: 1946
          children: []
          pos: 24069
          length: 2002
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseArrayLiteral
              children: []
              pos: 26138
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 26159
                length: 6
              pos: 26120
              length: 171
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 26190
                length: 35
              - type: expression_statement
                fields:
                  text: n.setJSType(getNativeType(ARRAY_TYPE));
                children: []
                pos: 26230
                length: 39
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 26274
                length: 13
              pos: 26184
              length: 107
          children: []
          pos: 26120
          length: 171
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseObjectLiteral
              children: []
              pos: 26313
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 26335
                length: 6
              pos: 26295
              length: 1930
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 26366
                length: 28
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(type);
                children: []
                pos: 26399
                length: 33
              - type: for_statement
                fields:
                  text: |-
                    for (Node name = n.getFirstChild(); name != null; name = name.getNext()) {
                          scope = traverse(name.getFirstChild(), scope);
                        }
                children: []
                pos: 26438
                length: 133
              - type: local_variable_declaration
                fields:
                  text: ObjectType objectType = ObjectType.cast(type);
                children: []
                pos: 26745
                length: 46
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: objectType
                                    children: []
                                    pos: 26800
                                    length: 10
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 26814
                                    length: 4
                                children: []
                                pos: 26800
                                length: 18
                              right:
                                type: method_invocation
                                fields:
                                  text: n.getBooleanProp(Node.REFLECTED_OBJECT)
                                children: []
                                pos: 26830
                                length: 39
                            children: []
                            pos: 26800
                            length: 69
                          right:
                            type: method_invocation
                            fields:
                              text: objectType.isEnumType()
                            children: []
                            pos: 26881
                            length: 23
                        children: []
                        pos: 26800
                        length: 104
                    children: []
                    pos: 26799
                    length: 106
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 26914
                    length: 13
                  pos: 26906
                  length: 27
                pos: 26796
                length: 137
              - type: local_variable_declaration
                fields:
                  text: |-
                    String qObjName = NodeUtil.getBestLValueName(
                            NodeUtil.getBestLValue(n));
                children: []
                pos: 26939
                length: 81
              - type: for_statement
                fields:
                  text: |-
                    for (Node name = n.getFirstChild(); name != null;
                             name = name.getNext()) {
                          String memberName = NodeUtil.getObjectLitKeyName(name);
                          if (memberName != null) {
                            JSType rawValueType =  name.getFirstChild().getJSType();
                            JSType valueType = NodeUtil.getObjectLitKeyTypeFromValueType(
                                name, rawValueType);
                            if (valueType == null) {
                              valueType = unknownType;
                            }
                            objectType.defineInferredProperty(memberName, valueType, name);

                            // Do normal flow inference if this is a direct property assignment.
                            if (qObjName != null && name.isStringKey()) {
                              String qKeyName = qObjName + "." + memberName;
                              Var var = syntacticScope.getVar(qKeyName);
                              JSType oldType = var == null ? null : var.getType();
                              if (var != null && var.isTypeInferred()) {
                                var.setType(oldType == null ?
                                    valueType : oldType.getLeastSupertype(oldType));
                              }

                              scope.inferQualifiedSlot(name, qKeyName,
                                  oldType == null ? unknownType : oldType,
                                  valueType);
                            }
                          } else {
                            n.setJSType(unknownType);
                          }
                        }
                children: []
                pos: 27025
                length: 1178
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 28208
                length: 13
              pos: 26360
              length: 1865
          children: []
          pos: 26295
          length: 1930
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseAdd
              children: []
              pos: 28247
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 28259
                length: 6
              pos: 28229
              length: 1116
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 28290
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = left.getNext();
                children: []
                pos: 28325
                length: 28
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 28358
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = left.getJSType();
                children: []
                pos: 28399
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = right.getJSType();
                children: []
                pos: 28439
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType type = unknownType;
                children: []
                pos: 28482
                length: 26
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: leftType
                                children: []
                                pos: 28517
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 28529
                                length: 4
                            children: []
                            pos: 28517
                            length: 16
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: rightType
                                children: []
                                pos: 28537
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 28550
                                length: 4
                            children: []
                            pos: 28537
                            length: 17
                        children: []
                        pos: 28517
                        length: 37
                    children: []
                    pos: 28516
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: boolean leftIsUnknown = leftType.isUnknownType();
                    children: []
                    pos: 28564
                    length: 49
                  - type: local_variable_declaration
                    fields:
                      text: boolean rightIsUnknown = rightType.isUnknownType();
                    children: []
                    pos: 28620
                    length: 51
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: leftIsUnknown
                                children: []
                                pos: 28682
                                length: 13
                              right:
                                type: identifier
                                fields:
                                  text: rightIsUnknown
                                children: []
                                pos: 28699
                                length: 14
                            children: []
                            pos: 28682
                            length: 31
                        children: []
                        pos: 28681
                        length: 33
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: type = unknownType;
                        children: []
                        pos: 28725
                        length: 19
                      pos: 28715
                      length: 37
                    pos: 28678
                    length: 520
                  pos: 28556
                  length: 648
                pos: 28513
                length: 691
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 29209
                length: 18
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.isAssignAdd()
                        children: []
                        pos: 29237
                        length: 15
                    children: []
                    pos: 29236
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: updateScopeForTypeChange(scope, left, leftType, type);
                    children: []
                    pos: 29262
                    length: 54
                  pos: 29254
                  length: 68
                pos: 29233
                length: 89
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 29328
                length: 13
              pos: 28284
              length: 1061
          children: []
          pos: 28229
          length: 1116
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isAddedAsNumber
              children: []
              pos: 29365
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType type
                children: []
                pos: 29381
                length: 11
              pos: 29349
              length: 197
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return type.isSubtype(registry.createUnionType(VOID_TYPE, NULL_TYPE,
                            NUMBER_VALUE_OR_OBJECT_TYPE, BOOLEAN_TYPE, BOOLEAN_OBJECT_TYPE));
                children: []
                pos: 29400
                length: 142
              pos: 29394
              length: 152
          children: []
          pos: 29349
          length: 197
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseHook
              children: []
              pos: 29568
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 29581
                length: 6
              pos: 29550
              length: 1146
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node condition = n.getFirstChild();
                children: []
                pos: 29612
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node trueNode = condition.getNext();
                children: []
                pos: 29652
                length: 36
              - type: local_variable_declaration
                fields:
                  text: Node falseNode = n.getLastChild();
                children: []
                pos: 29693
                length: 34
              - type: expression_statement
                fields:
                  text: scope = traverse(condition, scope);
                children: []
                pos: 29761
                length: 35
              - type: local_variable_declaration
                fields:
                  text: |-
                    FlowScope trueScope = reverseInterpreter.
                            getPreciserScopeKnowingConditionOutcome(
                                condition, scope, true);
                children: []
                pos: 29876
                length: 127
              - type: local_variable_declaration
                fields:
                  text: |-
                    FlowScope falseScope = reverseInterpreter.
                            getPreciserScopeKnowingConditionOutcome(
                                condition, scope, false);
                children: []
                pos: 30008
                length: 129
              - type: expression_statement
                fields:
                  text: traverse(trueNode, trueScope.createChildFlowScope());
                children: []
                pos: 30192
                length: 53
              - type: expression_statement
                fields:
                  text: traverse(falseNode, falseScope.createChildFlowScope());
                children: []
                pos: 30302
                length: 55
              - type: local_variable_declaration
                fields:
                  text: JSType trueType = trueNode.getJSType();
                children: []
                pos: 30414
                length: 39
              - type: local_variable_declaration
                fields:
                  text: JSType falseType = falseNode.getJSType();
                children: []
                pos: 30458
                length: 41
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: trueType
                                children: []
                                pos: 30508
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 30520
                                length: 4
                            children: []
                            pos: 30508
                            length: 16
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: falseType
                                children: []
                                pos: 30528
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 30541
                                length: 4
                            children: []
                            pos: 30528
                            length: 17
                        children: []
                        pos: 30508
                        length: 37
                    children: []
                    pos: 30507
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: n.setJSType(trueType.getLeastSupertype(falseType));
                    children: []
                    pos: 30555
                    length: 51
                  pos: 30547
                  length: 65
                pos: 30504
                length: 146
              - type: return_statement
                fields:
                  text: return scope.createChildFlowScope();
                children: []
                pos: 30656
                length: 36
              pos: 29606
              length: 1090
          children: []
          pos: 29550
          length: 1146
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseCall
              children: []
              pos: 30718
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 30731
                length: 6
              pos: 30700
              length: 632
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 30762
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 30803
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType functionType = getJSType(left).restrictByNotNullOrUndefined();
                children: []
                pos: 30838
                length: 69
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: functionType.isFunctionType()
                        children: []
                        pos: 30916
                        length: 29
                    children: []
                    pos: 30915
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType fnType = functionType.toMaybeFunctionType();
                    children: []
                    pos: 30955
                    length: 57
                  - type: expression_statement
                    fields:
                      text: n.setJSType(fnType.getReturnType());
                    children: []
                    pos: 31019
                    length: 36
                  - type: expression_statement
                    fields:
                      text: backwardsInferenceFromCallSite(n, fnType);
                    children: []
                    pos: 31062
                    length: 42
                  pos: 30947
                  length: 163
                pos: 30912
                length: 346
              - type: expression_statement
                fields:
                  text: scope = tightenTypesAfterAssertions(scope, n);
                children: []
                pos: 31264
                length: 46
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 31315
                length: 13
              pos: 30756
              length: 576
          children: []
          pos: 30700
          length: 632
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: tightenTypesAfterAssertions
              children: []
              pos: 31354
              length: 27
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 31382
                length: 15
              pos: 31336
              length: 1457
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = callNode.getFirstChild();
                children: []
                pos: 31426
                length: 37
              - type: local_variable_declaration
                fields:
                  text: Node firstParam = left.getNext();
                children: []
                pos: 31468
                length: 33
              - type: local_variable_declaration
                fields:
                  text: |-
                    AssertionFunctionSpec assertionFunctionSpec =
                            assertionFunctionsMap.get(left.getQualifiedName());
                children: []
                pos: 31506
                length: 105
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: assertionFunctionSpec
                                children: []
                                pos: 31620
                                length: 21
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 31645
                                length: 4
                            children: []
                            pos: 31620
                            length: 29
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: firstParam
                                children: []
                                pos: 31653
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 31667
                                length: 4
                            children: []
                            pos: 31653
                            length: 18
                        children: []
                        pos: 31620
                        length: 51
                    children: []
                    pos: 31619
                    length: 53
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 31681
                    length: 13
                  pos: 31673
                  length: 27
                pos: 31616
                length: 84
              - type: local_variable_declaration
                fields:
                  text: Node assertedNode = assertionFunctionSpec.getAssertedParam(firstParam);
                children: []
                pos: 31705
                length: 71
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: assertedNode
                            children: []
                            pos: 31785
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 31801
                            length: 4
                        children: []
                        pos: 31785
                        length: 20
                    children: []
                    pos: 31784
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 31815
                    length: 13
                  pos: 31807
                  length: 27
                pos: 31781
                length: 53
              - type: local_variable_declaration
                fields:
                  text: |-
                    JSType assertedType = assertionFunctionSpec.getAssertedType(
                            callNode, registry);
                children: []
                pos: 31839
                length: 89
              - type: local_variable_declaration
                fields:
                  text: String assertedNodeName = assertedNode.getQualifiedName();
                children: []
                pos: 31933
                length: 58
              - type: local_variable_declaration
                fields:
                  text: JSType narrowed;
                children: []
                pos: 31997
                length: 16
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: assertedType
                            children: []
                            pos: 32090
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 32106
                            length: 4
                        children: []
                        pos: 32090
                        length: 20
                    children: []
                    pos: 32089
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        scope = reverseInterpreter.getPreciserScopeKnowingConditionOutcome(
                                  assertedNode, scope, true);
                    children: []
                    pos: 32177
                    length: 105
                  - type: expression_statement
                    fields:
                      text: narrowed = getJSType(assertedNode).restrictByNotNullOrUndefined();
                    children: []
                    pos: 32339
                    length: 66
                  pos: 32112
                  length: 299
                pos: 32086
                length: 650
              - type: expression_statement
                fields:
                  text: callNode.setJSType(narrowed);
                children: []
                pos: 32742
                length: 29
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 32776
                length: 13
              pos: 31420
              length: 1373
          children: []
          pos: 31336
          length: 1457
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: narrowScope
              children: []
              pos: 32815
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 32827
                length: 15
              pos: 32797
              length: 468
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: node.isThis()
                        children: []
                        pos: 32882
                        length: 13
                    children: []
                    pos: 32881
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 32984
                    length: 13
                  pos: 32897
                  length: 106
                pos: 32878
                length: 125
              - type: expression_statement
                fields:
                  text: scope = scope.createChildFlowScope();
                children: []
                pos: 33009
                length: 37
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: node.isGetProp()
                        children: []
                        pos: 33055
                        length: 16
                    children: []
                    pos: 33054
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        scope.inferQualifiedSlot(
                                  node, node.getQualifiedName(), getJSType(node), narrowed);
                    children: []
                    pos: 33081
                    length: 94
                  pos: 33073
                  length: 108
                pos: 33051
                length: 192
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 33248
                length: 13
              pos: 32872
              length: 393
          children: []
          pos: 32797
          length: 468
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: backwardsInferenceFromCallSite
              children: []
              pos: 34204
              length: 30
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 34235
                length: 6
              pos: 34191
              length: 302
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: boolean updatedFnType = inferTemplatedTypesForCall(n, fnType);
                children: []
                pos: 34270
                length: 62
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: updatedFnType
                        children: []
                        pos: 34341
                        length: 13
                    children: []
                    pos: 34340
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: fnType = n.getFirstChild().getJSType().toMaybeFunctionType();
                    children: []
                    pos: 34364
                    length: 61
                  pos: 34356
                  length: 75
                pos: 34337
                length: 94
              - type: expression_statement
                fields:
                  text: updateTypeOfParameters(n, fnType);
                children: []
                pos: 34436
                length: 34
              - type: expression_statement
                fields:
                  text: updateBind(n);
                children: []
                pos: 34475
                length: 14
              pos: 34264
              length: 229
          children: []
          pos: 34191
          length: 302
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateBind
              children: []
              pos: 34677
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 34688
                length: 6
              pos: 34664
              length: 539
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: |-
                    CodingConvention.Bind bind =
                            compiler.getCodingConvention().describeFunctionBind(n, true);
                children: []
                pos: 34702
                length: 98
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: bind
                            children: []
                            pos: 34809
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 34817
                            length: 4
                        children: []
                        pos: 34809
                        length: 12
                    children: []
                    pos: 34808
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 34831
                    length: 7
                  pos: 34823
                  length: 21
                pos: 34805
                length: 39
              - type: local_variable_declaration
                fields:
                  text: |-
                    FunctionType callTargetFn = getJSType(bind.target)
                            .restrictByNotNullOrUndefined().toMaybeFunctionType();
                children: []
                pos: 34850
                length: 113
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: callTargetFn
                            children: []
                            pos: 34972
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 34988
                            length: 4
                        children: []
                        pos: 34972
                        length: 20
                    children: []
                    pos: 34971
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 35002
                    length: 7
                  pos: 34994
                  length: 21
                pos: 34968
                length: 47
              - type: expression_statement
                fields:
                  text: |-
                    n.setJSType(
                            callTargetFn.getBindReturnType(
                                // getBindReturnType expects the 'this' argument to be included.
                                bind.getBoundParameterCount() + 1));
                children: []
                pos: 35021
                length: 178
              pos: 34696
              length: 507
          children: []
          pos: 34664
          length: 539
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateTypeOfParameters
              children: []
              pos: 35380
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 35403
                length: 6
              pos: 35367
              length: 1061
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int i = 0;
                children: []
                pos: 35438
                length: 10
              - type: local_variable_declaration
                fields:
                  text: int childCount = n.getChildCount();
                children: []
                pos: 35453
                length: 35
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (Node iParameter : fnType.getParameters()) {
                          if (i + 1 >= childCount) {
                            // TypeCheck#visitParametersList will warn so we bail.
                            return;
                          }

                          JSType iParameterType = getJSType(iParameter);
                          Node iArgument = n.getChildAtIndex(i + 1);
                          JSType iArgumentType = getJSType(iArgument);
                          inferPropertyTypesToMatchConstraint(iArgumentType, iParameterType);

                          // TODO(johnlenz): Filter out non-function types
                          // (such as null and undefined) as
                          // we only care about FUNCTION subtypes here.
                          JSType restrictedParameter = iParameterType
                              .restrictByNotNullOrUndefined()
                              .toMaybeFunctionType();
                          if (restrictedParameter != null) {
                            if (iArgument.isFunction() &&
                                iArgumentType.isFunctionType() &&
                                iArgument.getJSDocInfo() == null) {
                              iArgument.setJSType(restrictedParameter);
                            }
                          }
                          i++;
                        }
                children: []
                pos: 35493
                length: 931
              pos: 35432
              length: 996
          children: []
          pos: 35367
          length: 1061
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: inferTemplateTypesFromParameters
              children: []
              pos: 36466
              length: 32
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FunctionType fnType
                children: []
                pos: 36506
                length: 19
              pos: 36432
              length: 766
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: fnType.getTemplateTypeMap().getTemplateKeys().isEmpty()
                        children: []
                        pos: 36548
                        length: 55
                    children: []
                    pos: 36547
                    length: 57
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Collections.emptyMap();
                    children: []
                    pos: 36613
                    length: 30
                  pos: 36605
                  length: 44
                pos: 36544
                length: 105
              - type: local_variable_declaration
                fields:
                  text: Map<TemplateType, JSType> resolvedTypes = Maps.newIdentityHashMap();
                children: []
                pos: 36655
                length: 68
              - type: local_variable_declaration
                fields:
                  text: Node callTarget = call.getFirstChild();
                children: []
                pos: 36729
                length: 39
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: NodeUtil.isGet(callTarget)
                        children: []
                        pos: 36777
                        length: 26
                    children: []
                    pos: 36776
                    length: 28
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Node obj = callTarget.getFirstChild();
                    children: []
                    pos: 36813
                    length: 38
                  - type: expression_statement
                    fields:
                      text: |-
                        maybeResolveTemplatedType(
                                  fnType.getTypeOfThis(),
                                  getJSType(obj),
                                  resolvedTypes);
                    children: []
                    pos: 36858
                    length: 112
                  pos: 36805
                  length: 171
                pos: 36773
                length: 203
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: call.hasMoreThanOneChild()
                        children: []
                        pos: 36986
                        length: 26
                    children: []
                    pos: 36985
                    length: 28
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        maybeResolveTemplateTypeFromNodes(
                                  fnType.getParameters(),
                                  call.getChildAtIndex(1).siblings(),
                                  resolvedTypes);
                    children: []
                    pos: 37022
                    length: 140
                  pos: 37014
                  length: 154
                pos: 36982
                length: 186
              - type: return_statement
                fields:
                  text: return resolvedTypes;
                children: []
                pos: 37173
                length: 21
              pos: 36538
              length: 660
          children: []
          pos: 36432
          length: 766
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: maybeResolveTemplatedType
              children: []
              pos: 37215
              length: 25
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType paramType
                children: []
                pos: 37248
                length: 16
              pos: 37202
              length: 2445
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: paramType.isTemplateType()
                        children: []
                        pos: 37345
                        length: 26
                    children: []
                    pos: 37344
                    length: 28
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        resolvedTemplateType(
                                  resolvedTypes, paramType.toMaybeTemplateType(), argType);
                    children: []
                    pos: 37401
                    length: 89
                  pos: 37373
                  length: 123
                pos: 37341
                length: 2302
              pos: 37335
              length: 2312
          children: []
          pos: 37202
          length: 2445
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: maybeResolveTemplateTypeFromNodes
              children: []
              pos: 39664
              length: 33
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Iterable<Node> declParams
                children: []
                pos: 39705
                length: 25
              pos: 39651
              length: 275
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    maybeResolveTemplateTypeFromNodes(
                            declParams.iterator(), callParams.iterator(), resolvedTypes);
                children: []
                pos: 39818
                length: 104
              pos: 39812
              length: 114
          children: []
          pos: 39651
          length: 275
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: maybeResolveTemplateTypeFromNodes
              children: []
              pos: 39943
              length: 33
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Iterator<Node> declParams
                children: []
                pos: 39984
                length: 25
              pos: 39930
              length: 643
            body:
              type: block
              fields: {}
              children:
              - type: while_statement
                fields:
                  text: |-
                    while (declParams.hasNext() && callParams.hasNext()) {
                          Node declParam = declParams.next();
                          maybeResolveTemplatedType(
                              getJSType(declParam),
                              getJSType(callParams.next()),
                              resolvedTypes);
                          if (declParam.isVarArgs()) {
                            while (callParams.hasNext()) {
                              maybeResolveTemplatedType(
                                  getJSType(declParam),
                                  getJSType(callParams.next()),
                                  resolvedTypes);
                            }
                          }
                        }
                children: []
                pos: 40097
                length: 472
              pos: 40091
              length: 482
          children: []
          pos: 39930
          length: 643
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: resolvedTemplateType
              children: []
              pos: 40597
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Map<TemplateType, JSType> map
                children: []
                pos: 40625
                length: 29
              pos: 40577
              length: 391
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType previous = map.get(template);
                children: []
                pos: 40702
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!resolved.isUnknownType()"
                        children: []
                        pos: 40747
                        length: 25
                    children: []
                    pos: 40746
                    length: 27
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: previous
                                children: []
                                pos: 40786
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 40798
                                length: 4
                            children: []
                            pos: 40786
                            length: 16
                        children: []
                        pos: 40785
                        length: 18
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: map.put(template, resolved);
                        children: []
                        pos: 40814
                        length: 28
                      pos: 40804
                      length: 46
                    pos: 40782
                    length: 176
                  pos: 40774
                  length: 190
                pos: 40743
                length: 221
              pos: 40696
              length: 272
          children: []
          pos: 40577
          length: 391
        - type: class_declaration
          fields:
            name:
              type: identifier
              fields:
                text: TemplateTypeReplacer
              children: []
              pos: 40993
              length: 20
            body:
              type: class_body
              fields: {}
              children:
              - type: field_declaration
                fields:
                  text: private final Map<TemplateType, JSType> replacements;
                children: []
                pos: 41048
                length: 53
              - type: field_declaration
                fields:
                  text: private final JSTypeRegistry registry;
                children: []
                pos: 41106
                length: 38
              - type: field_declaration
                fields:
                  text: boolean madeChanges = false;
                children: []
                pos: 41149
                length: 28
              - type: constructor_declaration
                fields:
                  text: |-
                    TemplateTypeReplacer(
                            JSTypeRegistry registry, Map<TemplateType, JSType> replacements) {
                          super(registry);
                          this.registry = registry;
                          this.replacements = replacements;
                        }
                children: []
                pos: 41183
                length: 197
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: caseTemplateType
                    children: []
                    pos: 41414
                    length: 16
                  parameters:
                    type: method_parameters
                    fields: {}
                    children:
                    - type: formal_parameter
                      fields:
                        text: TemplateType type
                      children: []
                      pos: 41431
                      length: 17
                    pos: 41386
                    length: 245
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: expression_statement
                      fields:
                        text: madeChanges = true;
                      children: []
                      pos: 41458
                      length: 19
                    - type: local_variable_declaration
                      fields:
                        text: JSType replacement = replacements.get(type);
                      children: []
                      pos: 41484
                      length: 44
                    - type: return_statement
                      fields:
                        text: |-
                          return replacement != null ?
                                    replacement : registry.getNativeType(UNKNOWN_TYPE);
                      children: []
                      pos: 41535
                      length: 90
                    pos: 41450
                    length: 181
                children: []
                pos: 41386
                length: 245
              pos: 40972
              length: 663
          children: []
          pos: 40972
          length: 663
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: inferTemplatedTypesForCall
              children: []
              pos: 41846
              length: 26
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 41880
                length: 6
              pos: 41830
              length: 1077
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: |-
                    final ImmutableList<TemplateType> keys = fnType.getTemplateTypeMap()
                            .getTemplateKeys();
                children: []
                pos: 41915
                length: 96
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: keys.isEmpty()
                        children: []
                        pos: 42020
                        length: 14
                    children: []
                    pos: 42019
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return false;
                    children: []
                    pos: 42044
                    length: 13
                  pos: 42036
                  length: 27
                pos: 42016
                length: 47
              - type: local_variable_declaration
                fields:
                  text: |-
                    Map<TemplateType, JSType> inferred = Maps.filterKeys(
                            inferTemplateTypesFromParameters(fnType, n),
                            new Predicate<TemplateType>() {

                              @Override
                              public boolean apply(TemplateType key) {
                                return keys.contains(key);
                              }}
                            );
                children: []
                pos: 42108
                length: 281
              - type: local_variable_declaration
                fields:
                  text: |-
                    TemplateTypeReplacer replacer = new TemplateTypeReplacer(
                            registry, inferred);
                children: []
                pos: 42500
                length: 86
              - type: local_variable_declaration
                fields:
                  text: Node callTarget = n.getFirstChild();
                children: []
                pos: 42591
                length: 36
              - type: local_variable_declaration
                fields:
                  text: |-
                    FunctionType replacementFnType = fnType.visit(replacer)
                            .toMaybeFunctionType();
                children: []
                pos: 42633
                length: 87
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(replacementFnType);
                children: []
                pos: 42725
                length: 46
              - type: expression_statement
                fields:
                  text: callTarget.setJSType(replacementFnType);
                children: []
                pos: 42777
                length: 40
              - type: expression_statement
                fields:
                  text: n.setJSType(replacementFnType.getReturnType());
                children: []
                pos: 42822
                length: 47
              - type: return_statement
                fields:
                  text: return replacer.madeChanges;
                children: []
                pos: 42875
                length: 28
              pos: 41909
              length: 998
          children: []
          pos: 41830
          length: 1077
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseNew
              children: []
              pos: 42929
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 42941
                length: 6
              pos: 42911
              length: 1497
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 42972
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node constructor = n.getFirstChild();
                children: []
                pos: 43013
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType constructorType = constructor.getJSType();
                children: []
                pos: 43055
                length: 49
              - type: local_variable_declaration
                fields:
                  text: JSType type = null;
                children: []
                pos: 43109
                length: 19
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: constructorType
                            children: []
                            pos: 43137
                            length: 15
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 43156
                            length: 4
                        children: []
                        pos: 43137
                        length: 23
                    children: []
                    pos: 43136
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: constructorType = constructorType.restrictByNotNullOrUndefined();
                    children: []
                    pos: 43170
                    length: 65
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: constructorType.isUnknownType()
                            children: []
                            pos: 43246
                            length: 31
                        children: []
                        pos: 43245
                        length: 33
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: type = unknownType;
                        children: []
                        pos: 43289
                        length: 19
                      pos: 43279
                      length: 37
                    pos: 43242
                    length: 1115
                  pos: 43162
                  length: 1201
                pos: 43133
                length: 1230
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 44368
                length: 18
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 44391
                length: 13
              pos: 42966
              length: 1442
          children: []
          pos: 42911
          length: 1497
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseAnd
              children: []
              pos: 44439
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 44451
                length: 6
              pos: 44412
              length: 126
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return traverseShortCircuitingBinOp(n, scope, true);
                children: []
                pos: 44482
                length: 52
              pos: 44476
              length: 62
          children: []
          pos: 44412
          length: 126
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseChildren
              children: []
              pos: 44560
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 44577
                length: 6
              pos: 44542
              length: 195
            body:
              type: block
              fields: {}
              children:
              - type: for_statement
                fields:
                  text: |-
                    for (Node el = n.getFirstChild(); el != null; el = el.getNext()) {
                          scope = traverse(el, scope);
                        }
                children: []
                pos: 44608
                length: 107
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 44720
                length: 13
              pos: 44602
              length: 135
          children: []
          pos: 44542
          length: 195
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseGetElem
              children: []
              pos: 44759
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 44775
                length: 6
              pos: 44741
              length: 446
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 44806
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType type = getJSType(n.getFirstChild()).restrictByNotNullOrUndefined();
                children: []
                pos: 44846
                length: 74
              - type: local_variable_declaration
                fields:
                  text: TemplateTypeMap typeMap = type.getTemplateTypeMap();
                children: []
                pos: 44925
                length: 52
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: typeMap.hasTemplateType(registry.getObjectElementKey())
                        children: []
                        pos: 44986
                        length: 55
                    children: []
                    pos: 44985
                    length: 57
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: n.setJSType(typeMap.getTemplateType(registry.getObjectElementKey()));
                    children: []
                    pos: 45051
                    length: 69
                  pos: 45043
                  length: 83
                pos: 44982
                length: 144
              - type: return_statement
                fields:
                  text: return dereferencePointer(n.getFirstChild(), scope);
                children: []
                pos: 45131
                length: 52
              pos: 44800
              length: 387
          children: []
          pos: 44741
          length: 446
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseGetProp
              children: []
              pos: 45209
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 45225
                length: 6
              pos: 45191
              length: 347
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node objNode = n.getFirstChild();
                children: []
                pos: 45256
                length: 33
              - type: local_variable_declaration
                fields:
                  text: Node property = n.getLastChild();
                children: []
                pos: 45294
                length: 33
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 45332
                length: 35
              - type: expression_statement
                fields:
                  text: |-
                    n.setJSType(
                            getPropertyType(
                                objNode.getJSType(), property.getString(), n, scope));
                children: []
                pos: 45373
                length: 104
              - type: return_statement
                fields:
                  text: return dereferencePointer(n.getFirstChild(), scope);
                children: []
                pos: 45482
                length: 52
              pos: 45250
              length: 288
          children: []
          pos: 45191
          length: 347
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: inferPropertyTypesToMatchConstraint
              children: []
              pos: 46092
              length: 35
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType type
                children: []
                pos: 46135
                length: 11
              pos: 46072
              length: 205
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 46177
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 46185
                                length: 4
                            children: []
                            pos: 46177
                            length: 12
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: constraint
                                children: []
                                pos: 46193
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 46207
                                length: 4
                            children: []
                            pos: 46193
                            length: 18
                        children: []
                        pos: 46177
                        length: 34
                    children: []
                    pos: 46176
                    length: 36
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 46221
                    length: 7
                  pos: 46213
                  length: 21
                pos: 46173
                length: 61
              - type: expression_statement
                fields:
                  text: type.matchConstraint(constraint);
                children: []
                pos: 46240
                length: 33
              pos: 46167
              length: 110
          children: []
          pos: 46072
          length: 205
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: dereferencePointer
              children: []
              pos: 46401
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 46420
                length: 6
              pos: 46383
              length: 304
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.isQualifiedName()
                        children: []
                        pos: 46455
                        length: 19
                    children: []
                    pos: 46454
                    length: 21
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType type = getJSType(n);
                    children: []
                    pos: 46484
                    length: 27
                  - type: local_variable_declaration
                    fields:
                      text: JSType narrowed = type.restrictByNotNullOrUndefined();
                    children: []
                    pos: 46518
                    length: 54
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 46583
                                length: 4
                              right:
                                type: identifier
                                fields:
                                  text: narrowed
                                children: []
                                pos: 46591
                                length: 8
                            children: []
                            pos: 46583
                            length: 16
                        children: []
                        pos: 46582
                        length: 18
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: scope = narrowScope(scope, n, narrowed);
                        children: []
                        pos: 46611
                        length: 40
                      pos: 46601
                      length: 58
                    pos: 46579
                    length: 80
                  pos: 46476
                  length: 189
                pos: 46451
                length: 214
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 46670
                length: 13
              pos: 46445
              length: 242
          children: []
          pos: 46383
          length: 304
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getPropertyType
              children: []
              pos: 46706
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType objType
                children: []
                pos: 46722
                length: 14
              pos: 46691
              length: 2428
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType propertyType = null;
                children: []
                pos: 47173
                length: 27
              - type: local_variable_declaration
                fields:
                  text: boolean isLocallyInferred = false;
                children: []
                pos: 47205
                length: 34
              - type: local_variable_declaration
                fields:
                  text: String qualifiedName = n.getQualifiedName();
                children: []
                pos: 47319
                length: 44
              - type: local_variable_declaration
                fields:
                  text: StaticSlot<JSType> var = scope.getSlot(qualifiedName);
                children: []
                pos: 47368
                length: 54
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: var
                            children: []
                            pos: 47431
                            length: 3
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 47438
                            length: 4
                        children: []
                        pos: 47431
                        length: 11
                    children: []
                    pos: 47430
                    length: 13
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType varType = var.getType();
                    children: []
                    pos: 47452
                    length: 31
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: varType
                                children: []
                                pos: 47494
                                length: 7
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 47505
                                length: 4
                            children: []
                            pos: 47494
                            length: 15
                        children: []
                        pos: 47493
                        length: 17
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: boolean isDeclared = !var.isTypeInferred();
                        children: []
                        pos: 47521
                        length: 43
                      - type: expression_statement
                        fields:
                          text: isLocallyInferred = (var != syntacticScope.getSlot(qualifiedName));
                        children: []
                        pos: 47573
                        length: 67
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: or
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: isDeclared
                                    children: []
                                    pos: 47653
                                    length: 10
                                  right:
                                    type: identifier
                                    fields:
                                      text: isLocallyInferred
                                    children: []
                                    pos: 47667
                                    length: 17
                                children: []
                                pos: 47653
                                length: 31
                            children: []
                            pos: 47652
                            length: 33
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: propertyType = varType;
                            children: []
                            pos: 47698
                            length: 23
                          pos: 47686
                          length: 45
                        pos: 47649
                        length: 82
                      pos: 47511
                      length: 228
                    pos: 47490
                    length: 249
                  pos: 47444
                  length: 301
                pos: 47427
                length: 318
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: propertyType
                                children: []
                                pos: 47755
                                length: 12
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 47771
                                length: 4
                            children: []
                            pos: 47755
                            length: 20
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: objType
                                children: []
                                pos: 47779
                                length: 7
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 47790
                                length: 4
                            children: []
                            pos: 47779
                            length: 15
                        children: []
                        pos: 47755
                        length: 39
                    children: []
                    pos: 47754
                    length: 41
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType foundType = objType.findPropertyType(propName);
                    children: []
                    pos: 47804
                    length: 54
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: foundType
                                children: []
                                pos: 47869
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 47882
                                length: 4
                            children: []
                            pos: 47869
                            length: 17
                        children: []
                        pos: 47868
                        length: 19
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: propertyType = foundType;
                        children: []
                        pos: 47898
                        length: 25
                      pos: 47888
                      length: 43
                    pos: 47865
                    length: 66
                  pos: 47796
                  length: 141
                pos: 47751
                length: 186
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: propertyType
                                children: []
                                pos: 47947
                                length: 12
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 47963
                                length: 4
                            children: []
                            pos: 47947
                            length: 20
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: objType
                                children: []
                                pos: 47971
                                length: 7
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 47982
                                length: 4
                            children: []
                            pos: 47971
                            length: 15
                        children: []
                        pos: 47947
                        length: 39
                    children: []
                    pos: 47946
                    length: 41
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType restrictedObjType = objType.restrictByNotNullOrUndefined();
                    children: []
                    pos: 47996
                    length: 66
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: unary_expression
                                fields:
                                  text: "!restrictedObjType.getTemplateTypeMap().isEmpty()"
                                children: []
                                pos: 48073
                                length: 49
                              right:
                                type: method_invocation
                                fields:
                                  text: propertyType.hasAnyTemplateTypes()
                                children: []
                                pos: 48136
                                length: 34
                            children: []
                            pos: 48073
                            length: 97
                        children: []
                        pos: 48072
                        length: 99
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: TemplateTypeMap typeMap = restrictedObjType.getTemplateTypeMap();
                        children: []
                        pos: 48182
                        length: 65
                      - type: local_variable_declaration
                        fields:
                          text: |-
                            TemplateTypeMapReplacer replacer = new TemplateTypeMapReplacer(
                                        registry, typeMap);
                        children: []
                        pos: 48256
                        length: 95
                      - type: expression_statement
                        fields:
                          text: propertyType = propertyType.visit(replacer);
                        children: []
                        pos: 48360
                        length: 44
                      pos: 48172
                      length: 240
                    pos: 48069
                    length: 343
                  pos: 47988
                  length: 430
                pos: 47943
                length: 475
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: or
                                fields:
                                  left:
                                    type: equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: propertyType
                                        children: []
                                        pos: 48429
                                        length: 12
                                      right:
                                        type: null_literal
                                        fields: {}
                                        children: []
                                        pos: 48445
                                        length: 4
                                    children: []
                                    pos: 48429
                                    length: 20
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: propertyType.isUnknownType()
                                    children: []
                                    pos: 48453
                                    length: 28
                                children: []
                                pos: 48429
                                length: 52
                            children: []
                            pos: 48428
                            length: 54
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: qualifiedName
                                children: []
                                pos: 48494
                                length: 13
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 48511
                                length: 4
                            children: []
                            pos: 48494
                            length: 21
                        children: []
                        pos: 48428
                        length: 87
                    children: []
                    pos: 48427
                    length: 89
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: ObjectType regType = ObjectType.cast(registry.getType(qualifiedName));
                    children: []
                    pos: 48600
                    length: 70
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: regType
                                children: []
                                pos: 48681
                                length: 7
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 48692
                                length: 4
                            children: []
                            pos: 48681
                            length: 15
                        children: []
                        pos: 48680
                        length: 17
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: propertyType = regType.getConstructor();
                        children: []
                        pos: 48708
                        length: 40
                      pos: 48698
                      length: 58
                    pos: 48677
                    length: 79
                  pos: 48517
                  length: 245
                pos: 48424
                length: 338
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: propertyType
                            children: []
                            pos: 48772
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 48788
                            length: 4
                        children: []
                        pos: 48772
                        length: 20
                    children: []
                    pos: 48771
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return unknownType;
                    children: []
                    pos: 48802
                    length: 19
                  pos: 48794
                  length: 33
                pos: 48768
                length: 347
              pos: 46786
              length: 2333
          children: []
          pos: 46691
          length: 2428
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseOr
              children: []
              pos: 49150
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 49161
                length: 6
              pos: 49123
              length: 126
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return traverseShortCircuitingBinOp(n, scope, false);
                children: []
                pos: 49192
                length: 53
              pos: 49186
              length: 63
          children: []
          pos: 49123
          length: 126
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseShortCircuitingBinOp
              children: []
              pos: 49280
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 49316
                length: 6
              pos: 49253
              length: 2359
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 49366
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 49401
                length: 30
              - type: local_variable_declaration
                fields:
                  text: |-
                    BooleanOutcomePair leftLiterals =
                            traverseWithinShortCircuitingBinOp(left,
                                scope.createChildFlowScope());
                children: []
                pos: 49463
                length: 125
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = left.getJSType();
                children: []
                pos: 49593
                length: 35
              - type: local_variable_declaration
                fields:
                  text: |-
                    FlowScope rightScope = reverseInterpreter.
                            getPreciserScopeKnowingConditionOutcome(
                                left, leftLiterals.getOutcomeFlowScope(left.getType(), condition),
                                condition);
                children: []
                pos: 49752
                length: 194
              - type: local_variable_declaration
                fields:
                  text: |-
                    BooleanOutcomePair rightLiterals =
                            traverseWithinShortCircuitingBinOp(
                                right, rightScope.createChildFlowScope());
                children: []
                pos: 49979
                length: 133
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = right.getJSType();
                children: []
                pos: 50117
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType type;
                children: []
                pos: 50160
                length: 12
              - type: local_variable_declaration
                fields:
                  text: BooleanOutcomePair literals;
                children: []
                pos: 50177
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: leftType
                                children: []
                                pos: 50214
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 50226
                                length: 4
                            children: []
                            pos: 50214
                            length: 16
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: rightType
                                children: []
                                pos: 50234
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 50247
                                length: 4
                            children: []
                            pos: 50234
                            length: 17
                        children: []
                        pos: 50214
                        length: 37
                    children: []
                    pos: 50213
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: leftType = leftType.getRestrictedTypeGivenToBooleanOutcome(!condition);
                    children: []
                    pos: 50261
                    length: 71
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: field_access
                                fields:
                                  text: leftLiterals.toBooleanOutcomes
                                children: []
                                pos: 50343
                                length: 30
                              right:
                                type: method_invocation
                                fields:
                                  text: BooleanLiteralSet.get(!condition)
                                children: []
                                pos: 50387
                                length: 33
                            children: []
                            pos: 50343
                            length: 77
                        children: []
                        pos: 50342
                        length: 79
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: type = leftType;
                        children: []
                        pos: 50527
                        length: 16
                      - type: expression_statement
                        fields:
                          text: literals = leftLiterals;
                        children: []
                        pos: 50552
                        length: 24
                      pos: 50422
                      length: 162
                    pos: 50339
                    length: 541
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: equals
                                fields:
                                  left:
                                    type: field_access
                                    fields:
                                      text: literals.booleanValues
                                    children: []
                                    pos: 51013
                                    length: 22
                                  right:
                                    type: field_access
                                    fields:
                                      text: BooleanLiteralSet.EMPTY
                                    children: []
                                    pos: 51039
                                    length: 23
                                children: []
                                pos: 51013
                                length: 49
                              right:
                                type: method_invocation
                                fields:
                                  text: getNativeType(BOOLEAN_TYPE).isSubtype(type)
                                children: []
                                pos: 51076
                                length: 43
                            children: []
                            pos: 51013
                            length: 106
                        children: []
                        pos: 51012
                        length: 108
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: method_invocation
                                fields:
                                  text: type.isUnionType()
                                children: []
                                pos: 51190
                                length: 18
                            children: []
                            pos: 51189
                            length: 20
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: |-
                                type = type.toMaybeUnionType().getRestrictedUnion(
                                              getNativeType(BOOLEAN_TYPE));
                            children: []
                            pos: 51222
                            length: 94
                          pos: 51210
                          length: 116
                        pos: 51186
                        length: 140
                      pos: 51121
                      length: 213
                    pos: 51009
                    length: 325
                  pos: 50253
                  length: 1087
                pos: 50210
                length: 1353
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 51568
                length: 18
              - type: return_statement
                fields:
                  text: return literals;
                children: []
                pos: 51592
                length: 16
              pos: 49360
              length: 2252
          children: []
          pos: 49253
          length: 2359
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseWithinShortCircuitingBinOp
              children: []
              pos: 51643
              length: 34
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 51678
                length: 6
              pos: 51616
              length: 362
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 51723
                        length: 11
                    children: []
                    pos: 51722
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.AND:
                                return traverseAnd(n, scope);

                              case Token.OR:
                                return traverseOr(n, scope);

                              default:
                                scope = traverse(n, scope);
                                return newBooleanOutcomePair(n.getJSType(), scope);
                            }
                    children: []
                    pos: 51736
                    length: 238
                children: []
                pos: 51715
                length: 259
              pos: 51709
              length: 269
          children: []
          pos: 51616
          length: 362
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getBooleanOutcomePair
              children: []
              pos: 52217
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: BooleanOutcomePair left
                children: []
                pos: 52239
                length: 23
              pos: 52198
              length: 416
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return new BooleanOutcomePair(
                            getBooleanOutcomes(left.toBooleanOutcomes, right.toBooleanOutcomes,
                                               condition),
                            getBooleanOutcomes(left.booleanValues, right.booleanValues, condition),
                            left.getJoinedFlowScope(), right.getJoinedFlowScope());
                children: []
                pos: 52321
                length: 289
              pos: 52315
              length: 299
          children: []
          pos: 52198
          length: 416
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getBooleanOutcomes
              children: []
              pos: 53300
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: BooleanLiteralSet left
                children: []
                pos: 53319
                length: 22
              pos: 53275
              length: 201
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return right.union(left.intersection(BooleanLiteralSet.get(!condition)));
                children: []
                pos: 53399
                length: 73
              pos: 53393
              length: 83
          children: []
          pos: 53275
          length: 201
        - type: class_declaration
          fields:
            name:
              type: identifier
              fields:
                text: BooleanOutcomePair
              children: []
              pos: 53783
              length: 18
            body:
              type: class_body
              fields: {}
              children:
              - type: field_declaration
                fields:
                  text: final BooleanLiteralSet toBooleanOutcomes;
                children: []
                pos: 53808
                length: 42
              - type: field_declaration
                fields:
                  text: final BooleanLiteralSet booleanValues;
                children: []
                pos: 53855
                length: 38
              - type: field_declaration
                fields:
                  text: final FlowScope leftScope;
                children: []
                pos: 53974
                length: 26
              - type: field_declaration
                fields:
                  text: final FlowScope rightScope;
                children: []
                pos: 54059
                length: 27
              - type: field_declaration
                fields:
                  text: FlowScope joinedScope = null;
                children: []
                pos: 54168
                length: 29
              - type: constructor_declaration
                fields:
                  text: |-
                    BooleanOutcomePair(
                            BooleanLiteralSet toBooleanOutcomes, BooleanLiteralSet booleanValues,
                            FlowScope leftScope, FlowScope rightScope) {
                          this.toBooleanOutcomes = toBooleanOutcomes;
                          this.booleanValues = booleanValues;
                          this.leftScope = leftScope;
                          this.rightScope = rightScope;
                        }
                children: []
                pos: 54203
                length: 318
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: getJoinedFlowScope
                    children: []
                    pos: 54661
                    length: 18
                  parameters:
                    type: method_parameters
                    fields: {}
                    children: []
                    pos: 54651
                    length: 260
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: equals
                              fields:
                                left:
                                  type: identifier
                                  fields:
                                    text: joinedScope
                                  children: []
                                  pos: 54694
                                  length: 11
                                right:
                                  type: null_literal
                                  fields: {}
                                  children: []
                                  pos: 54709
                                  length: 4
                              children: []
                              pos: 54694
                              length: 19
                          children: []
                          pos: 54693
                          length: 21
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: if_statement
                          fields:
                            condition:
                              type: parenthesized_expression
                              fields:
                                expression:
                                  type: equals
                                  fields:
                                    left:
                                      type: identifier
                                      fields:
                                        text: leftScope
                                      children: []
                                      pos: 54729
                                      length: 9
                                    right:
                                      type: identifier
                                      fields:
                                        text: rightScope
                                      children: []
                                      pos: 54742
                                      length: 10
                                  children: []
                                  pos: 54729
                                  length: 23
                              children: []
                              pos: 54728
                              length: 25
                          children:
                          - type: block
                            fields: {}
                            children:
                            - type: expression_statement
                              fields:
                                text: joinedScope = rightScope;
                              children: []
                              pos: 54766
                              length: 25
                            pos: 54754
                            length: 47
                          pos: 54725
                          length: 146
                        pos: 54715
                        length: 164
                      pos: 54690
                      length: 189
                    - type: return_statement
                      fields:
                        text: return joinedScope;
                      children: []
                      pos: 54886
                      length: 19
                    pos: 54682
                    length: 229
                children: []
                pos: 54651
                length: 260
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: getOutcomeFlowScope
                    children: []
                    pos: 55032
                    length: 19
                  parameters:
                    type: method_parameters
                    fields: {}
                    children:
                    - type: formal_parameter
                      fields:
                        text: int nodeType
                      children: []
                      pos: 55052
                      length: 12
                    pos: 55022
                    length: 312
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: or
                              fields:
                                left:
                                  type: and
                                  fields:
                                    left:
                                      type: equals
                                      fields:
                                        left:
                                          type: identifier
                                          fields:
                                            text: nodeType
                                          children: []
                                          pos: 55095
                                          length: 8
                                        right:
                                          type: field_access
                                          fields:
                                            text: Token.AND
                                          children: []
                                          pos: 55107
                                          length: 9
                                      children: []
                                      pos: 55095
                                      length: 21
                                    right:
                                      type: identifier
                                      fields:
                                        text: outcome
                                      children: []
                                      pos: 55120
                                      length: 7
                                  children: []
                                  pos: 55095
                                  length: 32
                                right:
                                  type: and
                                  fields:
                                    left:
                                      type: equals
                                      fields:
                                        left:
                                          type: identifier
                                          fields:
                                            text: nodeType
                                          children: []
                                          pos: 55141
                                          length: 8
                                        right:
                                          type: field_access
                                          fields:
                                            text: Token.OR
                                          children: []
                                          pos: 55153
                                          length: 8
                                      children: []
                                      pos: 55141
                                      length: 20
                                    right:
                                      type: unary_expression
                                      fields:
                                        text: "!outcome"
                                      children: []
                                      pos: 55165
                                      length: 8
                                  children: []
                                  pos: 55141
                                  length: 32
                              children: []
                              pos: 55095
                              length: 78
                          children: []
                          pos: 55094
                          length: 80
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: return_statement
                          fields:
                            text: return rightScope;
                          children: []
                          pos: 55250
                          length: 18
                        pos: 55175
                        length: 101
                      pos: 55091
                      length: 237
                    pos: 55083
                    length: 251
                children: []
                pos: 55022
                length: 312
              pos: 53763
              length: 1575
          children: []
          pos: 53763
          length: 1575
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: newBooleanOutcomePair
              children: []
              pos: 55369
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType jsType
                children: []
                pos: 55398
                length: 13
              pos: 55342
              length: 478
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: jsType
                            children: []
                            pos: 55444
                            length: 6
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 55454
                            length: 4
                        children: []
                        pos: 55444
                        length: 14
                    children: []
                    pos: 55443
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: |-
                        return new BooleanOutcomePair(
                                  BooleanLiteralSet.BOTH, BooleanLiteralSet.BOTH, flowScope, flowScope);
                    children: []
                    pos: 55468
                    length: 111
                  pos: 55460
                  length: 125
                pos: 55440
                length: 145
              - type: return_statement
                fields:
                  text: |-
                    return new BooleanOutcomePair(jsType.getPossibleToBooleanOutcomes(),
                            registry.getNativeType(BOOLEAN_TYPE).isSubtype(jsType) ?
                                BooleanLiteralSet.BOTH : BooleanLiteralSet.EMPTY,
                            flowScope, flowScope);
                children: []
                pos: 55590
                length: 226
              pos: 55434
              length: 386
          children: []
          pos: 55342
          length: 478
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: redeclareSimpleVar
              children: []
              pos: 55837
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 55863
                length: 15
              pos: 55824
              length: 394
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(nameNode.isName());
                children: []
                pos: 55917
                length: 44
              - type: local_variable_declaration
                fields:
                  text: String varName = nameNode.getString();
                children: []
                pos: 55966
                length: 38
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: varType
                            children: []
                            pos: 56013
                            length: 7
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 56024
                            length: 4
                        children: []
                        pos: 56013
                        length: 15
                    children: []
                    pos: 56012
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: varType = getNativeType(JSTypeNative.UNKNOWN_TYPE);
                    children: []
                    pos: 56038
                    length: 51
                  pos: 56030
                  length: 65
                pos: 56009
                length: 86
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isUnflowable(syntacticScope.getVar(varName))
                        children: []
                        pos: 56104
                        length: 44
                    children: []
                    pos: 56103
                    length: 46
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 56158
                    length: 7
                  pos: 56150
                  length: 21
                pos: 56100
                length: 71
              - type: expression_statement
                fields:
                  text: scope.inferSlotType(varName, varType);
                children: []
                pos: 56176
                length: 38
              pos: 55911
              length: 307
          children: []
          pos: 55824
          length: 394
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isUnflowable
              children: []
              pos: 56238
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Var v
                children: []
                pos: 56251
                length: 5
              pos: 56222
              length: 214
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return v != null && v.isLocal() && v.isMarkedEscaped() &&
                            // It's OK to flow a variable in the scope where it's escaped.
                            v.getScope() == syntacticScope;
                children: []
                pos: 56264
                length: 168
              pos: 56258
              length: 178
          children: []
          pos: 56222
          length: 214
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getJSType
              children: []
              pos: 56561
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 56571
                length: 6
              pos: 56546
              length: 445
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType jsType = n.getJSType();
                children: []
                pos: 56585
                length: 30
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: jsType
                            children: []
                            pos: 56624
                            length: 6
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 56634
                            length: 4
                        children: []
                        pos: 56624
                        length: 14
                    children: []
                    pos: 56623
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return unknownType;
                    children: []
                    pos: 56928
                    length: 19
                  pos: 56640
                  length: 313
                pos: 56620
                length: 367
              pos: 56579
              length: 412
          children: []
          pos: 56546
          length: 445
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getNativeType
              children: []
              pos: 57010
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSTypeNative typeId
                children: []
                pos: 57024
                length: 19
              pos: 56995
              length: 98
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return registry.getNativeType(typeId);
                children: []
                pos: 57051
                length: 38
              pos: 57045
              length: 48
          children: []
          pos: 56995
          length: 98
        pos: 3048
        length: 54047
    children: []
    pos: 3048
    length: 54047
  pos: 0
  length: 57096
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: TypeInference
        children: []
        pos: 3054
        length: 13
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType FUNCTION_LITERAL_UNDEFINED_THIS =
                  DiagnosticType.warning(
                      "JSC_FUNCTION_LITERAL_UNDEFINED_THIS",
                      "Function literal argument refers to undefined this argument");
          children: []
          pos: 3217
          length: 208
        - type: field_declaration
          fields:
            text: private final AbstractCompiler compiler;
          children: []
          pos: 3429
          length: 40
        - type: field_declaration
          fields:
            text: private final JSTypeRegistry registry;
          children: []
          pos: 3472
          length: 38
        - type: field_declaration
          fields:
            text: private final ReverseAbstractInterpreter reverseInterpreter;
          children: []
          pos: 3513
          length: 60
        - type: field_declaration
          fields:
            text: private final Scope syntacticScope;
          children: []
          pos: 3576
          length: 35
        - type: field_declaration
          fields:
            text: private final FlowScope functionScope;
          children: []
          pos: 3614
          length: 38
        - type: field_declaration
          fields:
            text: private final FlowScope bottomScope;
          children: []
          pos: 3655
          length: 36
        - type: field_declaration
          fields:
            text: private final Map<String, AssertionFunctionSpec> assertionFunctionsMap;
          children: []
          pos: 3694
          length: 71
        - type: field_declaration
          fields:
            text: private final ObjectType unknownType;
          children: []
          pos: 3790
          length: 37
        - type: constructor_declaration
          fields:
            text: |-
              TypeInference(AbstractCompiler compiler, ControlFlowGraph<Node> cfg,
                              ReverseAbstractInterpreter reverseInterpreter,
                              Scope functionScope,
                              Map<String, AssertionFunctionSpec> assertionFunctionsMap) {
                  super(cfg, new LinkedFlowScope.FlowScopeJoinOp());
                  this.compiler = compiler;
                  this.registry = compiler.getTypeRegistry();
                  this.reverseInterpreter = reverseInterpreter;
                  this.unknownType = registry.getNativeObjectType(UNKNOWN_TYPE);

                  this.syntacticScope = functionScope;
                  inferArguments(functionScope);

                  this.functionScope = LinkedFlowScope.createEntryLattice(functionScope);
                  this.assertionFunctionsMap = assertionFunctionsMap;

                  // For each local variable declared with the VAR keyword, the entry
                  // type is VOID.
                  Iterator<Var> varIt =
                      functionScope.getDeclarativelyUnboundVarsWithoutTypes();
                  while (varIt.hasNext()) {
                    Var var = varIt.next();
                    if (isUnflowable(var)) {
                      continue;
                    }

                    this.functionScope.inferSlotType(
                        var.getName(), getNativeType(VOID_TYPE));
                  }

                  this.bottomScope = LinkedFlowScope.createEntryLattice(
                      Scope.createLatticeBottom(functionScope.getRootNode()));
                }
          children: []
          pos: 3831
          length: 1234
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: inferArguments
              children: []
              pos: 5168
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Scope functionScope
                children: []
                pos: 5183
                length: 19
              pos: 5155
              length: 1514
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node functionNode = functionScope.getRootNode();
                children: []
                pos: 5210
                length: 48
              - type: local_variable_declaration
                fields:
                  text: Node astParameters = functionNode.getFirstChild().getNext();
                children: []
                pos: 5263
                length: 60
              - type: local_variable_declaration
                fields:
                  text: Node iifeArgumentNode = null;
                children: []
                pos: 5328
                length: 29
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: NodeUtil.isCallOrNewTarget(functionNode)
                        children: []
                        pos: 5367
                        length: 40
                    children: []
                    pos: 5366
                    length: 42
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: iifeArgumentNode = functionNode.getNext();
                    children: []
                    pos: 5417
                    length: 42
                  pos: 5409
                  length: 56
                pos: 5363
                length: 102
              - type: local_variable_declaration
                fields:
                  text: |-
                    FunctionType functionType =
                            JSType.toMaybeFunctionType(functionNode.getJSType());
                children: []
                pos: 5471
                length: 89
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: functionType
                            children: []
                            pos: 5569
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 5585
                            length: 4
                        children: []
                        pos: 5569
                        length: 20
                    children: []
                    pos: 5568
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Node parameterTypes = functionType.getParametersNode();
                    children: []
                    pos: 5599
                    length: 55
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: parameterTypes
                                children: []
                                pos: 5665
                                length: 14
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 5683
                                length: 4
                            children: []
                            pos: 5665
                            length: 22
                        children: []
                        pos: 5664
                        length: 24
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: Node parameterTypeNode = parameterTypes.getFirstChild();
                        children: []
                        pos: 5699
                        length: 56
                      - type: enhanced_for_statement
                        fields:
                          text: |-
                            for (Node astParameter : astParameters.children()) {
                                      Var var = functionScope.getVar(astParameter.getString());
                                      Preconditions.checkNotNull(var);
                                      if (var.isTypeInferred() &&
                                          var.getType() == unknownType) {
                                        JSType newType = null;

                                        if (iifeArgumentNode != null) {
                                          newType = iifeArgumentNode.getJSType();
                                        } else if (parameterTypeNode != null) {
                                          newType = parameterTypeNode.getJSType();
                                        }

                                        if (newType != null) {
                                          var.setType(newType);
                                          astParameter.setJSType(newType);
                                        }
                                      }

                                      if (parameterTypeNode != null) {
                                        parameterTypeNode = parameterTypeNode.getNext();
                                      }
                                      if (iifeArgumentNode != null) {
                                        iifeArgumentNode = iifeArgumentNode.getNext();
                                      }
                                    }
                        children: []
                        pos: 5764
                        length: 887
                      pos: 5689
                      length: 970
                    pos: 5661
                    length: 998
                  pos: 5591
                  length: 1074
                pos: 5565
                length: 1100
              pos: 5204
              length: 1465
          children: []
          pos: 5155
          length: 1514
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createInitialEstimateLattice
              children: []
              pos: 6695
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6673
              length: 82
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return bottomScope;
                children: []
                pos: 6732
                length: 19
              pos: 6726
              length: 29
          children: []
          pos: 6673
          length: 82
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createEntryLattice
              children: []
              pos: 6781
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6759
              length: 74
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return functionScope;
                children: []
                pos: 6808
                length: 21
              pos: 6802
              length: 31
          children: []
          pos: 6759
          length: 74
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: flowThrough
              children: []
              pos: 6859
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 6871
                length: 6
              pos: 6837
              length: 348
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: input
                            children: []
                            pos: 7025
                            length: 5
                          right:
                            type: identifier
                            fields:
                              text: bottomScope
                            children: []
                            pos: 7034
                            length: 11
                        children: []
                        pos: 7025
                        length: 20
                    children: []
                    pos: 7024
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return input;
                    children: []
                    pos: 7055
                    length: 13
                  pos: 7047
                  length: 27
                pos: 7021
                length: 53
              - type: local_variable_declaration
                fields:
                  text: FlowScope output = input.createChildFlowScope();
                children: []
                pos: 7080
                length: 48
              - type: expression_statement
                fields:
                  text: output = traverse(n, output);
                children: []
                pos: 7133
                length: 29
              - type: return_statement
                fields:
                  text: return output;
                children: []
                pos: 7167
                length: 14
              pos: 6896
              length: 289
          children: []
          pos: 6837
          length: 348
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: branchedFlowThrough
              children: []
              pos: 7275
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node source
                children: []
                pos: 7295
                length: 11
              pos: 7189
              length: 4755
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: FlowScope output = flowThrough(source, input);
                children: []
                pos: 7647
                length: 46
              - type: local_variable_declaration
                fields:
                  text: Node condition = null;
                children: []
                pos: 7698
                length: 22
              - type: local_variable_declaration
                fields:
                  text: FlowScope conditionFlowScope = null;
                children: []
                pos: 7725
                length: 36
              - type: local_variable_declaration
                fields:
                  text: BooleanOutcomePair conditionOutcomes = null;
                children: []
                pos: 7766
                length: 44
              - type: local_variable_declaration
                fields:
                  text: List<DiGraphEdge<Node, Branch>> branchEdges = getCfg().getOutEdges(source);
                children: []
                pos: 7816
                length: 75
              - type: local_variable_declaration
                fields:
                  text: List<FlowScope> result = Lists.newArrayListWithCapacity(branchEdges.size());
                children: []
                pos: 7896
                length: 76
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (DiGraphEdge<Node, Branch> branchEdge : branchEdges) {
                          Branch branch = branchEdge.getValue();
                          FlowScope newScope = output;

                          switch (branch) {
                            case ON_TRUE:
                              if (NodeUtil.isForIn(source)) {
                                // item is assigned a property name, so its type should be string.
                                Node item = source.getFirstChild();
                                Node obj = item.getNext();

                                FlowScope informed = traverse(obj, output.createChildFlowScope());

                                if (item.isVar()) {
                                  item = item.getFirstChild();
                                }
                                if (item.isName()) {
                                  JSType iterKeyType = getNativeType(STRING_TYPE);
                                  ObjectType objType = getJSType(obj).dereference();
                                  JSType objIndexType = objType == null ?
                                      null : objType.getTemplateTypeMap().getTemplateType(
                                          registry.getObjectIndexKey());
                                  if (objIndexType != null && !objIndexType.isUnknownType()) {
                                    JSType narrowedKeyType =
                                        iterKeyType.getGreatestSubtype(objIndexType);
                                    if (!narrowedKeyType.isEmptyType()) {
                                      iterKeyType = narrowedKeyType;
                                    }
                                  }
                                  redeclareSimpleVar(informed, item, iterKeyType);
                                }
                                newScope = informed;
                                break;
                              }

                              // FALL THROUGH

                            case ON_FALSE:
                              if (condition == null) {
                                condition = NodeUtil.getConditionExpression(source);
                                if (condition == null && source.isCase()) {
                                  condition = source;

                                  // conditionFlowScope is cached from previous iterations
                                  // of the loop.
                                  if (conditionFlowScope == null) {
                                    conditionFlowScope = traverse(
                                        condition.getFirstChild(), output.createChildFlowScope());
                                  }
                                }
                              }

                              if (condition != null) {
                                if (condition.isAnd() ||
                                    condition.isOr()) {
                                  // When handling the short-circuiting binary operators,
                                  // the outcome scope on true can be different than the outcome
                                  // scope on false.
                                  //
                                  // TODO(nicksantos): The "right" way to do this is to
                                  // carry the known outcome all the way through the
                                  // recursive traversal, so that we can construct a
                                  // different flow scope based on the outcome. However,
                                  // this would require a bunch of code and a bunch of
                                  // extra computation for an edge case. This seems to be
                                  // a "good enough" approximation.

                                  // conditionOutcomes is cached from previous iterations
                                  // of the loop.
                                  if (conditionOutcomes == null) {
                                    conditionOutcomes = condition.isAnd() ?
                                        traverseAnd(condition, output.createChildFlowScope()) :
                                        traverseOr(condition, output.createChildFlowScope());
                                  }
                                  newScope =
                                      reverseInterpreter.getPreciserScopeKnowingConditionOutcome(
                                          condition,
                                          conditionOutcomes.getOutcomeFlowScope(
                                              condition.getType(), branch == Branch.ON_TRUE),
                                          branch == Branch.ON_TRUE);
                                } else {
                                  // conditionFlowScope is cached from previous iterations
                                  // of the loop.
                                  if (conditionFlowScope == null) {
                                    conditionFlowScope =
                                        traverse(condition, output.createChildFlowScope());
                                  }
                                  newScope =
                                      reverseInterpreter.getPreciserScopeKnowingConditionOutcome(
                                          condition, conditionFlowScope, branch == Branch.ON_TRUE);
                                }
                              }
                              break;
                          }

                          result.add(newScope.optimize());
                        }
                children: []
                pos: 7977
                length: 3944
              - type: return_statement
                fields:
                  text: return result;
                children: []
                pos: 11926
                length: 14
              pos: 7325
              length: 4619
          children: []
          pos: 7189
          length: 4755
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverse
              children: []
              pos: 11966
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 11975
                length: 6
              pos: 11948
              length: 3810
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 12014
                        length: 11
                    children: []
                    pos: 12013
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.ASSIGN:
                                scope = traverseAssign(n, scope);
                                break;

                              case Token.NAME:
                                scope = traverseName(n, scope);
                                break;

                              case Token.GETPROP:
                                scope = traverseGetProp(n, scope);
                                break;

                              case Token.AND:
                                scope = traverseAnd(n, scope).getJoinedFlowScope()
                                    .createChildFlowScope();
                                break;

                              case Token.OR:
                                scope = traverseOr(n, scope).getJoinedFlowScope()
                                    .createChildFlowScope();
                                break;

                              case Token.HOOK:
                                scope = traverseHook(n, scope);
                                break;

                              case Token.OBJECTLIT:
                                scope = traverseObjectLiteral(n, scope);
                                break;

                              case Token.CALL:
                                scope = traverseCall(n, scope);
                                break;

                              case Token.NEW:
                                scope = traverseNew(n, scope);
                                break;

                              case Token.ASSIGN_ADD:
                              case Token.ADD:
                                scope = traverseAdd(n, scope);
                                break;

                              case Token.POS:
                              case Token.NEG:
                                scope = traverse(n.getFirstChild(), scope);  // Find types.
                                n.setJSType(getNativeType(NUMBER_TYPE));
                                break;

                              case Token.ARRAYLIT:
                                scope = traverseArrayLiteral(n, scope);
                                break;

                              case Token.THIS:
                                n.setJSType(scope.getTypeOfThis());
                                break;

                              case Token.ASSIGN_LSH:
                              case Token.ASSIGN_RSH:
                              case Token.LSH:
                              case Token.RSH:
                              case Token.ASSIGN_URSH:
                              case Token.URSH:
                              case Token.ASSIGN_DIV:
                              case Token.ASSIGN_MOD:
                              case Token.ASSIGN_BITAND:
                              case Token.ASSIGN_BITXOR:
                              case Token.ASSIGN_BITOR:
                              case Token.ASSIGN_MUL:
                              case Token.ASSIGN_SUB:
                              case Token.DIV:
                              case Token.MOD:
                              case Token.BITAND:
                              case Token.BITXOR:
                              case Token.BITOR:
                              case Token.MUL:
                              case Token.SUB:
                              case Token.DEC:
                              case Token.INC:
                              case Token.BITNOT:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getNativeType(NUMBER_TYPE));
                                break;

                              case Token.PARAM_LIST:
                                scope = traverse(n.getFirstChild(), scope);
                                n.setJSType(getJSType(n.getFirstChild()));
                                break;

                              case Token.COMMA:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getJSType(n.getLastChild()));
                                break;

                              case Token.TYPEOF:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getNativeType(STRING_TYPE));
                                break;

                              case Token.DELPROP:
                              case Token.LT:
                              case Token.LE:
                              case Token.GT:
                              case Token.GE:
                              case Token.NOT:
                              case Token.EQ:
                              case Token.NE:
                              case Token.SHEQ:
                              case Token.SHNE:
                              case Token.INSTANCEOF:
                              case Token.IN:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getNativeType(BOOLEAN_TYPE));
                                break;

                              case Token.GETELEM:
                                scope = traverseGetElem(n, scope);
                                break;

                              case Token.EXPR_RESULT:
                                scope = traverseChildren(n, scope);
                                if (n.getFirstChild().isGetProp()) {
                                  ensurePropertyDeclared(n.getFirstChild());
                                }
                                break;

                              case Token.SWITCH:
                                scope = traverse(n.getFirstChild(), scope);
                                break;

                              case Token.RETURN:
                                scope = traverseReturn(n, scope);
                                break;

                              case Token.VAR:
                              case Token.THROW:
                                scope = traverseChildren(n, scope);
                                break;

                              case Token.CATCH:
                                scope = traverseCatch(n, scope);
                                break;

                              case Token.CAST:
                                scope = traverseChildren(n, scope);
                                JSDocInfo info = n.getJSDocInfo();
                                if (info != null && info.hasType()) {
                                  n.setJSType(info.getType().evaluate(syntacticScope, registry));
                                }
                                break;
                            }
                    children: []
                    pos: 12027
                    length: 3708
                children: []
                pos: 12006
                length: 3729
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 15741
                length: 13
              pos: 12000
              length: 3758
          children: []
          pos: 11948
          length: 3810
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseReturn
              children: []
              pos: 15822
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 15837
                length: 6
              pos: 15804
              length: 496
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 15868
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node retValue = n.getFirstChild();
                children: []
                pos: 15909
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: retValue
                            children: []
                            pos: 15952
                            length: 8
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 15964
                            length: 4
                        children: []
                        pos: 15952
                        length: 16
                    children: []
                    pos: 15951
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType type = functionScope.getRootNode().getJSType();
                    children: []
                    pos: 15978
                    length: 54
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 16043
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 16051
                                length: 4
                            children: []
                            pos: 16043
                            length: 12
                        children: []
                        pos: 16042
                        length: 14
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: FunctionType fnType = type.toMaybeFunctionType();
                        children: []
                        pos: 16067
                        length: 49
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: fnType
                                    children: []
                                    pos: 16129
                                    length: 6
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 16139
                                    length: 4
                                children: []
                                pos: 16129
                                length: 14
                            children: []
                            pos: 16128
                            length: 16
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: |-
                                inferPropertyTypesToMatchConstraint(
                                              retValue.getJSType(), fnType.getReturnType());
                            children: []
                            pos: 16157
                            length: 97
                          pos: 16145
                          length: 119
                        pos: 16125
                        length: 139
                      pos: 16057
                      length: 215
                    pos: 16039
                    length: 233
                  pos: 15970
                  length: 308
                pos: 15948
                length: 330
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 16283
                length: 13
              pos: 15862
              length: 438
          children: []
          pos: 15804
          length: 496
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseCatch
              children: []
              pos: 16465
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node catchNode
                children: []
                pos: 16479
                length: 14
              pos: 16447
              length: 548
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node name = catchNode.getFirstChild();
                children: []
                pos: 16518
                length: 38
              - type: local_variable_declaration
                fields:
                  text: JSType type;
                children: []
                pos: 16561
                length: 12
              - type: local_variable_declaration
                fields:
                  text: JSDocInfo info = name.getJSDocInfo();
                children: []
                pos: 16687
                length: 37
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: info
                                children: []
                                pos: 16733
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 16741
                                length: 4
                            children: []
                            pos: 16733
                            length: 12
                          right:
                            type: method_invocation
                            fields:
                              text: info.hasType()
                            children: []
                            pos: 16749
                            length: 14
                        children: []
                        pos: 16733
                        length: 30
                    children: []
                    pos: 16732
                    length: 32
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: type = info.getType().evaluate(syntacticScope, registry);
                    children: []
                    pos: 16773
                    length: 57
                  pos: 16765
                  length: 71
                pos: 16729
                length: 175
              - type: expression_statement
                fields:
                  text: redeclareSimpleVar(scope, name, type);
                children: []
                pos: 16909
                length: 38
              - type: expression_statement
                fields:
                  text: name.setJSType(type);
                children: []
                pos: 16952
                length: 21
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 16978
                length: 13
              pos: 16512
              length: 483
          children: []
          pos: 16447
          length: 548
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseAssign
              children: []
              pos: 17017
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 17032
                length: 6
              pos: 16999
              length: 366
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 17063
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 17098
                length: 30
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 17133
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = left.getJSType();
                children: []
                pos: 17174
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = getJSType(right);
                children: []
                pos: 17214
                length: 36
              - type: expression_statement
                fields:
                  text: n.setJSType(rightType);
                children: []
                pos: 17255
                length: 23
              - type: expression_statement
                fields:
                  text: updateScopeForTypeChange(scope, left, leftType, rightType);
                children: []
                pos: 17284
                length: 59
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 17348
                length: 13
              pos: 17057
              length: 308
          children: []
          pos: 16999
          length: 366
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateScopeForTypeChange
              children: []
              pos: 17499
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 17531
                length: 15
              pos: 17486
              length: 1778
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(resultType);
                children: []
                pos: 17601
                length: 39
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: left.getType()
                        children: []
                        pos: 17653
                        length: 14
                    children: []
                    pos: 17652
                    length: 16
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.NAME:
                                String varName = left.getString();
                                Var var = syntacticScope.getVar(varName);

                                // When looking at VAR initializers for declared VARs, we trust
                                // the declared type over the type it's being initialized to.
                                // This has two purposes:
                                // 1) We avoid re-declaring declared variables so that built-in
                                //    types defined in externs are not redeclared.
                                // 2) When there's a lexical closure like
                                //    /** @type {?string} */ var x = null;
                                //    function f() { x = 'xyz'; }
                                //    the inference will ignore the lexical closure,
                                //    which is just wrong. This bug needs to be fixed eventually.
                                boolean isVarDeclaration = left.hasChildren();
                                if (!isVarDeclaration || var == null || var.isTypeInferred()) {
                                  redeclareSimpleVar(scope, left, resultType);
                                }
                                left.setJSType(isVarDeclaration || leftType == null ?
                                    resultType : null);

                                if (var != null && var.isTypeInferred()) {
                                  JSType oldType = var.getType();
                                  var.setType(oldType == null ?
                                      resultType : oldType.getLeastSupertype(resultType));
                                }
                                break;
                              case Token.GETPROP:
                                String qualifiedName = left.getQualifiedName();
                                if (qualifiedName != null) {
                                  scope.inferQualifiedSlot(left, qualifiedName,
                                      leftType == null ? unknownType : leftType,
                                      resultType);
                                }

                                left.setJSType(resultType);
                                ensurePropertyDefined(left, resultType);
                                break;
                            }
                    children: []
                    pos: 17669
                    length: 1591
                children: []
                pos: 17645
                length: 1615
              pos: 17595
              length: 1669
          children: []
          pos: 17486
          length: 1778
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensurePropertyDefined
              children: []
              pos: 19359
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getprop
                children: []
                pos: 19381
                length: 12
              pos: 19346
              length: 3233
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String propName = getprop.getLastChild().getString();
                children: []
                pos: 19419
                length: 53
              - type: local_variable_declaration
                fields:
                  text: Node obj = getprop.getFirstChild();
                children: []
                pos: 19477
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType nodeType = getJSType(obj);
                children: []
                pos: 19517
                length: 33
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType objectType = ObjectType.cast(
                            nodeType.restrictByNotNullOrUndefined());
                children: []
                pos: 19555
                length: 90
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean propCreationInConstructor = obj.isThis() &&
                            getJSType(syntacticScope.getRootNode()).isConstructor();
                children: []
                pos: 19650
                length: 116
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: objectType
                            children: []
                            pos: 19776
                            length: 10
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 19790
                            length: 4
                        children: []
                        pos: 19776
                        length: 18
                    children: []
                    pos: 19775
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: registry.registerPropertyOnType(propName, nodeType);
                    children: []
                    pos: 19804
                    length: 52
                  pos: 19796
                  length: 66
                pos: 19772
                length: 2803
              pos: 19413
              length: 3166
          children: []
          pos: 19346
          length: 3233
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensurePropertyDeclared
              children: []
              pos: 22863
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getprop
                children: []
                pos: 22886
                length: 12
              pos: 22850
              length: 266
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType ownerType = ObjectType.cast(
                            getJSType(getprop.getFirstChild()).restrictByNotNullOrUndefined());
                children: []
                pos: 22906
                length: 115
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: ownerType
                            children: []
                            pos: 23030
                            length: 9
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 23043
                            length: 4
                        children: []
                        pos: 23030
                        length: 17
                    children: []
                    pos: 23029
                    length: 19
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensurePropertyDeclaredHelper(getprop, ownerType);
                    children: []
                    pos: 23057
                    length: 49
                  pos: 23049
                  length: 63
                pos: 23026
                length: 86
              pos: 22900
              length: 216
          children: []
          pos: 22850
          length: 266
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensurePropertyDeclaredHelper
              children: []
              pos: 23247
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getprop
                children: []
                pos: 23283
                length: 12
              pos: 23231
              length: 834
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String propName = getprop.getLastChild().getString();
                children: []
                pos: 23326
                length: 53
              - type: local_variable_declaration
                fields:
                  text: String qName = getprop.getQualifiedName();
                children: []
                pos: 23384
                length: 42
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: qName
                            children: []
                            pos: 23435
                            length: 5
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 23444
                            length: 4
                        children: []
                        pos: 23435
                        length: 13
                    children: []
                    pos: 23434
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Var var = syntacticScope.getVar(qName);
                    children: []
                    pos: 23458
                    length: 39
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: var
                                    children: []
                                    pos: 23508
                                    length: 3
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 23515
                                    length: 4
                                children: []
                                pos: 23508
                                length: 11
                              right:
                                type: unary_expression
                                fields:
                                  text: "!var.isTypeInferred()"
                                children: []
                                pos: 23523
                                length: 21
                            children: []
                            pos: 23508
                            length: 36
                        children: []
                        pos: 23507
                        length: 38
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: or
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: propName.equals("prototype")
                                    children: []
                                    pos: 23635
                                    length: 28
                                  right:
                                    type: parenthesized_expression
                                    fields:
                                      expression:
                                        type: and
                                        fields:
                                          left:
                                            type: unary_expression
                                            fields:
                                              text: "!objectType.hasOwnProperty(propName)"
                                            children: []
                                            pos: 23758
                                            length: 36
                                          right:
                                            type: parenthesized_expression
                                            fields:
                                              expression:
                                                type: or
                                                fields:
                                                  left:
                                                    type: unary_expression
                                                    fields:
                                                      text: "!objectType.isInstanceType()"
                                                    children: []
                                                    pos: 23812
                                                    length: 28
                                                  right:
                                                    type: parenthesized_expression
                                                    fields:
                                                      expression:
                                                        type: and
                                                        fields:
                                                          left:
                                                            type: method_invocation
                                                            fields:
                                                              text: var.isExtern()
                                                            children: []
                                                            pos: 23862
                                                            length: 14
                                                          right:
                                                            type: unary_expression
                                                            fields:
                                                              text: "!objectType.isNativeObjectType()"
                                                            children: []
                                                            pos: 23880
                                                            length: 32
                                                        children: []
                                                        pos: 23862
                                                        length: 50
                                                    children: []
                                                    pos: 23861
                                                    length: 52
                                                children: []
                                                pos: 23812
                                                length: 101
                                            children: []
                                            pos: 23811
                                            length: 103
                                        children: []
                                        pos: 23758
                                        length: 156
                                    children: []
                                    pos: 23757
                                    length: 158
                                children: []
                                pos: 23635
                                length: 280
                            children: []
                            pos: 23634
                            length: 282
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: return_statement
                            fields:
                              text: |-
                                return objectType.defineDeclaredProperty(
                                              propName, var.getType(), getprop);
                            children: []
                            pos: 23929
                            length: 90
                          pos: 23917
                          length: 112
                        pos: 23631
                        length: 398
                      pos: 23546
                      length: 491
                    pos: 23504
                    length: 533
                  pos: 23450
                  length: 593
                pos: 23431
                length: 612
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 24048
                length: 13
              pos: 23320
              length: 745
          children: []
          pos: 23231
          length: 834
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseName
              children: []
              pos: 24087
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 24100
                length: 6
              pos: 24069
              length: 2002
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String varName = n.getString();
                children: []
                pos: 24131
                length: 31
              - type: local_variable_declaration
                fields:
                  text: Node value = n.getFirstChild();
                children: []
                pos: 24167
                length: 31
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 24203
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: value
                            children: []
                            pos: 24240
                            length: 5
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 24249
                            length: 4
                        children: []
                        pos: 24240
                        length: 13
                    children: []
                    pos: 24239
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: scope = traverse(value, scope);
                    children: []
                    pos: 24263
                    length: 31
                  - type: expression_statement
                    fields:
                      text: |-
                        updateScopeForTypeChange(scope, n, n.getJSType() /* could be null */,
                                  getJSType(value));
                    children: []
                    pos: 24301
                    length: 98
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 24406
                    length: 13
                  pos: 24255
                  length: 170
                pos: 24236
                length: 1790
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 26031
                length: 18
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 26054
                length: 13
              pos: 24125
              length: 1946
          children: []
          pos: 24069
          length: 2002
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseArrayLiteral
              children: []
              pos: 26138
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 26159
                length: 6
              pos: 26120
              length: 171
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 26190
                length: 35
              - type: expression_statement
                fields:
                  text: n.setJSType(getNativeType(ARRAY_TYPE));
                children: []
                pos: 26230
                length: 39
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 26274
                length: 13
              pos: 26184
              length: 107
          children: []
          pos: 26120
          length: 171
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseObjectLiteral
              children: []
              pos: 26313
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 26335
                length: 6
              pos: 26295
              length: 1930
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 26366
                length: 28
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(type);
                children: []
                pos: 26399
                length: 33
              - type: for_statement
                fields:
                  text: |-
                    for (Node name = n.getFirstChild(); name != null; name = name.getNext()) {
                          scope = traverse(name.getFirstChild(), scope);
                        }
                children: []
                pos: 26438
                length: 133
              - type: local_variable_declaration
                fields:
                  text: ObjectType objectType = ObjectType.cast(type);
                children: []
                pos: 26745
                length: 46
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: objectType
                                    children: []
                                    pos: 26800
                                    length: 10
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 26814
                                    length: 4
                                children: []
                                pos: 26800
                                length: 18
                              right:
                                type: method_invocation
                                fields:
                                  text: n.getBooleanProp(Node.REFLECTED_OBJECT)
                                children: []
                                pos: 26830
                                length: 39
                            children: []
                            pos: 26800
                            length: 69
                          right:
                            type: method_invocation
                            fields:
                              text: objectType.isEnumType()
                            children: []
                            pos: 26881
                            length: 23
                        children: []
                        pos: 26800
                        length: 104
                    children: []
                    pos: 26799
                    length: 106
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 26914
                    length: 13
                  pos: 26906
                  length: 27
                pos: 26796
                length: 137
              - type: local_variable_declaration
                fields:
                  text: |-
                    String qObjName = NodeUtil.getBestLValueName(
                            NodeUtil.getBestLValue(n));
                children: []
                pos: 26939
                length: 81
              - type: for_statement
                fields:
                  text: |-
                    for (Node name = n.getFirstChild(); name != null;
                             name = name.getNext()) {
                          String memberName = NodeUtil.getObjectLitKeyName(name);
                          if (memberName != null) {
                            JSType rawValueType =  name.getFirstChild().getJSType();
                            JSType valueType = NodeUtil.getObjectLitKeyTypeFromValueType(
                                name, rawValueType);
                            if (valueType == null) {
                              valueType = unknownType;
                            }
                            objectType.defineInferredProperty(memberName, valueType, name);

                            // Do normal flow inference if this is a direct property assignment.
                            if (qObjName != null && name.isStringKey()) {
                              String qKeyName = qObjName + "." + memberName;
                              Var var = syntacticScope.getVar(qKeyName);
                              JSType oldType = var == null ? null : var.getType();
                              if (var != null && var.isTypeInferred()) {
                                var.setType(oldType == null ?
                                    valueType : oldType.getLeastSupertype(oldType));
                              }

                              scope.inferQualifiedSlot(name, qKeyName,
                                  oldType == null ? unknownType : oldType,
                                  valueType);
                            }
                          } else {
                            n.setJSType(unknownType);
                          }
                        }
                children: []
                pos: 27025
                length: 1178
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 28208
                length: 13
              pos: 26360
              length: 1865
          children: []
          pos: 26295
          length: 1930
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseAdd
              children: []
              pos: 28247
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 28259
                length: 6
              pos: 28229
              length: 1116
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 28290
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = left.getNext();
                children: []
                pos: 28325
                length: 28
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 28358
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = left.getJSType();
                children: []
                pos: 28399
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = right.getJSType();
                children: []
                pos: 28439
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType type = unknownType;
                children: []
                pos: 28482
                length: 26
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: leftType
                                children: []
                                pos: 28517
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 28529
                                length: 4
                            children: []
                            pos: 28517
                            length: 16
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: rightType
                                children: []
                                pos: 28537
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 28550
                                length: 4
                            children: []
                            pos: 28537
                            length: 17
                        children: []
                        pos: 28517
                        length: 37
                    children: []
                    pos: 28516
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: boolean leftIsUnknown = leftType.isUnknownType();
                    children: []
                    pos: 28564
                    length: 49
                  - type: local_variable_declaration
                    fields:
                      text: boolean rightIsUnknown = rightType.isUnknownType();
                    children: []
                    pos: 28620
                    length: 51
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: leftIsUnknown
                                children: []
                                pos: 28682
                                length: 13
                              right:
                                type: identifier
                                fields:
                                  text: rightIsUnknown
                                children: []
                                pos: 28699
                                length: 14
                            children: []
                            pos: 28682
                            length: 31
                        children: []
                        pos: 28681
                        length: 33
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: type = unknownType;
                        children: []
                        pos: 28725
                        length: 19
                      pos: 28715
                      length: 37
                    pos: 28678
                    length: 520
                  pos: 28556
                  length: 648
                pos: 28513
                length: 691
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 29209
                length: 18
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.isAssignAdd()
                        children: []
                        pos: 29237
                        length: 15
                    children: []
                    pos: 29236
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: updateScopeForTypeChange(scope, left, leftType, type);
                    children: []
                    pos: 29262
                    length: 54
                  pos: 29254
                  length: 68
                pos: 29233
                length: 89
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 29328
                length: 13
              pos: 28284
              length: 1061
          children: []
          pos: 28229
          length: 1116
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isAddedAsNumber
              children: []
              pos: 29365
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType type
                children: []
                pos: 29381
                length: 11
              pos: 29349
              length: 197
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return type.isSubtype(registry.createUnionType(VOID_TYPE, NULL_TYPE,
                            NUMBER_VALUE_OR_OBJECT_TYPE, BOOLEAN_TYPE, BOOLEAN_OBJECT_TYPE));
                children: []
                pos: 29400
                length: 142
              pos: 29394
              length: 152
          children: []
          pos: 29349
          length: 197
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseHook
              children: []
              pos: 29568
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 29581
                length: 6
              pos: 29550
              length: 1146
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node condition = n.getFirstChild();
                children: []
                pos: 29612
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node trueNode = condition.getNext();
                children: []
                pos: 29652
                length: 36
              - type: local_variable_declaration
                fields:
                  text: Node falseNode = n.getLastChild();
                children: []
                pos: 29693
                length: 34
              - type: expression_statement
                fields:
                  text: scope = traverse(condition, scope);
                children: []
                pos: 29761
                length: 35
              - type: local_variable_declaration
                fields:
                  text: |-
                    FlowScope trueScope = reverseInterpreter.
                            getPreciserScopeKnowingConditionOutcome(
                                condition, scope, true);
                children: []
                pos: 29876
                length: 127
              - type: local_variable_declaration
                fields:
                  text: |-
                    FlowScope falseScope = reverseInterpreter.
                            getPreciserScopeKnowingConditionOutcome(
                                condition, scope, false);
                children: []
                pos: 30008
                length: 129
              - type: expression_statement
                fields:
                  text: traverse(trueNode, trueScope.createChildFlowScope());
                children: []
                pos: 30192
                length: 53
              - type: expression_statement
                fields:
                  text: traverse(falseNode, falseScope.createChildFlowScope());
                children: []
                pos: 30302
                length: 55
              - type: local_variable_declaration
                fields:
                  text: JSType trueType = trueNode.getJSType();
                children: []
                pos: 30414
                length: 39
              - type: local_variable_declaration
                fields:
                  text: JSType falseType = falseNode.getJSType();
                children: []
                pos: 30458
                length: 41
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: trueType
                                children: []
                                pos: 30508
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 30520
                                length: 4
                            children: []
                            pos: 30508
                            length: 16
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: falseType
                                children: []
                                pos: 30528
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 30541
                                length: 4
                            children: []
                            pos: 30528
                            length: 17
                        children: []
                        pos: 30508
                        length: 37
                    children: []
                    pos: 30507
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: n.setJSType(trueType.getLeastSupertype(falseType));
                    children: []
                    pos: 30555
                    length: 51
                  pos: 30547
                  length: 65
                pos: 30504
                length: 146
              - type: return_statement
                fields:
                  text: return scope.createChildFlowScope();
                children: []
                pos: 30656
                length: 36
              pos: 29606
              length: 1090
          children: []
          pos: 29550
          length: 1146
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseCall
              children: []
              pos: 30718
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 30731
                length: 6
              pos: 30700
              length: 632
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 30762
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 30803
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType functionType = getJSType(left).restrictByNotNullOrUndefined();
                children: []
                pos: 30838
                length: 69
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: functionType.isFunctionType()
                        children: []
                        pos: 30916
                        length: 29
                    children: []
                    pos: 30915
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType fnType = functionType.toMaybeFunctionType();
                    children: []
                    pos: 30955
                    length: 57
                  - type: expression_statement
                    fields:
                      text: n.setJSType(fnType.getReturnType());
                    children: []
                    pos: 31019
                    length: 36
                  - type: expression_statement
                    fields:
                      text: backwardsInferenceFromCallSite(n, fnType);
                    children: []
                    pos: 31062
                    length: 42
                  pos: 30947
                  length: 163
                pos: 30912
                length: 346
              - type: expression_statement
                fields:
                  text: scope = tightenTypesAfterAssertions(scope, n);
                children: []
                pos: 31264
                length: 46
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 31315
                length: 13
              pos: 30756
              length: 576
          children: []
          pos: 30700
          length: 632
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: tightenTypesAfterAssertions
              children: []
              pos: 31354
              length: 27
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 31382
                length: 15
              pos: 31336
              length: 1457
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = callNode.getFirstChild();
                children: []
                pos: 31426
                length: 37
              - type: local_variable_declaration
                fields:
                  text: Node firstParam = left.getNext();
                children: []
                pos: 31468
                length: 33
              - type: local_variable_declaration
                fields:
                  text: |-
                    AssertionFunctionSpec assertionFunctionSpec =
                            assertionFunctionsMap.get(left.getQualifiedName());
                children: []
                pos: 31506
                length: 105
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: assertionFunctionSpec
                                children: []
                                pos: 31620
                                length: 21
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 31645
                                length: 4
                            children: []
                            pos: 31620
                            length: 29
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: firstParam
                                children: []
                                pos: 31653
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 31667
                                length: 4
                            children: []
                            pos: 31653
                            length: 18
                        children: []
                        pos: 31620
                        length: 51
                    children: []
                    pos: 31619
                    length: 53
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 31681
                    length: 13
                  pos: 31673
                  length: 27
                pos: 31616
                length: 84
              - type: local_variable_declaration
                fields:
                  text: Node assertedNode = assertionFunctionSpec.getAssertedParam(firstParam);
                children: []
                pos: 31705
                length: 71
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: assertedNode
                            children: []
                            pos: 31785
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 31801
                            length: 4
                        children: []
                        pos: 31785
                        length: 20
                    children: []
                    pos: 31784
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 31815
                    length: 13
                  pos: 31807
                  length: 27
                pos: 31781
                length: 53
              - type: local_variable_declaration
                fields:
                  text: |-
                    JSType assertedType = assertionFunctionSpec.getAssertedType(
                            callNode, registry);
                children: []
                pos: 31839
                length: 89
              - type: local_variable_declaration
                fields:
                  text: String assertedNodeName = assertedNode.getQualifiedName();
                children: []
                pos: 31933
                length: 58
              - type: local_variable_declaration
                fields:
                  text: JSType narrowed;
                children: []
                pos: 31997
                length: 16
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: assertedType
                            children: []
                            pos: 32090
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 32106
                            length: 4
                        children: []
                        pos: 32090
                        length: 20
                    children: []
                    pos: 32089
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        scope = reverseInterpreter.getPreciserScopeKnowingConditionOutcome(
                                  assertedNode, scope, true);
                    children: []
                    pos: 32177
                    length: 105
                  - type: expression_statement
                    fields:
                      text: narrowed = getJSType(assertedNode).restrictByNotNullOrUndefined();
                    children: []
                    pos: 32339
                    length: 66
                  pos: 32112
                  length: 299
                pos: 32086
                length: 650
              - type: expression_statement
                fields:
                  text: callNode.setJSType(narrowed);
                children: []
                pos: 32742
                length: 29
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 32776
                length: 13
              pos: 31420
              length: 1373
          children: []
          pos: 31336
          length: 1457
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: narrowScope
              children: []
              pos: 32815
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 32827
                length: 15
              pos: 32797
              length: 468
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: node.isThis()
                        children: []
                        pos: 32882
                        length: 13
                    children: []
                    pos: 32881
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 32984
                    length: 13
                  pos: 32897
                  length: 106
                pos: 32878
                length: 125
              - type: expression_statement
                fields:
                  text: scope = scope.createChildFlowScope();
                children: []
                pos: 33009
                length: 37
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: node.isGetProp()
                        children: []
                        pos: 33055
                        length: 16
                    children: []
                    pos: 33054
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        scope.inferQualifiedSlot(
                                  node, node.getQualifiedName(), getJSType(node), narrowed);
                    children: []
                    pos: 33081
                    length: 94
                  pos: 33073
                  length: 108
                pos: 33051
                length: 192
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 33248
                length: 13
              pos: 32872
              length: 393
          children: []
          pos: 32797
          length: 468
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: backwardsInferenceFromCallSite
              children: []
              pos: 34204
              length: 30
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 34235
                length: 6
              pos: 34191
              length: 302
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: boolean updatedFnType = inferTemplatedTypesForCall(n, fnType);
                children: []
                pos: 34270
                length: 62
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: updatedFnType
                        children: []
                        pos: 34341
                        length: 13
                    children: []
                    pos: 34340
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: fnType = n.getFirstChild().getJSType().toMaybeFunctionType();
                    children: []
                    pos: 34364
                    length: 61
                  pos: 34356
                  length: 75
                pos: 34337
                length: 94
              - type: expression_statement
                fields:
                  text: updateTypeOfParameters(n, fnType);
                children: []
                pos: 34436
                length: 34
              - type: expression_statement
                fields:
                  text: updateBind(n);
                children: []
                pos: 34475
                length: 14
              pos: 34264
              length: 229
          children: []
          pos: 34191
          length: 302
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateBind
              children: []
              pos: 34677
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 34688
                length: 6
              pos: 34664
              length: 539
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: |-
                    CodingConvention.Bind bind =
                            compiler.getCodingConvention().describeFunctionBind(n, true);
                children: []
                pos: 34702
                length: 98
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: bind
                            children: []
                            pos: 34809
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 34817
                            length: 4
                        children: []
                        pos: 34809
                        length: 12
                    children: []
                    pos: 34808
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 34831
                    length: 7
                  pos: 34823
                  length: 21
                pos: 34805
                length: 39
              - type: local_variable_declaration
                fields:
                  text: |-
                    FunctionType callTargetFn = getJSType(bind.target)
                            .restrictByNotNullOrUndefined().toMaybeFunctionType();
                children: []
                pos: 34850
                length: 113
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: callTargetFn
                            children: []
                            pos: 34972
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 34988
                            length: 4
                        children: []
                        pos: 34972
                        length: 20
                    children: []
                    pos: 34971
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 35002
                    length: 7
                  pos: 34994
                  length: 21
                pos: 34968
                length: 47
              - type: expression_statement
                fields:
                  text: |-
                    n.setJSType(
                            callTargetFn.getBindReturnType(
                                // getBindReturnType expects the 'this' argument to be included.
                                bind.getBoundParameterCount() + 1));
                children: []
                pos: 35021
                length: 178
              pos: 34696
              length: 507
          children: []
          pos: 34664
          length: 539
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateTypeOfParameters
              children: []
              pos: 35380
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 35403
                length: 6
              pos: 35367
              length: 1061
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int i = 0;
                children: []
                pos: 35438
                length: 10
              - type: local_variable_declaration
                fields:
                  text: int childCount = n.getChildCount();
                children: []
                pos: 35453
                length: 35
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (Node iParameter : fnType.getParameters()) {
                          if (i + 1 >= childCount) {
                            // TypeCheck#visitParametersList will warn so we bail.
                            return;
                          }

                          JSType iParameterType = getJSType(iParameter);
                          Node iArgument = n.getChildAtIndex(i + 1);
                          JSType iArgumentType = getJSType(iArgument);
                          inferPropertyTypesToMatchConstraint(iArgumentType, iParameterType);

                          // TODO(johnlenz): Filter out non-function types
                          // (such as null and undefined) as
                          // we only care about FUNCTION subtypes here.
                          JSType restrictedParameter = iParameterType
                              .restrictByNotNullOrUndefined()
                              .toMaybeFunctionType();
                          if (restrictedParameter != null) {
                            if (iArgument.isFunction() &&
                                iArgumentType.isFunctionType() &&
                                iArgument.getJSDocInfo() == null) {
                              iArgument.setJSType(restrictedParameter);
                            }
                          }
                          i++;
                        }
                children: []
                pos: 35493
                length: 931
              pos: 35432
              length: 996
          children: []
          pos: 35367
          length: 1061
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: inferTemplateTypesFromParameters
              children: []
              pos: 36466
              length: 32
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FunctionType fnType
                children: []
                pos: 36506
                length: 19
              pos: 36432
              length: 766
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: fnType.getTemplateTypeMap().getTemplateKeys().isEmpty()
                        children: []
                        pos: 36548
                        length: 55
                    children: []
                    pos: 36547
                    length: 57
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Collections.emptyMap();
                    children: []
                    pos: 36613
                    length: 30
                  pos: 36605
                  length: 44
                pos: 36544
                length: 105
              - type: local_variable_declaration
                fields:
                  text: Map<TemplateType, JSType> resolvedTypes = Maps.newIdentityHashMap();
                children: []
                pos: 36655
                length: 68
              - type: local_variable_declaration
                fields:
                  text: Node callTarget = call.getFirstChild();
                children: []
                pos: 36729
                length: 39
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: NodeUtil.isGet(callTarget)
                        children: []
                        pos: 36777
                        length: 26
                    children: []
                    pos: 36776
                    length: 28
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Node obj = callTarget.getFirstChild();
                    children: []
                    pos: 36813
                    length: 38
                  - type: expression_statement
                    fields:
                      text: |-
                        maybeResolveTemplatedType(
                                  fnType.getTypeOfThis(),
                                  getJSType(obj),
                                  resolvedTypes);
                    children: []
                    pos: 36858
                    length: 112
                  pos: 36805
                  length: 171
                pos: 36773
                length: 203
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: call.hasMoreThanOneChild()
                        children: []
                        pos: 36986
                        length: 26
                    children: []
                    pos: 36985
                    length: 28
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        maybeResolveTemplateTypeFromNodes(
                                  fnType.getParameters(),
                                  call.getChildAtIndex(1).siblings(),
                                  resolvedTypes);
                    children: []
                    pos: 37022
                    length: 140
                  pos: 37014
                  length: 154
                pos: 36982
                length: 186
              - type: return_statement
                fields:
                  text: return resolvedTypes;
                children: []
                pos: 37173
                length: 21
              pos: 36538
              length: 660
          children: []
          pos: 36432
          length: 766
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: maybeResolveTemplatedType
              children: []
              pos: 37215
              length: 25
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType paramType
                children: []
                pos: 37248
                length: 16
              pos: 37202
              length: 2445
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: paramType.isTemplateType()
                        children: []
                        pos: 37345
                        length: 26
                    children: []
                    pos: 37344
                    length: 28
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        resolvedTemplateType(
                                  resolvedTypes, paramType.toMaybeTemplateType(), argType);
                    children: []
                    pos: 37401
                    length: 89
                  pos: 37373
                  length: 123
                pos: 37341
                length: 2302
              pos: 37335
              length: 2312
          children: []
          pos: 37202
          length: 2445
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: maybeResolveTemplateTypeFromNodes
              children: []
              pos: 39664
              length: 33
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Iterable<Node> declParams
                children: []
                pos: 39705
                length: 25
              pos: 39651
              length: 275
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    maybeResolveTemplateTypeFromNodes(
                            declParams.iterator(), callParams.iterator(), resolvedTypes);
                children: []
                pos: 39818
                length: 104
              pos: 39812
              length: 114
          children: []
          pos: 39651
          length: 275
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: maybeResolveTemplateTypeFromNodes
              children: []
              pos: 39943
              length: 33
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Iterator<Node> declParams
                children: []
                pos: 39984
                length: 25
              pos: 39930
              length: 643
            body:
              type: block
              fields: {}
              children:
              - type: while_statement
                fields:
                  text: |-
                    while (declParams.hasNext() && callParams.hasNext()) {
                          Node declParam = declParams.next();
                          maybeResolveTemplatedType(
                              getJSType(declParam),
                              getJSType(callParams.next()),
                              resolvedTypes);
                          if (declParam.isVarArgs()) {
                            while (callParams.hasNext()) {
                              maybeResolveTemplatedType(
                                  getJSType(declParam),
                                  getJSType(callParams.next()),
                                  resolvedTypes);
                            }
                          }
                        }
                children: []
                pos: 40097
                length: 472
              pos: 40091
              length: 482
          children: []
          pos: 39930
          length: 643
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: resolvedTemplateType
              children: []
              pos: 40597
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Map<TemplateType, JSType> map
                children: []
                pos: 40625
                length: 29
              pos: 40577
              length: 391
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType previous = map.get(template);
                children: []
                pos: 40702
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!resolved.isUnknownType()"
                        children: []
                        pos: 40747
                        length: 25
                    children: []
                    pos: 40746
                    length: 27
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: previous
                                children: []
                                pos: 40786
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 40798
                                length: 4
                            children: []
                            pos: 40786
                            length: 16
                        children: []
                        pos: 40785
                        length: 18
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: map.put(template, resolved);
                        children: []
                        pos: 40814
                        length: 28
                      pos: 40804
                      length: 46
                    pos: 40782
                    length: 176
                  pos: 40774
                  length: 190
                pos: 40743
                length: 221
              pos: 40696
              length: 272
          children: []
          pos: 40577
          length: 391
        - type: class_declaration
          fields:
            name:
              type: identifier
              fields:
                text: TemplateTypeReplacer
              children: []
              pos: 40993
              length: 20
            body:
              type: class_body
              fields: {}
              children:
              - type: field_declaration
                fields:
                  text: private final Map<TemplateType, JSType> replacements;
                children: []
                pos: 41048
                length: 53
              - type: field_declaration
                fields:
                  text: private final JSTypeRegistry registry;
                children: []
                pos: 41106
                length: 38
              - type: field_declaration
                fields:
                  text: boolean madeChanges = false;
                children: []
                pos: 41149
                length: 28
              - type: constructor_declaration
                fields:
                  text: |-
                    TemplateTypeReplacer(
                            JSTypeRegistry registry, Map<TemplateType, JSType> replacements) {
                          super(registry);
                          this.registry = registry;
                          this.replacements = replacements;
                        }
                children: []
                pos: 41183
                length: 197
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: caseTemplateType
                    children: []
                    pos: 41414
                    length: 16
                  parameters:
                    type: method_parameters
                    fields: {}
                    children:
                    - type: formal_parameter
                      fields:
                        text: TemplateType type
                      children: []
                      pos: 41431
                      length: 17
                    pos: 41386
                    length: 245
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: expression_statement
                      fields:
                        text: madeChanges = true;
                      children: []
                      pos: 41458
                      length: 19
                    - type: local_variable_declaration
                      fields:
                        text: JSType replacement = replacements.get(type);
                      children: []
                      pos: 41484
                      length: 44
                    - type: return_statement
                      fields:
                        text: |-
                          return replacement != null ?
                                    replacement : registry.getNativeType(UNKNOWN_TYPE);
                      children: []
                      pos: 41535
                      length: 90
                    pos: 41450
                    length: 181
                children: []
                pos: 41386
                length: 245
              pos: 40972
              length: 663
          children: []
          pos: 40972
          length: 663
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: inferTemplatedTypesForCall
              children: []
              pos: 41846
              length: 26
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 41880
                length: 6
              pos: 41830
              length: 887
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: |-
                    final ImmutableList<TemplateType> keys = fnType.getTemplateTypeMap()
                            .getTemplateKeys();
                children: []
                pos: 41915
                length: 96
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: keys.isEmpty()
                        children: []
                        pos: 42020
                        length: 14
                    children: []
                    pos: 42019
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return false;
                    children: []
                    pos: 42044
                    length: 13
                  pos: 42036
                  length: 27
                pos: 42016
                length: 47
              - type: local_variable_declaration
                fields:
                  text: "Map<TemplateType, JSType> inferred = \n        inferTemplateTypesFromParameters(fnType,
                    n);"
                children: []
                pos: 42108
                length: 90
              - type: local_variable_declaration
                fields:
                  text: |-
                    TemplateTypeReplacer replacer = new TemplateTypeReplacer(
                            registry, inferred);
                children: []
                pos: 42310
                length: 86
              - type: local_variable_declaration
                fields:
                  text: Node callTarget = n.getFirstChild();
                children: []
                pos: 42401
                length: 36
              - type: local_variable_declaration
                fields:
                  text: |-
                    FunctionType replacementFnType = fnType.visit(replacer)
                            .toMaybeFunctionType();
                children: []
                pos: 42443
                length: 87
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(replacementFnType);
                children: []
                pos: 42535
                length: 46
              - type: expression_statement
                fields:
                  text: callTarget.setJSType(replacementFnType);
                children: []
                pos: 42587
                length: 40
              - type: expression_statement
                fields:
                  text: n.setJSType(replacementFnType.getReturnType());
                children: []
                pos: 42632
                length: 47
              - type: return_statement
                fields:
                  text: return replacer.madeChanges;
                children: []
                pos: 42685
                length: 28
              pos: 41909
              length: 808
          children: []
          pos: 41830
          length: 887
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseNew
              children: []
              pos: 42739
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 42751
                length: 6
              pos: 42721
              length: 1497
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 42782
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node constructor = n.getFirstChild();
                children: []
                pos: 42823
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType constructorType = constructor.getJSType();
                children: []
                pos: 42865
                length: 49
              - type: local_variable_declaration
                fields:
                  text: JSType type = null;
                children: []
                pos: 42919
                length: 19
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: constructorType
                            children: []
                            pos: 42947
                            length: 15
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 42966
                            length: 4
                        children: []
                        pos: 42947
                        length: 23
                    children: []
                    pos: 42946
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: constructorType = constructorType.restrictByNotNullOrUndefined();
                    children: []
                    pos: 42980
                    length: 65
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: constructorType.isUnknownType()
                            children: []
                            pos: 43056
                            length: 31
                        children: []
                        pos: 43055
                        length: 33
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: type = unknownType;
                        children: []
                        pos: 43099
                        length: 19
                      pos: 43089
                      length: 37
                    pos: 43052
                    length: 1115
                  pos: 42972
                  length: 1201
                pos: 42943
                length: 1230
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 44178
                length: 18
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 44201
                length: 13
              pos: 42776
              length: 1442
          children: []
          pos: 42721
          length: 1497
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseAnd
              children: []
              pos: 44249
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 44261
                length: 6
              pos: 44222
              length: 126
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return traverseShortCircuitingBinOp(n, scope, true);
                children: []
                pos: 44292
                length: 52
              pos: 44286
              length: 62
          children: []
          pos: 44222
          length: 126
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseChildren
              children: []
              pos: 44370
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 44387
                length: 6
              pos: 44352
              length: 195
            body:
              type: block
              fields: {}
              children:
              - type: for_statement
                fields:
                  text: |-
                    for (Node el = n.getFirstChild(); el != null; el = el.getNext()) {
                          scope = traverse(el, scope);
                        }
                children: []
                pos: 44418
                length: 107
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 44530
                length: 13
              pos: 44412
              length: 135
          children: []
          pos: 44352
          length: 195
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseGetElem
              children: []
              pos: 44569
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 44585
                length: 6
              pos: 44551
              length: 446
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 44616
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType type = getJSType(n.getFirstChild()).restrictByNotNullOrUndefined();
                children: []
                pos: 44656
                length: 74
              - type: local_variable_declaration
                fields:
                  text: TemplateTypeMap typeMap = type.getTemplateTypeMap();
                children: []
                pos: 44735
                length: 52
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: typeMap.hasTemplateType(registry.getObjectElementKey())
                        children: []
                        pos: 44796
                        length: 55
                    children: []
                    pos: 44795
                    length: 57
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: n.setJSType(typeMap.getTemplateType(registry.getObjectElementKey()));
                    children: []
                    pos: 44861
                    length: 69
                  pos: 44853
                  length: 83
                pos: 44792
                length: 144
              - type: return_statement
                fields:
                  text: return dereferencePointer(n.getFirstChild(), scope);
                children: []
                pos: 44941
                length: 52
              pos: 44610
              length: 387
          children: []
          pos: 44551
          length: 446
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseGetProp
              children: []
              pos: 45019
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 45035
                length: 6
              pos: 45001
              length: 347
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node objNode = n.getFirstChild();
                children: []
                pos: 45066
                length: 33
              - type: local_variable_declaration
                fields:
                  text: Node property = n.getLastChild();
                children: []
                pos: 45104
                length: 33
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 45142
                length: 35
              - type: expression_statement
                fields:
                  text: |-
                    n.setJSType(
                            getPropertyType(
                                objNode.getJSType(), property.getString(), n, scope));
                children: []
                pos: 45183
                length: 104
              - type: return_statement
                fields:
                  text: return dereferencePointer(n.getFirstChild(), scope);
                children: []
                pos: 45292
                length: 52
              pos: 45060
              length: 288
          children: []
          pos: 45001
          length: 347
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: inferPropertyTypesToMatchConstraint
              children: []
              pos: 45902
              length: 35
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType type
                children: []
                pos: 45945
                length: 11
              pos: 45882
              length: 205
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 45987
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 45995
                                length: 4
                            children: []
                            pos: 45987
                            length: 12
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: constraint
                                children: []
                                pos: 46003
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 46017
                                length: 4
                            children: []
                            pos: 46003
                            length: 18
                        children: []
                        pos: 45987
                        length: 34
                    children: []
                    pos: 45986
                    length: 36
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 46031
                    length: 7
                  pos: 46023
                  length: 21
                pos: 45983
                length: 61
              - type: expression_statement
                fields:
                  text: type.matchConstraint(constraint);
                children: []
                pos: 46050
                length: 33
              pos: 45977
              length: 110
          children: []
          pos: 45882
          length: 205
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: dereferencePointer
              children: []
              pos: 46211
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 46230
                length: 6
              pos: 46193
              length: 304
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.isQualifiedName()
                        children: []
                        pos: 46265
                        length: 19
                    children: []
                    pos: 46264
                    length: 21
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType type = getJSType(n);
                    children: []
                    pos: 46294
                    length: 27
                  - type: local_variable_declaration
                    fields:
                      text: JSType narrowed = type.restrictByNotNullOrUndefined();
                    children: []
                    pos: 46328
                    length: 54
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 46393
                                length: 4
                              right:
                                type: identifier
                                fields:
                                  text: narrowed
                                children: []
                                pos: 46401
                                length: 8
                            children: []
                            pos: 46393
                            length: 16
                        children: []
                        pos: 46392
                        length: 18
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: scope = narrowScope(scope, n, narrowed);
                        children: []
                        pos: 46421
                        length: 40
                      pos: 46411
                      length: 58
                    pos: 46389
                    length: 80
                  pos: 46286
                  length: 189
                pos: 46261
                length: 214
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 46480
                length: 13
              pos: 46255
              length: 242
          children: []
          pos: 46193
          length: 304
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getPropertyType
              children: []
              pos: 46516
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType objType
                children: []
                pos: 46532
                length: 14
              pos: 46501
              length: 2428
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType propertyType = null;
                children: []
                pos: 46983
                length: 27
              - type: local_variable_declaration
                fields:
                  text: boolean isLocallyInferred = false;
                children: []
                pos: 47015
                length: 34
              - type: local_variable_declaration
                fields:
                  text: String qualifiedName = n.getQualifiedName();
                children: []
                pos: 47129
                length: 44
              - type: local_variable_declaration
                fields:
                  text: StaticSlot<JSType> var = scope.getSlot(qualifiedName);
                children: []
                pos: 47178
                length: 54
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: var
                            children: []
                            pos: 47241
                            length: 3
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 47248
                            length: 4
                        children: []
                        pos: 47241
                        length: 11
                    children: []
                    pos: 47240
                    length: 13
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType varType = var.getType();
                    children: []
                    pos: 47262
                    length: 31
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: varType
                                children: []
                                pos: 47304
                                length: 7
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 47315
                                length: 4
                            children: []
                            pos: 47304
                            length: 15
                        children: []
                        pos: 47303
                        length: 17
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: boolean isDeclared = !var.isTypeInferred();
                        children: []
                        pos: 47331
                        length: 43
                      - type: expression_statement
                        fields:
                          text: isLocallyInferred = (var != syntacticScope.getSlot(qualifiedName));
                        children: []
                        pos: 47383
                        length: 67
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: or
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: isDeclared
                                    children: []
                                    pos: 47463
                                    length: 10
                                  right:
                                    type: identifier
                                    fields:
                                      text: isLocallyInferred
                                    children: []
                                    pos: 47477
                                    length: 17
                                children: []
                                pos: 47463
                                length: 31
                            children: []
                            pos: 47462
                            length: 33
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: propertyType = varType;
                            children: []
                            pos: 47508
                            length: 23
                          pos: 47496
                          length: 45
                        pos: 47459
                        length: 82
                      pos: 47321
                      length: 228
                    pos: 47300
                    length: 249
                  pos: 47254
                  length: 301
                pos: 47237
                length: 318
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: propertyType
                                children: []
                                pos: 47565
                                length: 12
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 47581
                                length: 4
                            children: []
                            pos: 47565
                            length: 20
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: objType
                                children: []
                                pos: 47589
                                length: 7
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 47600
                                length: 4
                            children: []
                            pos: 47589
                            length: 15
                        children: []
                        pos: 47565
                        length: 39
                    children: []
                    pos: 47564
                    length: 41
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType foundType = objType.findPropertyType(propName);
                    children: []
                    pos: 47614
                    length: 54
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: foundType
                                children: []
                                pos: 47679
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 47692
                                length: 4
                            children: []
                            pos: 47679
                            length: 17
                        children: []
                        pos: 47678
                        length: 19
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: propertyType = foundType;
                        children: []
                        pos: 47708
                        length: 25
                      pos: 47698
                      length: 43
                    pos: 47675
                    length: 66
                  pos: 47606
                  length: 141
                pos: 47561
                length: 186
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: propertyType
                                children: []
                                pos: 47757
                                length: 12
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 47773
                                length: 4
                            children: []
                            pos: 47757
                            length: 20
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: objType
                                children: []
                                pos: 47781
                                length: 7
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 47792
                                length: 4
                            children: []
                            pos: 47781
                            length: 15
                        children: []
                        pos: 47757
                        length: 39
                    children: []
                    pos: 47756
                    length: 41
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType restrictedObjType = objType.restrictByNotNullOrUndefined();
                    children: []
                    pos: 47806
                    length: 66
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: unary_expression
                                fields:
                                  text: "!restrictedObjType.getTemplateTypeMap().isEmpty()"
                                children: []
                                pos: 47883
                                length: 49
                              right:
                                type: method_invocation
                                fields:
                                  text: propertyType.hasAnyTemplateTypes()
                                children: []
                                pos: 47946
                                length: 34
                            children: []
                            pos: 47883
                            length: 97
                        children: []
                        pos: 47882
                        length: 99
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: TemplateTypeMap typeMap = restrictedObjType.getTemplateTypeMap();
                        children: []
                        pos: 47992
                        length: 65
                      - type: local_variable_declaration
                        fields:
                          text: |-
                            TemplateTypeMapReplacer replacer = new TemplateTypeMapReplacer(
                                        registry, typeMap);
                        children: []
                        pos: 48066
                        length: 95
                      - type: expression_statement
                        fields:
                          text: propertyType = propertyType.visit(replacer);
                        children: []
                        pos: 48170
                        length: 44
                      pos: 47982
                      length: 240
                    pos: 47879
                    length: 343
                  pos: 47798
                  length: 430
                pos: 47753
                length: 475
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: or
                                fields:
                                  left:
                                    type: equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: propertyType
                                        children: []
                                        pos: 48239
                                        length: 12
                                      right:
                                        type: null_literal
                                        fields: {}
                                        children: []
                                        pos: 48255
                                        length: 4
                                    children: []
                                    pos: 48239
                                    length: 20
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: propertyType.isUnknownType()
                                    children: []
                                    pos: 48263
                                    length: 28
                                children: []
                                pos: 48239
                                length: 52
                            children: []
                            pos: 48238
                            length: 54
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: qualifiedName
                                children: []
                                pos: 48304
                                length: 13
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 48321
                                length: 4
                            children: []
                            pos: 48304
                            length: 21
                        children: []
                        pos: 48238
                        length: 87
                    children: []
                    pos: 48237
                    length: 89
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: ObjectType regType = ObjectType.cast(registry.getType(qualifiedName));
                    children: []
                    pos: 48410
                    length: 70
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: regType
                                children: []
                                pos: 48491
                                length: 7
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 48502
                                length: 4
                            children: []
                            pos: 48491
                            length: 15
                        children: []
                        pos: 48490
                        length: 17
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: propertyType = regType.getConstructor();
                        children: []
                        pos: 48518
                        length: 40
                      pos: 48508
                      length: 58
                    pos: 48487
                    length: 79
                  pos: 48327
                  length: 245
                pos: 48234
                length: 338
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: propertyType
                            children: []
                            pos: 48582
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 48598
                            length: 4
                        children: []
                        pos: 48582
                        length: 20
                    children: []
                    pos: 48581
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return unknownType;
                    children: []
                    pos: 48612
                    length: 19
                  pos: 48604
                  length: 33
                pos: 48578
                length: 347
              pos: 46596
              length: 2333
          children: []
          pos: 46501
          length: 2428
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseOr
              children: []
              pos: 48960
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 48971
                length: 6
              pos: 48933
              length: 126
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return traverseShortCircuitingBinOp(n, scope, false);
                children: []
                pos: 49002
                length: 53
              pos: 48996
              length: 63
          children: []
          pos: 48933
          length: 126
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseShortCircuitingBinOp
              children: []
              pos: 49090
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 49126
                length: 6
              pos: 49063
              length: 2359
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 49176
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 49211
                length: 30
              - type: local_variable_declaration
                fields:
                  text: |-
                    BooleanOutcomePair leftLiterals =
                            traverseWithinShortCircuitingBinOp(left,
                                scope.createChildFlowScope());
                children: []
                pos: 49273
                length: 125
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = left.getJSType();
                children: []
                pos: 49403
                length: 35
              - type: local_variable_declaration
                fields:
                  text: |-
                    FlowScope rightScope = reverseInterpreter.
                            getPreciserScopeKnowingConditionOutcome(
                                left, leftLiterals.getOutcomeFlowScope(left.getType(), condition),
                                condition);
                children: []
                pos: 49562
                length: 194
              - type: local_variable_declaration
                fields:
                  text: |-
                    BooleanOutcomePair rightLiterals =
                            traverseWithinShortCircuitingBinOp(
                                right, rightScope.createChildFlowScope());
                children: []
                pos: 49789
                length: 133
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = right.getJSType();
                children: []
                pos: 49927
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType type;
                children: []
                pos: 49970
                length: 12
              - type: local_variable_declaration
                fields:
                  text: BooleanOutcomePair literals;
                children: []
                pos: 49987
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: leftType
                                children: []
                                pos: 50024
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 50036
                                length: 4
                            children: []
                            pos: 50024
                            length: 16
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: rightType
                                children: []
                                pos: 50044
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 50057
                                length: 4
                            children: []
                            pos: 50044
                            length: 17
                        children: []
                        pos: 50024
                        length: 37
                    children: []
                    pos: 50023
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: leftType = leftType.getRestrictedTypeGivenToBooleanOutcome(!condition);
                    children: []
                    pos: 50071
                    length: 71
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: field_access
                                fields:
                                  text: leftLiterals.toBooleanOutcomes
                                children: []
                                pos: 50153
                                length: 30
                              right:
                                type: method_invocation
                                fields:
                                  text: BooleanLiteralSet.get(!condition)
                                children: []
                                pos: 50197
                                length: 33
                            children: []
                            pos: 50153
                            length: 77
                        children: []
                        pos: 50152
                        length: 79
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: type = leftType;
                        children: []
                        pos: 50337
                        length: 16
                      - type: expression_statement
                        fields:
                          text: literals = leftLiterals;
                        children: []
                        pos: 50362
                        length: 24
                      pos: 50232
                      length: 162
                    pos: 50149
                    length: 541
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: equals
                                fields:
                                  left:
                                    type: field_access
                                    fields:
                                      text: literals.booleanValues
                                    children: []
                                    pos: 50823
                                    length: 22
                                  right:
                                    type: field_access
                                    fields:
                                      text: BooleanLiteralSet.EMPTY
                                    children: []
                                    pos: 50849
                                    length: 23
                                children: []
                                pos: 50823
                                length: 49
                              right:
                                type: method_invocation
                                fields:
                                  text: getNativeType(BOOLEAN_TYPE).isSubtype(type)
                                children: []
                                pos: 50886
                                length: 43
                            children: []
                            pos: 50823
                            length: 106
                        children: []
                        pos: 50822
                        length: 108
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: method_invocation
                                fields:
                                  text: type.isUnionType()
                                children: []
                                pos: 51000
                                length: 18
                            children: []
                            pos: 50999
                            length: 20
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: |-
                                type = type.toMaybeUnionType().getRestrictedUnion(
                                              getNativeType(BOOLEAN_TYPE));
                            children: []
                            pos: 51032
                            length: 94
                          pos: 51020
                          length: 116
                        pos: 50996
                        length: 140
                      pos: 50931
                      length: 213
                    pos: 50819
                    length: 325
                  pos: 50063
                  length: 1087
                pos: 50020
                length: 1353
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 51378
                length: 18
              - type: return_statement
                fields:
                  text: return literals;
                children: []
                pos: 51402
                length: 16
              pos: 49170
              length: 2252
          children: []
          pos: 49063
          length: 2359
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseWithinShortCircuitingBinOp
              children: []
              pos: 51453
              length: 34
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 51488
                length: 6
              pos: 51426
              length: 362
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 51533
                        length: 11
                    children: []
                    pos: 51532
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.AND:
                                return traverseAnd(n, scope);

                              case Token.OR:
                                return traverseOr(n, scope);

                              default:
                                scope = traverse(n, scope);
                                return newBooleanOutcomePair(n.getJSType(), scope);
                            }
                    children: []
                    pos: 51546
                    length: 238
                children: []
                pos: 51525
                length: 259
              pos: 51519
              length: 269
          children: []
          pos: 51426
          length: 362
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getBooleanOutcomePair
              children: []
              pos: 52027
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: BooleanOutcomePair left
                children: []
                pos: 52049
                length: 23
              pos: 52008
              length: 416
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return new BooleanOutcomePair(
                            getBooleanOutcomes(left.toBooleanOutcomes, right.toBooleanOutcomes,
                                               condition),
                            getBooleanOutcomes(left.booleanValues, right.booleanValues, condition),
                            left.getJoinedFlowScope(), right.getJoinedFlowScope());
                children: []
                pos: 52131
                length: 289
              pos: 52125
              length: 299
          children: []
          pos: 52008
          length: 416
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getBooleanOutcomes
              children: []
              pos: 53110
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: BooleanLiteralSet left
                children: []
                pos: 53129
                length: 22
              pos: 53085
              length: 201
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return right.union(left.intersection(BooleanLiteralSet.get(!condition)));
                children: []
                pos: 53209
                length: 73
              pos: 53203
              length: 83
          children: []
          pos: 53085
          length: 201
        - type: class_declaration
          fields:
            name:
              type: identifier
              fields:
                text: BooleanOutcomePair
              children: []
              pos: 53593
              length: 18
            body:
              type: class_body
              fields: {}
              children:
              - type: field_declaration
                fields:
                  text: final BooleanLiteralSet toBooleanOutcomes;
                children: []
                pos: 53618
                length: 42
              - type: field_declaration
                fields:
                  text: final BooleanLiteralSet booleanValues;
                children: []
                pos: 53665
                length: 38
              - type: field_declaration
                fields:
                  text: final FlowScope leftScope;
                children: []
                pos: 53784
                length: 26
              - type: field_declaration
                fields:
                  text: final FlowScope rightScope;
                children: []
                pos: 53869
                length: 27
              - type: field_declaration
                fields:
                  text: FlowScope joinedScope = null;
                children: []
                pos: 53978
                length: 29
              - type: constructor_declaration
                fields:
                  text: |-
                    BooleanOutcomePair(
                            BooleanLiteralSet toBooleanOutcomes, BooleanLiteralSet booleanValues,
                            FlowScope leftScope, FlowScope rightScope) {
                          this.toBooleanOutcomes = toBooleanOutcomes;
                          this.booleanValues = booleanValues;
                          this.leftScope = leftScope;
                          this.rightScope = rightScope;
                        }
                children: []
                pos: 54013
                length: 318
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: getJoinedFlowScope
                    children: []
                    pos: 54471
                    length: 18
                  parameters:
                    type: method_parameters
                    fields: {}
                    children: []
                    pos: 54461
                    length: 260
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: equals
                              fields:
                                left:
                                  type: identifier
                                  fields:
                                    text: joinedScope
                                  children: []
                                  pos: 54504
                                  length: 11
                                right:
                                  type: null_literal
                                  fields: {}
                                  children: []
                                  pos: 54519
                                  length: 4
                              children: []
                              pos: 54504
                              length: 19
                          children: []
                          pos: 54503
                          length: 21
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: if_statement
                          fields:
                            condition:
                              type: parenthesized_expression
                              fields:
                                expression:
                                  type: equals
                                  fields:
                                    left:
                                      type: identifier
                                      fields:
                                        text: leftScope
                                      children: []
                                      pos: 54539
                                      length: 9
                                    right:
                                      type: identifier
                                      fields:
                                        text: rightScope
                                      children: []
                                      pos: 54552
                                      length: 10
                                  children: []
                                  pos: 54539
                                  length: 23
                              children: []
                              pos: 54538
                              length: 25
                          children:
                          - type: block
                            fields: {}
                            children:
                            - type: expression_statement
                              fields:
                                text: joinedScope = rightScope;
                              children: []
                              pos: 54576
                              length: 25
                            pos: 54564
                            length: 47
                          pos: 54535
                          length: 146
                        pos: 54525
                        length: 164
                      pos: 54500
                      length: 189
                    - type: return_statement
                      fields:
                        text: return joinedScope;
                      children: []
                      pos: 54696
                      length: 19
                    pos: 54492
                    length: 229
                children: []
                pos: 54461
                length: 260
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: getOutcomeFlowScope
                    children: []
                    pos: 54842
                    length: 19
                  parameters:
                    type: method_parameters
                    fields: {}
                    children:
                    - type: formal_parameter
                      fields:
                        text: int nodeType
                      children: []
                      pos: 54862
                      length: 12
                    pos: 54832
                    length: 312
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: or
                              fields:
                                left:
                                  type: and
                                  fields:
                                    left:
                                      type: equals
                                      fields:
                                        left:
                                          type: identifier
                                          fields:
                                            text: nodeType
                                          children: []
                                          pos: 54905
                                          length: 8
                                        right:
                                          type: field_access
                                          fields:
                                            text: Token.AND
                                          children: []
                                          pos: 54917
                                          length: 9
                                      children: []
                                      pos: 54905
                                      length: 21
                                    right:
                                      type: identifier
                                      fields:
                                        text: outcome
                                      children: []
                                      pos: 54930
                                      length: 7
                                  children: []
                                  pos: 54905
                                  length: 32
                                right:
                                  type: and
                                  fields:
                                    left:
                                      type: equals
                                      fields:
                                        left:
                                          type: identifier
                                          fields:
                                            text: nodeType
                                          children: []
                                          pos: 54951
                                          length: 8
                                        right:
                                          type: field_access
                                          fields:
                                            text: Token.OR
                                          children: []
                                          pos: 54963
                                          length: 8
                                      children: []
                                      pos: 54951
                                      length: 20
                                    right:
                                      type: unary_expression
                                      fields:
                                        text: "!outcome"
                                      children: []
                                      pos: 54975
                                      length: 8
                                  children: []
                                  pos: 54951
                                  length: 32
                              children: []
                              pos: 54905
                              length: 78
                          children: []
                          pos: 54904
                          length: 80
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: return_statement
                          fields:
                            text: return rightScope;
                          children: []
                          pos: 55060
                          length: 18
                        pos: 54985
                        length: 101
                      pos: 54901
                      length: 237
                    pos: 54893
                    length: 251
                children: []
                pos: 54832
                length: 312
              pos: 53573
              length: 1575
          children: []
          pos: 53573
          length: 1575
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: newBooleanOutcomePair
              children: []
              pos: 55179
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType jsType
                children: []
                pos: 55208
                length: 13
              pos: 55152
              length: 478
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: jsType
                            children: []
                            pos: 55254
                            length: 6
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 55264
                            length: 4
                        children: []
                        pos: 55254
                        length: 14
                    children: []
                    pos: 55253
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: |-
                        return new BooleanOutcomePair(
                                  BooleanLiteralSet.BOTH, BooleanLiteralSet.BOTH, flowScope, flowScope);
                    children: []
                    pos: 55278
                    length: 111
                  pos: 55270
                  length: 125
                pos: 55250
                length: 145
              - type: return_statement
                fields:
                  text: |-
                    return new BooleanOutcomePair(jsType.getPossibleToBooleanOutcomes(),
                            registry.getNativeType(BOOLEAN_TYPE).isSubtype(jsType) ?
                                BooleanLiteralSet.BOTH : BooleanLiteralSet.EMPTY,
                            flowScope, flowScope);
                children: []
                pos: 55400
                length: 226
              pos: 55244
              length: 386
          children: []
          pos: 55152
          length: 478
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: redeclareSimpleVar
              children: []
              pos: 55647
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 55673
                length: 15
              pos: 55634
              length: 394
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(nameNode.isName());
                children: []
                pos: 55727
                length: 44
              - type: local_variable_declaration
                fields:
                  text: String varName = nameNode.getString();
                children: []
                pos: 55776
                length: 38
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: varType
                            children: []
                            pos: 55823
                            length: 7
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 55834
                            length: 4
                        children: []
                        pos: 55823
                        length: 15
                    children: []
                    pos: 55822
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: varType = getNativeType(JSTypeNative.UNKNOWN_TYPE);
                    children: []
                    pos: 55848
                    length: 51
                  pos: 55840
                  length: 65
                pos: 55819
                length: 86
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isUnflowable(syntacticScope.getVar(varName))
                        children: []
                        pos: 55914
                        length: 44
                    children: []
                    pos: 55913
                    length: 46
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 55968
                    length: 7
                  pos: 55960
                  length: 21
                pos: 55910
                length: 71
              - type: expression_statement
                fields:
                  text: scope.inferSlotType(varName, varType);
                children: []
                pos: 55986
                length: 38
              pos: 55721
              length: 307
          children: []
          pos: 55634
          length: 394
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isUnflowable
              children: []
              pos: 56048
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Var v
                children: []
                pos: 56061
                length: 5
              pos: 56032
              length: 214
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return v != null && v.isLocal() && v.isMarkedEscaped() &&
                            // It's OK to flow a variable in the scope where it's escaped.
                            v.getScope() == syntacticScope;
                children: []
                pos: 56074
                length: 168
              pos: 56068
              length: 178
          children: []
          pos: 56032
          length: 214
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getJSType
              children: []
              pos: 56371
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 56381
                length: 6
              pos: 56356
              length: 445
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType jsType = n.getJSType();
                children: []
                pos: 56395
                length: 30
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: jsType
                            children: []
                            pos: 56434
                            length: 6
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 56444
                            length: 4
                        children: []
                        pos: 56434
                        length: 14
                    children: []
                    pos: 56433
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return unknownType;
                    children: []
                    pos: 56738
                    length: 19
                  pos: 56450
                  length: 313
                pos: 56430
                length: 367
              pos: 56389
              length: 412
          children: []
          pos: 56356
          length: 445
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getNativeType
              children: []
              pos: 56820
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSTypeNative typeId
                children: []
                pos: 56834
                length: 19
              pos: 56805
              length: 98
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return registry.getNativeType(typeId);
                children: []
                pos: 56861
                length: 38
              pos: 56855
              length: 48
          children: []
          pos: 56805
          length: 98
        pos: 3048
        length: 53857
    children: []
    pos: 3048
    length: 53857
  pos: 0
  length: 56906
text_diff: "--- before\n+++ after\n@@ -1189,15 +1189,9 @@\n     }\n \n     // Try
  to infer the template types\n-    Map<TemplateType, JSType> inferred = Maps.filterKeys(\n-
  \       inferTemplateTypesFromParameters(fnType, n),\n-        new Predicate<TemplateType>()
  {\n+    Map<TemplateType, JSType> inferred = \n+        inferTemplateTypesFromParameters(fnType,
  n);\n \n-          @Override\n-          public boolean apply(TemplateType key)
  {\n-            return keys.contains(key);\n-          }}\n-        );\n \n     //
  Replace all template types. If we couldn't find a replacement, we\n     // replace
  it with UNKNOWN.\n"
tree_diff: "New cluster:\nUPDATE from Map<TemplateType, JSType> inferred = Maps.filterKeys(\n
  \       inferTemplateTypesFromParameters(fnType, n),\n        new Predicate<TemplateType>()
  {\n\n          @Override\n          public boolean apply(TemplateType key) {\n            return
  keys.contains(key);\n          }}\n        ); to Map<TemplateType, JSType> inferred
  = \n        inferTemplateTypesFromParameters(fnType, n);\n------------\n===\nupdate-node\n---\nlocal_variable_declaration:
  Map<TemplateType, JSType> inferred = Maps.filterKeys(\n        inferTemplateTypesFromParameters(fnType,
  n),\n        new Predicate<TemplateType>() {\n\n          @Override\n          public
  boolean apply(TemplateType key) {\n            return keys.contains(key);\n          }}\n
  \       ); [42108,42389]\nreplace Map<TemplateType, JSType> inferred = Maps.filterKeys(\n
  \       inferTemplateTypesFromParameters(fnType, n),\n        new Predicate<TemplateType>()
  {\n\n          @Override\n          public boolean apply(TemplateType key) {\n            return
  keys.contains(key);\n          }}\n        ); by Map<TemplateType, JSType> inferred
  = \n        inferTemplateTypesFromParameters(fnType, n);\n\n"
