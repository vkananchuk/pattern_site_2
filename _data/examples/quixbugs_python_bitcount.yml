---
language: python
before_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: bitcount
        children: []
        pos: 4
        length: 8
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: "n"
          children: []
          pos: 13
          length: 1
        pos: 0
        length: 98
      body:
        type: block
        fields: {}
        children:
        - type: expression_statement
          fields:
            text: count = 0
          children: []
          pos: 21
          length: 9
        - type: while_statement
          fields:
            text: |-
              while n:
                      n ^= n - 1
                      count += 1
          children: []
          pos: 35
          length: 46
        - type: return_statement
          fields:
            text: return count
          children: []
          pos: 86
          length: 12
        pos: 21
        length: 77
    children: []
    pos: 0
    length: 98
  pos: 0
  length: 99
after_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: bitcount
        children: []
        pos: 4
        length: 8
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: "n"
          children: []
          pos: 13
          length: 1
        pos: 0
        length: 98
      body:
        type: block
        fields: {}
        children:
        - type: expression_statement
          fields:
            text: count = 0
          children: []
          pos: 21
          length: 9
        - type: while_statement
          fields:
            text: |-
              while n:
                      n &= n - 1
                      count += 1
          children: []
          pos: 35
          length: 46
        - type: return_statement
          fields:
            text: return count
          children: []
          pos: 86
          length: 12
        pos: 21
        length: 77
    children: []
    pos: 0
    length: 98
  pos: 0
  length: 99
text_diff: |
  --- before
  +++ after
  @@ -1,6 +1,6 @@
   def bitcount(n):
       count = 0
       while n:
  -        n ^= n - 1
  +        n &= n - 1
           count += 1
       return count
tree_diff: |+
  New cluster:
  UPDATE from while n:
          n ^= n - 1
          count += 1 to while n:
          n &= n - 1
          count += 1
  ------------
  ===
  update-node
  ---
  while_statement: while n:
          n ^= n - 1
          count += 1 [35,81]
  replace while n:
          n ^= n - 1
          count += 1 by while n:
          n &= n - 1
          count += 1

...
