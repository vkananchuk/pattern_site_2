---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: SubLine
        children: []
        pos: 1881
        length: 7
      body:
        type: class_body
        fields: {}
        children:
        - type: constructor_declaration
          fields:
            text: |-
              public SubLine(final Hyperplane<Euclidean2D> hyperplane,
                                 final Region<Euclidean1D> remainingRegion) {
                      super(hyperplane, remainingRegion);
                  }
          children: []
          pos: 2100
          length: 170
        - type: constructor_declaration
          fields:
            text: |-
              public SubLine(final Vector2D start, final Vector2D end) {
                      super(new Line(start, end), buildIntervalSet(start, end));
                  }
          children: []
          pos: 2390
          length: 131
        - type: constructor_declaration
          fields:
            text: |-
              public SubLine(final Segment segment) {
                      super(segment.getLine(), buildIntervalSet(segment.getStart(), segment.getEnd()));
                  }
          children: []
          pos: 2635
          length: 135
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getSegments
              children: []
              pos: 3685
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 3664
              length: 548
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final Line line = (Line) getHyperplane();
                children: []
                pos: 3710
                length: 41
              - type: local_variable_declaration
                fields:
                  text: final List<Interval> list = ((IntervalsSet) getRemainingRegion()).asList();
                children: []
                pos: 3760
                length: 75
              - type: local_variable_declaration
                fields:
                  text: final List<Segment> segments = new ArrayList<Segment>();
                children: []
                pos: 3844
                length: 56
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (final Interval interval : list) {
                                final Vector2D start = line.toSpace(new Vector1D(interval.getInf()));
                                final Vector2D end   = line.toSpace(new Vector1D(interval.getSup()));
                                segments.add(new Segment(start, end, line));
                            }
                children: []
                pos: 3910
                length: 269
              - type: return_statement
                fields:
                  text: return segments;
                children: []
                pos: 4189
                length: 16
              pos: 3699
              length: 513
          children: []
          pos: 3664
          length: 548
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: intersection
              children: []
              pos: 5059
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final SubLine subLine
                children: []
                pos: 5072
                length: 21
              pos: 5043
              length: 943
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Line line1 = (Line) getHyperplane();
                children: []
                pos: 5179
                length: 36
              - type: local_variable_declaration
                fields:
                  text: Line line2 = (Line) subLine.getHyperplane();
                children: []
                pos: 5224
                length: 44
              - type: local_variable_declaration
                fields:
                  text: Vector2D v2D = line1.intersection(line2);
                children: []
                pos: 5331
                length: 41
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: v2D
                            children: []
                            pos: 5385
                            length: 3
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 5392
                            length: 4
                        children: []
                        pos: 5385
                        length: 11
                    children: []
                    pos: 5384
                    length: 13
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return null;
                    children: []
                    pos: 5412
                    length: 12
                  pos: 5398
                  length: 36
                pos: 5381
                length: 53
              - type: local_variable_declaration
                fields:
                  text: Location loc1 = getRemainingRegion().checkPoint(line1.toSubSpace(v2D));
                children: []
                pos: 5510
                length: 71
              - type: local_variable_declaration
                fields:
                  text: Location loc2 = subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));
                children: []
                pos: 5658
                length: 79
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: includeEndPoints
                        children: []
                        pos: 5751
                        length: 16
                    children: []
                    pos: 5750
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: 'return ((loc1 != Location.OUTSIDE) && (loc2 != Location.OUTSIDE))
                        ? v2D : null;'
                    children: []
                    pos: 5783
                    length: 79
                  pos: 5769
                  length: 103
                pos: 5747
                length: 232
              pos: 5127
              length: 859
          children: []
          pos: 5043
          length: 943
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: buildIntervalSet
              children: []
              pos: 6166
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final Vector2D start
                children: []
                pos: 6183
                length: 20
              pos: 6138
              length: 267
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final Line line = new Line(start, end);
                children: []
                pos: 6235
                length: 39
              - type: return_statement
                fields:
                  text: |-
                    return new IntervalsSet(line.toSubSpace(start).getX(),
                                                    line.toSubSpace(end).getX());
                children: []
                pos: 6283
                length: 116
              pos: 6225
              length: 180
          children: []
          pos: 6138
          length: 267
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: buildNew
              children: []
              pos: 6508
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final Hyperplane<Euclidean2D> hyperplane
                children: []
                pos: 6517
                length: 40
              pos: 6436
              length: 301
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return new SubLine(hyperplane, remainingRegion);
                children: []
                pos: 6683
                length: 48
              pos: 6673
              length: 64
          children: []
          pos: 6436
          length: 301
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: side
              children: []
              pos: 6794
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final Hyperplane<Euclidean2D> hyperplane
                children: []
                pos: 6799
                length: 40
              pos: 6768
              length: 768
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final Line    thisLine  = (Line) getHyperplane();
                children: []
                pos: 6852
                length: 49
              - type: local_variable_declaration
                fields:
                  text: final Line    otherLine = (Line) hyperplane;
                children: []
                pos: 6910
                length: 44
              - type: local_variable_declaration
                fields:
                  text: final Vector2D crossing  = thisLine.intersection(otherLine);
                children: []
                pos: 6963
                length: 60
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: crossing
                            children: []
                            pos: 7037
                            length: 8
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 7049
                            length: 4
                        children: []
                        pos: 7037
                        length: 16
                    children: []
                    pos: 7036
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: final double global = otherLine.getOffset(thisLine);
                    children: []
                    pos: 7108
                    length: 52
                  - type: return_statement
                    fields:
                      text: 'return (global < -1.0e-10) ? Side.MINUS : ((global >
                        1.0e-10) ? Side.PLUS : Side.HYPER);'
                    children: []
                    pos: 7173
                    length: 88
                  pos: 7055
                  length: 216
                pos: 7033
                length: 238
              - type: local_variable_declaration
                fields:
                  text: final boolean direct = FastMath.sin(thisLine.getAngle() -
                    otherLine.getAngle()) < 0;
                children: []
                pos: 7315
                length: 84
              - type: local_variable_declaration
                fields:
                  text: final Vector1D x = thisLine.toSubSpace(crossing);
                children: []
                pos: 7408
                length: 49
              - type: return_statement
                fields:
                  text: return getRemainingRegion().side(new OrientedPoint(x, direct));
                children: []
                pos: 7466
                length: 63
              pos: 6841
              length: 695
          children: []
          pos: 6768
          length: 768
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: split
              children: []
              pos: 7620
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final Hyperplane<Euclidean2D> hyperplane
                children: []
                pos: 7626
                length: 40
              pos: 7567
              length: 2160
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final Line    thisLine  = (Line) getHyperplane();
                children: []
                pos: 7679
                length: 49
              - type: local_variable_declaration
                fields:
                  text: final Line    otherLine = (Line) hyperplane;
                children: []
                pos: 7737
                length: 44
              - type: local_variable_declaration
                fields:
                  text: final Vector2D crossing  = thisLine.intersection(otherLine);
                children: []
                pos: 7790
                length: 60
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: crossing
                            children: []
                            pos: 7864
                            length: 8
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 7876
                            length: 4
                        children: []
                        pos: 7864
                        length: 16
                    children: []
                    pos: 7863
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: final double global = otherLine.getOffset(thisLine);
                    children: []
                    pos: 7934
                    length: 52
                  - type: return_statement
                    fields:
                      text: |-
                        return (global < -1.0e-10) ?
                                           new SplitSubHyperplane<Euclidean2D>(null, this) :
                                           new SplitSubHyperplane<Euclidean2D>(this, null);
                    children: []
                    pos: 7999
                    length: 165
                  pos: 7882
                  length: 292
                pos: 7860
                length: 314
              - type: local_variable_declaration
                fields:
                  text: final boolean direct = FastMath.sin(thisLine.getAngle() -
                    otherLine.getAngle()) < 0;
                children: []
                pos: 8218
                length: 84
              - type: local_variable_declaration
                fields:
                  text: final Vector1D x      = thisLine.toSubSpace(crossing);
                children: []
                pos: 8311
                length: 54
              - type: local_variable_declaration
                fields:
                  text: final SubHyperplane<Euclidean1D> subPlus  = new OrientedPoint(x,
                    !direct).wholeHyperplane();
                children: []
                pos: 8374
                length: 92
              - type: local_variable_declaration
                fields:
                  text: final SubHyperplane<Euclidean1D> subMinus = new OrientedPoint(x,  direct).wholeHyperplane();
                children: []
                pos: 8475
                length: 92
              - type: local_variable_declaration
                fields:
                  text: final BSPTree<Euclidean1D> splitTree = getRemainingRegion().getTree(false).split(subMinus);
                children: []
                pos: 8577
                length: 91
              - type: local_variable_declaration
                fields:
                  text: |-
                    final BSPTree<Euclidean1D> plusTree  = getRemainingRegion().isEmpty(splitTree.getPlus()) ?
                                                                   new BSPTree<Euclidean1D>(Boolean.FALSE) :
                                                                   new BSPTree<Euclidean1D>(subPlus, new BSPTree<Euclidean1D>(Boolean.FALSE),
                                                                                            splitTree.getPlus(), null);
                children: []
                pos: 8677
                length: 401
              - type: local_variable_declaration
                fields:
                  text: |-
                    final BSPTree<Euclidean1D> minusTree = getRemainingRegion().isEmpty(splitTree.getMinus()) ?
                                                                   new BSPTree<Euclidean1D>(Boolean.FALSE) :
                                                                   new BSPTree<Euclidean1D>(subMinus, new BSPTree<Euclidean1D>(Boolean.FALSE),
                                                                                            splitTree.getMinus(), null);
                children: []
                pos: 9087
                length: 404
              - type: return_statement
                fields:
                  text: |-
                    return new SplitSubHyperplane<Euclidean2D>(new SubLine(thisLine.copySelf(), new IntervalsSet(plusTree)),
                                                                       new SubLine(thisLine.copySelf(), new IntervalsSet(minusTree)));
                children: []
                pos: 9501
                length: 219
              pos: 7668
              length: 2059
          children: []
          pos: 7567
          length: 2160
        pos: 1868
        length: 7862
    children: []
    pos: 1868
    length: 7862
  pos: 0
  length: 9731
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: SubLine
        children: []
        pos: 1881
        length: 7
      body:
        type: class_body
        fields: {}
        children:
        - type: constructor_declaration
          fields:
            text: |-
              public SubLine(final Hyperplane<Euclidean2D> hyperplane,
                                 final Region<Euclidean1D> remainingRegion) {
                      super(hyperplane, remainingRegion);
                  }
          children: []
          pos: 2100
          length: 170
        - type: constructor_declaration
          fields:
            text: |-
              public SubLine(final Vector2D start, final Vector2D end) {
                      super(new Line(start, end), buildIntervalSet(start, end));
                  }
          children: []
          pos: 2390
          length: 131
        - type: constructor_declaration
          fields:
            text: |-
              public SubLine(final Segment segment) {
                      super(segment.getLine(), buildIntervalSet(segment.getStart(), segment.getEnd()));
                  }
          children: []
          pos: 2635
          length: 135
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getSegments
              children: []
              pos: 3685
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 3664
              length: 548
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final Line line = (Line) getHyperplane();
                children: []
                pos: 3710
                length: 41
              - type: local_variable_declaration
                fields:
                  text: final List<Interval> list = ((IntervalsSet) getRemainingRegion()).asList();
                children: []
                pos: 3760
                length: 75
              - type: local_variable_declaration
                fields:
                  text: final List<Segment> segments = new ArrayList<Segment>();
                children: []
                pos: 3844
                length: 56
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (final Interval interval : list) {
                                final Vector2D start = line.toSpace(new Vector1D(interval.getInf()));
                                final Vector2D end   = line.toSpace(new Vector1D(interval.getSup()));
                                segments.add(new Segment(start, end, line));
                            }
                children: []
                pos: 3910
                length: 269
              - type: return_statement
                fields:
                  text: return segments;
                children: []
                pos: 4189
                length: 16
              pos: 3699
              length: 513
          children: []
          pos: 3664
          length: 548
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: intersection
              children: []
              pos: 5059
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final SubLine subLine
                children: []
                pos: 5072
                length: 21
              pos: 5043
              length: 881
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Line line1 = (Line) getHyperplane();
                children: []
                pos: 5179
                length: 36
              - type: local_variable_declaration
                fields:
                  text: Line line2 = (Line) subLine.getHyperplane();
                children: []
                pos: 5224
                length: 44
              - type: local_variable_declaration
                fields:
                  text: Vector2D v2D = line1.intersection(line2);
                children: []
                pos: 5331
                length: 41
              - type: local_variable_declaration
                fields:
                  text: Location loc1 = getRemainingRegion().checkPoint(line1.toSubSpace(v2D));
                children: []
                pos: 5448
                length: 71
              - type: local_variable_declaration
                fields:
                  text: Location loc2 = subLine.getRemainingRegion().checkPoint(line2.toSubSpace(v2D));
                children: []
                pos: 5596
                length: 79
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: includeEndPoints
                        children: []
                        pos: 5689
                        length: 16
                    children: []
                    pos: 5688
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: 'return ((loc1 != Location.OUTSIDE) && (loc2 != Location.OUTSIDE))
                        ? v2D : null;'
                    children: []
                    pos: 5721
                    length: 79
                  pos: 5707
                  length: 103
                pos: 5685
                length: 232
              pos: 5127
              length: 797
          children: []
          pos: 5043
          length: 881
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: buildIntervalSet
              children: []
              pos: 6104
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final Vector2D start
                children: []
                pos: 6121
                length: 20
              pos: 6076
              length: 267
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final Line line = new Line(start, end);
                children: []
                pos: 6173
                length: 39
              - type: return_statement
                fields:
                  text: |-
                    return new IntervalsSet(line.toSubSpace(start).getX(),
                                                    line.toSubSpace(end).getX());
                children: []
                pos: 6221
                length: 116
              pos: 6163
              length: 180
          children: []
          pos: 6076
          length: 267
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: buildNew
              children: []
              pos: 6446
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final Hyperplane<Euclidean2D> hyperplane
                children: []
                pos: 6455
                length: 40
              pos: 6374
              length: 301
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return new SubLine(hyperplane, remainingRegion);
                children: []
                pos: 6621
                length: 48
              pos: 6611
              length: 64
          children: []
          pos: 6374
          length: 301
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: side
              children: []
              pos: 6732
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final Hyperplane<Euclidean2D> hyperplane
                children: []
                pos: 6737
                length: 40
              pos: 6706
              length: 768
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final Line    thisLine  = (Line) getHyperplane();
                children: []
                pos: 6790
                length: 49
              - type: local_variable_declaration
                fields:
                  text: final Line    otherLine = (Line) hyperplane;
                children: []
                pos: 6848
                length: 44
              - type: local_variable_declaration
                fields:
                  text: final Vector2D crossing  = thisLine.intersection(otherLine);
                children: []
                pos: 6901
                length: 60
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: crossing
                            children: []
                            pos: 6975
                            length: 8
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 6987
                            length: 4
                        children: []
                        pos: 6975
                        length: 16
                    children: []
                    pos: 6974
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: final double global = otherLine.getOffset(thisLine);
                    children: []
                    pos: 7046
                    length: 52
                  - type: return_statement
                    fields:
                      text: 'return (global < -1.0e-10) ? Side.MINUS : ((global >
                        1.0e-10) ? Side.PLUS : Side.HYPER);'
                    children: []
                    pos: 7111
                    length: 88
                  pos: 6993
                  length: 216
                pos: 6971
                length: 238
              - type: local_variable_declaration
                fields:
                  text: final boolean direct = FastMath.sin(thisLine.getAngle() -
                    otherLine.getAngle()) < 0;
                children: []
                pos: 7253
                length: 84
              - type: local_variable_declaration
                fields:
                  text: final Vector1D x = thisLine.toSubSpace(crossing);
                children: []
                pos: 7346
                length: 49
              - type: return_statement
                fields:
                  text: return getRemainingRegion().side(new OrientedPoint(x, direct));
                children: []
                pos: 7404
                length: 63
              pos: 6779
              length: 695
          children: []
          pos: 6706
          length: 768
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: split
              children: []
              pos: 7558
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final Hyperplane<Euclidean2D> hyperplane
                children: []
                pos: 7564
                length: 40
              pos: 7505
              length: 2160
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final Line    thisLine  = (Line) getHyperplane();
                children: []
                pos: 7617
                length: 49
              - type: local_variable_declaration
                fields:
                  text: final Line    otherLine = (Line) hyperplane;
                children: []
                pos: 7675
                length: 44
              - type: local_variable_declaration
                fields:
                  text: final Vector2D crossing  = thisLine.intersection(otherLine);
                children: []
                pos: 7728
                length: 60
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: crossing
                            children: []
                            pos: 7802
                            length: 8
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 7814
                            length: 4
                        children: []
                        pos: 7802
                        length: 16
                    children: []
                    pos: 7801
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: final double global = otherLine.getOffset(thisLine);
                    children: []
                    pos: 7872
                    length: 52
                  - type: return_statement
                    fields:
                      text: |-
                        return (global < -1.0e-10) ?
                                           new SplitSubHyperplane<Euclidean2D>(null, this) :
                                           new SplitSubHyperplane<Euclidean2D>(this, null);
                    children: []
                    pos: 7937
                    length: 165
                  pos: 7820
                  length: 292
                pos: 7798
                length: 314
              - type: local_variable_declaration
                fields:
                  text: final boolean direct = FastMath.sin(thisLine.getAngle() -
                    otherLine.getAngle()) < 0;
                children: []
                pos: 8156
                length: 84
              - type: local_variable_declaration
                fields:
                  text: final Vector1D x      = thisLine.toSubSpace(crossing);
                children: []
                pos: 8249
                length: 54
              - type: local_variable_declaration
                fields:
                  text: final SubHyperplane<Euclidean1D> subPlus  = new OrientedPoint(x,
                    !direct).wholeHyperplane();
                children: []
                pos: 8312
                length: 92
              - type: local_variable_declaration
                fields:
                  text: final SubHyperplane<Euclidean1D> subMinus = new OrientedPoint(x,  direct).wholeHyperplane();
                children: []
                pos: 8413
                length: 92
              - type: local_variable_declaration
                fields:
                  text: final BSPTree<Euclidean1D> splitTree = getRemainingRegion().getTree(false).split(subMinus);
                children: []
                pos: 8515
                length: 91
              - type: local_variable_declaration
                fields:
                  text: |-
                    final BSPTree<Euclidean1D> plusTree  = getRemainingRegion().isEmpty(splitTree.getPlus()) ?
                                                                   new BSPTree<Euclidean1D>(Boolean.FALSE) :
                                                                   new BSPTree<Euclidean1D>(subPlus, new BSPTree<Euclidean1D>(Boolean.FALSE),
                                                                                            splitTree.getPlus(), null);
                children: []
                pos: 8615
                length: 401
              - type: local_variable_declaration
                fields:
                  text: |-
                    final BSPTree<Euclidean1D> minusTree = getRemainingRegion().isEmpty(splitTree.getMinus()) ?
                                                                   new BSPTree<Euclidean1D>(Boolean.FALSE) :
                                                                   new BSPTree<Euclidean1D>(subMinus, new BSPTree<Euclidean1D>(Boolean.FALSE),
                                                                                            splitTree.getMinus(), null);
                children: []
                pos: 9025
                length: 404
              - type: return_statement
                fields:
                  text: |-
                    return new SplitSubHyperplane<Euclidean2D>(new SubLine(thisLine.copySelf(), new IntervalsSet(plusTree)),
                                                                       new SubLine(thisLine.copySelf(), new IntervalsSet(minusTree)));
                children: []
                pos: 9439
                length: 219
              pos: 7606
              length: 2059
          children: []
          pos: 7505
          length: 2160
        pos: 1868
        length: 7800
    children: []
    pos: 1868
    length: 7800
  pos: 0
  length: 9669
text_diff: "--- before\n+++ after\n@@ -115,9 +115,6 @@\n \n         // compute the
  intersection on infinite line\n         Vector2D v2D = line1.intersection(line2);\n-
  \       if (v2D == null) {\n-            return null;\n-        }\n \n         //
  check location of point with respect to first sub-line\n         Location loc1 =
  getRemainingRegion().checkPoint(line1.toSubSpace(v2D));\n"
tree_diff: |+
  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  if_statement [5381,5434]
      parenthesized_expression [5384,5397]
          equals [5385,5396]
              identifier: v2D [5385,5388]
              null_literal [5392,5396]
      block [5398,5434]
          return_statement: return null; [5412,5424]

...
