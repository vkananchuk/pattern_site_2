---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: Cleaner
        children: []
        pos: 820
        length: 7
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private Whitelist whitelist;
          children: []
          pos: 834
          length: 28
        - type: constructor_declaration
          fields:
            text: |-
              public Cleaner(Whitelist whitelist) {
                      Validate.notNull(whitelist);
                      this.whitelist = whitelist;
                  }
          children: []
          pos: 1013
          length: 116
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: clean
              children: []
              pos: 1490
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Document dirtyDocument
                children: []
                pos: 1496
                length: 22
              pos: 1474
              length: 372
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Validate.notNull(dirtyDocument);
                children: []
                pos: 1530
                length: 32
              - type: local_variable_declaration
                fields:
                  text: Document clean = Document.createShell(dirtyDocument.baseUri());
                children: []
                pos: 1572
                length: 63
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: dirtyDocument.body()
                            children: []
                            pos: 1648
                            length: 20
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 1672
                            length: 4
                        children: []
                        pos: 1648
                        length: 28
                    children: []
                    pos: 1647
                    length: 30
                children:
                - type: expression_statement
                  fields:
                    text: copySafeNodes(dirtyDocument.body(), clean.body());
                  children: []
                  pos: 1767
                  length: 50
                pos: 1644
                length: 173
              - type: return_statement
                fields:
                  text: return clean;
                children: []
                pos: 1827
                length: 13
              pos: 1520
              length: 326
          children: []
          pos: 1474
          length: 372
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isValid
              children: []
              pos: 2521
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Document dirtyDocument
                children: []
                pos: 2529
                length: 22
              pos: 2506
              length: 280
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Validate.notNull(dirtyDocument);
                children: []
                pos: 2563
                length: 32
              - type: local_variable_declaration
                fields:
                  text: Document clean = Document.createShell(dirtyDocument.baseUri());
                children: []
                pos: 2605
                length: 63
              - type: local_variable_declaration
                fields:
                  text: int numDiscarded = copySafeNodes(dirtyDocument.body(), clean.body());
                children: []
                pos: 2677
                length: 69
              - type: return_statement
                fields:
                  text: return numDiscarded == 0;
                children: []
                pos: 2755
                length: 25
              pos: 2553
              length: 233
          children: []
          pos: 2506
          length: 280
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: copySafeNodes
              children: []
              pos: 3072
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Element source
                children: []
                pos: 3086
                length: 14
              pos: 3060
              length: 1327
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: List<Node> sourceChildren = source.childNodes();
                children: []
                pos: 3126
                length: 48
              - type: local_variable_declaration
                fields:
                  text: int numDiscarded = 0;
                children: []
                pos: 3183
                length: 21
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (Node sourceChild : sourceChildren) {
                                if (sourceChild instanceof Element) {
                                    Element sourceEl = (Element) sourceChild;

                                    if (whitelist.isSafeTag(sourceEl.tagName())) { // safe, clone and copy safe attrs
                                        ElementMeta meta = createSafeElement(sourceEl);
                                        Element destChild = meta.el;
                                        dest.appendChild(destChild);

                                        numDiscarded += meta.numAttribsDiscarded;
                                        numDiscarded += copySafeNodes(sourceEl, destChild); // recurs
                                    } else { // not a safe tag, but it may have children (els or text) that are, so recurse
                                        numDiscarded++;
                                        numDiscarded += copySafeNodes(sourceEl, dest);
                                    }
                                } else if (sourceChild instanceof TextNode) {
                                    TextNode sourceText = (TextNode) sourceChild;
                                    TextNode destText = new TextNode(sourceText.getWholeText(), sourceChild.baseUri());
                                    dest.appendChild(destText);
                                } // else, we don't care about comments, xml proc instructions, etc
                            }
                children: []
                pos: 3214
                length: 1138
              - type: return_statement
                fields:
                  text: return numDiscarded;
                children: []
                pos: 4361
                length: 20
              pos: 3116
              length: 1271
          children: []
          pos: 3060
          length: 1327
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createSafeElement
              children: []
              pos: 4413
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Element sourceEl
                children: []
                pos: 4431
                length: 16
              pos: 4393
              length: 739
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String sourceTag = sourceEl.tagName();
                children: []
                pos: 4459
                length: 38
              - type: local_variable_declaration
                fields:
                  text: Attributes destAttrs = new Attributes();
                children: []
                pos: 4506
                length: 40
              - type: local_variable_declaration
                fields:
                  text: Element dest = new Element(Tag.valueOf(sourceTag), sourceEl.baseUri(),
                    destAttrs);
                children: []
                pos: 4555
                length: 82
              - type: local_variable_declaration
                fields:
                  text: int numDiscarded = 0;
                children: []
                pos: 4646
                length: 21
              - type: local_variable_declaration
                fields:
                  text: Attributes sourceAttrs = sourceEl.attributes();
                children: []
                pos: 4677
                length: 47
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (Attribute sourceAttr : sourceAttrs) {
                                if (whitelist.isSafeAttribute(sourceTag, sourceEl, sourceAttr))
                                    destAttrs.put(sourceAttr);
                                else
                                    numDiscarded++;
                            }
                children: []
                pos: 4733
                length: 220
              - type: local_variable_declaration
                fields:
                  text: Attributes enforcedAttrs = whitelist.getEnforcedAttributes(sourceTag);
                children: []
                pos: 4962
                length: 70
              - type: expression_statement
                fields:
                  text: destAttrs.addAll(enforcedAttrs);
                children: []
                pos: 5041
                length: 32
              - type: return_statement
                fields:
                  text: return new ElementMeta(dest, numDiscarded);
                children: []
                pos: 5083
                length: 43
              pos: 4449
              length: 683
          children: []
          pos: 4393
          length: 739
        - type: class_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ElementMeta
              children: []
              pos: 5159
              length: 11
            body:
              type: class_body
              fields: {}
              children:
              - type: field_declaration
                fields:
                  text: Element el;
                children: []
                pos: 5181
                length: 11
              - type: field_declaration
                fields:
                  text: int numAttribsDiscarded;
                children: []
                pos: 5201
                length: 24
              - type: constructor_declaration
                fields:
                  text: |-
                    ElementMeta(Element el, int numAttribsDiscarded) {
                                this.el = el;
                                this.numAttribsDiscarded = numAttribsDiscarded;
                            }
                children: []
                pos: 5235
                length: 146
              pos: 5138
              length: 249
          children: []
          pos: 5138
          length: 249
        pos: 807
        length: 4583
    children: []
    pos: 807
    length: 4583
  pos: 0
  length: 5391
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: Cleaner
        children: []
        pos: 820
        length: 7
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private Whitelist whitelist;
          children: []
          pos: 834
          length: 28
        - type: constructor_declaration
          fields:
            text: |-
              public Cleaner(Whitelist whitelist) {
                      Validate.notNull(whitelist);
                      this.whitelist = whitelist;
                  }
          children: []
          pos: 1013
          length: 116
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: clean
              children: []
              pos: 1490
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Document dirtyDocument
                children: []
                pos: 1496
                length: 22
              pos: 1474
              length: 253
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Validate.notNull(dirtyDocument);
                children: []
                pos: 1530
                length: 32
              - type: local_variable_declaration
                fields:
                  text: Document clean = Document.createShell(dirtyDocument.baseUri());
                children: []
                pos: 1572
                length: 63
              - type: expression_statement
                fields:
                  text: copySafeNodes(dirtyDocument.body(), clean.body());
                children: []
                pos: 1648
                length: 50
              - type: return_statement
                fields:
                  text: return clean;
                children: []
                pos: 1708
                length: 13
              pos: 1520
              length: 207
          children: []
          pos: 1474
          length: 253
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isValid
              children: []
              pos: 2402
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Document dirtyDocument
                children: []
                pos: 2410
                length: 22
              pos: 2387
              length: 280
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Validate.notNull(dirtyDocument);
                children: []
                pos: 2444
                length: 32
              - type: local_variable_declaration
                fields:
                  text: Document clean = Document.createShell(dirtyDocument.baseUri());
                children: []
                pos: 2486
                length: 63
              - type: local_variable_declaration
                fields:
                  text: int numDiscarded = copySafeNodes(dirtyDocument.body(), clean.body());
                children: []
                pos: 2558
                length: 69
              - type: return_statement
                fields:
                  text: return numDiscarded == 0;
                children: []
                pos: 2636
                length: 25
              pos: 2434
              length: 233
          children: []
          pos: 2387
          length: 280
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: copySafeNodes
              children: []
              pos: 2953
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Element source
                children: []
                pos: 2967
                length: 14
              pos: 2941
              length: 1327
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: List<Node> sourceChildren = source.childNodes();
                children: []
                pos: 3007
                length: 48
              - type: local_variable_declaration
                fields:
                  text: int numDiscarded = 0;
                children: []
                pos: 3064
                length: 21
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (Node sourceChild : sourceChildren) {
                                if (sourceChild instanceof Element) {
                                    Element sourceEl = (Element) sourceChild;

                                    if (whitelist.isSafeTag(sourceEl.tagName())) { // safe, clone and copy safe attrs
                                        ElementMeta meta = createSafeElement(sourceEl);
                                        Element destChild = meta.el;
                                        dest.appendChild(destChild);

                                        numDiscarded += meta.numAttribsDiscarded;
                                        numDiscarded += copySafeNodes(sourceEl, destChild); // recurs
                                    } else { // not a safe tag, but it may have children (els or text) that are, so recurse
                                        numDiscarded++;
                                        numDiscarded += copySafeNodes(sourceEl, dest);
                                    }
                                } else if (sourceChild instanceof TextNode) {
                                    TextNode sourceText = (TextNode) sourceChild;
                                    TextNode destText = new TextNode(sourceText.getWholeText(), sourceChild.baseUri());
                                    dest.appendChild(destText);
                                } // else, we don't care about comments, xml proc instructions, etc
                            }
                children: []
                pos: 3095
                length: 1138
              - type: return_statement
                fields:
                  text: return numDiscarded;
                children: []
                pos: 4242
                length: 20
              pos: 2997
              length: 1271
          children: []
          pos: 2941
          length: 1327
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createSafeElement
              children: []
              pos: 4294
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Element sourceEl
                children: []
                pos: 4312
                length: 16
              pos: 4274
              length: 739
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String sourceTag = sourceEl.tagName();
                children: []
                pos: 4340
                length: 38
              - type: local_variable_declaration
                fields:
                  text: Attributes destAttrs = new Attributes();
                children: []
                pos: 4387
                length: 40
              - type: local_variable_declaration
                fields:
                  text: Element dest = new Element(Tag.valueOf(sourceTag), sourceEl.baseUri(),
                    destAttrs);
                children: []
                pos: 4436
                length: 82
              - type: local_variable_declaration
                fields:
                  text: int numDiscarded = 0;
                children: []
                pos: 4527
                length: 21
              - type: local_variable_declaration
                fields:
                  text: Attributes sourceAttrs = sourceEl.attributes();
                children: []
                pos: 4558
                length: 47
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (Attribute sourceAttr : sourceAttrs) {
                                if (whitelist.isSafeAttribute(sourceTag, sourceEl, sourceAttr))
                                    destAttrs.put(sourceAttr);
                                else
                                    numDiscarded++;
                            }
                children: []
                pos: 4614
                length: 220
              - type: local_variable_declaration
                fields:
                  text: Attributes enforcedAttrs = whitelist.getEnforcedAttributes(sourceTag);
                children: []
                pos: 4843
                length: 70
              - type: expression_statement
                fields:
                  text: destAttrs.addAll(enforcedAttrs);
                children: []
                pos: 4922
                length: 32
              - type: return_statement
                fields:
                  text: return new ElementMeta(dest, numDiscarded);
                children: []
                pos: 4964
                length: 43
              pos: 4330
              length: 683
          children: []
          pos: 4274
          length: 739
        - type: class_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ElementMeta
              children: []
              pos: 5040
              length: 11
            body:
              type: class_body
              fields: {}
              children:
              - type: field_declaration
                fields:
                  text: Element el;
                children: []
                pos: 5062
                length: 11
              - type: field_declaration
                fields:
                  text: int numAttribsDiscarded;
                children: []
                pos: 5082
                length: 24
              - type: constructor_declaration
                fields:
                  text: |-
                    ElementMeta(Element el, int numAttribsDiscarded) {
                                this.el = el;
                                this.numAttribsDiscarded = numAttribsDiscarded;
                            }
                children: []
                pos: 5116
                length: 146
              pos: 5019
              length: 249
          children: []
          pos: 5019
          length: 249
        pos: 807
        length: 4464
    children: []
    pos: 807
    length: 4464
  pos: 0
  length: 5272
text_diff: "--- before\n+++ after\n@@ -40,7 +40,6 @@\n         Validate.notNull(dirtyDocument);\n
  \n         Document clean = Document.createShell(dirtyDocument.baseUri());\n-        if
  (dirtyDocument.body() != null) // frameset documents won't have a body. the clean
  doc will have empty body.\n             copySafeNodes(dirtyDocument.body(), clean.body());\n
  \n         return clean;\n"
tree_diff: |+
  New cluster:
  ===
  insert-node
  ---
  expression_statement: copySafeNodes(dirtyDocument.body(), clean.body()); [1648,1698]
  to
  block [1520,1846]
  at 2
  ------------
  ===
  insert-node
  ---
  expression_statement: copySafeNodes(dirtyDocument.body(), clean.body()); [1648,1698]
  to
  block [1520,1846]
  at 2

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  if_statement [1644,1817]
      parenthesized_expression [1647,1677]
          not_equals [1648,1676]
              method_invocation: dirtyDocument.body() [1648,1668]
              null_literal [1672,1676]
      expression_statement: copySafeNodes(dirtyDocument.body(), clean.body()); [1767,1817]

...
