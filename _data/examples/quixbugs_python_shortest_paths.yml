---
language: python
before_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: shortest_paths
        children: []
        pos: 4
        length: 14
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: source
          children: []
          pos: 19
          length: 6
        pos: 0
        length: 413
      body:
        type: block
        fields: {}
        children:
        - type: expression_statement
          fields:
            text: |-
              weight_by_node = {
                      v: float('inf') for u, v in weight_by_edge
                  }
          children: []
          pos: 48
          length: 75
        - type: expression_statement
          fields:
            text: weight_by_node[source] = 0
          children: []
          pos: 128
          length: 26
        - type: for_statement
          fields:
            text: |-
              for i in range(len(weight_by_node) - 1):
                      for (u, v), weight in weight_by_edge.items():
                          weight_by_edge[u, v] = min(
                              weight_by_node[u] + weight,
                              weight_by_node[v]
                          )
          children: []
          pos: 160
          length: 226
        - type: return_statement
          fields:
            text: return weight_by_node
          children: []
          pos: 392
          length: 21
        pos: 48
        length: 365
    children: []
    pos: 0
    length: 413
  pos: 0
  length: 414
after_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: shortest_paths
        children: []
        pos: 4
        length: 14
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: source
          children: []
          pos: 19
          length: 6
        pos: 0
        length: 410
      body:
        type: block
        fields: {}
        children:
        - type: expression_statement
          fields:
            text: |-
              weight_by_node = {
                      v: float('inf') for u, v in weight_by_edge
                  }
          children: []
          pos: 48
          length: 75
        - type: expression_statement
          fields:
            text: weight_by_node[source] = 0
          children: []
          pos: 128
          length: 26
        - type: for_statement
          fields:
            text: |-
              for i in range(len(weight_by_node) - 1):
                      for (u, v), weight in weight_by_edge.items():
                          weight_by_node[v] = min(
                              weight_by_node[u] + weight,
                              weight_by_node[v]
                          )
          children: []
          pos: 160
          length: 223
        - type: return_statement
          fields:
            text: return weight_by_node
          children: []
          pos: 389
          length: 21
        pos: 48
        length: 362
    children: []
    pos: 0
    length: 410
  pos: 0
  length: 412
text_diff: "--- before\n+++ after\n@@ -6,9 +6,10 @@\n \n     for i in range(len(weight_by_node)
  - 1):\n         for (u, v), weight in weight_by_edge.items():\n-            weight_by_edge[u,
  v] = min(\n+            weight_by_node[v] = min(\n                 weight_by_node[u]
  + weight,\n                 weight_by_node[v]\n             )\n \n     return weight_by_node\n+\n"
tree_diff: |+
  New cluster:
  UPDATE from for i in range(len(weight_by_node) - 1):
          for (u, v), weight in weight_by_edge.items():
              weight_by_edge[u, v] = min(
                  weight_by_node[u] + weight,
                  weight_by_node[v]
              ) to for i in range(len(weight_by_node) - 1):
          for (u, v), weight in weight_by_edge.items():
              weight_by_node[v] = min(
                  weight_by_node[u] + weight,
                  weight_by_node[v]
              )
  ------------
  ===
  update-node
  ---
  for_statement: for i in range(len(weight_by_node) - 1):
          for (u, v), weight in weight_by_edge.items():
              weight_by_edge[u, v] = min(
                  weight_by_node[u] + weight,
                  weight_by_node[v]
              ) [160,386]
  replace for i in range(len(weight_by_node) - 1):
          for (u, v), weight in weight_by_edge.items():
              weight_by_edge[u, v] = min(
                  weight_by_node[u] + weight,
                  weight_by_node[v]
              ) by for i in range(len(weight_by_node) - 1):
          for (u, v), weight in weight_by_edge.items():
              weight_by_node[v] = min(
                  weight_by_node[u] + weight,
                  weight_by_node[v]
              )

...
