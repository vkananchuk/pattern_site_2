---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: TypeCheck
        children: []
        pos: 2365
        length: 9
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNEXPECTED_TOKEN = DiagnosticType.error(
                    "JSC_INTERNAL_ERROR_UNEXPECTED_TOKEN",
                    "Internal Error: Don't know how to handle {0}");
          children: []
          pos: 2459
          length: 168
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType BAD_DELETE =
                    DiagnosticType.warning(
                        "JSC_BAD_DELETE_OPERAND",
                        "delete operator needs a reference operand");
          children: []
          pos: 2694
          length: 162
        - type: field_declaration
          fields:
            text: |-
              protected static final String OVERRIDING_PROTOTYPE_WITH_NON_OBJECT =
                    "overriding prototype with non-object";
          children: []
          pos: 2891
          length: 114
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType DETERMINISTIC_TEST =
                    DiagnosticType.warning(
                        "JSC_DETERMINISTIC_TEST",
                        "condition always evaluates to {2}\n" +
                        "left : {0}\n" +
                        "right: {1}");
          children: []
          pos: 3139
          length: 216
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType DETERMINISTIC_TEST_NO_RESULT =
                    DiagnosticType.warning(
                        "JSC_DETERMINISTIC_TEST_NO_RESULT",
                        "condition always evaluates to the same value\n" +
                        "left : {0}\n" +
                        "right: {1}");
          children: []
          pos: 3359
          length: 247
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INEXISTENT_ENUM_ELEMENT =
                    DiagnosticType.warning(
                        "JSC_INEXISTENT_ENUM_ELEMENT",
                        "element {0} does not exist on this enum");
          children: []
          pos: 3610
          length: 178
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INEXISTENT_PROPERTY =
                    DiagnosticType.disabled(
                        "JSC_INEXISTENT_PROPERTY",
                        "Property {0} never defined on {1}");
          children: []
          pos: 3885
          length: 165
        - type: field_declaration
          fields:
            text: |-
              protected static final DiagnosticType NOT_A_CONSTRUCTOR =
                    DiagnosticType.warning(
                        "JSC_NOT_A_CONSTRUCTOR",
                        "cannot instantiate non-constructor");
          children: []
          pos: 4054
          length: 171
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType BIT_OPERATION =
                    DiagnosticType.warning(
                        "JSC_BAD_TYPE_FOR_BIT_OPERATION",
                        "operator {0} cannot be applied to {1}");
          children: []
          pos: 4229
          length: 169
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType NOT_CALLABLE =
                    DiagnosticType.warning(
                        "JSC_NOT_FUNCTION_TYPE",
                        "{0} expressions are not callable");
          children: []
          pos: 4402
          length: 154
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType CONSTRUCTOR_NOT_CALLABLE =
                    DiagnosticType.warning(
                        "JSC_CONSTRUCTOR_NOT_CALLABLE",
                        "Constructor {0} should be called with the \"new\" keyword");
          children: []
          pos: 4560
          length: 198
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType FUNCTION_MASKS_VARIABLE =
                    DiagnosticType.warning(
                        "JSC_FUNCTION_MASKS_VARIABLE",
                        "function {0} masks variable (IE bug)");
          children: []
          pos: 4762
          length: 175
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType MULTIPLE_VAR_DEF = DiagnosticType.warning(
                    "JSC_MULTIPLE_VAR_DEF",
                    "declaration of multiple variables with shared type information");
          children: []
          pos: 4941
          length: 173
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ENUM_DUP = DiagnosticType.error("JSC_ENUM_DUP",
                    "enum element {0} already defined");
          children: []
          pos: 5118
          length: 118
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ENUM_NOT_CONSTANT =
                    DiagnosticType.warning("JSC_ENUM_NOT_CONSTANT",
                        "enum key {0} must be a syntactic constant");
          children: []
          pos: 5240
          length: 157
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INVALID_INTERFACE_MEMBER_DECLARATION =
                    DiagnosticType.warning(
                        "JSC_INVALID_INTERFACE_MEMBER_DECLARATION",
                        "interface members can only be empty property declarations,"
                        + " empty functions{0}");
          children: []
          pos: 5401
          length: 257
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INTERFACE_FUNCTION_NOT_EMPTY =
                    DiagnosticType.warning(
                        "JSC_INTERFACE_FUNCTION_NOT_EMPTY",
                        "interface member functions must have an empty body");
          children: []
          pos: 5662
          length: 199
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType CONFLICTING_EXTENDED_TYPE =
                    DiagnosticType.warning(
                        "JSC_CONFLICTING_EXTENDED_TYPE",
                        "{1} cannot extend this type; {0}s can only extend {0}s");
          children: []
          pos: 5865
          length: 197
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType CONFLICTING_IMPLEMENTED_TYPE =
                  DiagnosticType.warning(
                      "JSC_CONFLICTING_IMPLEMENTED_TYPE",
                      "{0} cannot implement this type; " +
                      "an interface can only extend, but not implement interfaces");
          children: []
          pos: 6066
          length: 246
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType BAD_IMPLEMENTED_TYPE =
                    DiagnosticType.warning(
                        "JSC_IMPLEMENTS_NON_INTERFACE",
                        "can only implement interfaces");
          children: []
          pos: 6316
          length: 166
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType HIDDEN_SUPERCLASS_PROPERTY =
                    DiagnosticType.warning(
                        "JSC_HIDDEN_SUPERCLASS_PROPERTY",
                        "property {0} already defined on superclass {1}; " +
                        "use @override to override it");
          children: []
          pos: 6486
          length: 236
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType HIDDEN_INTERFACE_PROPERTY =
                    DiagnosticType.warning(
                        "JSC_HIDDEN_INTERFACE_PROPERTY",
                        "property {0} already defined on interface {1}; " +
                        "use @override to override it");
          children: []
          pos: 6726
          length: 233
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType HIDDEN_SUPERCLASS_PROPERTY_MISMATCH =
                    DiagnosticType.warning("JSC_HIDDEN_SUPERCLASS_PROPERTY_MISMATCH",
                        "mismatch of the {0} property type and the type " +
                        "of the property it overrides from superclass {1}\n" +
                        "original: {2}\n" +
                        "override: {3}");
          children: []
          pos: 6963
          length: 322
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNKNOWN_OVERRIDE =
                    DiagnosticType.warning(
                        "JSC_UNKNOWN_OVERRIDE",
                        "property {0} not defined on any superclass of {1}");
          children: []
          pos: 7289
          length: 174
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INTERFACE_METHOD_OVERRIDE =
                    DiagnosticType.warning(
                        "JSC_INTERFACE_METHOD_OVERRIDE",
                        "property {0} is already defined by the {1} extended interface");
          children: []
          pos: 7467
          length: 204
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNKNOWN_EXPR_TYPE =
                    DiagnosticType.warning("JSC_UNKNOWN_EXPR_TYPE",
                        "could not determine the type of this expression");
          children: []
          pos: 7675
          length: 163
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNRESOLVED_TYPE =
                    DiagnosticType.warning("JSC_UNRESOLVED_TYPE",
                        "could not resolve the name {0} to a type");
          children: []
          pos: 7842
          length: 152
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType WRONG_ARGUMENT_COUNT =
                    DiagnosticType.warning(
                        "JSC_WRONG_ARGUMENT_COUNT",
                        "Function {0}: called with {1} argument(s). " +
                        "Function requires at least {2} argument(s){3}.");
          children: []
          pos: 7998
          length: 237
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ILLEGAL_IMPLICIT_CAST =
                    DiagnosticType.warning(
                        "JSC_ILLEGAL_IMPLICIT_CAST",
                        "Illegal annotation on {0}. @implicitCast may only be used in " +
                        "externs.");
          children: []
          pos: 8239
          length: 219
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INCOMPATIBLE_EXTENDED_PROPERTY_TYPE =
                    DiagnosticType.warning(
                        "JSC_INCOMPATIBLE_EXTENDED_PROPERTY_TYPE",
                        "Interface {0} has a property {1} with incompatible types in " +
                        "its super interfaces {2} and {3}");
          children: []
          pos: 8462
          length: 270
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType EXPECTED_THIS_TYPE =
                    DiagnosticType.warning(
                        "JSC_EXPECTED_THIS_TYPE",
                        "\"{0}\" must be called with a \"this\" type");
          children: []
          pos: 8736
          length: 172
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType IN_USED_WITH_STRUCT =
                    DiagnosticType.warning("JSC_IN_USED_WITH_STRUCT",
                                           "Cannot use the IN operator with structs");
          children: []
          pos: 8912
          length: 178
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ILLEGAL_PROPERTY_CREATION =
                    DiagnosticType.warning("JSC_ILLEGAL_PROPERTY_CREATION",
                                           "Cannot add a property to a struct instance " +
                                           "after it is constructed.");
          children: []
          pos: 9094
          length: 252
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ILLEGAL_OBJLIT_KEY =
                    DiagnosticType.warning(
                        "ILLEGAL_OBJLIT_KEY",
                        "Illegal key, the object literal is a {0}");
          children: []
          pos: 9350
          length: 165
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticGroup ALL_DIAGNOSTICS = new DiagnosticGroup(
                    DETERMINISTIC_TEST,
                    DETERMINISTIC_TEST_NO_RESULT,
                    INEXISTENT_ENUM_ELEMENT,
                    INEXISTENT_PROPERTY,
                    NOT_A_CONSTRUCTOR,
                    BIT_OPERATION,
                    NOT_CALLABLE,
                    CONSTRUCTOR_NOT_CALLABLE,
                    FUNCTION_MASKS_VARIABLE,
                    MULTIPLE_VAR_DEF,
                    ENUM_DUP,
                    ENUM_NOT_CONSTANT,
                    INVALID_INTERFACE_MEMBER_DECLARATION,
                    INTERFACE_FUNCTION_NOT_EMPTY,
                    CONFLICTING_EXTENDED_TYPE,
                    CONFLICTING_IMPLEMENTED_TYPE,
                    BAD_IMPLEMENTED_TYPE,
                    HIDDEN_SUPERCLASS_PROPERTY,
                    HIDDEN_INTERFACE_PROPERTY,
                    HIDDEN_SUPERCLASS_PROPERTY_MISMATCH,
                    UNKNOWN_OVERRIDE,
                    INTERFACE_METHOD_OVERRIDE,
                    UNKNOWN_EXPR_TYPE,
                    UNRESOLVED_TYPE,
                    WRONG_ARGUMENT_COUNT,
                    ILLEGAL_IMPLICIT_CAST,
                    INCOMPATIBLE_EXTENDED_PROPERTY_TYPE,
                    EXPECTED_THIS_TYPE,
                    IN_USED_WITH_STRUCT,
                    ILLEGAL_PROPERTY_CREATION,
                    ILLEGAL_OBJLIT_KEY,
                    RhinoErrorReporter.TYPE_PARSE_ERROR,
                    TypedScopeCreator.UNKNOWN_LENDS,
                    TypedScopeCreator.LENDS_ON_NON_OBJECT,
                    TypedScopeCreator.CTOR_INITIALIZER,
                    TypedScopeCreator.IFACE_INITIALIZER,
                    FunctionTypeBuilder.THIS_TYPE_NON_OBJECT);
          children: []
          pos: 9519
          length: 1246
        - type: field_declaration
          fields:
            text: private final AbstractCompiler compiler;
          children: []
          pos: 10769
          length: 40
        - type: field_declaration
          fields:
            text: private final TypeValidator validator;
          children: []
          pos: 10812
          length: 38
        - type: field_declaration
          fields:
            text: private final ReverseAbstractInterpreter reverseInterpreter;
          children: []
          pos: 10854
          length: 60
        - type: field_declaration
          fields:
            text: private final JSTypeRegistry typeRegistry;
          children: []
          pos: 10918
          length: 42
        - type: field_declaration
          fields:
            text: private Scope topScope;
          children: []
          pos: 10963
          length: 23
        - type: field_declaration
          fields:
            text: private MemoizedScopeCreator scopeCreator;
          children: []
          pos: 10990
          length: 42
        - type: field_declaration
          fields:
            text: private final CheckLevel reportMissingOverride;
          children: []
          pos: 11036
          length: 47
        - type: field_declaration
          fields:
            text: private final CheckLevel reportUnknownTypes;
          children: []
          pos: 11086
          length: 44
        - type: field_declaration
          fields:
            text: private boolean reportMissingProperties = true;
          children: []
          pos: 11230
          length: 47
        - type: field_declaration
          fields:
            text: private InferJSDocInfo inferJSDocInfo = null;
          children: []
          pos: 11281
          length: 45
        - type: field_declaration
          fields:
            text: private int typedCount = 0;
          children: []
          pos: 11407
          length: 27
        - type: field_declaration
          fields:
            text: private int nullCount = 0;
          children: []
          pos: 11437
          length: 26
        - type: field_declaration
          fields:
            text: private int unknownCount = 0;
          children: []
          pos: 11466
          length: 29
        - type: field_declaration
          fields:
            text: private boolean inExterns;
          children: []
          pos: 11498
          length: 26
        - type: field_declaration
          fields:
            text: private int noTypeCheckSection = 0;
          children: []
          pos: 11615
          length: 35
        - type: constructor_declaration
          fields:
            text: |-
              public TypeCheck(AbstractCompiler compiler,
                    ReverseAbstractInterpreter reverseInterpreter,
                    JSTypeRegistry typeRegistry,
                    Scope topScope,
                    MemoizedScopeCreator scopeCreator,
                    CheckLevel reportMissingOverride,
                    CheckLevel reportUnknownTypes) {
                  this.compiler = compiler;
                  this.validator = compiler.getTypeValidator();
                  this.reverseInterpreter = reverseInterpreter;
                  this.typeRegistry = typeRegistry;
                  this.topScope = topScope;
                  this.scopeCreator = scopeCreator;
                  this.reportMissingOverride = reportMissingOverride;
                  this.reportUnknownTypes = reportUnknownTypes;
                  this.inferJSDocInfo = new InferJSDocInfo(compiler);
                }
          children: []
          pos: 11654
          length: 675
        - type: constructor_declaration
          fields:
            text: |-
              public TypeCheck(AbstractCompiler compiler,
                    ReverseAbstractInterpreter reverseInterpreter,
                    JSTypeRegistry typeRegistry,
                    CheckLevel reportMissingOverride,
                    CheckLevel reportUnknownTypes) {
                  this(compiler, reverseInterpreter, typeRegistry, null, null,
                      reportMissingOverride, reportUnknownTypes);
                }
          children: []
          pos: 12333
          length: 331
        - type: constructor_declaration
          fields:
            text: |-
              TypeCheck(AbstractCompiler compiler,
                    ReverseAbstractInterpreter reverseInterpreter,
                    JSTypeRegistry typeRegistry) {
                  this(compiler, reverseInterpreter, typeRegistry, null, null,
                       CheckLevel.WARNING, CheckLevel.OFF);
                }
          children: []
          pos: 12668
          length: 241
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: reportMissingProperties
              children: []
              pos: 13000
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: boolean report
                children: []
                pos: 13024
                length: 14
              pos: 12990
              length: 110
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: reportMissingProperties = report;
                children: []
                pos: 13046
                length: 33
              - type: return_statement
                fields:
                  text: return this;
                children: []
                pos: 13084
                length: 12
              pos: 13040
              length: 60
          children: []
          pos: 12990
          length: 110
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: process
              children: []
              pos: 13377
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node externsRoot
                children: []
                pos: 13385
                length: 16
              pos: 13353
              length: 447
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(scopeCreator);
                children: []
                pos: 13422
                length: 41
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(topScope);
                children: []
                pos: 13468
                length: 37
              - type: local_variable_declaration
                fields:
                  text: Node externsAndJs = jsRoot.getParent();
                children: []
                pos: 13511
                length: 39
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(externsAndJs != null);
                children: []
                pos: 13555
                length: 47
              - type: expression_statement
                fields:
                  text: |-
                    Preconditions.checkState(
                            externsRoot == null || externsAndJs.hasChild(externsRoot));
                children: []
                pos: 13607
                length: 93
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: externsRoot
                            children: []
                            pos: 13710
                            length: 11
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 13725
                            length: 4
                        children: []
                        pos: 13710
                        length: 19
                    children: []
                    pos: 13709
                    length: 21
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: check(externsRoot, true);
                    children: []
                    pos: 13739
                    length: 25
                  pos: 13731
                  length: 39
                pos: 13706
                length: 64
              - type: expression_statement
                fields:
                  text: check(jsRoot, false);
                children: []
                pos: 13775
                length: 21
              pos: 13416
              length: 384
          children: []
          pos: 13353
          length: 447
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: processForTesting
              children: []
              pos: 13875
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node externsRoot
                children: []
                pos: 13893
                length: 16
              pos: 13862
              length: 639
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(scopeCreator == null);
                children: []
                pos: 13930
                length: 47
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(topScope == null);
                children: []
                pos: 13982
                length: 43
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(jsRoot.getParent() != null);
                children: []
                pos: 14031
                length: 53
              - type: local_variable_declaration
                fields:
                  text: Node externsAndJsRoot = jsRoot.getParent();
                children: []
                pos: 14089
                length: 43
              - type: expression_statement
                fields:
                  text: scopeCreator = new MemoizedScopeCreator(new TypedScopeCreator(compiler));
                children: []
                pos: 14138
                length: 73
              - type: expression_statement
                fields:
                  text: topScope = scopeCreator.createScope(externsAndJsRoot, null);
                children: []
                pos: 14216
                length: 60
              - type: local_variable_declaration
                fields:
                  text: |-
                    TypeInferencePass inference = new TypeInferencePass(compiler,
                            reverseInterpreter, topScope, scopeCreator);
                children: []
                pos: 14282
                length: 114
              - type: expression_statement
                fields:
                  text: inference.process(externsRoot, jsRoot);
                children: []
                pos: 14402
                length: 39
              - type: expression_statement
                fields:
                  text: process(externsRoot, jsRoot);
                children: []
                pos: 14446
                length: 29
              - type: return_statement
                fields:
                  text: return topScope;
                children: []
                pos: 14481
                length: 16
              pos: 13924
              length: 577
          children: []
          pos: 13862
          length: 639
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: check
              children: []
              pos: 14518
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node node
                children: []
                pos: 14524
                length: 9
              pos: 14506
              length: 349
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(node);
                children: []
                pos: 14558
                length: 33
              - type: local_variable_declaration
                fields:
                  text: NodeTraversal t = new NodeTraversal(compiler, this, scopeCreator);
                children: []
                pos: 14597
                length: 66
              - type: expression_statement
                fields:
                  text: inExterns = externs;
                children: []
                pos: 14668
                length: 20
              - type: expression_statement
                fields:
                  text: t.traverseWithScope(node, topScope);
                children: []
                pos: 14693
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: externs
                        children: []
                        pos: 14738
                        length: 7
                    children: []
                    pos: 14737
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: inferJSDocInfo.process(node, null);
                    children: []
                    pos: 14755
                    length: 35
                  pos: 14747
                  length: 49
                pos: 14734
                length: 117
              pos: 14552
              length: 303
          children: []
          pos: 14506
          length: 349
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkNoTypeCheckSection
              children: []
              pos: 14873
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 14897
                length: 6
              pos: 14860
              length: 537
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 14941
                        length: 11
                    children: []
                    pos: 14940
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.SCRIPT:
                              case Token.BLOCK:
                              case Token.VAR:
                              case Token.FUNCTION:
                              case Token.ASSIGN:
                                JSDocInfo info = n.getJSDocInfo();
                                if (info != null && info.isNoTypeCheck()) {
                                  if (enterSection) {
                                    noTypeCheckSection++;
                                  } else {
                                    noTypeCheckSection--;
                                  }
                                }
                                validator.setShouldReport(noTypeCheckSection == 0);
                                break;
                            }
                    children: []
                    pos: 14954
                    length: 439
                children: []
                pos: 14933
                length: 460
              pos: 14927
              length: 470
          children: []
          pos: 14860
          length: 537
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: report
              children: []
              pos: 15414
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 15421
                length: 15
              pos: 15401
              length: 195
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: noTypeCheckSection
                            children: []
                            pos: 15514
                            length: 18
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 15536
                            length: 1
                        children: []
                        pos: 15514
                        length: 23
                    children: []
                    pos: 15513
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: t.report(n, diagnosticType, arguments);
                    children: []
                    pos: 15547
                    length: 39
                  pos: 15539
                  length: 53
                pos: 15510
                length: 82
              pos: 15504
              length: 92
          children: []
          pos: 15401
          length: 195
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: shouldTraverse
              children: []
              pos: 15627
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 15649
                length: 15
              pos: 15600
              length: 1141
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: checkNoTypeCheckSection(n, true);
                children: []
                pos: 15693
                length: 33
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 15739
                        length: 11
                    children: []
                    pos: 15738
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.FUNCTION:
                                // normal type checking
                                final Scope outerScope = t.getScope();
                                final String functionPrivateName = n.getFirstChild().getString();
                                if (functionPrivateName != null && functionPrivateName.length() > 0 &&
                                    outerScope.isDeclared(functionPrivateName, false) &&
                                    // Ideally, we would want to check whether the type in the scope
                                    // differs from the type being defined, but then the extern
                                    // redeclarations of built-in types generates spurious warnings.
                                    !(outerScope.getVar(
                                        functionPrivateName).getType() instanceof FunctionType)) {
                                  report(t, n, FUNCTION_MASKS_VARIABLE, functionPrivateName);
                                }

                                // TODO(user): Only traverse the function's body. The function's
                                // name and arguments are traversed by the scope creator, and ideally
                                // should not be traversed by the type checker.
                                break;
                            }
                    children: []
                    pos: 15752
                    length: 968
                children: []
                pos: 15731
                length: 989
              - type: return_statement
                fields:
                  text: return true;
                children: []
                pos: 16725
                length: 12
              pos: 15687
              length: 1054
          children: []
          pos: 15600
          length: 1141
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visit
              children: []
              pos: 17214
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 17220
                length: 15
              pos: 17190
              length: 11079
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType childType;
                children: []
                pos: 17264
                length: 17
              - type: local_variable_declaration
                fields:
                  text: JSType leftType, rightType;
                children: []
                pos: 17286
                length: 27
              - type: local_variable_declaration
                fields:
                  text: Node left, right;
                children: []
                pos: 17318
                length: 17
              - type: local_variable_declaration
                fields:
                  text: boolean typeable = true;
                children: []
                pos: 17406
                length: 24
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 17444
                        length: 11
                    children: []
                    pos: 17443
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.CAST:
                                Node expr = n.getFirstChild();
                                ensureTyped(t, n, getJSType(expr));

                                // If the cast, tightens the type apply it, so it is available post
                                // normalization.
                                JSType castType = getJSType(n);
                                JSType exprType = getJSType(expr);
                                if (castType.isSubtype(exprType)) {
                                  expr.setJSType(castType);
                                }
                                break;

                              case Token.NAME:
                                typeable = visitName(t, n, parent);
                                break;

                              case Token.PARAM_LIST:
                                typeable = false;
                                break;

                              case Token.COMMA:
                                ensureTyped(t, n, getJSType(n.getLastChild()));
                                break;

                              case Token.TRUE:
                              case Token.FALSE:
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.THIS:
                                ensureTyped(t, n, t.getScope().getTypeOfThis());
                                break;

                              case Token.NULL:
                                ensureTyped(t, n, NULL_TYPE);
                                break;

                              case Token.NUMBER:
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.STRING:
                                ensureTyped(t, n, STRING_TYPE);
                                break;

                              case Token.STRING_KEY:
                                typeable = false;
                                break;

                              case Token.GETTER_DEF:
                              case Token.SETTER_DEF:
                                // Object literal keys are handled with OBJECTLIT
                                break;

                              case Token.ARRAYLIT:
                                ensureTyped(t, n, ARRAY_TYPE);
                                break;

                              case Token.REGEXP:
                                ensureTyped(t, n, REGEXP_TYPE);
                                break;

                              case Token.GETPROP:
                                visitGetProp(t, n, parent);
                                typeable = !(parent.isAssign() &&
                                             parent.getFirstChild() == n);
                                break;

                              case Token.GETELEM:
                                visitGetElem(t, n);
                                // The type of GETELEM is always unknown, so no point counting that.
                                // If that unknown leaks elsewhere (say by an assignment to another
                                // variable), then it will be counted.
                                typeable = false;
                                break;

                              case Token.VAR:
                                visitVar(t, n);
                                typeable = false;
                                break;

                              case Token.NEW:
                                visitNew(t, n);
                                break;

                              case Token.CALL:
                                visitCall(t, n);
                                typeable = !parent.isExprResult();
                                break;

                              case Token.RETURN:
                                visitReturn(t, n);
                                typeable = false;
                                break;

                              case Token.DEC:
                              case Token.INC:
                                left = n.getFirstChild();
                                checkPropCreation(t, left);
                                validator.expectNumber(t, left, getJSType(left), "increment/decrement");
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.NOT:
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.VOID:
                                ensureTyped(t, n, VOID_TYPE);
                                break;

                              case Token.TYPEOF:
                                ensureTyped(t, n, STRING_TYPE);
                                break;

                              case Token.BITNOT:
                                childType = getJSType(n.getFirstChild());
                                if (!childType.matchesInt32Context()) {
                                  report(t, n, BIT_OPERATION, NodeUtil.opToStr(n.getType()),
                                      childType.toString());
                                }
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.POS:
                              case Token.NEG:
                                left = n.getFirstChild();
                                validator.expectNumber(t, left, getJSType(left), "sign operator");
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.EQ:
                              case Token.NE:
                              case Token.SHEQ:
                              case Token.SHNE: {
                                left = n.getFirstChild();
                                right = n.getLastChild();

                                if (left.isTypeOf()) {
                                  if (right.isString()) {
                                    checkTypeofString(t, right, right.getString());
                                  }
                                } else if (right.isTypeOf() && left.isString()) {
                                  checkTypeofString(t, left, left.getString());
                                }

                                leftType = getJSType(left);
                                rightType = getJSType(right);

                                // We do not want to warn about explicit comparisons to VOID. People
                                // often do this if they think their type annotations screwed up.
                                //
                                // We do want to warn about cases where people compare things like
                                // (Array|null) == (Function|null)
                                // because it probably means they screwed up.
                                //
                                // This heuristic here is not perfect, but should catch cases we
                                // care about without too many false negatives.
                                JSType leftTypeRestricted = leftType.restrictByNotNullOrUndefined();
                                JSType rightTypeRestricted = rightType.restrictByNotNullOrUndefined();

                                TernaryValue result = TernaryValue.UNKNOWN;
                                if (n.getType() == Token.EQ || n.getType() == Token.NE) {
                                  result = leftTypeRestricted.testForEquality(rightTypeRestricted);
                                  if (n.isNE()) {
                                    result = result.not();
                                  }
                                } else {
                                  // SHEQ or SHNE
                                  if (!leftTypeRestricted.canTestForShallowEqualityWith(
                                          rightTypeRestricted)) {
                                    result = n.getType() == Token.SHEQ ?
                                        TernaryValue.FALSE : TernaryValue.TRUE;
                                  }
                                }

                                if (result != TernaryValue.UNKNOWN) {
                                  report(t, n, DETERMINISTIC_TEST, leftType.toString(),
                                      rightType.toString(), result.toString());
                                }
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;
                              }

                              case Token.LT:
                              case Token.LE:
                              case Token.GT:
                              case Token.GE:
                                leftType = getJSType(n.getFirstChild());
                                rightType = getJSType(n.getLastChild());
                                if (rightType.isNumber()) {
                                  validator.expectNumber(
                                      t, n, leftType, "left side of numeric comparison");
                                } else if (leftType.isNumber()) {
                                  validator.expectNumber(
                                      t, n, rightType, "right side of numeric comparison");
                                } else if (leftType.matchesNumberContext() &&
                                           rightType.matchesNumberContext()) {
                                  // OK.
                                } else {
                                  // Whether the comparison is numeric will be determined at runtime
                                  // each time the expression is evaluated. Regardless, both operands
                                  // should match a string context.
                                  String message = "left side of comparison";
                                  validator.expectString(t, n, leftType, message);
                                  validator.expectNotNullOrUndefined(
                                      t, n, leftType, message, getNativeType(STRING_TYPE));
                                  message = "right side of comparison";
                                  validator.expectString(t, n, rightType, message);
                                  validator.expectNotNullOrUndefined(
                                      t, n, rightType, message, getNativeType(STRING_TYPE));
                                }
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.IN:
                                left = n.getFirstChild();
                                right = n.getLastChild();
                                rightType = getJSType(right);
                                validator.expectString(t, left, getJSType(left), "left side of 'in'");
                                validator.expectObject(t, n, rightType, "'in' requires an object");
                                if (rightType.isStruct()) {
                                  report(t, right, IN_USED_WITH_STRUCT);
                                }
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.INSTANCEOF:
                                left = n.getFirstChild();
                                right = n.getLastChild();
                                rightType = getJSType(right).restrictByNotNullOrUndefined();
                                validator.expectAnyObject(
                                    t, left, getJSType(left), "deterministic instanceof yields false");
                                validator.expectActualObject(
                                    t, right, rightType, "instanceof requires an object");
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.ASSIGN:
                                visitAssign(t, n);
                                typeable = false;
                                break;

                              case Token.ASSIGN_LSH:
                              case Token.ASSIGN_RSH:
                              case Token.ASSIGN_URSH:
                              case Token.ASSIGN_DIV:
                              case Token.ASSIGN_MOD:
                              case Token.ASSIGN_BITOR:
                              case Token.ASSIGN_BITXOR:
                              case Token.ASSIGN_BITAND:
                              case Token.ASSIGN_SUB:
                              case Token.ASSIGN_ADD:
                              case Token.ASSIGN_MUL:
                                checkPropCreation(t, n.getFirstChild());
                                // fall through

                              case Token.LSH:
                              case Token.RSH:
                              case Token.URSH:
                              case Token.DIV:
                              case Token.MOD:
                              case Token.BITOR:
                              case Token.BITXOR:
                              case Token.BITAND:
                              case Token.SUB:
                              case Token.ADD:
                              case Token.MUL:
                                visitBinaryOperator(n.getType(), t, n);
                                break;

                              case Token.DELPROP:
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.CASE:
                                JSType switchType = getJSType(parent.getFirstChild());
                                JSType caseType = getJSType(n.getFirstChild());
                                validator.expectSwitchMatchesCase(t, n, switchType, caseType);
                                typeable = false;
                                break;

                              case Token.WITH: {
                                Node child = n.getFirstChild();
                                childType = getJSType(child);
                                validator.expectObject(t, child, childType, "with requires an object");
                                typeable = false;
                                break;
                              }

                              case Token.FUNCTION:
                                visitFunction(t, n);
                                break;

                              // These nodes have no interesting type behavior.
                              case Token.LABEL:
                              case Token.LABEL_NAME:
                              case Token.SWITCH:
                              case Token.BREAK:
                              case Token.CATCH:
                              case Token.TRY:
                              case Token.SCRIPT:
                              case Token.EXPR_RESULT:
                              case Token.BLOCK:
                              case Token.EMPTY:
                              case Token.DEFAULT_CASE:
                              case Token.CONTINUE:
                              case Token.DEBUGGER:
                              case Token.THROW:
                                typeable = false;
                                break;

                              // These nodes require data flow analysis.
                              case Token.DO:
                              case Token.IF:
                              case Token.WHILE:
                                typeable = false;
                                break;

                              case Token.FOR:
                                if (NodeUtil.isForIn(n)) {
                                  Node obj = n.getChildAtIndex(1);
                                  if (getJSType(obj).isStruct()) {
                                    report(t, obj, IN_USED_WITH_STRUCT);
                                  }
                                }
                                typeable = false;
                                break;

                              // These nodes are typed during the type inference.
                              case Token.AND:
                              case Token.HOOK:
                              case Token.OBJECTLIT:
                              case Token.OR:
                                if (n.getJSType() != null) { // If we didn't run type inference.
                                  ensureTyped(t, n);
                                } else {
                                  // If this is an enum, then give that type to the objectlit as well.
                                  if ((n.isObjectLit())
                                      && (parent.getJSType() instanceof EnumType)) {
                                    ensureTyped(t, n, parent.getJSType());
                                  } else {
                                    ensureTyped(t, n);
                                  }
                                }
                                if (n.isObjectLit()) {
                                  JSType typ = getJSType(n);
                                  for (Node key : n.children()) {
                                    visitObjLitKey(t, key, n, typ);
                                  }
                                }
                                break;

                              default:
                                report(t, n, UNEXPECTED_TOKEN, Token.name(n.getType()));
                                ensureTyped(t, n);
                                break;
                            }
                    children: []
                    pos: 17457
                    length: 10586
                children: []
                pos: 17436
                length: 10607
              - type: expression_statement
                fields:
                  text: typeable = typeable && !inExterns;
                children: []
                pos: 28126
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: typeable
                        children: []
                        pos: 28170
                        length: 8
                    children: []
                    pos: 28169
                    length: 10
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: doPercentTypedAccounting(t, n);
                    children: []
                    pos: 28188
                    length: 31
                  pos: 28180
                  length: 45
                pos: 28166
                length: 59
              - type: expression_statement
                fields:
                  text: checkNoTypeCheckSection(n, false);
                children: []
                pos: 28231
                length: 34
              pos: 17258
              length: 11011
          children: []
          pos: 17190
          length: 11079
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkTypeofString
              children: []
              pos: 28286
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 28304
                length: 15
              pos: 28273
              length: 317
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: |-
                            !(s.equals("number") || s.equals("string") || s.equals("boolean") ||
                                      s.equals("undefined") || s.equals("function") ||
                                      s.equals("object") || s.equals("unknown"))
                        children: []
                        pos: 28349
                        length: 180
                    children: []
                    pos: 28348
                    length: 182
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: validator.expectValidTypeofName(t, n, s);
                    children: []
                    pos: 28539
                    length: 41
                  pos: 28531
                  length: 55
                pos: 28345
                length: 241
              pos: 28339
              length: 251
          children: []
          pos: 28273
          length: 317
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: doPercentTypedAccounting
              children: []
              pos: 28713
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 28738
                length: 15
              pos: 28700
              length: 384
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 28769
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: type
                            children: []
                            pos: 28806
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 28814
                            length: 4
                        children: []
                        pos: 28806
                        length: 12
                    children: []
                    pos: 28805
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: nullCount++;
                    children: []
                    pos: 28828
                    length: 12
                  pos: 28820
                  length: 26
                pos: 28802
                length: 278
              pos: 28763
              length: 321
          children: []
          pos: 28700
          length: 384
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitAssign
              children: []
              pos: 29421
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 29433
                length: 15
              pos: 29408
              length: 4348
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSDocInfo info = assign.getJSDocInfo();
                children: []
                pos: 29469
                length: 39
              - type: local_variable_declaration
                fields:
                  text: Node lvalue = assign.getFirstChild();
                children: []
                pos: 29513
                length: 37
              - type: local_variable_declaration
                fields:
                  text: Node rvalue = assign.getLastChild();
                children: []
                pos: 29555
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: lvalue.isGetProp()
                        children: []
                        pos: 29673
                        length: 18
                    children: []
                    pos: 29672
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Node object = lvalue.getFirstChild();
                    children: []
                    pos: 29701
                    length: 37
                  - type: local_variable_declaration
                    fields:
                      text: JSType objectJsType = getJSType(object);
                    children: []
                    pos: 29745
                    length: 40
                  - type: local_variable_declaration
                    fields:
                      text: Node property = lvalue.getLastChild();
                    children: []
                    pos: 29792
                    length: 38
                  - type: local_variable_declaration
                    fields:
                      text: String pname = property.getString();
                    children: []
                    pos: 29837
                    length: 36
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: object.isGetProp()
                            children: []
                            pos: 30005
                            length: 18
                        children: []
                        pos: 30004
                        length: 20
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType jsType = getJSType(object.getFirstChild());
                        children: []
                        pos: 30035
                        length: 50
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: jsType.isInterface()
                                    children: []
                                    pos: 30098
                                    length: 20
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: object.getLastChild().getString().equals("prototype")
                                    children: []
                                    pos: 30134
                                    length: 53
                                children: []
                                pos: 30098
                                length: 89
                            children: []
                            pos: 30097
                            length: 91
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: visitInterfaceGetprop(t, assign, object, pname,
                                lvalue, rvalue);
                            children: []
                            pos: 30201
                            length: 64
                          pos: 30189
                          length: 86
                        pos: 30094
                        length: 181
                      pos: 30025
                      length: 258
                    pos: 30001
                    length: 282
                  - type: expression_statement
                    fields:
                      text: checkEnumAlias(t, info, rvalue);
                    children: []
                    pos: 30291
                    length: 32
                  - type: expression_statement
                    fields:
                      text: checkPropCreation(t, lvalue);
                    children: []
                    pos: 30330
                    length: 29
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: pname.equals("prototype")
                            children: []
                            pos: 30619
                            length: 25
                        children: []
                        pos: 30618
                        length: 27
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: not_equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: objectJsType
                                        children: []
                                        pos: 30660
                                        length: 12
                                      right:
                                        type: null_literal
                                        fields: {}
                                        children: []
                                        pos: 30676
                                        length: 4
                                    children: []
                                    pos: 30660
                                    length: 20
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: objectJsType.isFunctionType()
                                    children: []
                                    pos: 30684
                                    length: 29
                                children: []
                                pos: 30660
                                length: 53
                            children: []
                            pos: 30659
                            length: 55
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: local_variable_declaration
                            fields:
                              text: FunctionType functionType = objectJsType.toMaybeFunctionType();
                            children: []
                            pos: 30727
                            length: 63
                          - type: if_statement
                            fields:
                              condition:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: method_invocation
                                    fields:
                                      text: functionType.isConstructor()
                                    children: []
                                    pos: 30805
                                    length: 28
                                children: []
                                pos: 30804
                                length: 30
                            children:
                            - type: block
                              fields: {}
                              children:
                              - type: local_variable_declaration
                                fields:
                                  text: JSType rvalueType = rvalue.getJSType();
                                children: []
                                pos: 30849
                                length: 39
                              - type: expression_statement
                                fields:
                                  text: |-
                                    validator.expectObject(t, rvalue, rvalueType,
                                                    OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
                                children: []
                                pos: 30901
                                length: 100
                              - type: if_statement
                                fields:
                                  condition:
                                    type: parenthesized_expression
                                    fields:
                                      expression:
                                        type: and
                                        fields:
                                          left:
                                            type: method_invocation
                                            fields:
                                              text: functionType.makesStructs()
                                            children: []
                                            pos: 31095
                                            length: 27
                                          right:
                                            type: unary_expression
                                            fields:
                                              text: "!rvalueType.isStruct()"
                                            children: []
                                            pos: 31126
                                            length: 22
                                        children: []
                                        pos: 31095
                                        length: 53
                                    children: []
                                    pos: 31094
                                    length: 55
                                children:
                                - type: block
                                  fields: {}
                                  children:
                                  - type: local_variable_declaration
                                    fields:
                                      text: String funName = functionType.getTypeOfThis().toString();
                                    children: []
                                    pos: 31166
                                    length: 57
                                  - type: expression_statement
                                    fields:
                                      text: |-
                                        compiler.report(t.makeError(assign, CONFLICTING_EXTENDED_TYPE,
                                                                                  "struct", funName));
                                    children: []
                                    pos: 31238
                                    length: 125
                                  pos: 31150
                                  length: 227
                                pos: 31091
                                length: 286
                              - type: return_statement
                                fields:
                                  text: return;
                                children: []
                                pos: 31390
                                length: 7
                              pos: 30835
                              length: 574
                            pos: 30801
                            length: 608
                          pos: 30715
                          length: 704
                        pos: 30656
                        length: 763
                      pos: 30646
                      length: 781
                    pos: 30615
                    length: 812
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        ObjectType type = ObjectType.cast(
                                  objectJsType.restrictByNotNullOrUndefined());
                    children: []
                    pos: 31584
                    length: 90
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 31685
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 31693
                                length: 4
                            children: []
                            pos: 31685
                            length: 12
                        children: []
                        pos: 31684
                        length: 14
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: and
                                    fields:
                                      left:
                                        type: method_invocation
                                        fields:
                                          text: type.hasProperty(pname)
                                        children: []
                                        pos: 31713
                                        length: 23
                                      right:
                                        type: unary_expression
                                        fields:
                                          text: "!type.isPropertyTypeInferred(pname)"
                                        children: []
                                        pos: 31752
                                        length: 35
                                    children: []
                                    pos: 31713
                                    length: 74
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: "!propertyIsImplicitCast(type, pname)"
                                    children: []
                                    pos: 31803
                                    length: 36
                                children: []
                                pos: 31713
                                length: 126
                            children: []
                            pos: 31712
                            length: 128
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: local_variable_declaration
                            fields:
                              text: JSType expectedType = type.getPropertyType(pname);
                            children: []
                            pos: 31853
                            length: 50
                          - type: if_statement
                            fields:
                              condition:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: unary_expression
                                    fields:
                                      text: "!expectedType.isUnknownType()"
                                    children: []
                                    pos: 31918
                                    length: 29
                                children: []
                                pos: 31917
                                length: 31
                            children:
                            - type: block
                              fields: {}
                              children:
                              - type: expression_statement
                                fields:
                                  text: |-
                                    validator.expectCanAssignToPropertyOf(
                                                    t, assign, getJSType(rvalue),
                                                    expectedType, object, pname);
                                children: []
                                pos: 31963
                                length: 130
                              - type: expression_statement
                                fields:
                                  text: |-
                                    checkPropertyInheritanceOnGetpropAssign(
                                                    t, assign, object, pname, info, expectedType);
                                children: []
                                pos: 32106
                                length: 103
                              - type: return_statement
                                fields:
                                  text: return;
                                children: []
                                pos: 32222
                                length: 7
                              pos: 31949
                              length: 292
                            pos: 31914
                            length: 327
                          pos: 31841
                          length: 410
                        pos: 31709
                        length: 542
                      pos: 31699
                      length: 560
                    pos: 31681
                    length: 578
                  - type: expression_statement
                    fields:
                      text: |-
                        checkPropertyInheritanceOnGetpropAssign(
                                  t, assign, object, pname, info, getNativeType(UNKNOWN_TYPE));
                    children: []
                    pos: 32412
                    length: 112
                  pos: 29693
                  length: 2837
                pos: 29669
                length: 2861
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = getJSType(lvalue);
                children: []
                pos: 32779
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: lvalue.isQualifiedName()
                        children: []
                        pos: 32824
                        length: 24
                    children: []
                    pos: 32823
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType rvalueType = getJSType(assign.getLastChild());
                    children: []
                    pos: 32900
                    length: 53
                  - type: local_variable_declaration
                    fields:
                      text: Var var = t.getScope().getVar(lvalue.getQualifiedName());
                    children: []
                    pos: 32960
                    length: 57
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: var
                                children: []
                                pos: 33028
                                length: 3
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 33035
                                length: 4
                            children: []
                            pos: 33028
                            length: 11
                        children: []
                        pos: 33027
                        length: 13
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: method_invocation
                                fields:
                                  text: var.isTypeInferred()
                                children: []
                                pos: 33055
                                length: 20
                            children: []
                            pos: 33054
                            length: 22
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: return_statement
                            fields:
                              text: return;
                            children: []
                            pos: 33089
                            length: 7
                          pos: 33077
                          length: 29
                        pos: 33051
                        length: 55
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: NodeUtil.getRootOfQualifiedName(lvalue).isThis()
                                    children: []
                                    pos: 33120
                                    length: 48
                                  right:
                                    type: not_equals
                                    fields:
                                      left:
                                        type: method_invocation
                                        fields:
                                          text: t.getScope()
                                        children: []
                                        pos: 33184
                                        length: 12
                                      right:
                                        type: method_invocation
                                        fields:
                                          text: var.getScope()
                                        children: []
                                        pos: 33200
                                        length: 14
                                    children: []
                                    pos: 33184
                                    length: 30
                                children: []
                                pos: 33120
                                length: 94
                            children: []
                            pos: 33119
                            length: 96
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: return_statement
                            fields:
                              text: return;
                            children: []
                            pos: 33295
                            length: 7
                          pos: 33216
                          length: 96
                        pos: 33116
                        length: 196
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: not_equals
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: var.getType()
                                    children: []
                                    pos: 33326
                                    length: 13
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 33343
                                    length: 4
                                children: []
                                pos: 33326
                                length: 21
                            children: []
                            pos: 33325
                            length: 23
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: leftType = var.getType();
                            children: []
                            pos: 33361
                            length: 25
                          pos: 33349
                          length: 47
                        pos: 33322
                        length: 74
                      pos: 33041
                      length: 363
                    pos: 33024
                    length: 380
                  pos: 32850
                  length: 560
                pos: 32820
                length: 590
              - type: local_variable_declaration
                fields:
                  text: Node rightChild = assign.getLastChild();
                children: []
                pos: 33478
                length: 40
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = getJSType(rightChild);
                children: []
                pos: 33523
                length: 41
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: |-
                            validator.expectCanAssignTo(
                                        t, assign, rightType, leftType, "assignment")
                        children: []
                        pos: 33573
                        length: 86
                    children: []
                    pos: 33572
                    length: 88
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, assign, rightType);
                    children: []
                    pos: 33669
                    length: 34
                  pos: 33661
                  length: 48
                pos: 33569
                length: 183
              pos: 29463
              length: 4293
          children: []
          pos: 29408
          length: 4348
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkPropCreation
              children: []
              pos: 33836
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 33854
                length: 15
              pos: 33823
              length: 499
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: lvalue.isGetProp()
                        children: []
                        pos: 33894
                        length: 18
                    children: []
                    pos: 33893
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Node obj = lvalue.getFirstChild();
                    children: []
                    pos: 33922
                    length: 34
                  - type: local_variable_declaration
                    fields:
                      text: Node prop = lvalue.getLastChild();
                    children: []
                    pos: 33963
                    length: 34
                  - type: local_variable_declaration
                    fields:
                      text: JSType objType = getJSType(obj);
                    children: []
                    pos: 34004
                    length: 32
                  - type: local_variable_declaration
                    fields:
                      text: String pname = prop.getString();
                    children: []
                    pos: 34043
                    length: 32
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: objType.isStruct()
                                children: []
                                pos: 34086
                                length: 18
                              right:
                                type: unary_expression
                                fields:
                                  text: "!objType.hasProperty(pname)"
                                children: []
                                pos: 34108
                                length: 27
                            children: []
                            pos: 34086
                            length: 49
                        children: []
                        pos: 34085
                        length: 51
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: unary_expression
                                fields:
                                  text: |-
                                    !(obj.isThis() &&
                                                  getJSType(t.getScope().getRootNode()).isConstructor())
                                children: []
                                pos: 34151
                                length: 86
                            children: []
                            pos: 34150
                            length: 88
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: report(t, prop, ILLEGAL_PROPERTY_CREATION);
                            children: []
                            pos: 34251
                            length: 43
                          pos: 34239
                          length: 65
                        pos: 34147
                        length: 157
                      pos: 34137
                      length: 175
                    pos: 34082
                    length: 230
                  pos: 33914
                  length: 404
                pos: 33890
                length: 428
              pos: 33884
              length: 438
          children: []
          pos: 33823
          length: 499
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkPropertyInheritanceOnGetpropAssign
              children: []
              pos: 34339
              length: 39
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 34386
                length: 15
              pos: 34326
              length: 1242
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: object.isGetProp()
                        children: []
                        pos: 35000
                        length: 18
                    children: []
                    pos: 34999
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Node object2 = object.getFirstChild();
                    children: []
                    pos: 35028
                    length: 38
                  - type: local_variable_declaration
                    fields:
                      text: String property2 = NodeUtil.getStringValue(object.getLastChild());
                    children: []
                    pos: 35073
                    length: 66
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: '"prototype".equals(property2)'
                            children: []
                            pos: 35151
                            length: 29
                        children: []
                        pos: 35150
                        length: 31
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType jsType = getJSType(object2);
                        children: []
                        pos: 35192
                        length: 35
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: method_invocation
                                fields:
                                  text: jsType.isFunctionType()
                                children: []
                                pos: 35240
                                length: 23
                            children: []
                            pos: 35239
                            length: 25
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: local_variable_declaration
                            fields:
                              text: FunctionType functionType = jsType.toMaybeFunctionType();
                            children: []
                            pos: 35277
                            length: 57
                          - type: if_statement
                            fields:
                              condition:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: or
                                    fields:
                                      left:
                                        type: method_invocation
                                        fields:
                                          text: functionType.isConstructor()
                                        children: []
                                        pos: 35349
                                        length: 28
                                      right:
                                        type: method_invocation
                                        fields:
                                          text: functionType.isInterface()
                                        children: []
                                        pos: 35381
                                        length: 26
                                    children: []
                                    pos: 35349
                                    length: 58
                                children: []
                                pos: 35348
                                length: 60
                            children:
                            - type: block
                              fields: {}
                              children:
                              - type: expression_statement
                                fields:
                                  text: |-
                                    checkDeclaredPropertyInheritance(
                                                    t, assign, functionType, property, info, propertyType);
                                children: []
                                pos: 35423
                                length: 105
                              pos: 35409
                              length: 131
                            pos: 35345
                            length: 195
                          pos: 35265
                          length: 285
                        pos: 35236
                        length: 314
                      pos: 35182
                      length: 376
                    pos: 35147
                    length: 411
                  pos: 35020
                  length: 544
                pos: 34996
                length: 568
              pos: 34489
              length: 1079
          children: []
          pos: 34326
          length: 1242
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitObjLitKey
              children: []
              pos: 35866
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 35888
                length: 15
              pos: 35853
              length: 2425
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: objlit.isFromExterns()
                        children: []
                        pos: 36085
                        length: 22
                    children: []
                    pos: 36084
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, key);
                    children: []
                    pos: 36117
                    length: 20
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 36144
                    length: 7
                  pos: 36109
                  length: 48
                pos: 36081
                length: 76
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: litType.isStruct()
                            children: []
                            pos: 36238
                            length: 18
                          right:
                            type: method_invocation
                            fields:
                              text: key.isQuotedString()
                            children: []
                            pos: 36260
                            length: 20
                        children: []
                        pos: 36238
                        length: 42
                    children: []
                    pos: 36237
                    length: 44
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: report(t, key, ILLEGAL_OBJLIT_KEY, "struct");
                    children: []
                    pos: 36290
                    length: 45
                  pos: 36282
                  length: 59
                pos: 36234
                length: 217
              - type: local_variable_declaration
                fields:
                  text: Node rvalue = key.getFirstChild();
                children: []
                pos: 36685
                length: 34
              - type: local_variable_declaration
                fields:
                  text: |-
                    JSType rightType = NodeUtil.getObjectLitKeyTypeFromValueType(
                            key, getJSType(rvalue));
                children: []
                pos: 36724
                length: 94
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: rightType
                            children: []
                            pos: 36827
                            length: 9
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 36840
                            length: 4
                        children: []
                        pos: 36827
                        length: 17
                    children: []
                    pos: 36826
                    length: 19
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: rightType = getNativeType(UNKNOWN_TYPE);
                    children: []
                    pos: 36854
                    length: 40
                  pos: 36846
                  length: 54
                pos: 36823
                length: 77
              - type: local_variable_declaration
                fields:
                  text: Node owner = objlit;
                children: []
                pos: 36906
                length: 20
              - type: local_variable_declaration
                fields:
                  text: JSType keyType = getJSType(key);
                children: []
                pos: 36986
                length: 32
              - type: local_variable_declaration
                fields:
                  text: JSType allowedValueType = keyType;
                children: []
                pos: 37024
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: allowedValueType.isEnumElementType()
                        children: []
                        pos: 37067
                        length: 36
                    children: []
                    pos: 37066
                    length: 38
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        allowedValueType =
                                  allowedValueType.toMaybeEnumElementType().getPrimitiveType();
                    children: []
                    pos: 37113
                    length: 90
                  pos: 37105
                  length: 104
                pos: 37063
                length: 146
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean valid = validator.expectCanAssignToPropertyOf(t, key,
                            rightType, allowedValueType,
                            owner, NodeUtil.getObjectLitKeyName(key));
                children: []
                pos: 37215
                length: 149
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: valid
                        children: []
                        pos: 37373
                        length: 5
                    children: []
                    pos: 37372
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, key, rightType);
                    children: []
                    pos: 37388
                    length: 31
                  pos: 37380
                  length: 45
                pos: 37369
                length: 96
              - type: local_variable_declaration
                fields:
                  text: JSType objlitType = getJSType(objlit);
                children: []
                pos: 37751
                length: 38
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType type = ObjectType.cast(
                            objlitType.restrictByNotNullOrUndefined());
                children: []
                pos: 37794
                length: 86
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: type
                            children: []
                            pos: 37889
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 37897
                            length: 4
                        children: []
                        pos: 37889
                        length: 12
                    children: []
                    pos: 37888
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: String property = NodeUtil.getObjectLitKeyName(key);
                    children: []
                    pos: 37911
                    length: 52
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: type.hasProperty(property)
                                    children: []
                                    pos: 37974
                                    length: 26
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: "!type.isPropertyTypeInferred(property)"
                                    children: []
                                    pos: 38014
                                    length: 38
                                children: []
                                pos: 37974
                                length: 78
                              right:
                                type: unary_expression
                                fields:
                                  text: "!propertyIsImplicitCast(type, property)"
                                children: []
                                pos: 38066
                                length: 39
                            children: []
                            pos: 37974
                            length: 131
                        children: []
                        pos: 37973
                        length: 133
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            validator.expectCanAssignToPropertyOf(
                                        t, key, keyType,
                                        type.getPropertyType(property), owner, property);
                        children: []
                        pos: 38117
                        length: 129
                      pos: 38107
                      length: 147
                    pos: 37970
                    length: 284
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 38261
                    length: 7
                  pos: 37903
                  length: 371
                pos: 37885
                length: 389
              pos: 35944
              length: 2334
          children: []
          pos: 35853
          length: 2425
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: propertyIsImplicitCast
              children: []
              pos: 38413
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: ObjectType type
                children: []
                pos: 38436
                length: 15
              pos: 38397
              length: 309
            body:
              type: block
              fields: {}
              children:
              - type: for_statement
                fields:
                  text: |-
                    for (; type != null; type = type.getImplicitPrototype()) {
                          JSDocInfo docInfo = type.getOwnPropertyJSDocInfo(prop);
                          if (docInfo != null && docInfo.isImplicitCast()) {
                            return true;
                          }
                        }
                children: []
                pos: 38472
                length: 212
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 38689
                length: 13
              pos: 38466
              length: 240
          children: []
          pos: 38397
          length: 309
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkDeclaredPropertyInheritance
              children: []
              pos: 38975
              length: 32
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 39015
                length: 15
              pos: 38962
              length: 4898
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: hasUnknownOrEmptySupertype(ctorType)
                        children: []
                        pos: 39228
                        length: 36
                    children: []
                    pos: 39227
                    length: 38
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 39274
                    length: 7
                  pos: 39266
                  length: 21
                pos: 39224
                length: 63
              - type: local_variable_declaration
                fields:
                  text: FunctionType superClass = ctorType.getSuperClassConstructor();
                children: []
                pos: 39293
                length: 62
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean superClassHasProperty = superClass != null &&
                            superClass.getInstanceType().hasProperty(propertyName);
                children: []
                pos: 39360
                length: 117
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean superClassHasDeclaredProperty = superClass != null &&
                            superClass.getInstanceType().isPropertyTypeDeclared(propertyName);
                children: []
                pos: 39482
                length: 136
              - type: local_variable_declaration
                fields:
                  text: boolean superInterfaceHasProperty = false;
                children: []
                pos: 39645
                length: 42
              - type: local_variable_declaration
                fields:
                  text: boolean superInterfaceHasDeclaredProperty = false;
                children: []
                pos: 39692
                length: 50
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: ctorType.isInterface()
                        children: []
                        pos: 39751
                        length: 22
                    children: []
                    pos: 39750
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: enhanced_for_statement
                    fields:
                      text: |-
                        for (ObjectType interfaceType : ctorType.getExtendedInterfaces()) {
                                superInterfaceHasProperty =
                                    superInterfaceHasProperty ||
                                    interfaceType.hasProperty(propertyName);
                                superInterfaceHasDeclaredProperty =
                                    superInterfaceHasDeclaredProperty ||
                                    interfaceType.isPropertyTypeDeclared(propertyName);
                              }
                    children: []
                    pos: 39783
                    length: 362
                  pos: 39775
                  length: 376
                pos: 39747
                length: 404
              - type: local_variable_declaration
                fields:
                  text: boolean declaredOverride = info != null && info.isOverride();
                children: []
                pos: 40156
                length: 61
              - type: local_variable_declaration
                fields:
                  text: boolean foundInterfaceProperty = false;
                children: []
                pos: 40223
                length: 39
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: ctorType.isConstructor()
                        children: []
                        pos: 40271
                        length: 24
                    children: []
                    pos: 40270
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: enhanced_for_statement
                    fields:
                      text: |-
                        for (JSType implementedInterface :
                                  ctorType.getAllImplementedInterfaces()) {
                                if (implementedInterface.isUnknownType() ||
                                    implementedInterface.isEmptyType()) {
                                  continue;
                                }
                                FunctionType interfaceType =
                                    implementedInterface.toObjectType().getConstructor();
                                Preconditions.checkNotNull(interfaceType);

                                boolean interfaceHasProperty =
                                    interfaceType.getPrototype().hasProperty(propertyName);
                                foundInterfaceProperty = foundInterfaceProperty ||
                                    interfaceHasProperty;
                                if (reportMissingOverride.isOn()
                                    && !declaredOverride
                                    && interfaceHasProperty) {
                                  // @override not present, but the property does override an interface
                                  // property
                                  compiler.report(t.makeError(n, reportMissingOverride,
                                      HIDDEN_INTERFACE_PROPERTY, propertyName,
                                      interfaceType.getTopMostDefiningType(propertyName).toString()));
                                }
                              }
                    children: []
                    pos: 40305
                    length: 1004
                  pos: 40297
                  length: 1018
                pos: 40267
                length: 1048
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: and
                            fields:
                              left:
                                type: unary_expression
                                fields:
                                  text: "!declaredOverride"
                                children: []
                                pos: 41325
                                length: 17
                              right:
                                type: unary_expression
                                fields:
                                  text: "!superClassHasProperty"
                                children: []
                                pos: 41354
                                length: 22
                            children: []
                            pos: 41325
                            length: 51
                          right:
                            type: unary_expression
                            fields:
                              text: "!superInterfaceHasProperty"
                            children: []
                            pos: 41388
                            length: 26
                        children: []
                        pos: 41325
                        length: 89
                    children: []
                    pos: 41324
                    length: 91
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 41484
                    length: 7
                  pos: 41416
                  length: 81
                pos: 41321
                length: 176
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType topInstanceType = superClassHasDeclaredProperty ?
                            superClass.getTopMostDefiningType(propertyName) : null;
                children: []
                pos: 41503
                length: 124
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean declaredLocally =
                            ctorType.isConstructor() &&
                            (ctorType.getPrototype().hasOwnProperty(propertyName) ||
                             ctorType.getInstanceType().hasOwnProperty(propertyName));
                children: []
                pos: 41632
                length: 193
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: reportMissingOverride.isOn()
                                    children: []
                                    pos: 41834
                                    length: 28
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: "!declaredOverride"
                                    children: []
                                    pos: 41874
                                    length: 17
                                children: []
                                pos: 41834
                                length: 57
                              right:
                                type: identifier
                                fields:
                                  text: superClassHasDeclaredProperty
                                children: []
                                pos: 41903
                                length: 29
                            children: []
                            pos: 41834
                            length: 98
                          right:
                            type: identifier
                            fields:
                              text: declaredLocally
                            children: []
                            pos: 41944
                            length: 15
                        children: []
                        pos: 41834
                        length: 125
                    children: []
                    pos: 41833
                    length: 127
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        compiler.report(t.makeError(n, reportMissingOverride,
                                  HIDDEN_SUPERCLASS_PROPERTY, propertyName,
                                  topInstanceType.toString()));
                    children: []
                    pos: 42063
                    length: 145
                  pos: 41961
                  length: 253
                pos: 41830
                length: 384
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: superClassHasDeclaredProperty
                        children: []
                        pos: 42287
                        length: 29
                    children: []
                    pos: 42286
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        JSType superClassPropType =
                                  superClass.getInstanceType().getPropertyType(propertyName);
                    children: []
                    pos: 42372
                    length: 97
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: unary_expression
                            fields:
                              text: "!propertyType.isSubtype(superClassPropType)"
                            children: []
                            pos: 42480
                            length: 43
                        children: []
                        pos: 42479
                        length: 45
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            compiler.report(
                                        t.makeError(n, HIDDEN_SUPERCLASS_PROPERTY_MISMATCH,
                                            propertyName, topInstanceType.toString(),
                                            superClassPropType.toString(), propertyType.toString()));
                        children: []
                        pos: 42535
                        length: 212
                      pos: 42525
                      length: 230
                    pos: 42476
                    length: 279
                  pos: 42318
                  length: 443
                pos: 42283
                length: 1573
              pos: 39127
              length: 4733
          children: []
          pos: 38962
          length: 4898
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: hasUnknownOrEmptySupertype
              children: []
              pos: 44021
              length: 26
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FunctionType ctor
                children: []
                pos: 44048
                length: 17
              pos: 43998
              length: 815
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkArgument(ctor.isConstructor() || ctor.isInterface());
                children: []
                pos: 44073
                length: 72
              - type: expression_statement
                fields:
                  text: Preconditions.checkArgument(!ctor.isUnknownType());
                children: []
                pos: 44150
                length: 51
              - type: while_statement
                fields:
                  text: |-
                    while (true) {
                          ObjectType maybeSuperInstanceType =
                              ctor.getPrototype().getImplicitPrototype();
                          if (maybeSuperInstanceType == null) {
                            return false;
                          }
                          if (maybeSuperInstanceType.isUnknownType() ||
                              maybeSuperInstanceType.isEmptyType()) {
                            return true;
                          }
                          ctor = maybeSuperInstanceType.getConstructor();
                          if (ctor == null) {
                            return false;
                          }
                          Preconditions.checkState(ctor.isConstructor() || ctor.isInterface());
                        }
                children: []
                pos: 44302
                length: 507
              pos: 44067
              length: 746
          children: []
          pos: 43998
          length: 815
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitInterfaceGetprop
              children: []
              pos: 44951
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 44973
                length: 15
              pos: 44938
              length: 1082
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType rvalueType = getJSType(rvalue);
                children: []
                pos: 45072
                length: 38
              - type: local_variable_declaration
                fields:
                  text: |-
                    String abstractMethodName =
                            compiler.getCodingConvention().getAbstractMethodName();
                children: []
                pos: 45309
                length: 91
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!rvalueType.isFunctionType()"
                        children: []
                        pos: 45409
                        length: 28
                    children: []
                    pos: 45408
                    length: 30
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        String abstractMethodMessage = (abstractMethodName != null)
                                 ? ", or " + abstractMethodName
                                 : "";
                    children: []
                    pos: 45522
                    length: 114
                  - type: expression_statement
                    fields:
                      text: |-
                        compiler.report(
                                  t.makeError(object, INVALID_INTERFACE_MEMBER_DECLARATION,
                                      abstractMethodMessage));
                    children: []
                    pos: 45643
                    length: 123
                  pos: 45439
                  length: 333
                pos: 45405
                length: 367
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: assign.getLastChild().isFunction()
                            children: []
                            pos: 45782
                            length: 34
                          right:
                            type: unary_expression
                            fields:
                              text: "!NodeUtil.isEmptyBlock(assign.getLastChild().getLastChild())"
                            children: []
                            pos: 45828
                            length: 60
                        children: []
                        pos: 45782
                        length: 106
                    children: []
                    pos: 45781
                    length: 108
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        compiler.report(
                                  t.makeError(object, INTERFACE_FUNCTION_NOT_EMPTY,
                                      abstractMethodName));
                    children: []
                    pos: 45898
                    length: 112
                  pos: 45890
                  length: 126
                pos: 45778
                length: 238
              pos: 45065
              length: 955
          children: []
          pos: 44938
          length: 1082
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitName
              children: []
              pos: 46349
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 46359
                length: 15
              pos: 46341
              length: 1096
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int parentNodeType = parent.getType();
                children: []
                pos: 46855
                length: 38
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: or
                                fields:
                                  left:
                                    type: equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: parentNodeType
                                        children: []
                                        pos: 46902
                                        length: 14
                                      right:
                                        type: field_access
                                        fields:
                                          text: Token.FUNCTION
                                        children: []
                                        pos: 46920
                                        length: 14
                                    children: []
                                    pos: 46902
                                    length: 32
                                  right:
                                    type: equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: parentNodeType
                                        children: []
                                        pos: 46946
                                        length: 14
                                      right:
                                        type: field_access
                                        fields:
                                          text: Token.CATCH
                                        children: []
                                        pos: 46964
                                        length: 11
                                    children: []
                                    pos: 46946
                                    length: 29
                                children: []
                                pos: 46902
                                length: 73
                              right:
                                type: equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: parentNodeType
                                    children: []
                                    pos: 46987
                                    length: 14
                                  right:
                                    type: field_access
                                    fields:
                                      text: Token.PARAM_LIST
                                    children: []
                                    pos: 47005
                                    length: 16
                                children: []
                                pos: 46987
                                length: 34
                            children: []
                            pos: 46902
                            length: 119
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: parentNodeType
                                children: []
                                pos: 47033
                                length: 14
                              right:
                                type: field_access
                                fields:
                                  text: Token.VAR
                                children: []
                                pos: 47051
                                length: 9
                            children: []
                            pos: 47033
                            length: 27
                        children: []
                        pos: 46902
                        length: 158
                    children: []
                    pos: 46901
                    length: 160
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return false;
                    children: []
                    pos: 47070
                    length: 13
                  pos: 47062
                  length: 27
                pos: 46898
                length: 191
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 47095
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: type
                            children: []
                            pos: 47132
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 47140
                            length: 4
                        children: []
                        pos: 47132
                        length: 12
                    children: []
                    pos: 47131
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: type = getNativeType(UNKNOWN_TYPE);
                    children: []
                    pos: 47154
                    length: 35
                  - type: local_variable_declaration
                    fields:
                      text: Var var = t.getScope().getVar(n.getString());
                    children: []
                    pos: 47196
                    length: 45
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: var
                                children: []
                                pos: 47252
                                length: 3
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 47259
                                length: 4
                            children: []
                            pos: 47252
                            length: 11
                        children: []
                        pos: 47251
                        length: 13
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType varType = var.getType();
                        children: []
                        pos: 47275
                        length: 31
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: varType
                                    children: []
                                    pos: 47319
                                    length: 7
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 47330
                                    length: 4
                                children: []
                                pos: 47319
                                length: 15
                            children: []
                            pos: 47318
                            length: 17
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: type = varType;
                            children: []
                            pos: 47348
                            length: 15
                          pos: 47336
                          length: 37
                        pos: 47315
                        length: 58
                      pos: 47265
                      length: 116
                    pos: 47248
                    length: 133
                  pos: 47146
                  length: 241
                pos: 47128
                length: 259
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n, type);
                children: []
                pos: 47392
                length: 24
              - type: return_statement
                fields:
                  text: return true;
                children: []
                pos: 47421
                length: 12
              pos: 46397
              length: 1040
          children: []
          pos: 46341
          length: 1096
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitGetProp
              children: []
              pos: 47728
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 47741
                length: 15
              pos: 47715
              length: 743
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node property = n.getLastChild();
                children: []
                pos: 47991
                length: 33
              - type: local_variable_declaration
                fields:
                  text: Node objNode = n.getFirstChild();
                children: []
                pos: 48029
                length: 33
              - type: local_variable_declaration
                fields:
                  text: JSType childType = getJSType(objNode);
                children: []
                pos: 48067
                length: 38
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: childType.isDict()
                        children: []
                        pos: 48115
                        length: 18
                    children: []
                    pos: 48114
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS,
                        "'.'", "dict");
                    children: []
                    pos: 48143
                    length: 74
                  pos: 48135
                  length: 88
                pos: 48111
                length: 320
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n);
                children: []
                pos: 48436
                length: 18
              pos: 47779
              length: 679
          children: []
          pos: 47715
          length: 743
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkPropertyAccess
              children: []
              pos: 48797
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType childType
                children: []
                pos: 48817
                length: 16
              pos: 48784
              length: 1250
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType propType = getJSType(n);
                children: []
                pos: 49154
                length: 31
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: propType.isEquivalentTo(typeRegistry.getNativeType(UNKNOWN_TYPE))
                        children: []
                        pos: 49194
                        length: 65
                    children: []
                    pos: 49193
                    length: 67
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: childType = childType.autobox();
                    children: []
                    pos: 49269
                    length: 32
                  - type: local_variable_declaration
                    fields:
                      text: ObjectType objectType = ObjectType.cast(childType);
                    children: []
                    pos: 49308
                    length: 51
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: objectType
                                children: []
                                pos: 49370
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 49384
                                length: 4
                            children: []
                            pos: 49370
                            length: 18
                        children: []
                        pos: 49369
                        length: 20
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: or
                                fields:
                                  left:
                                    type: unary_expression
                                    fields:
                                      text: "!objectType.hasProperty(propName)"
                                    children: []
                                    pos: 49585
                                    length: 33
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: |-
                                        objectType.isEquivalentTo(
                                                        typeRegistry.getNativeType(UNKNOWN_TYPE))
                                    children: []
                                    pos: 49634
                                    length: 84
                                children: []
                                pos: 49585
                                length: 133
                            children: []
                            pos: 49584
                            length: 135
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: if_statement
                            fields:
                              condition:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: instanceof_expression
                                    fields:
                                      text: objectType instanceof EnumType
                                    children: []
                                    pos: 49736
                                    length: 30
                                children: []
                                pos: 49735
                                length: 32
                            children:
                            - type: block
                              fields: {}
                              children:
                              - type: expression_statement
                                fields:
                                  text: report(t, n, INEXISTENT_ENUM_ELEMENT, propName);
                                children: []
                                pos: 49782
                                length: 48
                              pos: 49768
                              length: 74
                            pos: 49732
                            length: 196
                          pos: 49720
                          length: 218
                        pos: 49581
                        length: 357
                      pos: 49390
                      length: 557
                    pos: 49366
                    length: 658
                  pos: 49261
                  length: 769
                pos: 49190
                length: 840
              pos: 48883
              length: 1151
          children: []
          pos: 48784
          length: 1250
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkPropertyAccessHelper
              children: []
              pos: 50051
              length: 25
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType objectType
                children: []
                pos: 50077
                length: 17
              pos: 50038
              length: 412
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: and
                            fields:
                              left:
                                type: unary_expression
                                fields:
                                  text: "!objectType.isEmptyType()"
                                children: []
                                pos: 50154
                                length: 25
                              right:
                                type: identifier
                                fields:
                                  text: reportMissingProperties
                                children: []
                                pos: 50191
                                length: 23
                            children: []
                            pos: 50154
                            length: 60
                          right:
                            type: unary_expression
                            fields:
                              text: "!isPropertyTest(n)"
                            children: []
                            pos: 50218
                            length: 18
                        children: []
                        pos: 50154
                        length: 82
                    children: []
                    pos: 50153
                    length: 84
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: unary_expression
                            fields:
                              text: "!typeRegistry.canPropertyBeDefined(objectType,
                                propName)"
                            children: []
                            pos: 50250
                            length: 56
                        children: []
                        pos: 50249
                        length: 58
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            report(t, n, INEXISTENT_PROPERTY, propName,
                                        validator.getReadableJSTypeName(n.getFirstChild(), true));
                        children: []
                        pos: 50318
                        length: 114
                      pos: 50308
                      length: 132
                    pos: 50246
                    length: 194
                  pos: 50238
                  length: 208
                pos: 50150
                length: 296
              pos: 50144
              length: 306
          children: []
          pos: 50038
          length: 412
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isPropertyTest
              children: []
              pos: 50677
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getProp
                children: []
                pos: 50692
                length: 12
              pos: 50661
              length: 748
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node parent = getProp.getParent();
                children: []
                pos: 50712
                length: 34
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: parent.getType()
                        children: []
                        pos: 50759
                        length: 16
                    children: []
                    pos: 50758
                    length: 18
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.CALL:
                                return parent.getFirstChild() != getProp &&
                                    compiler.getCodingConvention().isPropertyTestFunction(parent);

                              case Token.IF:
                              case Token.WHILE:
                              case Token.DO:
                              case Token.FOR:
                                return NodeUtil.getConditionExpression(parent) == getProp;

                              case Token.INSTANCEOF:
                              case Token.TYPEOF:
                                return true;

                              case Token.AND:
                              case Token.HOOK:
                                return parent.getFirstChild() == getProp;

                              case Token.NOT:
                                return parent.getParent().isOr() &&
                                    parent.getParent().getFirstChild() == parent;
                            }
                    children: []
                    pos: 50777
                    length: 610
                children: []
                pos: 50751
                length: 636
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 51392
                length: 13
              pos: 50706
              length: 703
          children: []
          pos: 50661
          length: 748
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitGetElem
              children: []
              pos: 51652
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 51665
                length: 15
              pos: 51639
              length: 185
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    validator.expectIndexMatch(
                            t, n, getJSType(n.getFirstChild()), getJSType(n.getLastChild()));
                children: []
                pos: 51696
                length: 101
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n);
                children: []
                pos: 51802
                length: 18
              pos: 51690
              length: 134
          children: []
          pos: 51639
          length: 185
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitVar
              children: []
              pos: 52063
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 52072
                length: 15
              pos: 52050
              length: 1060
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: 'JSDocInfo varInfo = n.hasOneChild() ? n.getJSDocInfo() :
                    null;'
                children: []
                pos: 52265
                length: 62
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (Node name : n.children()) {
                          Node value = name.getFirstChild();
                          // A null var would indicate a bug in the scope creation logic.
                          Var var = t.getScope().getVar(name.getString());

                          if (value != null) {
                            JSType valueType = getJSType(value);
                            JSType nameType = var.getType();
                            nameType = (nameType == null) ? getNativeType(UNKNOWN_TYPE) : nameType;

                            JSDocInfo info = name.getJSDocInfo();
                            if (info == null) {
                              info = varInfo;
                            }

                            checkEnumAlias(t, info, value);
                            if (var.isTypeInferred()) {
                              ensureTyped(t, name, valueType);
                            } else {
                              validator.expectCanAssignTo(
                                  t, value, valueType, nameType, "initializing variable");
                            }
                          }
                        }
                children: []
                pos: 52332
                length: 774
              pos: 52097
              length: 1013
          children: []
          pos: 52050
          length: 1060
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitNew
              children: []
              pos: 53163
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 53172
                length: 15
              pos: 53150
              length: 557
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node constructor = n.getFirstChild();
                children: []
                pos: 53203
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
                children: []
                pos: 53245
                length: 68
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: type.isConstructor()
                                children: []
                                pos: 53322
                                length: 20
                              right:
                                type: method_invocation
                                fields:
                                  text: type.isEmptyType()
                                children: []
                                pos: 53346
                                length: 18
                            children: []
                            pos: 53322
                            length: 42
                          right:
                            type: method_invocation
                            fields:
                              text: type.isUnknownType()
                            children: []
                            pos: 53368
                            length: 20
                        children: []
                        pos: 53322
                        length: 66
                    children: []
                    pos: 53321
                    length: 68
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType fnType = type.toMaybeFunctionType();
                    children: []
                    pos: 53398
                    length: 49
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: fnType
                                children: []
                                pos: 53458
                                length: 6
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 53468
                                length: 4
                            children: []
                            pos: 53458
                            length: 14
                        children: []
                        pos: 53457
                        length: 16
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: visitParameterList(t, n, fnType);
                        children: []
                        pos: 53484
                        length: 33
                      - type: expression_statement
                        fields:
                          text: ensureTyped(t, n, fnType.getInstanceType());
                        children: []
                        pos: 53526
                        length: 44
                      pos: 53474
                      length: 104
                    pos: 53454
                    length: 166
                  pos: 53390
                  length: 236
                pos: 53318
                length: 385
              pos: 53197
              length: 510
          children: []
          pos: 53150
          length: 557
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkInterfaceConflictProperties
              children: []
              pos: 54245
              length: 32
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 54278
                length: 15
              pos: 54232
              length: 1332
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: ObjectType implicitProto = interfaceType.getImplicitPrototype();
                children: []
                pos: 54461
                length: 64
              - type: local_variable_declaration
                fields:
                  text: Set<String> currentPropertyNames;
                children: []
                pos: 54530
                length: 33
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: implicitProto
                            children: []
                            pos: 54572
                            length: 13
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 54589
                            length: 4
                        children: []
                        pos: 54572
                        length: 21
                    children: []
                    pos: 54571
                    length: 23
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: currentPropertyNames = ImmutableSet.of();
                    children: []
                    pos: 54748
                    length: 41
                  pos: 54595
                  length: 200
                pos: 54568
                length: 306
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (String name : currentPropertyNames) {
                          ObjectType oType = properties.get(name);
                          if (oType != null) {
                            if (!interfaceType.getPropertyType(name).isEquivalentTo(
                                oType.getPropertyType(name))) {
                              compiler.report(
                                  t.makeError(n, INCOMPATIBLE_EXTENDED_PROPERTY_TYPE,
                                      functionName, name, oType.toString(),
                                      interfaceType.toString()));
                            }
                          }
                          currentProperties.put(name, interfaceType);
                        }
                children: []
                pos: 54879
                length: 494
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (ObjectType iType : interfaceType.getCtorExtendedInterfaces()) {
                          checkInterfaceConflictProperties(t, n, functionName, properties,
                              currentProperties, iType);
                        }
                children: []
                pos: 55378
                length: 182
              pos: 54455
              length: 1109
          children: []
          pos: 54232
          length: 1332
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitFunction
              children: []
              pos: 55822
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 55836
                length: 15
              pos: 55809
              length: 3196
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: FunctionType functionType = JSType.toMaybeFunctionType(n.getJSType());
                children: []
                pos: 55867
                length: 70
              - type: local_variable_declaration
                fields:
                  text: String functionPrivateName = n.getFirstChild().getString();
                children: []
                pos: 55942
                length: 59
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: functionType.isConstructor()
                        children: []
                        pos: 56010
                        length: 28
                    children: []
                    pos: 56009
                    length: 30
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType baseConstructor = functionType.getSuperClassConstructor();
                    children: []
                    pos: 56048
                    length: 71
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: not_equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: baseConstructor
                                        children: []
                                        pos: 56130
                                        length: 15
                                      right:
                                        type: method_invocation
                                        fields:
                                          text: getNativeType(OBJECT_FUNCTION_TYPE)
                                        children: []
                                        pos: 56149
                                        length: 35
                                    children: []
                                    pos: 56130
                                    length: 54
                                  right:
                                    type: not_equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: baseConstructor
                                        children: []
                                        pos: 56198
                                        length: 15
                                      right:
                                        type: null_literal
                                        fields: {}
                                        children: []
                                        pos: 56217
                                        length: 4
                                    children: []
                                    pos: 56198
                                    length: 23
                                children: []
                                pos: 56130
                                length: 91
                              right:
                                type: method_invocation
                                fields:
                                  text: baseConstructor.isInterface()
                                children: []
                                pos: 56235
                                length: 29
                            children: []
                            pos: 56130
                            length: 134
                        children: []
                        pos: 56129
                        length: 136
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            compiler.report(
                                        t.makeError(n, CONFLICTING_EXTENDED_TYPE,
                                                    "constructor", functionPrivateName));
                        children: []
                        pos: 56276
                        length: 132
                      pos: 56266
                      length: 150
                    pos: 56126
                    length: 1723
                  pos: 56040
                  length: 1815
                pos: 56006
                length: 2995
              pos: 55861
              length: 3144
          children: []
          pos: 55809
          length: 3196
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitCall
              children: []
              pos: 59245
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 59255
                length: 15
              pos: 59232
              length: 2108
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node child = n.getFirstChild();
                children: []
                pos: 59286
                length: 31
              - type: local_variable_declaration
                fields:
                  text: JSType childType = getJSType(child).restrictByNotNullOrUndefined();
                children: []
                pos: 59322
                length: 67
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!childType.canBeCalled()"
                        children: []
                        pos: 59399
                        length: 24
                    children: []
                    pos: 59398
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: report(t, n, NOT_CALLABLE, childType.toString());
                    children: []
                    pos: 59433
                    length: 49
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, n);
                    children: []
                    pos: 59489
                    length: 18
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 59514
                    length: 7
                  pos: 59425
                  length: 102
                pos: 59395
                length: 132
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: childType.isFunctionType()
                        children: []
                        pos: 59662
                        length: 26
                    children: []
                    pos: 59661
                    length: 28
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType functionType = childType.toMaybeFunctionType();
                    children: []
                    pos: 59698
                    length: 60
                  - type: local_variable_declaration
                    fields:
                      text: boolean isExtern = false;
                    children: []
                    pos: 59766
                    length: 25
                  - type: local_variable_declaration
                    fields:
                      text: JSDocInfo functionJSDocInfo = functionType.getJSDocInfo();
                    children: []
                    pos: 59798
                    length: 58
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: functionJSDocInfo
                                    children: []
                                    pos: 59867
                                    length: 17
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 59888
                                    length: 4
                                children: []
                                pos: 59867
                                length: 25
                              right:
                                type: not_equals
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: functionJSDocInfo.getAssociatedNode()
                                    children: []
                                    pos: 59907
                                    length: 37
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 59948
                                    length: 4
                                children: []
                                pos: 59907
                                length: 45
                            children: []
                            pos: 59867
                            length: 85
                        children: []
                        pos: 59865
                        length: 88
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: isExtern = functionJSDocInfo.getAssociatedNode().isFromExterns();
                        children: []
                        pos: 59964
                        length: 65
                      pos: 59954
                      length: 83
                    pos: 59863
                    length: 174
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: functionType.isConstructor()
                                    children: []
                                    pos: 60194
                                    length: 28
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: "!functionType.isNativeObjectType()"
                                    children: []
                                    pos: 60236
                                    length: 34
                                children: []
                                pos: 60194
                                length: 76
                              right:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: or
                                    fields:
                                      left:
                                        type: or
                                        fields:
                                          left:
                                            type: method_invocation
                                            fields:
                                              text: functionType.getReturnType().isUnknownType()
                                            children: []
                                            pos: 60285
                                            length: 44
                                          right:
                                            type: method_invocation
                                            fields:
                                              text: functionType.getReturnType().isVoidType()
                                            children: []
                                            pos: 60344
                                            length: 41
                                        children: []
                                        pos: 60285
                                        length: 100
                                      right:
                                        type: unary_expression
                                        fields:
                                          text: "!isExtern"
                                        children: []
                                        pos: 60400
                                        length: 9
                                    children: []
                                    pos: 60285
                                    length: 124
                                children: []
                                pos: 60284
                                length: 126
                            children: []
                            pos: 60194
                            length: 216
                        children: []
                        pos: 60193
                        length: 218
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: report(t, n, CONSTRUCTOR_NOT_CALLABLE, childType.toString());
                        children: []
                        pos: 60422
                        length: 61
                      pos: 60412
                      length: 79
                    pos: 60190
                    length: 301
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: and
                                    fields:
                                      left:
                                        type: method_invocation
                                        fields:
                                          text: functionType.isOrdinaryFunction()
                                        children: []
                                        pos: 60598
                                        length: 33
                                      right:
                                        type: unary_expression
                                        fields:
                                          text: "!functionType.getTypeOfThis().isUnknownType()"
                                        children: []
                                        pos: 60645
                                        length: 45
                                    children: []
                                    pos: 60598
                                    length: 92
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: |-
                                        !(functionType.getTypeOfThis().toObjectType() != null &&
                                                  functionType.getTypeOfThis().toObjectType().isNativeObjectType())
                                    children: []
                                    pos: 60704
                                    length: 132
                                children: []
                                pos: 60598
                                length: 238
                              right:
                                type: unary_expression
                                fields:
                                  text: |-
                                    !(child.isGetElem() ||
                                                child.isGetProp())
                                children: []
                                pos: 60850
                                length: 53
                            children: []
                            pos: 60598
                            length: 305
                        children: []
                        pos: 60597
                        length: 307
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: report(t, n, EXPECTED_THIS_TYPE, functionType.toString());
                        children: []
                        pos: 60915
                        length: 58
                      pos: 60905
                      length: 76
                    pos: 60594
                    length: 387
                  - type: expression_statement
                    fields:
                      text: visitParameterList(t, n, functionType);
                    children: []
                    pos: 60989
                    length: 39
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, n, functionType.getReturnType());
                    children: []
                    pos: 61035
                    length: 48
                  pos: 59690
                  length: 1399
                pos: 59658
                length: 1469
              pos: 59280
              length: 2060
          children: []
          pos: 59232
          length: 2108
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitParameterList
              children: []
              pos: 61421
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 61440
                length: 15
              pos: 61408
              length: 1386
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Iterator<Node> arguments = call.children().iterator();
                children: []
                pos: 61507
                length: 54
              - type: expression_statement
                fields:
                  text: arguments.next();
                children: []
                pos: 61566
                length: 17
              - type: local_variable_declaration
                fields:
                  text: Iterator<Node> parameters = functionType.getParameters().iterator();
                children: []
                pos: 61615
                length: 68
              - type: local_variable_declaration
                fields:
                  text: int ordinal = 0;
                children: []
                pos: 61688
                length: 16
              - type: local_variable_declaration
                fields:
                  text: Node parameter = null;
                children: []
                pos: 61709
                length: 22
              - type: local_variable_declaration
                fields:
                  text: Node argument = null;
                children: []
                pos: 61736
                length: 21
              - type: while_statement
                fields:
                  text: |-
                    while (arguments.hasNext() &&
                               (parameters.hasNext() ||
                                parameter != null && parameter.isVarArgs())) {
                          // If there are no parameters left in the list, then the while loop
                          // above implies that this must be a var_args function.
                          if (parameters.hasNext()) {
                            parameter = parameters.next();
                          }
                          argument = arguments.next();
                          ordinal++;

                          validator.expectArgumentMatchesParameter(t, argument,
                              getJSType(argument), getJSType(parameter), call, ordinal);
                        }
                children: []
                pos: 61762
                length: 529
              - type: local_variable_declaration
                fields:
                  text: int numArgs = call.getChildCount() - 1;
                children: []
                pos: 62297
                length: 39
              - type: local_variable_declaration
                fields:
                  text: int minArgs = functionType.getMinArguments();
                children: []
                pos: 62341
                length: 45
              - type: local_variable_declaration
                fields:
                  text: int maxArgs = functionType.getMaxArguments();
                children: []
                pos: 62391
                length: 45
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: greater_than
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: minArgs
                                children: []
                                pos: 62445
                                length: 7
                              right:
                                type: identifier
                                fields:
                                  text: numArgs
                                children: []
                                pos: 62455
                                length: 7
                            children: []
                            pos: 62445
                            length: 17
                          right:
                            type: less_than
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: maxArgs
                                children: []
                                pos: 62466
                                length: 7
                              right:
                                type: identifier
                                fields:
                                  text: numArgs
                                children: []
                                pos: 62476
                                length: 7
                            children: []
                            pos: 62466
                            length: 17
                        children: []
                        pos: 62445
                        length: 38
                    children: []
                    pos: 62444
                    length: 40
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        report(t, call, WRONG_ARGUMENT_COUNT,
                                      validator.getReadableJSTypeName(call.getFirstChild(), false),
                                      String.valueOf(numArgs), String.valueOf(minArgs),
                                      maxArgs != Integer.MAX_VALUE ?
                                      " and no more than " + maxArgs + " argument(s)" : "");
                    children: []
                    pos: 62493
                    length: 291
                  pos: 62485
                  length: 305
                pos: 62441
                length: 349
              pos: 61501
              length: 1293
          children: []
          pos: 61408
          length: 1386
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitReturn
              children: []
              pos: 63036
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 63048
                length: 15
              pos: 63023
              length: 897
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType jsType = getJSType(t.getEnclosingFunction());
                children: []
                pos: 63079
                length: 52
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: jsType.isFunctionType()
                        children: []
                        pos: 63141
                        length: 23
                    children: []
                    pos: 63140
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType functionType = jsType.toMaybeFunctionType();
                    children: []
                    pos: 63174
                    length: 57
                  - type: local_variable_declaration
                    fields:
                      text: JSType returnType = functionType.getReturnType();
                    children: []
                    pos: 63239
                    length: 49
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: returnType
                                children: []
                                pos: 63400
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 63414
                                length: 4
                            children: []
                            pos: 63400
                            length: 18
                        children: []
                        pos: 63399
                        length: 20
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: returnType = getNativeType(VOID_TYPE);
                        children: []
                        pos: 63430
                        length: 38
                      pos: 63420
                      length: 56
                    pos: 63396
                    length: 80
                  - type: local_variable_declaration
                    fields:
                      text: Node valueNode = n.getFirstChild();
                    children: []
                    pos: 63528
                    length: 35
                  - type: local_variable_declaration
                    fields:
                      text: JSType actualReturnType;
                    children: []
                    pos: 63570
                    length: 24
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: valueNode
                                children: []
                                pos: 63605
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 63618
                                length: 4
                            children: []
                            pos: 63605
                            length: 17
                        children: []
                        pos: 63604
                        length: 19
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: actualReturnType = getNativeType(VOID_TYPE);
                        children: []
                        pos: 63634
                        length: 44
                      - type: expression_statement
                        fields:
                          text: valueNode = n;
                        children: []
                        pos: 63687
                        length: 14
                      pos: 63624
                      length: 85
                    pos: 63601
                    length: 172
                  - type: expression_statement
                    fields:
                      text: |-
                        validator.expectCanAssignTo(t, valueNode, actualReturnType, returnType,
                                  "inconsistent return type");
                    children: []
                    pos: 63800
                    length: 110
                  pos: 63166
                  length: 750
                pos: 63137
                length: 779
              pos: 63073
              length: 847
          children: []
          pos: 63023
          length: 897
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitBinaryOperator
              children: []
              pos: 64328
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int op
                children: []
                pos: 64348
                length: 6
              pos: 64315
              length: 1682
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 64387
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = getJSType(left);
                children: []
                pos: 64422
                length: 34
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 64461
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = getJSType(right);
                children: []
                pos: 64496
                length: 36
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: op
                        children: []
                        pos: 64545
                        length: 2
                    children: []
                    pos: 64544
                    length: 4
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.ASSIGN_LSH:
                              case Token.ASSIGN_RSH:
                              case Token.LSH:
                              case Token.RSH:
                              case Token.ASSIGN_URSH:
                              case Token.URSH:
                                if (!leftType.matchesInt32Context()) {
                                  report(t, left, BIT_OPERATION,
                                           NodeUtil.opToStr(n.getType()), leftType.toString());
                                }
                                if (!rightType.matchesUint32Context()) {
                                  report(t, right, BIT_OPERATION,
                                           NodeUtil.opToStr(n.getType()), rightType.toString());
                                }
                                break;

                              case Token.ASSIGN_DIV:
                              case Token.ASSIGN_MOD:
                              case Token.ASSIGN_MUL:
                              case Token.ASSIGN_SUB:
                              case Token.DIV:
                              case Token.MOD:
                              case Token.MUL:
                              case Token.SUB:
                                validator.expectNumber(t, left, leftType, "left operand");
                                validator.expectNumber(t, right, rightType, "right operand");
                                break;

                              case Token.ASSIGN_BITAND:
                              case Token.ASSIGN_BITXOR:
                              case Token.ASSIGN_BITOR:
                              case Token.BITAND:
                              case Token.BITXOR:
                              case Token.BITOR:
                                validator.expectBitwiseable(t, left, leftType,
                                    "bad left operand to bitwise operator");
                                validator.expectBitwiseable(t, right, rightType,
                                    "bad right operand to bitwise operator");
                                break;

                              case Token.ASSIGN_ADD:
                              case Token.ADD:
                                break;

                              default:
                                report(t, n, UNEXPECTED_TOKEN, Token.name(op));
                            }
                    children: []
                    pos: 64549
                    length: 1421
                children: []
                pos: 64537
                length: 1433
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n);
                children: []
                pos: 65975
                length: 18
              pos: 64381
              length: 1616
          children: []
          pos: 64315
          length: 1682
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkEnumAlias
              children: []
              pos: 66454
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 66476
                length: 15
              pos: 66441
              length: 613
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: declInfo
                                children: []
                                pos: 66535
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 66547
                                length: 4
                            children: []
                            pos: 66535
                            length: 16
                          right:
                            type: unary_expression
                            fields:
                              text: "!declInfo.hasEnumParameterType()"
                            children: []
                            pos: 66555
                            length: 32
                        children: []
                        pos: 66535
                        length: 52
                    children: []
                    pos: 66534
                    length: 54
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 66597
                    length: 7
                  pos: 66589
                  length: 21
                pos: 66531
                length: 79
              - type: local_variable_declaration
                fields:
                  text: JSType valueType = getJSType(value);
                children: []
                pos: 66616
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!valueType.isEnumType()"
                        children: []
                        pos: 66661
                        length: 23
                    children: []
                    pos: 66660
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 66694
                    length: 7
                  pos: 66686
                  length: 21
                pos: 66657
                length: 50
              - type: local_variable_declaration
                fields:
                  text: EnumType valueEnumType = valueType.toMaybeEnumType();
                children: []
                pos: 66713
                length: 53
              - type: local_variable_declaration
                fields:
                  text: |-
                    JSType valueEnumPrimitiveType =
                            valueEnumType.getElementsType().getPrimitiveType();
                children: []
                pos: 66771
                length: 91
              - type: expression_statement
                fields:
                  text: |-
                    validator.expectCanAssignTo(t, value, valueEnumPrimitiveType,
                            declInfo.getEnumParameterType().evaluate(t.getScope(), typeRegistry),
                            "incompatible enum element types");
                children: []
                pos: 66867
                length: 183
              pos: 66525
              length: 529
          children: []
          pos: 66441
          length: 613
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getJSType
              children: []
              pos: 67179
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 67189
                length: 6
              pos: 67164
              length: 461
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType jsType = n.getJSType();
                children: []
                pos: 67203
                length: 30
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: jsType
                            children: []
                            pos: 67242
                            length: 6
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 67252
                            length: 4
                        children: []
                        pos: 67242
                        length: 14
                    children: []
                    pos: 67241
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return getNativeType(UNKNOWN_TYPE);
                    children: []
                    pos: 67546
                    length: 35
                  pos: 67258
                  length: 329
                pos: 67238
                length: 383
              pos: 67197
              length: 428
          children: []
          pos: 67164
          length: 461
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensureTyped
              children: []
              pos: 68077
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 68089
                length: 15
              pos: 68064
              length: 107
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n, getNativeType(UNKNOWN_TYPE));
                children: []
                pos: 68120
                length: 47
              pos: 68114
              length: 57
          children: []
          pos: 68064
          length: 107
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensureTyped
              children: []
              pos: 68188
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 68200
                length: 15
              pos: 68175
              length: 118
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n, getNativeType(type));
                children: []
                pos: 68250
                length: 39
              pos: 68244
              length: 49
          children: []
          pos: 68175
          length: 118
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensureTyped
              children: []
              pos: 69122
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 69134
                length: 15
              pos: 69109
              length: 1089
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    Preconditions.checkState(!n.isFunction() ||
                                type.isFunctionType() ||
                                type.isUnknownType());
                children: []
                pos: 69236
                length: 115
              - type: local_variable_declaration
                fields:
                  text: JSDocInfo info = n.getJSDocInfo();
                children: []
                pos: 69356
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: info
                            children: []
                            pos: 69399
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 69407
                            length: 4
                        children: []
                        pos: 69399
                        length: 12
                    children: []
                    pos: 69398
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: info.hasType()
                            children: []
                            pos: 69425
                            length: 14
                        children: []
                        pos: 69424
                        length: 16
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType infoType = info.getType().evaluate(t.getScope(),
                            typeRegistry);
                        children: []
                        pos: 69722
                        length: 70
                      - type: expression_statement
                        fields:
                          text: validator.expectCanCast(t, n, infoType, type);
                        children: []
                        pos: 69801
                        length: 46
                      - type: expression_statement
                        fields:
                          text: type = infoType;
                        children: []
                        pos: 69856
                        length: 16
                      pos: 69441
                      length: 439
                    pos: 69421
                    length: 459
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: info.isImplicitCast()
                                children: []
                                pos: 69892
                                length: 21
                              right:
                                type: unary_expression
                                fields:
                                  text: "!inExterns"
                                children: []
                                pos: 69917
                                length: 10
                            children: []
                            pos: 69892
                            length: 35
                        children: []
                        pos: 69891
                        length: 37
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: |-
                            String propName = n.isGetProp() ?
                                        n.getLastChild().getString() : "(missing)";
                        children: []
                        pos: 69939
                        length: 89
                      - type: expression_statement
                        fields:
                          text: |-
                            compiler.report(
                                        t.makeError(n, ILLEGAL_IMPLICIT_CAST, propName));
                        children: []
                        pos: 70037
                        length: 78
                      pos: 69929
                      length: 194
                    pos: 69888
                    length: 235
                  pos: 69413
                  length: 716
                pos: 69395
                length: 734
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: n.getJSType()
                            children: []
                            pos: 70139
                            length: 13
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 70156
                            length: 4
                        children: []
                        pos: 70139
                        length: 21
                    children: []
                    pos: 70138
                    length: 23
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: n.setJSType(type);
                    children: []
                    pos: 70170
                    length: 18
                  pos: 70162
                  length: 32
                pos: 70135
                length: 59
              pos: 69172
              length: 1026
          children: []
          pos: 69109
          length: 1089
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getTypedPercent
              children: []
              pos: 70329
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 70322
              length: 147
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int total = nullCount + unknownCount + typedCount;
                children: []
                pos: 70353
                length: 50
              - type: return_statement
                fields:
                  text: 'return (total == 0) ? 0.0 : (100.0 * typedCount) / total;'
                children: []
                pos: 70408
                length: 57
              pos: 70347
              length: 122
          children: []
          pos: 70322
          length: 147
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getNativeType
              children: []
              pos: 70488
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSTypeNative typeId
                children: []
                pos: 70502
                length: 19
              pos: 70473
              length: 102
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return typeRegistry.getNativeType(typeId);
                children: []
                pos: 70529
                length: 42
              pos: 70523
              length: 52
          children: []
          pos: 70473
          length: 102
        pos: 2352
        length: 68225
    children: []
    pos: 2352
    length: 68225
  pos: 0
  length: 70578
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: TypeCheck
        children: []
        pos: 2365
        length: 9
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNEXPECTED_TOKEN = DiagnosticType.error(
                    "JSC_INTERNAL_ERROR_UNEXPECTED_TOKEN",
                    "Internal Error: Don't know how to handle {0}");
          children: []
          pos: 2459
          length: 168
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType BAD_DELETE =
                    DiagnosticType.warning(
                        "JSC_BAD_DELETE_OPERAND",
                        "delete operator needs a reference operand");
          children: []
          pos: 2694
          length: 162
        - type: field_declaration
          fields:
            text: |-
              protected static final String OVERRIDING_PROTOTYPE_WITH_NON_OBJECT =
                    "overriding prototype with non-object";
          children: []
          pos: 2891
          length: 114
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType DETERMINISTIC_TEST =
                    DiagnosticType.warning(
                        "JSC_DETERMINISTIC_TEST",
                        "condition always evaluates to {2}\n" +
                        "left : {0}\n" +
                        "right: {1}");
          children: []
          pos: 3139
          length: 216
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType DETERMINISTIC_TEST_NO_RESULT =
                    DiagnosticType.warning(
                        "JSC_DETERMINISTIC_TEST_NO_RESULT",
                        "condition always evaluates to the same value\n" +
                        "left : {0}\n" +
                        "right: {1}");
          children: []
          pos: 3359
          length: 247
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INEXISTENT_ENUM_ELEMENT =
                    DiagnosticType.warning(
                        "JSC_INEXISTENT_ENUM_ELEMENT",
                        "element {0} does not exist on this enum");
          children: []
          pos: 3610
          length: 178
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INEXISTENT_PROPERTY =
                    DiagnosticType.disabled(
                        "JSC_INEXISTENT_PROPERTY",
                        "Property {0} never defined on {1}");
          children: []
          pos: 3885
          length: 165
        - type: field_declaration
          fields:
            text: |-
              protected static final DiagnosticType NOT_A_CONSTRUCTOR =
                    DiagnosticType.warning(
                        "JSC_NOT_A_CONSTRUCTOR",
                        "cannot instantiate non-constructor");
          children: []
          pos: 4054
          length: 171
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType BIT_OPERATION =
                    DiagnosticType.warning(
                        "JSC_BAD_TYPE_FOR_BIT_OPERATION",
                        "operator {0} cannot be applied to {1}");
          children: []
          pos: 4229
          length: 169
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType NOT_CALLABLE =
                    DiagnosticType.warning(
                        "JSC_NOT_FUNCTION_TYPE",
                        "{0} expressions are not callable");
          children: []
          pos: 4402
          length: 154
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType CONSTRUCTOR_NOT_CALLABLE =
                    DiagnosticType.warning(
                        "JSC_CONSTRUCTOR_NOT_CALLABLE",
                        "Constructor {0} should be called with the \"new\" keyword");
          children: []
          pos: 4560
          length: 198
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType FUNCTION_MASKS_VARIABLE =
                    DiagnosticType.warning(
                        "JSC_FUNCTION_MASKS_VARIABLE",
                        "function {0} masks variable (IE bug)");
          children: []
          pos: 4762
          length: 175
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType MULTIPLE_VAR_DEF = DiagnosticType.warning(
                    "JSC_MULTIPLE_VAR_DEF",
                    "declaration of multiple variables with shared type information");
          children: []
          pos: 4941
          length: 173
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ENUM_DUP = DiagnosticType.error("JSC_ENUM_DUP",
                    "enum element {0} already defined");
          children: []
          pos: 5118
          length: 118
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ENUM_NOT_CONSTANT =
                    DiagnosticType.warning("JSC_ENUM_NOT_CONSTANT",
                        "enum key {0} must be a syntactic constant");
          children: []
          pos: 5240
          length: 157
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INVALID_INTERFACE_MEMBER_DECLARATION =
                    DiagnosticType.warning(
                        "JSC_INVALID_INTERFACE_MEMBER_DECLARATION",
                        "interface members can only be empty property declarations,"
                        + " empty functions{0}");
          children: []
          pos: 5401
          length: 257
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INTERFACE_FUNCTION_NOT_EMPTY =
                    DiagnosticType.warning(
                        "JSC_INTERFACE_FUNCTION_NOT_EMPTY",
                        "interface member functions must have an empty body");
          children: []
          pos: 5662
          length: 199
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType CONFLICTING_EXTENDED_TYPE =
                    DiagnosticType.warning(
                        "JSC_CONFLICTING_EXTENDED_TYPE",
                        "{1} cannot extend this type; {0}s can only extend {0}s");
          children: []
          pos: 5865
          length: 197
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType CONFLICTING_IMPLEMENTED_TYPE =
                  DiagnosticType.warning(
                      "JSC_CONFLICTING_IMPLEMENTED_TYPE",
                      "{0} cannot implement this type; " +
                      "an interface can only extend, but not implement interfaces");
          children: []
          pos: 6066
          length: 246
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType BAD_IMPLEMENTED_TYPE =
                    DiagnosticType.warning(
                        "JSC_IMPLEMENTS_NON_INTERFACE",
                        "can only implement interfaces");
          children: []
          pos: 6316
          length: 166
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType HIDDEN_SUPERCLASS_PROPERTY =
                    DiagnosticType.warning(
                        "JSC_HIDDEN_SUPERCLASS_PROPERTY",
                        "property {0} already defined on superclass {1}; " +
                        "use @override to override it");
          children: []
          pos: 6486
          length: 236
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType HIDDEN_INTERFACE_PROPERTY =
                    DiagnosticType.warning(
                        "JSC_HIDDEN_INTERFACE_PROPERTY",
                        "property {0} already defined on interface {1}; " +
                        "use @override to override it");
          children: []
          pos: 6726
          length: 233
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType HIDDEN_SUPERCLASS_PROPERTY_MISMATCH =
                    DiagnosticType.warning("JSC_HIDDEN_SUPERCLASS_PROPERTY_MISMATCH",
                        "mismatch of the {0} property type and the type " +
                        "of the property it overrides from superclass {1}\n" +
                        "original: {2}\n" +
                        "override: {3}");
          children: []
          pos: 6963
          length: 322
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNKNOWN_OVERRIDE =
                    DiagnosticType.warning(
                        "JSC_UNKNOWN_OVERRIDE",
                        "property {0} not defined on any superclass of {1}");
          children: []
          pos: 7289
          length: 174
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INTERFACE_METHOD_OVERRIDE =
                    DiagnosticType.warning(
                        "JSC_INTERFACE_METHOD_OVERRIDE",
                        "property {0} is already defined by the {1} extended interface");
          children: []
          pos: 7467
          length: 204
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNKNOWN_EXPR_TYPE =
                    DiagnosticType.warning("JSC_UNKNOWN_EXPR_TYPE",
                        "could not determine the type of this expression");
          children: []
          pos: 7675
          length: 163
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNRESOLVED_TYPE =
                    DiagnosticType.warning("JSC_UNRESOLVED_TYPE",
                        "could not resolve the name {0} to a type");
          children: []
          pos: 7842
          length: 152
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType WRONG_ARGUMENT_COUNT =
                    DiagnosticType.warning(
                        "JSC_WRONG_ARGUMENT_COUNT",
                        "Function {0}: called with {1} argument(s). " +
                        "Function requires at least {2} argument(s){3}.");
          children: []
          pos: 7998
          length: 237
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ILLEGAL_IMPLICIT_CAST =
                    DiagnosticType.warning(
                        "JSC_ILLEGAL_IMPLICIT_CAST",
                        "Illegal annotation on {0}. @implicitCast may only be used in " +
                        "externs.");
          children: []
          pos: 8239
          length: 219
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INCOMPATIBLE_EXTENDED_PROPERTY_TYPE =
                    DiagnosticType.warning(
                        "JSC_INCOMPATIBLE_EXTENDED_PROPERTY_TYPE",
                        "Interface {0} has a property {1} with incompatible types in " +
                        "its super interfaces {2} and {3}");
          children: []
          pos: 8462
          length: 270
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType EXPECTED_THIS_TYPE =
                    DiagnosticType.warning(
                        "JSC_EXPECTED_THIS_TYPE",
                        "\"{0}\" must be called with a \"this\" type");
          children: []
          pos: 8736
          length: 172
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType IN_USED_WITH_STRUCT =
                    DiagnosticType.warning("JSC_IN_USED_WITH_STRUCT",
                                           "Cannot use the IN operator with structs");
          children: []
          pos: 8912
          length: 178
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ILLEGAL_PROPERTY_CREATION =
                    DiagnosticType.warning("JSC_ILLEGAL_PROPERTY_CREATION",
                                           "Cannot add a property to a struct instance " +
                                           "after it is constructed.");
          children: []
          pos: 9094
          length: 252
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ILLEGAL_OBJLIT_KEY =
                    DiagnosticType.warning(
                        "ILLEGAL_OBJLIT_KEY",
                        "Illegal key, the object literal is a {0}");
          children: []
          pos: 9350
          length: 165
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticGroup ALL_DIAGNOSTICS = new DiagnosticGroup(
                    DETERMINISTIC_TEST,
                    DETERMINISTIC_TEST_NO_RESULT,
                    INEXISTENT_ENUM_ELEMENT,
                    INEXISTENT_PROPERTY,
                    NOT_A_CONSTRUCTOR,
                    BIT_OPERATION,
                    NOT_CALLABLE,
                    CONSTRUCTOR_NOT_CALLABLE,
                    FUNCTION_MASKS_VARIABLE,
                    MULTIPLE_VAR_DEF,
                    ENUM_DUP,
                    ENUM_NOT_CONSTANT,
                    INVALID_INTERFACE_MEMBER_DECLARATION,
                    INTERFACE_FUNCTION_NOT_EMPTY,
                    CONFLICTING_EXTENDED_TYPE,
                    CONFLICTING_IMPLEMENTED_TYPE,
                    BAD_IMPLEMENTED_TYPE,
                    HIDDEN_SUPERCLASS_PROPERTY,
                    HIDDEN_INTERFACE_PROPERTY,
                    HIDDEN_SUPERCLASS_PROPERTY_MISMATCH,
                    UNKNOWN_OVERRIDE,
                    INTERFACE_METHOD_OVERRIDE,
                    UNKNOWN_EXPR_TYPE,
                    UNRESOLVED_TYPE,
                    WRONG_ARGUMENT_COUNT,
                    ILLEGAL_IMPLICIT_CAST,
                    INCOMPATIBLE_EXTENDED_PROPERTY_TYPE,
                    EXPECTED_THIS_TYPE,
                    IN_USED_WITH_STRUCT,
                    ILLEGAL_PROPERTY_CREATION,
                    ILLEGAL_OBJLIT_KEY,
                    RhinoErrorReporter.TYPE_PARSE_ERROR,
                    TypedScopeCreator.UNKNOWN_LENDS,
                    TypedScopeCreator.LENDS_ON_NON_OBJECT,
                    TypedScopeCreator.CTOR_INITIALIZER,
                    TypedScopeCreator.IFACE_INITIALIZER,
                    FunctionTypeBuilder.THIS_TYPE_NON_OBJECT);
          children: []
          pos: 9519
          length: 1246
        - type: field_declaration
          fields:
            text: private final AbstractCompiler compiler;
          children: []
          pos: 10769
          length: 40
        - type: field_declaration
          fields:
            text: private final TypeValidator validator;
          children: []
          pos: 10812
          length: 38
        - type: field_declaration
          fields:
            text: private final ReverseAbstractInterpreter reverseInterpreter;
          children: []
          pos: 10854
          length: 60
        - type: field_declaration
          fields:
            text: private final JSTypeRegistry typeRegistry;
          children: []
          pos: 10918
          length: 42
        - type: field_declaration
          fields:
            text: private Scope topScope;
          children: []
          pos: 10963
          length: 23
        - type: field_declaration
          fields:
            text: private MemoizedScopeCreator scopeCreator;
          children: []
          pos: 10990
          length: 42
        - type: field_declaration
          fields:
            text: private final CheckLevel reportMissingOverride;
          children: []
          pos: 11036
          length: 47
        - type: field_declaration
          fields:
            text: private final CheckLevel reportUnknownTypes;
          children: []
          pos: 11086
          length: 44
        - type: field_declaration
          fields:
            text: private boolean reportMissingProperties = true;
          children: []
          pos: 11230
          length: 47
        - type: field_declaration
          fields:
            text: private InferJSDocInfo inferJSDocInfo = null;
          children: []
          pos: 11281
          length: 45
        - type: field_declaration
          fields:
            text: private int typedCount = 0;
          children: []
          pos: 11407
          length: 27
        - type: field_declaration
          fields:
            text: private int nullCount = 0;
          children: []
          pos: 11437
          length: 26
        - type: field_declaration
          fields:
            text: private int unknownCount = 0;
          children: []
          pos: 11466
          length: 29
        - type: field_declaration
          fields:
            text: private boolean inExterns;
          children: []
          pos: 11498
          length: 26
        - type: field_declaration
          fields:
            text: private int noTypeCheckSection = 0;
          children: []
          pos: 11615
          length: 35
        - type: constructor_declaration
          fields:
            text: |-
              public TypeCheck(AbstractCompiler compiler,
                    ReverseAbstractInterpreter reverseInterpreter,
                    JSTypeRegistry typeRegistry,
                    Scope topScope,
                    MemoizedScopeCreator scopeCreator,
                    CheckLevel reportMissingOverride,
                    CheckLevel reportUnknownTypes) {
                  this.compiler = compiler;
                  this.validator = compiler.getTypeValidator();
                  this.reverseInterpreter = reverseInterpreter;
                  this.typeRegistry = typeRegistry;
                  this.topScope = topScope;
                  this.scopeCreator = scopeCreator;
                  this.reportMissingOverride = reportMissingOverride;
                  this.reportUnknownTypes = reportUnknownTypes;
                  this.inferJSDocInfo = new InferJSDocInfo(compiler);
                }
          children: []
          pos: 11654
          length: 675
        - type: constructor_declaration
          fields:
            text: |-
              public TypeCheck(AbstractCompiler compiler,
                    ReverseAbstractInterpreter reverseInterpreter,
                    JSTypeRegistry typeRegistry,
                    CheckLevel reportMissingOverride,
                    CheckLevel reportUnknownTypes) {
                  this(compiler, reverseInterpreter, typeRegistry, null, null,
                      reportMissingOverride, reportUnknownTypes);
                }
          children: []
          pos: 12333
          length: 331
        - type: constructor_declaration
          fields:
            text: |-
              TypeCheck(AbstractCompiler compiler,
                    ReverseAbstractInterpreter reverseInterpreter,
                    JSTypeRegistry typeRegistry) {
                  this(compiler, reverseInterpreter, typeRegistry, null, null,
                       CheckLevel.WARNING, CheckLevel.OFF);
                }
          children: []
          pos: 12668
          length: 241
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: reportMissingProperties
              children: []
              pos: 13000
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: boolean report
                children: []
                pos: 13024
                length: 14
              pos: 12990
              length: 110
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: reportMissingProperties = report;
                children: []
                pos: 13046
                length: 33
              - type: return_statement
                fields:
                  text: return this;
                children: []
                pos: 13084
                length: 12
              pos: 13040
              length: 60
          children: []
          pos: 12990
          length: 110
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: process
              children: []
              pos: 13377
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node externsRoot
                children: []
                pos: 13385
                length: 16
              pos: 13353
              length: 447
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(scopeCreator);
                children: []
                pos: 13422
                length: 41
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(topScope);
                children: []
                pos: 13468
                length: 37
              - type: local_variable_declaration
                fields:
                  text: Node externsAndJs = jsRoot.getParent();
                children: []
                pos: 13511
                length: 39
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(externsAndJs != null);
                children: []
                pos: 13555
                length: 47
              - type: expression_statement
                fields:
                  text: |-
                    Preconditions.checkState(
                            externsRoot == null || externsAndJs.hasChild(externsRoot));
                children: []
                pos: 13607
                length: 93
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: externsRoot
                            children: []
                            pos: 13710
                            length: 11
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 13725
                            length: 4
                        children: []
                        pos: 13710
                        length: 19
                    children: []
                    pos: 13709
                    length: 21
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: check(externsRoot, true);
                    children: []
                    pos: 13739
                    length: 25
                  pos: 13731
                  length: 39
                pos: 13706
                length: 64
              - type: expression_statement
                fields:
                  text: check(jsRoot, false);
                children: []
                pos: 13775
                length: 21
              pos: 13416
              length: 384
          children: []
          pos: 13353
          length: 447
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: processForTesting
              children: []
              pos: 13875
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node externsRoot
                children: []
                pos: 13893
                length: 16
              pos: 13862
              length: 639
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(scopeCreator == null);
                children: []
                pos: 13930
                length: 47
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(topScope == null);
                children: []
                pos: 13982
                length: 43
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(jsRoot.getParent() != null);
                children: []
                pos: 14031
                length: 53
              - type: local_variable_declaration
                fields:
                  text: Node externsAndJsRoot = jsRoot.getParent();
                children: []
                pos: 14089
                length: 43
              - type: expression_statement
                fields:
                  text: scopeCreator = new MemoizedScopeCreator(new TypedScopeCreator(compiler));
                children: []
                pos: 14138
                length: 73
              - type: expression_statement
                fields:
                  text: topScope = scopeCreator.createScope(externsAndJsRoot, null);
                children: []
                pos: 14216
                length: 60
              - type: local_variable_declaration
                fields:
                  text: |-
                    TypeInferencePass inference = new TypeInferencePass(compiler,
                            reverseInterpreter, topScope, scopeCreator);
                children: []
                pos: 14282
                length: 114
              - type: expression_statement
                fields:
                  text: inference.process(externsRoot, jsRoot);
                children: []
                pos: 14402
                length: 39
              - type: expression_statement
                fields:
                  text: process(externsRoot, jsRoot);
                children: []
                pos: 14446
                length: 29
              - type: return_statement
                fields:
                  text: return topScope;
                children: []
                pos: 14481
                length: 16
              pos: 13924
              length: 577
          children: []
          pos: 13862
          length: 639
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: check
              children: []
              pos: 14518
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node node
                children: []
                pos: 14524
                length: 9
              pos: 14506
              length: 349
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(node);
                children: []
                pos: 14558
                length: 33
              - type: local_variable_declaration
                fields:
                  text: NodeTraversal t = new NodeTraversal(compiler, this, scopeCreator);
                children: []
                pos: 14597
                length: 66
              - type: expression_statement
                fields:
                  text: inExterns = externs;
                children: []
                pos: 14668
                length: 20
              - type: expression_statement
                fields:
                  text: t.traverseWithScope(node, topScope);
                children: []
                pos: 14693
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: externs
                        children: []
                        pos: 14738
                        length: 7
                    children: []
                    pos: 14737
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: inferJSDocInfo.process(node, null);
                    children: []
                    pos: 14755
                    length: 35
                  pos: 14747
                  length: 49
                pos: 14734
                length: 117
              pos: 14552
              length: 303
          children: []
          pos: 14506
          length: 349
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkNoTypeCheckSection
              children: []
              pos: 14873
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 14897
                length: 6
              pos: 14860
              length: 537
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 14941
                        length: 11
                    children: []
                    pos: 14940
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.SCRIPT:
                              case Token.BLOCK:
                              case Token.VAR:
                              case Token.FUNCTION:
                              case Token.ASSIGN:
                                JSDocInfo info = n.getJSDocInfo();
                                if (info != null && info.isNoTypeCheck()) {
                                  if (enterSection) {
                                    noTypeCheckSection++;
                                  } else {
                                    noTypeCheckSection--;
                                  }
                                }
                                validator.setShouldReport(noTypeCheckSection == 0);
                                break;
                            }
                    children: []
                    pos: 14954
                    length: 439
                children: []
                pos: 14933
                length: 460
              pos: 14927
              length: 470
          children: []
          pos: 14860
          length: 537
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: report
              children: []
              pos: 15414
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 15421
                length: 15
              pos: 15401
              length: 195
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: noTypeCheckSection
                            children: []
                            pos: 15514
                            length: 18
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 15536
                            length: 1
                        children: []
                        pos: 15514
                        length: 23
                    children: []
                    pos: 15513
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: t.report(n, diagnosticType, arguments);
                    children: []
                    pos: 15547
                    length: 39
                  pos: 15539
                  length: 53
                pos: 15510
                length: 82
              pos: 15504
              length: 92
          children: []
          pos: 15401
          length: 195
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: shouldTraverse
              children: []
              pos: 15627
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 15649
                length: 15
              pos: 15600
              length: 1141
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: checkNoTypeCheckSection(n, true);
                children: []
                pos: 15693
                length: 33
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 15739
                        length: 11
                    children: []
                    pos: 15738
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.FUNCTION:
                                // normal type checking
                                final Scope outerScope = t.getScope();
                                final String functionPrivateName = n.getFirstChild().getString();
                                if (functionPrivateName != null && functionPrivateName.length() > 0 &&
                                    outerScope.isDeclared(functionPrivateName, false) &&
                                    // Ideally, we would want to check whether the type in the scope
                                    // differs from the type being defined, but then the extern
                                    // redeclarations of built-in types generates spurious warnings.
                                    !(outerScope.getVar(
                                        functionPrivateName).getType() instanceof FunctionType)) {
                                  report(t, n, FUNCTION_MASKS_VARIABLE, functionPrivateName);
                                }

                                // TODO(user): Only traverse the function's body. The function's
                                // name and arguments are traversed by the scope creator, and ideally
                                // should not be traversed by the type checker.
                                break;
                            }
                    children: []
                    pos: 15752
                    length: 968
                children: []
                pos: 15731
                length: 989
              - type: return_statement
                fields:
                  text: return true;
                children: []
                pos: 16725
                length: 12
              pos: 15687
              length: 1054
          children: []
          pos: 15600
          length: 1141
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visit
              children: []
              pos: 17214
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 17220
                length: 15
              pos: 17190
              length: 11079
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType childType;
                children: []
                pos: 17264
                length: 17
              - type: local_variable_declaration
                fields:
                  text: JSType leftType, rightType;
                children: []
                pos: 17286
                length: 27
              - type: local_variable_declaration
                fields:
                  text: Node left, right;
                children: []
                pos: 17318
                length: 17
              - type: local_variable_declaration
                fields:
                  text: boolean typeable = true;
                children: []
                pos: 17406
                length: 24
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 17444
                        length: 11
                    children: []
                    pos: 17443
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.CAST:
                                Node expr = n.getFirstChild();
                                ensureTyped(t, n, getJSType(expr));

                                // If the cast, tightens the type apply it, so it is available post
                                // normalization.
                                JSType castType = getJSType(n);
                                JSType exprType = getJSType(expr);
                                if (castType.isSubtype(exprType)) {
                                  expr.setJSType(castType);
                                }
                                break;

                              case Token.NAME:
                                typeable = visitName(t, n, parent);
                                break;

                              case Token.PARAM_LIST:
                                typeable = false;
                                break;

                              case Token.COMMA:
                                ensureTyped(t, n, getJSType(n.getLastChild()));
                                break;

                              case Token.TRUE:
                              case Token.FALSE:
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.THIS:
                                ensureTyped(t, n, t.getScope().getTypeOfThis());
                                break;

                              case Token.NULL:
                                ensureTyped(t, n, NULL_TYPE);
                                break;

                              case Token.NUMBER:
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.STRING:
                                ensureTyped(t, n, STRING_TYPE);
                                break;

                              case Token.STRING_KEY:
                                typeable = false;
                                break;

                              case Token.GETTER_DEF:
                              case Token.SETTER_DEF:
                                // Object literal keys are handled with OBJECTLIT
                                break;

                              case Token.ARRAYLIT:
                                ensureTyped(t, n, ARRAY_TYPE);
                                break;

                              case Token.REGEXP:
                                ensureTyped(t, n, REGEXP_TYPE);
                                break;

                              case Token.GETPROP:
                                visitGetProp(t, n, parent);
                                typeable = !(parent.isAssign() &&
                                             parent.getFirstChild() == n);
                                break;

                              case Token.GETELEM:
                                visitGetElem(t, n);
                                // The type of GETELEM is always unknown, so no point counting that.
                                // If that unknown leaks elsewhere (say by an assignment to another
                                // variable), then it will be counted.
                                typeable = false;
                                break;

                              case Token.VAR:
                                visitVar(t, n);
                                typeable = false;
                                break;

                              case Token.NEW:
                                visitNew(t, n);
                                break;

                              case Token.CALL:
                                visitCall(t, n);
                                typeable = !parent.isExprResult();
                                break;

                              case Token.RETURN:
                                visitReturn(t, n);
                                typeable = false;
                                break;

                              case Token.DEC:
                              case Token.INC:
                                left = n.getFirstChild();
                                checkPropCreation(t, left);
                                validator.expectNumber(t, left, getJSType(left), "increment/decrement");
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.NOT:
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.VOID:
                                ensureTyped(t, n, VOID_TYPE);
                                break;

                              case Token.TYPEOF:
                                ensureTyped(t, n, STRING_TYPE);
                                break;

                              case Token.BITNOT:
                                childType = getJSType(n.getFirstChild());
                                if (!childType.matchesInt32Context()) {
                                  report(t, n, BIT_OPERATION, NodeUtil.opToStr(n.getType()),
                                      childType.toString());
                                }
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.POS:
                              case Token.NEG:
                                left = n.getFirstChild();
                                validator.expectNumber(t, left, getJSType(left), "sign operator");
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.EQ:
                              case Token.NE:
                              case Token.SHEQ:
                              case Token.SHNE: {
                                left = n.getFirstChild();
                                right = n.getLastChild();

                                if (left.isTypeOf()) {
                                  if (right.isString()) {
                                    checkTypeofString(t, right, right.getString());
                                  }
                                } else if (right.isTypeOf() && left.isString()) {
                                  checkTypeofString(t, left, left.getString());
                                }

                                leftType = getJSType(left);
                                rightType = getJSType(right);

                                // We do not want to warn about explicit comparisons to VOID. People
                                // often do this if they think their type annotations screwed up.
                                //
                                // We do want to warn about cases where people compare things like
                                // (Array|null) == (Function|null)
                                // because it probably means they screwed up.
                                //
                                // This heuristic here is not perfect, but should catch cases we
                                // care about without too many false negatives.
                                JSType leftTypeRestricted = leftType.restrictByNotNullOrUndefined();
                                JSType rightTypeRestricted = rightType.restrictByNotNullOrUndefined();

                                TernaryValue result = TernaryValue.UNKNOWN;
                                if (n.getType() == Token.EQ || n.getType() == Token.NE) {
                                  result = leftTypeRestricted.testForEquality(rightTypeRestricted);
                                  if (n.isNE()) {
                                    result = result.not();
                                  }
                                } else {
                                  // SHEQ or SHNE
                                  if (!leftTypeRestricted.canTestForShallowEqualityWith(
                                          rightTypeRestricted)) {
                                    result = n.getType() == Token.SHEQ ?
                                        TernaryValue.FALSE : TernaryValue.TRUE;
                                  }
                                }

                                if (result != TernaryValue.UNKNOWN) {
                                  report(t, n, DETERMINISTIC_TEST, leftType.toString(),
                                      rightType.toString(), result.toString());
                                }
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;
                              }

                              case Token.LT:
                              case Token.LE:
                              case Token.GT:
                              case Token.GE:
                                leftType = getJSType(n.getFirstChild());
                                rightType = getJSType(n.getLastChild());
                                if (rightType.isNumber()) {
                                  validator.expectNumber(
                                      t, n, leftType, "left side of numeric comparison");
                                } else if (leftType.isNumber()) {
                                  validator.expectNumber(
                                      t, n, rightType, "right side of numeric comparison");
                                } else if (leftType.matchesNumberContext() &&
                                           rightType.matchesNumberContext()) {
                                  // OK.
                                } else {
                                  // Whether the comparison is numeric will be determined at runtime
                                  // each time the expression is evaluated. Regardless, both operands
                                  // should match a string context.
                                  String message = "left side of comparison";
                                  validator.expectString(t, n, leftType, message);
                                  validator.expectNotNullOrUndefined(
                                      t, n, leftType, message, getNativeType(STRING_TYPE));
                                  message = "right side of comparison";
                                  validator.expectString(t, n, rightType, message);
                                  validator.expectNotNullOrUndefined(
                                      t, n, rightType, message, getNativeType(STRING_TYPE));
                                }
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.IN:
                                left = n.getFirstChild();
                                right = n.getLastChild();
                                rightType = getJSType(right);
                                validator.expectString(t, left, getJSType(left), "left side of 'in'");
                                validator.expectObject(t, n, rightType, "'in' requires an object");
                                if (rightType.isStruct()) {
                                  report(t, right, IN_USED_WITH_STRUCT);
                                }
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.INSTANCEOF:
                                left = n.getFirstChild();
                                right = n.getLastChild();
                                rightType = getJSType(right).restrictByNotNullOrUndefined();
                                validator.expectAnyObject(
                                    t, left, getJSType(left), "deterministic instanceof yields false");
                                validator.expectActualObject(
                                    t, right, rightType, "instanceof requires an object");
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.ASSIGN:
                                visitAssign(t, n);
                                typeable = false;
                                break;

                              case Token.ASSIGN_LSH:
                              case Token.ASSIGN_RSH:
                              case Token.ASSIGN_URSH:
                              case Token.ASSIGN_DIV:
                              case Token.ASSIGN_MOD:
                              case Token.ASSIGN_BITOR:
                              case Token.ASSIGN_BITXOR:
                              case Token.ASSIGN_BITAND:
                              case Token.ASSIGN_SUB:
                              case Token.ASSIGN_ADD:
                              case Token.ASSIGN_MUL:
                                checkPropCreation(t, n.getFirstChild());
                                // fall through

                              case Token.LSH:
                              case Token.RSH:
                              case Token.URSH:
                              case Token.DIV:
                              case Token.MOD:
                              case Token.BITOR:
                              case Token.BITXOR:
                              case Token.BITAND:
                              case Token.SUB:
                              case Token.ADD:
                              case Token.MUL:
                                visitBinaryOperator(n.getType(), t, n);
                                break;

                              case Token.DELPROP:
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.CASE:
                                JSType switchType = getJSType(parent.getFirstChild());
                                JSType caseType = getJSType(n.getFirstChild());
                                validator.expectSwitchMatchesCase(t, n, switchType, caseType);
                                typeable = false;
                                break;

                              case Token.WITH: {
                                Node child = n.getFirstChild();
                                childType = getJSType(child);
                                validator.expectObject(t, child, childType, "with requires an object");
                                typeable = false;
                                break;
                              }

                              case Token.FUNCTION:
                                visitFunction(t, n);
                                break;

                              // These nodes have no interesting type behavior.
                              case Token.LABEL:
                              case Token.LABEL_NAME:
                              case Token.SWITCH:
                              case Token.BREAK:
                              case Token.CATCH:
                              case Token.TRY:
                              case Token.SCRIPT:
                              case Token.EXPR_RESULT:
                              case Token.BLOCK:
                              case Token.EMPTY:
                              case Token.DEFAULT_CASE:
                              case Token.CONTINUE:
                              case Token.DEBUGGER:
                              case Token.THROW:
                                typeable = false;
                                break;

                              // These nodes require data flow analysis.
                              case Token.DO:
                              case Token.IF:
                              case Token.WHILE:
                                typeable = false;
                                break;

                              case Token.FOR:
                                if (NodeUtil.isForIn(n)) {
                                  Node obj = n.getChildAtIndex(1);
                                  if (getJSType(obj).isStruct()) {
                                    report(t, obj, IN_USED_WITH_STRUCT);
                                  }
                                }
                                typeable = false;
                                break;

                              // These nodes are typed during the type inference.
                              case Token.AND:
                              case Token.HOOK:
                              case Token.OBJECTLIT:
                              case Token.OR:
                                if (n.getJSType() != null) { // If we didn't run type inference.
                                  ensureTyped(t, n);
                                } else {
                                  // If this is an enum, then give that type to the objectlit as well.
                                  if ((n.isObjectLit())
                                      && (parent.getJSType() instanceof EnumType)) {
                                    ensureTyped(t, n, parent.getJSType());
                                  } else {
                                    ensureTyped(t, n);
                                  }
                                }
                                if (n.isObjectLit()) {
                                  JSType typ = getJSType(n);
                                  for (Node key : n.children()) {
                                    visitObjLitKey(t, key, n, typ);
                                  }
                                }
                                break;

                              default:
                                report(t, n, UNEXPECTED_TOKEN, Token.name(n.getType()));
                                ensureTyped(t, n);
                                break;
                            }
                    children: []
                    pos: 17457
                    length: 10586
                children: []
                pos: 17436
                length: 10607
              - type: expression_statement
                fields:
                  text: typeable = typeable && !inExterns;
                children: []
                pos: 28126
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: typeable
                        children: []
                        pos: 28170
                        length: 8
                    children: []
                    pos: 28169
                    length: 10
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: doPercentTypedAccounting(t, n);
                    children: []
                    pos: 28188
                    length: 31
                  pos: 28180
                  length: 45
                pos: 28166
                length: 59
              - type: expression_statement
                fields:
                  text: checkNoTypeCheckSection(n, false);
                children: []
                pos: 28231
                length: 34
              pos: 17258
              length: 11011
          children: []
          pos: 17190
          length: 11079
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkTypeofString
              children: []
              pos: 28286
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 28304
                length: 15
              pos: 28273
              length: 317
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: |-
                            !(s.equals("number") || s.equals("string") || s.equals("boolean") ||
                                      s.equals("undefined") || s.equals("function") ||
                                      s.equals("object") || s.equals("unknown"))
                        children: []
                        pos: 28349
                        length: 180
                    children: []
                    pos: 28348
                    length: 182
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: validator.expectValidTypeofName(t, n, s);
                    children: []
                    pos: 28539
                    length: 41
                  pos: 28531
                  length: 55
                pos: 28345
                length: 241
              pos: 28339
              length: 251
          children: []
          pos: 28273
          length: 317
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: doPercentTypedAccounting
              children: []
              pos: 28713
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 28738
                length: 15
              pos: 28700
              length: 384
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 28769
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: type
                            children: []
                            pos: 28806
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 28814
                            length: 4
                        children: []
                        pos: 28806
                        length: 12
                    children: []
                    pos: 28805
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: nullCount++;
                    children: []
                    pos: 28828
                    length: 12
                  pos: 28820
                  length: 26
                pos: 28802
                length: 278
              pos: 28763
              length: 321
          children: []
          pos: 28700
          length: 384
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitAssign
              children: []
              pos: 29421
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 29433
                length: 15
              pos: 29408
              length: 4348
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSDocInfo info = assign.getJSDocInfo();
                children: []
                pos: 29469
                length: 39
              - type: local_variable_declaration
                fields:
                  text: Node lvalue = assign.getFirstChild();
                children: []
                pos: 29513
                length: 37
              - type: local_variable_declaration
                fields:
                  text: Node rvalue = assign.getLastChild();
                children: []
                pos: 29555
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: lvalue.isGetProp()
                        children: []
                        pos: 29673
                        length: 18
                    children: []
                    pos: 29672
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Node object = lvalue.getFirstChild();
                    children: []
                    pos: 29701
                    length: 37
                  - type: local_variable_declaration
                    fields:
                      text: JSType objectJsType = getJSType(object);
                    children: []
                    pos: 29745
                    length: 40
                  - type: local_variable_declaration
                    fields:
                      text: Node property = lvalue.getLastChild();
                    children: []
                    pos: 29792
                    length: 38
                  - type: local_variable_declaration
                    fields:
                      text: String pname = property.getString();
                    children: []
                    pos: 29837
                    length: 36
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: object.isGetProp()
                            children: []
                            pos: 30005
                            length: 18
                        children: []
                        pos: 30004
                        length: 20
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType jsType = getJSType(object.getFirstChild());
                        children: []
                        pos: 30035
                        length: 50
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: jsType.isInterface()
                                    children: []
                                    pos: 30098
                                    length: 20
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: object.getLastChild().getString().equals("prototype")
                                    children: []
                                    pos: 30134
                                    length: 53
                                children: []
                                pos: 30098
                                length: 89
                            children: []
                            pos: 30097
                            length: 91
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: visitInterfaceGetprop(t, assign, object, pname,
                                lvalue, rvalue);
                            children: []
                            pos: 30201
                            length: 64
                          pos: 30189
                          length: 86
                        pos: 30094
                        length: 181
                      pos: 30025
                      length: 258
                    pos: 30001
                    length: 282
                  - type: expression_statement
                    fields:
                      text: checkEnumAlias(t, info, rvalue);
                    children: []
                    pos: 30291
                    length: 32
                  - type: expression_statement
                    fields:
                      text: checkPropCreation(t, lvalue);
                    children: []
                    pos: 30330
                    length: 29
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: pname.equals("prototype")
                            children: []
                            pos: 30619
                            length: 25
                        children: []
                        pos: 30618
                        length: 27
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: not_equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: objectJsType
                                        children: []
                                        pos: 30660
                                        length: 12
                                      right:
                                        type: null_literal
                                        fields: {}
                                        children: []
                                        pos: 30676
                                        length: 4
                                    children: []
                                    pos: 30660
                                    length: 20
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: objectJsType.isFunctionType()
                                    children: []
                                    pos: 30684
                                    length: 29
                                children: []
                                pos: 30660
                                length: 53
                            children: []
                            pos: 30659
                            length: 55
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: local_variable_declaration
                            fields:
                              text: FunctionType functionType = objectJsType.toMaybeFunctionType();
                            children: []
                            pos: 30727
                            length: 63
                          - type: if_statement
                            fields:
                              condition:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: method_invocation
                                    fields:
                                      text: functionType.isConstructor()
                                    children: []
                                    pos: 30805
                                    length: 28
                                children: []
                                pos: 30804
                                length: 30
                            children:
                            - type: block
                              fields: {}
                              children:
                              - type: local_variable_declaration
                                fields:
                                  text: JSType rvalueType = rvalue.getJSType();
                                children: []
                                pos: 30849
                                length: 39
                              - type: expression_statement
                                fields:
                                  text: |-
                                    validator.expectObject(t, rvalue, rvalueType,
                                                    OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
                                children: []
                                pos: 30901
                                length: 100
                              - type: if_statement
                                fields:
                                  condition:
                                    type: parenthesized_expression
                                    fields:
                                      expression:
                                        type: and
                                        fields:
                                          left:
                                            type: method_invocation
                                            fields:
                                              text: functionType.makesStructs()
                                            children: []
                                            pos: 31095
                                            length: 27
                                          right:
                                            type: unary_expression
                                            fields:
                                              text: "!rvalueType.isStruct()"
                                            children: []
                                            pos: 31126
                                            length: 22
                                        children: []
                                        pos: 31095
                                        length: 53
                                    children: []
                                    pos: 31094
                                    length: 55
                                children:
                                - type: block
                                  fields: {}
                                  children:
                                  - type: local_variable_declaration
                                    fields:
                                      text: String funName = functionType.getTypeOfThis().toString();
                                    children: []
                                    pos: 31166
                                    length: 57
                                  - type: expression_statement
                                    fields:
                                      text: |-
                                        compiler.report(t.makeError(assign, CONFLICTING_EXTENDED_TYPE,
                                                                                  "struct", funName));
                                    children: []
                                    pos: 31238
                                    length: 125
                                  pos: 31150
                                  length: 227
                                pos: 31091
                                length: 286
                              - type: return_statement
                                fields:
                                  text: return;
                                children: []
                                pos: 31390
                                length: 7
                              pos: 30835
                              length: 574
                            pos: 30801
                            length: 608
                          pos: 30715
                          length: 704
                        pos: 30656
                        length: 763
                      pos: 30646
                      length: 781
                    pos: 30615
                    length: 812
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        ObjectType type = ObjectType.cast(
                                  objectJsType.restrictByNotNullOrUndefined());
                    children: []
                    pos: 31584
                    length: 90
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 31685
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 31693
                                length: 4
                            children: []
                            pos: 31685
                            length: 12
                        children: []
                        pos: 31684
                        length: 14
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: and
                                    fields:
                                      left:
                                        type: method_invocation
                                        fields:
                                          text: type.hasProperty(pname)
                                        children: []
                                        pos: 31713
                                        length: 23
                                      right:
                                        type: unary_expression
                                        fields:
                                          text: "!type.isPropertyTypeInferred(pname)"
                                        children: []
                                        pos: 31752
                                        length: 35
                                    children: []
                                    pos: 31713
                                    length: 74
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: "!propertyIsImplicitCast(type, pname)"
                                    children: []
                                    pos: 31803
                                    length: 36
                                children: []
                                pos: 31713
                                length: 126
                            children: []
                            pos: 31712
                            length: 128
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: local_variable_declaration
                            fields:
                              text: JSType expectedType = type.getPropertyType(pname);
                            children: []
                            pos: 31853
                            length: 50
                          - type: if_statement
                            fields:
                              condition:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: unary_expression
                                    fields:
                                      text: "!expectedType.isUnknownType()"
                                    children: []
                                    pos: 31918
                                    length: 29
                                children: []
                                pos: 31917
                                length: 31
                            children:
                            - type: block
                              fields: {}
                              children:
                              - type: expression_statement
                                fields:
                                  text: |-
                                    validator.expectCanAssignToPropertyOf(
                                                    t, assign, getJSType(rvalue),
                                                    expectedType, object, pname);
                                children: []
                                pos: 31963
                                length: 130
                              - type: expression_statement
                                fields:
                                  text: |-
                                    checkPropertyInheritanceOnGetpropAssign(
                                                    t, assign, object, pname, info, expectedType);
                                children: []
                                pos: 32106
                                length: 103
                              - type: return_statement
                                fields:
                                  text: return;
                                children: []
                                pos: 32222
                                length: 7
                              pos: 31949
                              length: 292
                            pos: 31914
                            length: 327
                          pos: 31841
                          length: 410
                        pos: 31709
                        length: 542
                      pos: 31699
                      length: 560
                    pos: 31681
                    length: 578
                  - type: expression_statement
                    fields:
                      text: |-
                        checkPropertyInheritanceOnGetpropAssign(
                                  t, assign, object, pname, info, getNativeType(UNKNOWN_TYPE));
                    children: []
                    pos: 32412
                    length: 112
                  pos: 29693
                  length: 2837
                pos: 29669
                length: 2861
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = getJSType(lvalue);
                children: []
                pos: 32779
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: lvalue.isQualifiedName()
                        children: []
                        pos: 32824
                        length: 24
                    children: []
                    pos: 32823
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType rvalueType = getJSType(assign.getLastChild());
                    children: []
                    pos: 32900
                    length: 53
                  - type: local_variable_declaration
                    fields:
                      text: Var var = t.getScope().getVar(lvalue.getQualifiedName());
                    children: []
                    pos: 32960
                    length: 57
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: var
                                children: []
                                pos: 33028
                                length: 3
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 33035
                                length: 4
                            children: []
                            pos: 33028
                            length: 11
                        children: []
                        pos: 33027
                        length: 13
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: method_invocation
                                fields:
                                  text: var.isTypeInferred()
                                children: []
                                pos: 33055
                                length: 20
                            children: []
                            pos: 33054
                            length: 22
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: return_statement
                            fields:
                              text: return;
                            children: []
                            pos: 33089
                            length: 7
                          pos: 33077
                          length: 29
                        pos: 33051
                        length: 55
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: NodeUtil.getRootOfQualifiedName(lvalue).isThis()
                                    children: []
                                    pos: 33120
                                    length: 48
                                  right:
                                    type: not_equals
                                    fields:
                                      left:
                                        type: method_invocation
                                        fields:
                                          text: t.getScope()
                                        children: []
                                        pos: 33184
                                        length: 12
                                      right:
                                        type: method_invocation
                                        fields:
                                          text: var.getScope()
                                        children: []
                                        pos: 33200
                                        length: 14
                                    children: []
                                    pos: 33184
                                    length: 30
                                children: []
                                pos: 33120
                                length: 94
                            children: []
                            pos: 33119
                            length: 96
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: return_statement
                            fields:
                              text: return;
                            children: []
                            pos: 33295
                            length: 7
                          pos: 33216
                          length: 96
                        pos: 33116
                        length: 196
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: not_equals
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: var.getType()
                                    children: []
                                    pos: 33326
                                    length: 13
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 33343
                                    length: 4
                                children: []
                                pos: 33326
                                length: 21
                            children: []
                            pos: 33325
                            length: 23
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: leftType = var.getType();
                            children: []
                            pos: 33361
                            length: 25
                          pos: 33349
                          length: 47
                        pos: 33322
                        length: 74
                      pos: 33041
                      length: 363
                    pos: 33024
                    length: 380
                  pos: 32850
                  length: 560
                pos: 32820
                length: 590
              - type: local_variable_declaration
                fields:
                  text: Node rightChild = assign.getLastChild();
                children: []
                pos: 33478
                length: 40
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = getJSType(rightChild);
                children: []
                pos: 33523
                length: 41
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: |-
                            validator.expectCanAssignTo(
                                        t, assign, rightType, leftType, "assignment")
                        children: []
                        pos: 33573
                        length: 86
                    children: []
                    pos: 33572
                    length: 88
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, assign, rightType);
                    children: []
                    pos: 33669
                    length: 34
                  pos: 33661
                  length: 48
                pos: 33569
                length: 183
              pos: 29463
              length: 4293
          children: []
          pos: 29408
          length: 4348
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkPropCreation
              children: []
              pos: 33836
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 33854
                length: 15
              pos: 33823
              length: 499
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: lvalue.isGetProp()
                        children: []
                        pos: 33894
                        length: 18
                    children: []
                    pos: 33893
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Node obj = lvalue.getFirstChild();
                    children: []
                    pos: 33922
                    length: 34
                  - type: local_variable_declaration
                    fields:
                      text: Node prop = lvalue.getLastChild();
                    children: []
                    pos: 33963
                    length: 34
                  - type: local_variable_declaration
                    fields:
                      text: JSType objType = getJSType(obj);
                    children: []
                    pos: 34004
                    length: 32
                  - type: local_variable_declaration
                    fields:
                      text: String pname = prop.getString();
                    children: []
                    pos: 34043
                    length: 32
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: objType.isStruct()
                                children: []
                                pos: 34086
                                length: 18
                              right:
                                type: unary_expression
                                fields:
                                  text: "!objType.hasProperty(pname)"
                                children: []
                                pos: 34108
                                length: 27
                            children: []
                            pos: 34086
                            length: 49
                        children: []
                        pos: 34085
                        length: 51
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: unary_expression
                                fields:
                                  text: |-
                                    !(obj.isThis() &&
                                                  getJSType(t.getScope().getRootNode()).isConstructor())
                                children: []
                                pos: 34151
                                length: 86
                            children: []
                            pos: 34150
                            length: 88
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: report(t, prop, ILLEGAL_PROPERTY_CREATION);
                            children: []
                            pos: 34251
                            length: 43
                          pos: 34239
                          length: 65
                        pos: 34147
                        length: 157
                      pos: 34137
                      length: 175
                    pos: 34082
                    length: 230
                  pos: 33914
                  length: 404
                pos: 33890
                length: 428
              pos: 33884
              length: 438
          children: []
          pos: 33823
          length: 499
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkPropertyInheritanceOnGetpropAssign
              children: []
              pos: 34339
              length: 39
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 34386
                length: 15
              pos: 34326
              length: 1242
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: object.isGetProp()
                        children: []
                        pos: 35000
                        length: 18
                    children: []
                    pos: 34999
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Node object2 = object.getFirstChild();
                    children: []
                    pos: 35028
                    length: 38
                  - type: local_variable_declaration
                    fields:
                      text: String property2 = NodeUtil.getStringValue(object.getLastChild());
                    children: []
                    pos: 35073
                    length: 66
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: '"prototype".equals(property2)'
                            children: []
                            pos: 35151
                            length: 29
                        children: []
                        pos: 35150
                        length: 31
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType jsType = getJSType(object2);
                        children: []
                        pos: 35192
                        length: 35
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: method_invocation
                                fields:
                                  text: jsType.isFunctionType()
                                children: []
                                pos: 35240
                                length: 23
                            children: []
                            pos: 35239
                            length: 25
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: local_variable_declaration
                            fields:
                              text: FunctionType functionType = jsType.toMaybeFunctionType();
                            children: []
                            pos: 35277
                            length: 57
                          - type: if_statement
                            fields:
                              condition:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: or
                                    fields:
                                      left:
                                        type: method_invocation
                                        fields:
                                          text: functionType.isConstructor()
                                        children: []
                                        pos: 35349
                                        length: 28
                                      right:
                                        type: method_invocation
                                        fields:
                                          text: functionType.isInterface()
                                        children: []
                                        pos: 35381
                                        length: 26
                                    children: []
                                    pos: 35349
                                    length: 58
                                children: []
                                pos: 35348
                                length: 60
                            children:
                            - type: block
                              fields: {}
                              children:
                              - type: expression_statement
                                fields:
                                  text: |-
                                    checkDeclaredPropertyInheritance(
                                                    t, assign, functionType, property, info, propertyType);
                                children: []
                                pos: 35423
                                length: 105
                              pos: 35409
                              length: 131
                            pos: 35345
                            length: 195
                          pos: 35265
                          length: 285
                        pos: 35236
                        length: 314
                      pos: 35182
                      length: 376
                    pos: 35147
                    length: 411
                  pos: 35020
                  length: 544
                pos: 34996
                length: 568
              pos: 34489
              length: 1079
          children: []
          pos: 34326
          length: 1242
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitObjLitKey
              children: []
              pos: 35866
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 35888
                length: 15
              pos: 35853
              length: 2425
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: objlit.isFromExterns()
                        children: []
                        pos: 36085
                        length: 22
                    children: []
                    pos: 36084
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, key);
                    children: []
                    pos: 36117
                    length: 20
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 36144
                    length: 7
                  pos: 36109
                  length: 48
                pos: 36081
                length: 76
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: litType.isStruct()
                            children: []
                            pos: 36238
                            length: 18
                          right:
                            type: method_invocation
                            fields:
                              text: key.isQuotedString()
                            children: []
                            pos: 36260
                            length: 20
                        children: []
                        pos: 36238
                        length: 42
                    children: []
                    pos: 36237
                    length: 44
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: report(t, key, ILLEGAL_OBJLIT_KEY, "struct");
                    children: []
                    pos: 36290
                    length: 45
                  pos: 36282
                  length: 59
                pos: 36234
                length: 217
              - type: local_variable_declaration
                fields:
                  text: Node rvalue = key.getFirstChild();
                children: []
                pos: 36685
                length: 34
              - type: local_variable_declaration
                fields:
                  text: |-
                    JSType rightType = NodeUtil.getObjectLitKeyTypeFromValueType(
                            key, getJSType(rvalue));
                children: []
                pos: 36724
                length: 94
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: rightType
                            children: []
                            pos: 36827
                            length: 9
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 36840
                            length: 4
                        children: []
                        pos: 36827
                        length: 17
                    children: []
                    pos: 36826
                    length: 19
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: rightType = getNativeType(UNKNOWN_TYPE);
                    children: []
                    pos: 36854
                    length: 40
                  pos: 36846
                  length: 54
                pos: 36823
                length: 77
              - type: local_variable_declaration
                fields:
                  text: Node owner = objlit;
                children: []
                pos: 36906
                length: 20
              - type: local_variable_declaration
                fields:
                  text: JSType keyType = getJSType(key);
                children: []
                pos: 36986
                length: 32
              - type: local_variable_declaration
                fields:
                  text: JSType allowedValueType = keyType;
                children: []
                pos: 37024
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: allowedValueType.isEnumElementType()
                        children: []
                        pos: 37067
                        length: 36
                    children: []
                    pos: 37066
                    length: 38
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        allowedValueType =
                                  allowedValueType.toMaybeEnumElementType().getPrimitiveType();
                    children: []
                    pos: 37113
                    length: 90
                  pos: 37105
                  length: 104
                pos: 37063
                length: 146
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean valid = validator.expectCanAssignToPropertyOf(t, key,
                            rightType, allowedValueType,
                            owner, NodeUtil.getObjectLitKeyName(key));
                children: []
                pos: 37215
                length: 149
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: valid
                        children: []
                        pos: 37373
                        length: 5
                    children: []
                    pos: 37372
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, key, rightType);
                    children: []
                    pos: 37388
                    length: 31
                  pos: 37380
                  length: 45
                pos: 37369
                length: 96
              - type: local_variable_declaration
                fields:
                  text: JSType objlitType = getJSType(objlit);
                children: []
                pos: 37751
                length: 38
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType type = ObjectType.cast(
                            objlitType.restrictByNotNullOrUndefined());
                children: []
                pos: 37794
                length: 86
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: type
                            children: []
                            pos: 37889
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 37897
                            length: 4
                        children: []
                        pos: 37889
                        length: 12
                    children: []
                    pos: 37888
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: String property = NodeUtil.getObjectLitKeyName(key);
                    children: []
                    pos: 37911
                    length: 52
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: type.hasProperty(property)
                                    children: []
                                    pos: 37974
                                    length: 26
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: "!type.isPropertyTypeInferred(property)"
                                    children: []
                                    pos: 38014
                                    length: 38
                                children: []
                                pos: 37974
                                length: 78
                              right:
                                type: unary_expression
                                fields:
                                  text: "!propertyIsImplicitCast(type, property)"
                                children: []
                                pos: 38066
                                length: 39
                            children: []
                            pos: 37974
                            length: 131
                        children: []
                        pos: 37973
                        length: 133
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            validator.expectCanAssignToPropertyOf(
                                        t, key, keyType,
                                        type.getPropertyType(property), owner, property);
                        children: []
                        pos: 38117
                        length: 129
                      pos: 38107
                      length: 147
                    pos: 37970
                    length: 284
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 38261
                    length: 7
                  pos: 37903
                  length: 371
                pos: 37885
                length: 389
              pos: 35944
              length: 2334
          children: []
          pos: 35853
          length: 2425
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: propertyIsImplicitCast
              children: []
              pos: 38413
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: ObjectType type
                children: []
                pos: 38436
                length: 15
              pos: 38397
              length: 309
            body:
              type: block
              fields: {}
              children:
              - type: for_statement
                fields:
                  text: |-
                    for (; type != null; type = type.getImplicitPrototype()) {
                          JSDocInfo docInfo = type.getOwnPropertyJSDocInfo(prop);
                          if (docInfo != null && docInfo.isImplicitCast()) {
                            return true;
                          }
                        }
                children: []
                pos: 38472
                length: 212
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 38689
                length: 13
              pos: 38466
              length: 240
          children: []
          pos: 38397
          length: 309
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkDeclaredPropertyInheritance
              children: []
              pos: 38975
              length: 32
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 39015
                length: 15
              pos: 38962
              length: 4898
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: hasUnknownOrEmptySupertype(ctorType)
                        children: []
                        pos: 39228
                        length: 36
                    children: []
                    pos: 39227
                    length: 38
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 39274
                    length: 7
                  pos: 39266
                  length: 21
                pos: 39224
                length: 63
              - type: local_variable_declaration
                fields:
                  text: FunctionType superClass = ctorType.getSuperClassConstructor();
                children: []
                pos: 39293
                length: 62
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean superClassHasProperty = superClass != null &&
                            superClass.getInstanceType().hasProperty(propertyName);
                children: []
                pos: 39360
                length: 117
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean superClassHasDeclaredProperty = superClass != null &&
                            superClass.getInstanceType().isPropertyTypeDeclared(propertyName);
                children: []
                pos: 39482
                length: 136
              - type: local_variable_declaration
                fields:
                  text: boolean superInterfaceHasProperty = false;
                children: []
                pos: 39645
                length: 42
              - type: local_variable_declaration
                fields:
                  text: boolean superInterfaceHasDeclaredProperty = false;
                children: []
                pos: 39692
                length: 50
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: ctorType.isInterface()
                        children: []
                        pos: 39751
                        length: 22
                    children: []
                    pos: 39750
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: enhanced_for_statement
                    fields:
                      text: |-
                        for (ObjectType interfaceType : ctorType.getExtendedInterfaces()) {
                                superInterfaceHasProperty =
                                    superInterfaceHasProperty ||
                                    interfaceType.hasProperty(propertyName);
                                superInterfaceHasDeclaredProperty =
                                    superInterfaceHasDeclaredProperty ||
                                    interfaceType.isPropertyTypeDeclared(propertyName);
                              }
                    children: []
                    pos: 39783
                    length: 362
                  pos: 39775
                  length: 376
                pos: 39747
                length: 404
              - type: local_variable_declaration
                fields:
                  text: boolean declaredOverride = info != null && info.isOverride();
                children: []
                pos: 40156
                length: 61
              - type: local_variable_declaration
                fields:
                  text: boolean foundInterfaceProperty = false;
                children: []
                pos: 40223
                length: 39
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: ctorType.isConstructor()
                        children: []
                        pos: 40271
                        length: 24
                    children: []
                    pos: 40270
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: enhanced_for_statement
                    fields:
                      text: |-
                        for (JSType implementedInterface :
                                  ctorType.getAllImplementedInterfaces()) {
                                if (implementedInterface.isUnknownType() ||
                                    implementedInterface.isEmptyType()) {
                                  continue;
                                }
                                FunctionType interfaceType =
                                    implementedInterface.toObjectType().getConstructor();
                                Preconditions.checkNotNull(interfaceType);

                                boolean interfaceHasProperty =
                                    interfaceType.getPrototype().hasProperty(propertyName);
                                foundInterfaceProperty = foundInterfaceProperty ||
                                    interfaceHasProperty;
                                if (reportMissingOverride.isOn()
                                    && !declaredOverride
                                    && interfaceHasProperty) {
                                  // @override not present, but the property does override an interface
                                  // property
                                  compiler.report(t.makeError(n, reportMissingOverride,
                                      HIDDEN_INTERFACE_PROPERTY, propertyName,
                                      interfaceType.getTopMostDefiningType(propertyName).toString()));
                                }
                              }
                    children: []
                    pos: 40305
                    length: 1004
                  pos: 40297
                  length: 1018
                pos: 40267
                length: 1048
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: and
                            fields:
                              left:
                                type: unary_expression
                                fields:
                                  text: "!declaredOverride"
                                children: []
                                pos: 41325
                                length: 17
                              right:
                                type: unary_expression
                                fields:
                                  text: "!superClassHasProperty"
                                children: []
                                pos: 41354
                                length: 22
                            children: []
                            pos: 41325
                            length: 51
                          right:
                            type: unary_expression
                            fields:
                              text: "!superInterfaceHasProperty"
                            children: []
                            pos: 41388
                            length: 26
                        children: []
                        pos: 41325
                        length: 89
                    children: []
                    pos: 41324
                    length: 91
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 41484
                    length: 7
                  pos: 41416
                  length: 81
                pos: 41321
                length: 176
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType topInstanceType = superClassHasDeclaredProperty ?
                            superClass.getTopMostDefiningType(propertyName) : null;
                children: []
                pos: 41503
                length: 124
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean declaredLocally =
                            ctorType.isConstructor() &&
                            (ctorType.getPrototype().hasOwnProperty(propertyName) ||
                             ctorType.getInstanceType().hasOwnProperty(propertyName));
                children: []
                pos: 41632
                length: 193
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: reportMissingOverride.isOn()
                                    children: []
                                    pos: 41834
                                    length: 28
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: "!declaredOverride"
                                    children: []
                                    pos: 41874
                                    length: 17
                                children: []
                                pos: 41834
                                length: 57
                              right:
                                type: identifier
                                fields:
                                  text: superClassHasDeclaredProperty
                                children: []
                                pos: 41903
                                length: 29
                            children: []
                            pos: 41834
                            length: 98
                          right:
                            type: identifier
                            fields:
                              text: declaredLocally
                            children: []
                            pos: 41944
                            length: 15
                        children: []
                        pos: 41834
                        length: 125
                    children: []
                    pos: 41833
                    length: 127
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        compiler.report(t.makeError(n, reportMissingOverride,
                                  HIDDEN_SUPERCLASS_PROPERTY, propertyName,
                                  topInstanceType.toString()));
                    children: []
                    pos: 42063
                    length: 145
                  pos: 41961
                  length: 253
                pos: 41830
                length: 384
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: superClassHasDeclaredProperty
                        children: []
                        pos: 42287
                        length: 29
                    children: []
                    pos: 42286
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        JSType superClassPropType =
                                  superClass.getInstanceType().getPropertyType(propertyName);
                    children: []
                    pos: 42372
                    length: 97
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: unary_expression
                            fields:
                              text: "!propertyType.isSubtype(superClassPropType)"
                            children: []
                            pos: 42480
                            length: 43
                        children: []
                        pos: 42479
                        length: 45
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            compiler.report(
                                        t.makeError(n, HIDDEN_SUPERCLASS_PROPERTY_MISMATCH,
                                            propertyName, topInstanceType.toString(),
                                            superClassPropType.toString(), propertyType.toString()));
                        children: []
                        pos: 42535
                        length: 212
                      pos: 42525
                      length: 230
                    pos: 42476
                    length: 279
                  pos: 42318
                  length: 443
                pos: 42283
                length: 1573
              pos: 39127
              length: 4733
          children: []
          pos: 38962
          length: 4898
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: hasUnknownOrEmptySupertype
              children: []
              pos: 44021
              length: 26
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FunctionType ctor
                children: []
                pos: 44048
                length: 17
              pos: 43998
              length: 815
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkArgument(ctor.isConstructor() || ctor.isInterface());
                children: []
                pos: 44073
                length: 72
              - type: expression_statement
                fields:
                  text: Preconditions.checkArgument(!ctor.isUnknownType());
                children: []
                pos: 44150
                length: 51
              - type: while_statement
                fields:
                  text: |-
                    while (true) {
                          ObjectType maybeSuperInstanceType =
                              ctor.getPrototype().getImplicitPrototype();
                          if (maybeSuperInstanceType == null) {
                            return false;
                          }
                          if (maybeSuperInstanceType.isUnknownType() ||
                              maybeSuperInstanceType.isEmptyType()) {
                            return true;
                          }
                          ctor = maybeSuperInstanceType.getConstructor();
                          if (ctor == null) {
                            return false;
                          }
                          Preconditions.checkState(ctor.isConstructor() || ctor.isInterface());
                        }
                children: []
                pos: 44302
                length: 507
              pos: 44067
              length: 746
          children: []
          pos: 43998
          length: 815
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitInterfaceGetprop
              children: []
              pos: 44951
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 44973
                length: 15
              pos: 44938
              length: 1082
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType rvalueType = getJSType(rvalue);
                children: []
                pos: 45072
                length: 38
              - type: local_variable_declaration
                fields:
                  text: |-
                    String abstractMethodName =
                            compiler.getCodingConvention().getAbstractMethodName();
                children: []
                pos: 45309
                length: 91
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!rvalueType.isFunctionType()"
                        children: []
                        pos: 45409
                        length: 28
                    children: []
                    pos: 45408
                    length: 30
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        String abstractMethodMessage = (abstractMethodName != null)
                                 ? ", or " + abstractMethodName
                                 : "";
                    children: []
                    pos: 45522
                    length: 114
                  - type: expression_statement
                    fields:
                      text: |-
                        compiler.report(
                                  t.makeError(object, INVALID_INTERFACE_MEMBER_DECLARATION,
                                      abstractMethodMessage));
                    children: []
                    pos: 45643
                    length: 123
                  pos: 45439
                  length: 333
                pos: 45405
                length: 367
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: assign.getLastChild().isFunction()
                            children: []
                            pos: 45782
                            length: 34
                          right:
                            type: unary_expression
                            fields:
                              text: "!NodeUtil.isEmptyBlock(assign.getLastChild().getLastChild())"
                            children: []
                            pos: 45828
                            length: 60
                        children: []
                        pos: 45782
                        length: 106
                    children: []
                    pos: 45781
                    length: 108
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        compiler.report(
                                  t.makeError(object, INTERFACE_FUNCTION_NOT_EMPTY,
                                      abstractMethodName));
                    children: []
                    pos: 45898
                    length: 112
                  pos: 45890
                  length: 126
                pos: 45778
                length: 238
              pos: 45065
              length: 955
          children: []
          pos: 44938
          length: 1082
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitName
              children: []
              pos: 46349
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 46359
                length: 15
              pos: 46341
              length: 1096
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int parentNodeType = parent.getType();
                children: []
                pos: 46855
                length: 38
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: or
                                fields:
                                  left:
                                    type: equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: parentNodeType
                                        children: []
                                        pos: 46902
                                        length: 14
                                      right:
                                        type: field_access
                                        fields:
                                          text: Token.FUNCTION
                                        children: []
                                        pos: 46920
                                        length: 14
                                    children: []
                                    pos: 46902
                                    length: 32
                                  right:
                                    type: equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: parentNodeType
                                        children: []
                                        pos: 46946
                                        length: 14
                                      right:
                                        type: field_access
                                        fields:
                                          text: Token.CATCH
                                        children: []
                                        pos: 46964
                                        length: 11
                                    children: []
                                    pos: 46946
                                    length: 29
                                children: []
                                pos: 46902
                                length: 73
                              right:
                                type: equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: parentNodeType
                                    children: []
                                    pos: 46987
                                    length: 14
                                  right:
                                    type: field_access
                                    fields:
                                      text: Token.PARAM_LIST
                                    children: []
                                    pos: 47005
                                    length: 16
                                children: []
                                pos: 46987
                                length: 34
                            children: []
                            pos: 46902
                            length: 119
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: parentNodeType
                                children: []
                                pos: 47033
                                length: 14
                              right:
                                type: field_access
                                fields:
                                  text: Token.VAR
                                children: []
                                pos: 47051
                                length: 9
                            children: []
                            pos: 47033
                            length: 27
                        children: []
                        pos: 46902
                        length: 158
                    children: []
                    pos: 46901
                    length: 160
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return false;
                    children: []
                    pos: 47070
                    length: 13
                  pos: 47062
                  length: 27
                pos: 46898
                length: 191
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 47095
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: type
                            children: []
                            pos: 47132
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 47140
                            length: 4
                        children: []
                        pos: 47132
                        length: 12
                    children: []
                    pos: 47131
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: type = getNativeType(UNKNOWN_TYPE);
                    children: []
                    pos: 47154
                    length: 35
                  - type: local_variable_declaration
                    fields:
                      text: Var var = t.getScope().getVar(n.getString());
                    children: []
                    pos: 47196
                    length: 45
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: var
                                children: []
                                pos: 47252
                                length: 3
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 47259
                                length: 4
                            children: []
                            pos: 47252
                            length: 11
                        children: []
                        pos: 47251
                        length: 13
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType varType = var.getType();
                        children: []
                        pos: 47275
                        length: 31
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: varType
                                    children: []
                                    pos: 47319
                                    length: 7
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 47330
                                    length: 4
                                children: []
                                pos: 47319
                                length: 15
                            children: []
                            pos: 47318
                            length: 17
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: type = varType;
                            children: []
                            pos: 47348
                            length: 15
                          pos: 47336
                          length: 37
                        pos: 47315
                        length: 58
                      pos: 47265
                      length: 116
                    pos: 47248
                    length: 133
                  pos: 47146
                  length: 241
                pos: 47128
                length: 259
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n, type);
                children: []
                pos: 47392
                length: 24
              - type: return_statement
                fields:
                  text: return true;
                children: []
                pos: 47421
                length: 12
              pos: 46397
              length: 1040
          children: []
          pos: 46341
          length: 1096
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitGetProp
              children: []
              pos: 47728
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 47741
                length: 15
              pos: 47715
              length: 743
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node property = n.getLastChild();
                children: []
                pos: 47991
                length: 33
              - type: local_variable_declaration
                fields:
                  text: Node objNode = n.getFirstChild();
                children: []
                pos: 48029
                length: 33
              - type: local_variable_declaration
                fields:
                  text: JSType childType = getJSType(objNode);
                children: []
                pos: 48067
                length: 38
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: childType.isDict()
                        children: []
                        pos: 48115
                        length: 18
                    children: []
                    pos: 48114
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS,
                        "'.'", "dict");
                    children: []
                    pos: 48143
                    length: 74
                  pos: 48135
                  length: 88
                pos: 48111
                length: 320
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n);
                children: []
                pos: 48436
                length: 18
              pos: 47779
              length: 679
          children: []
          pos: 47715
          length: 743
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkPropertyAccess
              children: []
              pos: 48797
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType childType
                children: []
                pos: 48817
                length: 16
              pos: 48784
              length: 1250
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType propType = getJSType(n);
                children: []
                pos: 49154
                length: 31
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: propType.isEquivalentTo(typeRegistry.getNativeType(UNKNOWN_TYPE))
                        children: []
                        pos: 49194
                        length: 65
                    children: []
                    pos: 49193
                    length: 67
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: childType = childType.autobox();
                    children: []
                    pos: 49269
                    length: 32
                  - type: local_variable_declaration
                    fields:
                      text: ObjectType objectType = ObjectType.cast(childType);
                    children: []
                    pos: 49308
                    length: 51
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: objectType
                                children: []
                                pos: 49370
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 49384
                                length: 4
                            children: []
                            pos: 49370
                            length: 18
                        children: []
                        pos: 49369
                        length: 20
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: or
                                fields:
                                  left:
                                    type: unary_expression
                                    fields:
                                      text: "!objectType.hasProperty(propName)"
                                    children: []
                                    pos: 49585
                                    length: 33
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: |-
                                        objectType.isEquivalentTo(
                                                        typeRegistry.getNativeType(UNKNOWN_TYPE))
                                    children: []
                                    pos: 49634
                                    length: 84
                                children: []
                                pos: 49585
                                length: 133
                            children: []
                            pos: 49584
                            length: 135
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: if_statement
                            fields:
                              condition:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: instanceof_expression
                                    fields:
                                      text: objectType instanceof EnumType
                                    children: []
                                    pos: 49736
                                    length: 30
                                children: []
                                pos: 49735
                                length: 32
                            children:
                            - type: block
                              fields: {}
                              children:
                              - type: expression_statement
                                fields:
                                  text: report(t, n, INEXISTENT_ENUM_ELEMENT, propName);
                                children: []
                                pos: 49782
                                length: 48
                              pos: 49768
                              length: 74
                            pos: 49732
                            length: 196
                          pos: 49720
                          length: 218
                        pos: 49581
                        length: 357
                      pos: 49390
                      length: 557
                    pos: 49366
                    length: 658
                  pos: 49261
                  length: 769
                pos: 49190
                length: 840
              pos: 48883
              length: 1151
          children: []
          pos: 48784
          length: 1250
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkPropertyAccessHelper
              children: []
              pos: 50051
              length: 25
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType objectType
                children: []
                pos: 50077
                length: 17
              pos: 50038
              length: 412
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: and
                            fields:
                              left:
                                type: unary_expression
                                fields:
                                  text: "!objectType.isEmptyType()"
                                children: []
                                pos: 50154
                                length: 25
                              right:
                                type: identifier
                                fields:
                                  text: reportMissingProperties
                                children: []
                                pos: 50191
                                length: 23
                            children: []
                            pos: 50154
                            length: 60
                          right:
                            type: unary_expression
                            fields:
                              text: "!isPropertyTest(n)"
                            children: []
                            pos: 50218
                            length: 18
                        children: []
                        pos: 50154
                        length: 82
                    children: []
                    pos: 50153
                    length: 84
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: unary_expression
                            fields:
                              text: "!typeRegistry.canPropertyBeDefined(objectType,
                                propName)"
                            children: []
                            pos: 50250
                            length: 56
                        children: []
                        pos: 50249
                        length: 58
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            report(t, n, INEXISTENT_PROPERTY, propName,
                                        validator.getReadableJSTypeName(n.getFirstChild(), true));
                        children: []
                        pos: 50318
                        length: 114
                      pos: 50308
                      length: 132
                    pos: 50246
                    length: 194
                  pos: 50238
                  length: 208
                pos: 50150
                length: 296
              pos: 50144
              length: 306
          children: []
          pos: 50038
          length: 412
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isPropertyTest
              children: []
              pos: 50677
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getProp
                children: []
                pos: 50692
                length: 12
              pos: 50661
              length: 748
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node parent = getProp.getParent();
                children: []
                pos: 50712
                length: 34
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: parent.getType()
                        children: []
                        pos: 50759
                        length: 16
                    children: []
                    pos: 50758
                    length: 18
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.CALL:
                                return parent.getFirstChild() != getProp &&
                                    compiler.getCodingConvention().isPropertyTestFunction(parent);

                              case Token.IF:
                              case Token.WHILE:
                              case Token.DO:
                              case Token.FOR:
                                return NodeUtil.getConditionExpression(parent) == getProp;

                              case Token.INSTANCEOF:
                              case Token.TYPEOF:
                                return true;

                              case Token.AND:
                              case Token.HOOK:
                                return parent.getFirstChild() == getProp;

                              case Token.NOT:
                                return parent.getParent().isOr() &&
                                    parent.getParent().getFirstChild() == parent;
                            }
                    children: []
                    pos: 50777
                    length: 610
                children: []
                pos: 50751
                length: 636
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 51392
                length: 13
              pos: 50706
              length: 703
          children: []
          pos: 50661
          length: 748
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitGetElem
              children: []
              pos: 51652
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 51665
                length: 15
              pos: 51639
              length: 185
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    validator.expectIndexMatch(
                            t, n, getJSType(n.getFirstChild()), getJSType(n.getLastChild()));
                children: []
                pos: 51696
                length: 101
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n);
                children: []
                pos: 51802
                length: 18
              pos: 51690
              length: 134
          children: []
          pos: 51639
          length: 185
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitVar
              children: []
              pos: 52063
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 52072
                length: 15
              pos: 52050
              length: 1060
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: 'JSDocInfo varInfo = n.hasOneChild() ? n.getJSDocInfo() :
                    null;'
                children: []
                pos: 52265
                length: 62
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (Node name : n.children()) {
                          Node value = name.getFirstChild();
                          // A null var would indicate a bug in the scope creation logic.
                          Var var = t.getScope().getVar(name.getString());

                          if (value != null) {
                            JSType valueType = getJSType(value);
                            JSType nameType = var.getType();
                            nameType = (nameType == null) ? getNativeType(UNKNOWN_TYPE) : nameType;

                            JSDocInfo info = name.getJSDocInfo();
                            if (info == null) {
                              info = varInfo;
                            }

                            checkEnumAlias(t, info, value);
                            if (var.isTypeInferred()) {
                              ensureTyped(t, name, valueType);
                            } else {
                              validator.expectCanAssignTo(
                                  t, value, valueType, nameType, "initializing variable");
                            }
                          }
                        }
                children: []
                pos: 52332
                length: 774
              pos: 52097
              length: 1013
          children: []
          pos: 52050
          length: 1060
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitNew
              children: []
              pos: 53163
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 53172
                length: 15
              pos: 53150
              length: 557
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node constructor = n.getFirstChild();
                children: []
                pos: 53203
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
                children: []
                pos: 53245
                length: 68
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: type.isConstructor()
                                children: []
                                pos: 53322
                                length: 20
                              right:
                                type: method_invocation
                                fields:
                                  text: type.isEmptyType()
                                children: []
                                pos: 53346
                                length: 18
                            children: []
                            pos: 53322
                            length: 42
                          right:
                            type: method_invocation
                            fields:
                              text: type.isUnknownType()
                            children: []
                            pos: 53368
                            length: 20
                        children: []
                        pos: 53322
                        length: 66
                    children: []
                    pos: 53321
                    length: 68
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType fnType = type.toMaybeFunctionType();
                    children: []
                    pos: 53398
                    length: 49
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: fnType
                                children: []
                                pos: 53458
                                length: 6
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 53468
                                length: 4
                            children: []
                            pos: 53458
                            length: 14
                        children: []
                        pos: 53457
                        length: 16
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: visitParameterList(t, n, fnType);
                        children: []
                        pos: 53484
                        length: 33
                      - type: expression_statement
                        fields:
                          text: ensureTyped(t, n, fnType.getInstanceType());
                        children: []
                        pos: 53526
                        length: 44
                      pos: 53474
                      length: 104
                    pos: 53454
                    length: 166
                  pos: 53390
                  length: 236
                pos: 53318
                length: 385
              pos: 53197
              length: 510
          children: []
          pos: 53150
          length: 557
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkInterfaceConflictProperties
              children: []
              pos: 54245
              length: 32
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 54278
                length: 15
              pos: 54232
              length: 1232
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: ObjectType implicitProto = interfaceType.getImplicitPrototype();
                children: []
                pos: 54461
                length: 64
              - type: local_variable_declaration
                fields:
                  text: Set<String> currentPropertyNames;
                children: []
                pos: 54530
                length: 33
              - type: expression_statement
                fields:
                  text: currentPropertyNames = implicitProto.getOwnPropertyNames();
                children: []
                pos: 54715
                length: 59
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (String name : currentPropertyNames) {
                          ObjectType oType = properties.get(name);
                          if (oType != null) {
                            if (!interfaceType.getPropertyType(name).isEquivalentTo(
                                oType.getPropertyType(name))) {
                              compiler.report(
                                  t.makeError(n, INCOMPATIBLE_EXTENDED_PROPERTY_TYPE,
                                      functionName, name, oType.toString(),
                                      interfaceType.toString()));
                            }
                          }
                          currentProperties.put(name, interfaceType);
                        }
                children: []
                pos: 54779
                length: 494
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (ObjectType iType : interfaceType.getCtorExtendedInterfaces()) {
                          checkInterfaceConflictProperties(t, n, functionName, properties,
                              currentProperties, iType);
                        }
                children: []
                pos: 55278
                length: 182
              pos: 54455
              length: 1009
          children: []
          pos: 54232
          length: 1232
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitFunction
              children: []
              pos: 55722
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 55736
                length: 15
              pos: 55709
              length: 3196
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: FunctionType functionType = JSType.toMaybeFunctionType(n.getJSType());
                children: []
                pos: 55767
                length: 70
              - type: local_variable_declaration
                fields:
                  text: String functionPrivateName = n.getFirstChild().getString();
                children: []
                pos: 55842
                length: 59
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: functionType.isConstructor()
                        children: []
                        pos: 55910
                        length: 28
                    children: []
                    pos: 55909
                    length: 30
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType baseConstructor = functionType.getSuperClassConstructor();
                    children: []
                    pos: 55948
                    length: 71
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: not_equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: baseConstructor
                                        children: []
                                        pos: 56030
                                        length: 15
                                      right:
                                        type: method_invocation
                                        fields:
                                          text: getNativeType(OBJECT_FUNCTION_TYPE)
                                        children: []
                                        pos: 56049
                                        length: 35
                                    children: []
                                    pos: 56030
                                    length: 54
                                  right:
                                    type: not_equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: baseConstructor
                                        children: []
                                        pos: 56098
                                        length: 15
                                      right:
                                        type: null_literal
                                        fields: {}
                                        children: []
                                        pos: 56117
                                        length: 4
                                    children: []
                                    pos: 56098
                                    length: 23
                                children: []
                                pos: 56030
                                length: 91
                              right:
                                type: method_invocation
                                fields:
                                  text: baseConstructor.isInterface()
                                children: []
                                pos: 56135
                                length: 29
                            children: []
                            pos: 56030
                            length: 134
                        children: []
                        pos: 56029
                        length: 136
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            compiler.report(
                                        t.makeError(n, CONFLICTING_EXTENDED_TYPE,
                                                    "constructor", functionPrivateName));
                        children: []
                        pos: 56176
                        length: 132
                      pos: 56166
                      length: 150
                    pos: 56026
                    length: 1723
                  pos: 55940
                  length: 1815
                pos: 55906
                length: 2995
              pos: 55761
              length: 3144
          children: []
          pos: 55709
          length: 3196
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitCall
              children: []
              pos: 59145
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 59155
                length: 15
              pos: 59132
              length: 2108
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node child = n.getFirstChild();
                children: []
                pos: 59186
                length: 31
              - type: local_variable_declaration
                fields:
                  text: JSType childType = getJSType(child).restrictByNotNullOrUndefined();
                children: []
                pos: 59222
                length: 67
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!childType.canBeCalled()"
                        children: []
                        pos: 59299
                        length: 24
                    children: []
                    pos: 59298
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: report(t, n, NOT_CALLABLE, childType.toString());
                    children: []
                    pos: 59333
                    length: 49
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, n);
                    children: []
                    pos: 59389
                    length: 18
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 59414
                    length: 7
                  pos: 59325
                  length: 102
                pos: 59295
                length: 132
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: childType.isFunctionType()
                        children: []
                        pos: 59562
                        length: 26
                    children: []
                    pos: 59561
                    length: 28
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType functionType = childType.toMaybeFunctionType();
                    children: []
                    pos: 59598
                    length: 60
                  - type: local_variable_declaration
                    fields:
                      text: boolean isExtern = false;
                    children: []
                    pos: 59666
                    length: 25
                  - type: local_variable_declaration
                    fields:
                      text: JSDocInfo functionJSDocInfo = functionType.getJSDocInfo();
                    children: []
                    pos: 59698
                    length: 58
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: functionJSDocInfo
                                    children: []
                                    pos: 59767
                                    length: 17
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 59788
                                    length: 4
                                children: []
                                pos: 59767
                                length: 25
                              right:
                                type: not_equals
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: functionJSDocInfo.getAssociatedNode()
                                    children: []
                                    pos: 59807
                                    length: 37
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 59848
                                    length: 4
                                children: []
                                pos: 59807
                                length: 45
                            children: []
                            pos: 59767
                            length: 85
                        children: []
                        pos: 59765
                        length: 88
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: isExtern = functionJSDocInfo.getAssociatedNode().isFromExterns();
                        children: []
                        pos: 59864
                        length: 65
                      pos: 59854
                      length: 83
                    pos: 59763
                    length: 174
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: functionType.isConstructor()
                                    children: []
                                    pos: 60094
                                    length: 28
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: "!functionType.isNativeObjectType()"
                                    children: []
                                    pos: 60136
                                    length: 34
                                children: []
                                pos: 60094
                                length: 76
                              right:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: or
                                    fields:
                                      left:
                                        type: or
                                        fields:
                                          left:
                                            type: method_invocation
                                            fields:
                                              text: functionType.getReturnType().isUnknownType()
                                            children: []
                                            pos: 60185
                                            length: 44
                                          right:
                                            type: method_invocation
                                            fields:
                                              text: functionType.getReturnType().isVoidType()
                                            children: []
                                            pos: 60244
                                            length: 41
                                        children: []
                                        pos: 60185
                                        length: 100
                                      right:
                                        type: unary_expression
                                        fields:
                                          text: "!isExtern"
                                        children: []
                                        pos: 60300
                                        length: 9
                                    children: []
                                    pos: 60185
                                    length: 124
                                children: []
                                pos: 60184
                                length: 126
                            children: []
                            pos: 60094
                            length: 216
                        children: []
                        pos: 60093
                        length: 218
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: report(t, n, CONSTRUCTOR_NOT_CALLABLE, childType.toString());
                        children: []
                        pos: 60322
                        length: 61
                      pos: 60312
                      length: 79
                    pos: 60090
                    length: 301
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: and
                                    fields:
                                      left:
                                        type: method_invocation
                                        fields:
                                          text: functionType.isOrdinaryFunction()
                                        children: []
                                        pos: 60498
                                        length: 33
                                      right:
                                        type: unary_expression
                                        fields:
                                          text: "!functionType.getTypeOfThis().isUnknownType()"
                                        children: []
                                        pos: 60545
                                        length: 45
                                    children: []
                                    pos: 60498
                                    length: 92
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: |-
                                        !(functionType.getTypeOfThis().toObjectType() != null &&
                                                  functionType.getTypeOfThis().toObjectType().isNativeObjectType())
                                    children: []
                                    pos: 60604
                                    length: 132
                                children: []
                                pos: 60498
                                length: 238
                              right:
                                type: unary_expression
                                fields:
                                  text: |-
                                    !(child.isGetElem() ||
                                                child.isGetProp())
                                children: []
                                pos: 60750
                                length: 53
                            children: []
                            pos: 60498
                            length: 305
                        children: []
                        pos: 60497
                        length: 307
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: report(t, n, EXPECTED_THIS_TYPE, functionType.toString());
                        children: []
                        pos: 60815
                        length: 58
                      pos: 60805
                      length: 76
                    pos: 60494
                    length: 387
                  - type: expression_statement
                    fields:
                      text: visitParameterList(t, n, functionType);
                    children: []
                    pos: 60889
                    length: 39
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, n, functionType.getReturnType());
                    children: []
                    pos: 60935
                    length: 48
                  pos: 59590
                  length: 1399
                pos: 59558
                length: 1469
              pos: 59180
              length: 2060
          children: []
          pos: 59132
          length: 2108
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitParameterList
              children: []
              pos: 61321
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 61340
                length: 15
              pos: 61308
              length: 1386
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Iterator<Node> arguments = call.children().iterator();
                children: []
                pos: 61407
                length: 54
              - type: expression_statement
                fields:
                  text: arguments.next();
                children: []
                pos: 61466
                length: 17
              - type: local_variable_declaration
                fields:
                  text: Iterator<Node> parameters = functionType.getParameters().iterator();
                children: []
                pos: 61515
                length: 68
              - type: local_variable_declaration
                fields:
                  text: int ordinal = 0;
                children: []
                pos: 61588
                length: 16
              - type: local_variable_declaration
                fields:
                  text: Node parameter = null;
                children: []
                pos: 61609
                length: 22
              - type: local_variable_declaration
                fields:
                  text: Node argument = null;
                children: []
                pos: 61636
                length: 21
              - type: while_statement
                fields:
                  text: |-
                    while (arguments.hasNext() &&
                               (parameters.hasNext() ||
                                parameter != null && parameter.isVarArgs())) {
                          // If there are no parameters left in the list, then the while loop
                          // above implies that this must be a var_args function.
                          if (parameters.hasNext()) {
                            parameter = parameters.next();
                          }
                          argument = arguments.next();
                          ordinal++;

                          validator.expectArgumentMatchesParameter(t, argument,
                              getJSType(argument), getJSType(parameter), call, ordinal);
                        }
                children: []
                pos: 61662
                length: 529
              - type: local_variable_declaration
                fields:
                  text: int numArgs = call.getChildCount() - 1;
                children: []
                pos: 62197
                length: 39
              - type: local_variable_declaration
                fields:
                  text: int minArgs = functionType.getMinArguments();
                children: []
                pos: 62241
                length: 45
              - type: local_variable_declaration
                fields:
                  text: int maxArgs = functionType.getMaxArguments();
                children: []
                pos: 62291
                length: 45
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: greater_than
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: minArgs
                                children: []
                                pos: 62345
                                length: 7
                              right:
                                type: identifier
                                fields:
                                  text: numArgs
                                children: []
                                pos: 62355
                                length: 7
                            children: []
                            pos: 62345
                            length: 17
                          right:
                            type: less_than
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: maxArgs
                                children: []
                                pos: 62366
                                length: 7
                              right:
                                type: identifier
                                fields:
                                  text: numArgs
                                children: []
                                pos: 62376
                                length: 7
                            children: []
                            pos: 62366
                            length: 17
                        children: []
                        pos: 62345
                        length: 38
                    children: []
                    pos: 62344
                    length: 40
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        report(t, call, WRONG_ARGUMENT_COUNT,
                                      validator.getReadableJSTypeName(call.getFirstChild(), false),
                                      String.valueOf(numArgs), String.valueOf(minArgs),
                                      maxArgs != Integer.MAX_VALUE ?
                                      " and no more than " + maxArgs + " argument(s)" : "");
                    children: []
                    pos: 62393
                    length: 291
                  pos: 62385
                  length: 305
                pos: 62341
                length: 349
              pos: 61401
              length: 1293
          children: []
          pos: 61308
          length: 1386
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitReturn
              children: []
              pos: 62936
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 62948
                length: 15
              pos: 62923
              length: 897
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType jsType = getJSType(t.getEnclosingFunction());
                children: []
                pos: 62979
                length: 52
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: jsType.isFunctionType()
                        children: []
                        pos: 63041
                        length: 23
                    children: []
                    pos: 63040
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType functionType = jsType.toMaybeFunctionType();
                    children: []
                    pos: 63074
                    length: 57
                  - type: local_variable_declaration
                    fields:
                      text: JSType returnType = functionType.getReturnType();
                    children: []
                    pos: 63139
                    length: 49
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: returnType
                                children: []
                                pos: 63300
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 63314
                                length: 4
                            children: []
                            pos: 63300
                            length: 18
                        children: []
                        pos: 63299
                        length: 20
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: returnType = getNativeType(VOID_TYPE);
                        children: []
                        pos: 63330
                        length: 38
                      pos: 63320
                      length: 56
                    pos: 63296
                    length: 80
                  - type: local_variable_declaration
                    fields:
                      text: Node valueNode = n.getFirstChild();
                    children: []
                    pos: 63428
                    length: 35
                  - type: local_variable_declaration
                    fields:
                      text: JSType actualReturnType;
                    children: []
                    pos: 63470
                    length: 24
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: valueNode
                                children: []
                                pos: 63505
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 63518
                                length: 4
                            children: []
                            pos: 63505
                            length: 17
                        children: []
                        pos: 63504
                        length: 19
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: actualReturnType = getNativeType(VOID_TYPE);
                        children: []
                        pos: 63534
                        length: 44
                      - type: expression_statement
                        fields:
                          text: valueNode = n;
                        children: []
                        pos: 63587
                        length: 14
                      pos: 63524
                      length: 85
                    pos: 63501
                    length: 172
                  - type: expression_statement
                    fields:
                      text: |-
                        validator.expectCanAssignTo(t, valueNode, actualReturnType, returnType,
                                  "inconsistent return type");
                    children: []
                    pos: 63700
                    length: 110
                  pos: 63066
                  length: 750
                pos: 63037
                length: 779
              pos: 62973
              length: 847
          children: []
          pos: 62923
          length: 897
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitBinaryOperator
              children: []
              pos: 64228
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int op
                children: []
                pos: 64248
                length: 6
              pos: 64215
              length: 1682
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 64287
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = getJSType(left);
                children: []
                pos: 64322
                length: 34
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 64361
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = getJSType(right);
                children: []
                pos: 64396
                length: 36
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: op
                        children: []
                        pos: 64445
                        length: 2
                    children: []
                    pos: 64444
                    length: 4
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.ASSIGN_LSH:
                              case Token.ASSIGN_RSH:
                              case Token.LSH:
                              case Token.RSH:
                              case Token.ASSIGN_URSH:
                              case Token.URSH:
                                if (!leftType.matchesInt32Context()) {
                                  report(t, left, BIT_OPERATION,
                                           NodeUtil.opToStr(n.getType()), leftType.toString());
                                }
                                if (!rightType.matchesUint32Context()) {
                                  report(t, right, BIT_OPERATION,
                                           NodeUtil.opToStr(n.getType()), rightType.toString());
                                }
                                break;

                              case Token.ASSIGN_DIV:
                              case Token.ASSIGN_MOD:
                              case Token.ASSIGN_MUL:
                              case Token.ASSIGN_SUB:
                              case Token.DIV:
                              case Token.MOD:
                              case Token.MUL:
                              case Token.SUB:
                                validator.expectNumber(t, left, leftType, "left operand");
                                validator.expectNumber(t, right, rightType, "right operand");
                                break;

                              case Token.ASSIGN_BITAND:
                              case Token.ASSIGN_BITXOR:
                              case Token.ASSIGN_BITOR:
                              case Token.BITAND:
                              case Token.BITXOR:
                              case Token.BITOR:
                                validator.expectBitwiseable(t, left, leftType,
                                    "bad left operand to bitwise operator");
                                validator.expectBitwiseable(t, right, rightType,
                                    "bad right operand to bitwise operator");
                                break;

                              case Token.ASSIGN_ADD:
                              case Token.ADD:
                                break;

                              default:
                                report(t, n, UNEXPECTED_TOKEN, Token.name(op));
                            }
                    children: []
                    pos: 64449
                    length: 1421
                children: []
                pos: 64437
                length: 1433
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n);
                children: []
                pos: 65875
                length: 18
              pos: 64281
              length: 1616
          children: []
          pos: 64215
          length: 1682
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkEnumAlias
              children: []
              pos: 66354
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 66376
                length: 15
              pos: 66341
              length: 613
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: declInfo
                                children: []
                                pos: 66435
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 66447
                                length: 4
                            children: []
                            pos: 66435
                            length: 16
                          right:
                            type: unary_expression
                            fields:
                              text: "!declInfo.hasEnumParameterType()"
                            children: []
                            pos: 66455
                            length: 32
                        children: []
                        pos: 66435
                        length: 52
                    children: []
                    pos: 66434
                    length: 54
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 66497
                    length: 7
                  pos: 66489
                  length: 21
                pos: 66431
                length: 79
              - type: local_variable_declaration
                fields:
                  text: JSType valueType = getJSType(value);
                children: []
                pos: 66516
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!valueType.isEnumType()"
                        children: []
                        pos: 66561
                        length: 23
                    children: []
                    pos: 66560
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 66594
                    length: 7
                  pos: 66586
                  length: 21
                pos: 66557
                length: 50
              - type: local_variable_declaration
                fields:
                  text: EnumType valueEnumType = valueType.toMaybeEnumType();
                children: []
                pos: 66613
                length: 53
              - type: local_variable_declaration
                fields:
                  text: |-
                    JSType valueEnumPrimitiveType =
                            valueEnumType.getElementsType().getPrimitiveType();
                children: []
                pos: 66671
                length: 91
              - type: expression_statement
                fields:
                  text: |-
                    validator.expectCanAssignTo(t, value, valueEnumPrimitiveType,
                            declInfo.getEnumParameterType().evaluate(t.getScope(), typeRegistry),
                            "incompatible enum element types");
                children: []
                pos: 66767
                length: 183
              pos: 66425
              length: 529
          children: []
          pos: 66341
          length: 613
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getJSType
              children: []
              pos: 67079
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 67089
                length: 6
              pos: 67064
              length: 461
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType jsType = n.getJSType();
                children: []
                pos: 67103
                length: 30
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: jsType
                            children: []
                            pos: 67142
                            length: 6
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 67152
                            length: 4
                        children: []
                        pos: 67142
                        length: 14
                    children: []
                    pos: 67141
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return getNativeType(UNKNOWN_TYPE);
                    children: []
                    pos: 67446
                    length: 35
                  pos: 67158
                  length: 329
                pos: 67138
                length: 383
              pos: 67097
              length: 428
          children: []
          pos: 67064
          length: 461
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensureTyped
              children: []
              pos: 67977
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 67989
                length: 15
              pos: 67964
              length: 107
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n, getNativeType(UNKNOWN_TYPE));
                children: []
                pos: 68020
                length: 47
              pos: 68014
              length: 57
          children: []
          pos: 67964
          length: 107
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensureTyped
              children: []
              pos: 68088
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 68100
                length: 15
              pos: 68075
              length: 118
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n, getNativeType(type));
                children: []
                pos: 68150
                length: 39
              pos: 68144
              length: 49
          children: []
          pos: 68075
          length: 118
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensureTyped
              children: []
              pos: 69022
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 69034
                length: 15
              pos: 69009
              length: 1089
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    Preconditions.checkState(!n.isFunction() ||
                                type.isFunctionType() ||
                                type.isUnknownType());
                children: []
                pos: 69136
                length: 115
              - type: local_variable_declaration
                fields:
                  text: JSDocInfo info = n.getJSDocInfo();
                children: []
                pos: 69256
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: info
                            children: []
                            pos: 69299
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 69307
                            length: 4
                        children: []
                        pos: 69299
                        length: 12
                    children: []
                    pos: 69298
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: info.hasType()
                            children: []
                            pos: 69325
                            length: 14
                        children: []
                        pos: 69324
                        length: 16
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType infoType = info.getType().evaluate(t.getScope(),
                            typeRegistry);
                        children: []
                        pos: 69622
                        length: 70
                      - type: expression_statement
                        fields:
                          text: validator.expectCanCast(t, n, infoType, type);
                        children: []
                        pos: 69701
                        length: 46
                      - type: expression_statement
                        fields:
                          text: type = infoType;
                        children: []
                        pos: 69756
                        length: 16
                      pos: 69341
                      length: 439
                    pos: 69321
                    length: 459
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: info.isImplicitCast()
                                children: []
                                pos: 69792
                                length: 21
                              right:
                                type: unary_expression
                                fields:
                                  text: "!inExterns"
                                children: []
                                pos: 69817
                                length: 10
                            children: []
                            pos: 69792
                            length: 35
                        children: []
                        pos: 69791
                        length: 37
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: |-
                            String propName = n.isGetProp() ?
                                        n.getLastChild().getString() : "(missing)";
                        children: []
                        pos: 69839
                        length: 89
                      - type: expression_statement
                        fields:
                          text: |-
                            compiler.report(
                                        t.makeError(n, ILLEGAL_IMPLICIT_CAST, propName));
                        children: []
                        pos: 69937
                        length: 78
                      pos: 69829
                      length: 194
                    pos: 69788
                    length: 235
                  pos: 69313
                  length: 716
                pos: 69295
                length: 734
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: n.getJSType()
                            children: []
                            pos: 70039
                            length: 13
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 70056
                            length: 4
                        children: []
                        pos: 70039
                        length: 21
                    children: []
                    pos: 70038
                    length: 23
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: n.setJSType(type);
                    children: []
                    pos: 70070
                    length: 18
                  pos: 70062
                  length: 32
                pos: 70035
                length: 59
              pos: 69072
              length: 1026
          children: []
          pos: 69009
          length: 1089
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getTypedPercent
              children: []
              pos: 70229
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 70222
              length: 147
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int total = nullCount + unknownCount + typedCount;
                children: []
                pos: 70253
                length: 50
              - type: return_statement
                fields:
                  text: 'return (total == 0) ? 0.0 : (100.0 * typedCount) / total;'
                children: []
                pos: 70308
                length: 57
              pos: 70247
              length: 122
          children: []
          pos: 70222
          length: 147
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getNativeType
              children: []
              pos: 70388
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSTypeNative typeId
                children: []
                pos: 70402
                length: 19
              pos: 70373
              length: 102
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return typeRegistry.getNativeType(typeId);
                children: []
                pos: 70429
                length: 42
              pos: 70423
              length: 52
          children: []
          pos: 70373
          length: 102
        pos: 2352
        length: 68125
    children: []
    pos: 2352
    length: 68125
  pos: 0
  length: 70478
text_diff: |
  --- before
  +++ after
  @@ -1569,13 +1569,9 @@
         ObjectType interfaceType) {
       ObjectType implicitProto = interfaceType.getImplicitPrototype();
       Set<String> currentPropertyNames;
  -    if (implicitProto == null) {
         // This can be the case if interfaceType is proxy to a non-existent
         // object (which is a bad type annotation, but shouldn't crash).
  -      currentPropertyNames = ImmutableSet.of();
  -    } else {
         currentPropertyNames = implicitProto.getOwnPropertyNames();
  -    }
       for (String name : currentPropertyNames) {
         ObjectType oType = properties.get(name);
         if (oType != null) {
tree_diff: |+
  New cluster:
  ===
  insert-node
  ---
  expression_statement: currentPropertyNames = implicitProto.getOwnPropertyNames(); [54715,54774]
  to
  block [54455,55564]
  at 2
  ------------
  ===
  insert-node
  ---
  expression_statement: currentPropertyNames = implicitProto.getOwnPropertyNames(); [54715,54774]
  to
  block [54455,55564]
  at 2

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  if_statement [54568,54874]
      parenthesized_expression [54571,54594]
          equals [54572,54593]
              identifier: implicitProto [54572,54585]
              null_literal [54589,54593]
      block [54595,54795]
          expression_statement: currentPropertyNames = ImmutableSet.of(); [54748,54789]

...
