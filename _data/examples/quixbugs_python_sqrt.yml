---
language: python
text_diff: "--- before\n+++ after\n@@ -1,27 +1,14 @@\n \n def sqrt(x, epsilon):\n
  \    approx = x / 2\n-    while abs(x - approx) > epsilon:\n+    while abs(x - approx
  ** 2) > epsilon:\n         approx = 0.5 * (approx + x / approx)\n     return approx\n
  \n \"\"\"\n-Square Root\n-\n-Newton-Raphson method implementation.\n-\n-\n-Input:\n-
  \   x: A float\n-    epsilon: A float\n-\n-Precondition:\n-    x >= 1 and epsilon
  > 0\n-\n-Output:\n-    A float in the interval [sqrt(x) - epsilon, sqrt(x) + epsilon]\n-\n-Example:\n-
  \   >>> sqrt(2, 0.01)\n-    1.4166666666666665\n+def sqrt(x, epsilon):\n+    approx
  = x / 2\n+    while abs(x - approx * approx) > epsilon:\n+        approx = 0.5 *
  (approx + x / approx)\n+    return approx\n \"\"\"\n"
tree_diff: |+
  New cluster:
  UPDATE from """
  Square Root

  Newton-Raphson method implementation.


  Input:
      x: A float
      epsilon: A float

  Precondition:
      x >= 1 and epsilon > 0

  Output:
      A float in the interval [sqrt(x) - epsilon, sqrt(x) + epsilon]

  Example:
      >>> sqrt(2, 0.01)
      1.4166666666666665
  """ to """
  def sqrt(x, epsilon):
      approx = x / 2
      while abs(x - approx * approx) > epsilon:
          approx = 0.5 * (approx + x / approx)
      return approx
  """
  ------------
  ===
  update-node
  ---
  expression_statement: """
  Square Root

  Newton-Raphson method implementation.


  Input:
      x: A float
      epsilon: A float

  Precondition:
      x >= 1 and epsilon > 0

  Output:
      A float in the interval [sqrt(x) - epsilon, sqrt(x) + epsilon]

  Example:
      >>> sqrt(2, 0.01)
      1.4166666666666665
  """ [143,419]
  replace """
  Square Root

  Newton-Raphson method implementation.


  Input:
      x: A float
      epsilon: A float

  Precondition:
      x >= 1 and epsilon > 0

  Output:
      A float in the interval [sqrt(x) - epsilon, sqrt(x) + epsilon]

  Example:
      >>> sqrt(2, 0.01)
      1.4166666666666665
  """ by """
  def sqrt(x, epsilon):
      approx = x / 2
      while abs(x - approx * approx) > epsilon:
          approx = 0.5 * (approx + x / approx)
      return approx
  """

  New cluster:
  UPDATE from while abs(x - approx) > epsilon:
          approx = 0.5 * (approx + x / approx) to while abs(x - approx ** 2) > epsilon:
          approx = 0.5 * (approx + x / approx)
  ------------
  ===
  update-node
  ---
  while_statement: while abs(x - approx) > epsilon:
          approx = 0.5 * (approx + x / approx) [46,123]
  replace while abs(x - approx) > epsilon:
          approx = 0.5 * (approx + x / approx) by while abs(x - approx ** 2) > epsilon:
          approx = 0.5 * (approx + x / approx)

...
