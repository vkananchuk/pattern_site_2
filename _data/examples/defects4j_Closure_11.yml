---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: TypeCheck
        children: []
        pos: 2318
        length: 9
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNEXPECTED_TOKEN = DiagnosticType.error(
                    "JSC_INTERNAL_ERROR_UNEXPECTED_TOKEN",
                    "Internal Error: Don't know how to handle {0}");
          children: []
          pos: 2412
          length: 168
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType BAD_DELETE =
                    DiagnosticType.warning(
                        "JSC_BAD_DELETE_OPERAND",
                        "delete operator needs a reference operand");
          children: []
          pos: 2647
          length: 162
        - type: field_declaration
          fields:
            text: |-
              protected static final String OVERRIDING_PROTOTYPE_WITH_NON_OBJECT =
                    "overriding prototype with non-object";
          children: []
          pos: 2844
          length: 114
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType DETERMINISTIC_TEST =
                    DiagnosticType.warning(
                        "JSC_DETERMINISTIC_TEST",
                        "condition always evaluates to {2}\n" +
                        "left : {0}\n" +
                        "right: {1}");
          children: []
          pos: 3092
          length: 216
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType DETERMINISTIC_TEST_NO_RESULT =
                    DiagnosticType.warning(
                        "JSC_DETERMINISTIC_TEST_NO_RESULT",
                        "condition always evaluates to the same value\n" +
                        "left : {0}\n" +
                        "right: {1}");
          children: []
          pos: 3312
          length: 247
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INEXISTENT_ENUM_ELEMENT =
                    DiagnosticType.warning(
                        "JSC_INEXISTENT_ENUM_ELEMENT",
                        "element {0} does not exist on this enum");
          children: []
          pos: 3563
          length: 178
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INEXISTENT_PROPERTY =
                    DiagnosticType.disabled(
                        "JSC_INEXISTENT_PROPERTY",
                        "Property {0} never defined on {1}");
          children: []
          pos: 3838
          length: 165
        - type: field_declaration
          fields:
            text: |-
              protected static final DiagnosticType NOT_A_CONSTRUCTOR =
                    DiagnosticType.warning(
                        "JSC_NOT_A_CONSTRUCTOR",
                        "cannot instantiate non-constructor");
          children: []
          pos: 4007
          length: 171
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType BIT_OPERATION =
                    DiagnosticType.warning(
                        "JSC_BAD_TYPE_FOR_BIT_OPERATION",
                        "operator {0} cannot be applied to {1}");
          children: []
          pos: 4182
          length: 169
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType NOT_CALLABLE =
                    DiagnosticType.warning(
                        "JSC_NOT_FUNCTION_TYPE",
                        "{0} expressions are not callable");
          children: []
          pos: 4355
          length: 154
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType CONSTRUCTOR_NOT_CALLABLE =
                    DiagnosticType.warning(
                        "JSC_CONSTRUCTOR_NOT_CALLABLE",
                        "Constructor {0} should be called with the \"new\" keyword");
          children: []
          pos: 4513
          length: 198
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType FUNCTION_MASKS_VARIABLE =
                    DiagnosticType.warning(
                        "JSC_FUNCTION_MASKS_VARIABLE",
                        "function {0} masks variable (IE bug)");
          children: []
          pos: 4715
          length: 175
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType MULTIPLE_VAR_DEF = DiagnosticType.warning(
                    "JSC_MULTIPLE_VAR_DEF",
                    "declaration of multiple variables with shared type information");
          children: []
          pos: 4894
          length: 173
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ENUM_DUP = DiagnosticType.error("JSC_ENUM_DUP",
                    "enum element {0} already defined");
          children: []
          pos: 5071
          length: 118
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ENUM_NOT_CONSTANT =
                    DiagnosticType.warning("JSC_ENUM_NOT_CONSTANT",
                        "enum key {0} must be a syntactic constant");
          children: []
          pos: 5193
          length: 157
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INVALID_INTERFACE_MEMBER_DECLARATION =
                    DiagnosticType.warning(
                        "JSC_INVALID_INTERFACE_MEMBER_DECLARATION",
                        "interface members can only be empty property declarations,"
                        + " empty functions{0}");
          children: []
          pos: 5354
          length: 257
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INTERFACE_FUNCTION_NOT_EMPTY =
                    DiagnosticType.warning(
                        "JSC_INTERFACE_FUNCTION_NOT_EMPTY",
                        "interface member functions must have an empty body");
          children: []
          pos: 5615
          length: 199
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType CONFLICTING_EXTENDED_TYPE =
                    DiagnosticType.warning(
                        "JSC_CONFLICTING_EXTENDED_TYPE",
                        "{1} cannot extend this type; {0}s can only extend {0}s");
          children: []
          pos: 5818
          length: 197
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType CONFLICTING_IMPLEMENTED_TYPE =
                  DiagnosticType.warning(
                      "JSC_CONFLICTING_IMPLEMENTED_TYPE",
                      "{0} cannot implement this type; " +
                      "an interface can only extend, but not implement interfaces");
          children: []
          pos: 6019
          length: 246
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType BAD_IMPLEMENTED_TYPE =
                    DiagnosticType.warning(
                        "JSC_IMPLEMENTS_NON_INTERFACE",
                        "can only implement interfaces");
          children: []
          pos: 6269
          length: 166
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType HIDDEN_SUPERCLASS_PROPERTY =
                    DiagnosticType.warning(
                        "JSC_HIDDEN_SUPERCLASS_PROPERTY",
                        "property {0} already defined on superclass {1}; " +
                        "use @override to override it");
          children: []
          pos: 6439
          length: 236
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType HIDDEN_INTERFACE_PROPERTY =
                    DiagnosticType.warning(
                        "JSC_HIDDEN_INTERFACE_PROPERTY",
                        "property {0} already defined on interface {1}; " +
                        "use @override to override it");
          children: []
          pos: 6679
          length: 233
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType HIDDEN_SUPERCLASS_PROPERTY_MISMATCH =
                    DiagnosticType.warning("JSC_HIDDEN_SUPERCLASS_PROPERTY_MISMATCH",
                        "mismatch of the {0} property type and the type " +
                        "of the property it overrides from superclass {1}\n" +
                        "original: {2}\n" +
                        "override: {3}");
          children: []
          pos: 6916
          length: 322
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNKNOWN_OVERRIDE =
                    DiagnosticType.warning(
                        "JSC_UNKNOWN_OVERRIDE",
                        "property {0} not defined on any superclass of {1}");
          children: []
          pos: 7242
          length: 174
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INTERFACE_METHOD_OVERRIDE =
                    DiagnosticType.warning(
                        "JSC_INTERFACE_METHOD_OVERRIDE",
                        "property {0} is already defined by the {1} extended interface");
          children: []
          pos: 7420
          length: 204
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNKNOWN_EXPR_TYPE =
                    DiagnosticType.warning("JSC_UNKNOWN_EXPR_TYPE",
                        "could not determine the type of this expression");
          children: []
          pos: 7628
          length: 163
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNRESOLVED_TYPE =
                    DiagnosticType.warning("JSC_UNRESOLVED_TYPE",
                        "could not resolve the name {0} to a type");
          children: []
          pos: 7795
          length: 152
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType WRONG_ARGUMENT_COUNT =
                    DiagnosticType.warning(
                        "JSC_WRONG_ARGUMENT_COUNT",
                        "Function {0}: called with {1} argument(s). " +
                        "Function requires at least {2} argument(s){3}.");
          children: []
          pos: 7951
          length: 237
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ILLEGAL_IMPLICIT_CAST =
                    DiagnosticType.warning(
                        "JSC_ILLEGAL_IMPLICIT_CAST",
                        "Illegal annotation on {0}. @implicitCast may only be used in " +
                        "externs.");
          children: []
          pos: 8192
          length: 219
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INCOMPATIBLE_EXTENDED_PROPERTY_TYPE =
                    DiagnosticType.warning(
                        "JSC_INCOMPATIBLE_EXTENDED_PROPERTY_TYPE",
                        "Interface {0} has a property {1} with incompatible types in " +
                        "its super interfaces {2} and {3}");
          children: []
          pos: 8415
          length: 270
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType EXPECTED_THIS_TYPE =
                    DiagnosticType.warning(
                        "JSC_EXPECTED_THIS_TYPE",
                        "\"{0}\" must be called with a \"this\" type");
          children: []
          pos: 8689
          length: 172
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticGroup ALL_DIAGNOSTICS = new DiagnosticGroup(
                    DETERMINISTIC_TEST,
                    DETERMINISTIC_TEST_NO_RESULT,
                    INEXISTENT_ENUM_ELEMENT,
                    INEXISTENT_PROPERTY,
                    NOT_A_CONSTRUCTOR,
                    BIT_OPERATION,
                    NOT_CALLABLE,
                    CONSTRUCTOR_NOT_CALLABLE,
                    FUNCTION_MASKS_VARIABLE,
                    MULTIPLE_VAR_DEF,
                    ENUM_DUP,
                    ENUM_NOT_CONSTANT,
                    INVALID_INTERFACE_MEMBER_DECLARATION,
                    INTERFACE_FUNCTION_NOT_EMPTY,
                    CONFLICTING_EXTENDED_TYPE,
                    CONFLICTING_IMPLEMENTED_TYPE,
                    BAD_IMPLEMENTED_TYPE,
                    HIDDEN_SUPERCLASS_PROPERTY,
                    HIDDEN_INTERFACE_PROPERTY,
                    HIDDEN_SUPERCLASS_PROPERTY_MISMATCH,
                    UNKNOWN_OVERRIDE,
                    INTERFACE_METHOD_OVERRIDE,
                    UNKNOWN_EXPR_TYPE,
                    UNRESOLVED_TYPE,
                    WRONG_ARGUMENT_COUNT,
                    ILLEGAL_IMPLICIT_CAST,
                    INCOMPATIBLE_EXTENDED_PROPERTY_TYPE,
                    EXPECTED_THIS_TYPE,
                    RhinoErrorReporter.TYPE_PARSE_ERROR,
                    TypedScopeCreator.UNKNOWN_LENDS,
                    TypedScopeCreator.LENDS_ON_NON_OBJECT,
                    TypedScopeCreator.CTOR_INITIALIZER,
                    TypedScopeCreator.IFACE_INITIALIZER,
                    FunctionTypeBuilder.THIS_TYPE_NON_OBJECT);
          children: []
          pos: 8865
          length: 1160
        - type: field_declaration
          fields:
            text: private final AbstractCompiler compiler;
          children: []
          pos: 10029
          length: 40
        - type: field_declaration
          fields:
            text: private final TypeValidator validator;
          children: []
          pos: 10072
          length: 38
        - type: field_declaration
          fields:
            text: private final ReverseAbstractInterpreter reverseInterpreter;
          children: []
          pos: 10114
          length: 60
        - type: field_declaration
          fields:
            text: private final JSTypeRegistry typeRegistry;
          children: []
          pos: 10178
          length: 42
        - type: field_declaration
          fields:
            text: private Scope topScope;
          children: []
          pos: 10223
          length: 23
        - type: field_declaration
          fields:
            text: private ScopeCreator scopeCreator;
          children: []
          pos: 10250
          length: 34
        - type: field_declaration
          fields:
            text: private final CheckLevel reportMissingOverride;
          children: []
          pos: 10288
          length: 47
        - type: field_declaration
          fields:
            text: private final CheckLevel reportUnknownTypes;
          children: []
          pos: 10338
          length: 44
        - type: field_declaration
          fields:
            text: private boolean reportMissingProperties = true;
          children: []
          pos: 10482
          length: 47
        - type: field_declaration
          fields:
            text: private InferJSDocInfo inferJSDocInfo = null;
          children: []
          pos: 10533
          length: 45
        - type: field_declaration
          fields:
            text: private int typedCount = 0;
          children: []
          pos: 10659
          length: 27
        - type: field_declaration
          fields:
            text: private int nullCount = 0;
          children: []
          pos: 10689
          length: 26
        - type: field_declaration
          fields:
            text: private int unknownCount = 0;
          children: []
          pos: 10718
          length: 29
        - type: field_declaration
          fields:
            text: private boolean inExterns;
          children: []
          pos: 10750
          length: 26
        - type: field_declaration
          fields:
            text: private int noTypeCheckSection = 0;
          children: []
          pos: 10867
          length: 35
        - type: constructor_declaration
          fields:
            text: |-
              public TypeCheck(AbstractCompiler compiler,
                    ReverseAbstractInterpreter reverseInterpreter,
                    JSTypeRegistry typeRegistry,
                    Scope topScope,
                    ScopeCreator scopeCreator,
                    CheckLevel reportMissingOverride,
                    CheckLevel reportUnknownTypes) {
                  this.compiler = compiler;
                  this.validator = compiler.getTypeValidator();
                  this.reverseInterpreter = reverseInterpreter;
                  this.typeRegistry = typeRegistry;
                  this.topScope = topScope;
                  this.scopeCreator = scopeCreator;
                  this.reportMissingOverride = reportMissingOverride;
                  this.reportUnknownTypes = reportUnknownTypes;
                  this.inferJSDocInfo = new InferJSDocInfo(compiler);
                }
          children: []
          pos: 10906
          length: 667
        - type: constructor_declaration
          fields:
            text: |-
              public TypeCheck(AbstractCompiler compiler,
                    ReverseAbstractInterpreter reverseInterpreter,
                    JSTypeRegistry typeRegistry,
                    CheckLevel reportMissingOverride,
                    CheckLevel reportUnknownTypes) {
                  this(compiler, reverseInterpreter, typeRegistry, null, null,
                      reportMissingOverride, reportUnknownTypes);
                }
          children: []
          pos: 11577
          length: 331
        - type: constructor_declaration
          fields:
            text: |-
              TypeCheck(AbstractCompiler compiler,
                    ReverseAbstractInterpreter reverseInterpreter,
                    JSTypeRegistry typeRegistry) {
                  this(compiler, reverseInterpreter, typeRegistry, null, null,
                       CheckLevel.WARNING, CheckLevel.OFF);
                }
          children: []
          pos: 11912
          length: 241
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: reportMissingProperties
              children: []
              pos: 12244
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: boolean report
                children: []
                pos: 12268
                length: 14
              pos: 12234
              length: 110
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: reportMissingProperties = report;
                children: []
                pos: 12290
                length: 33
              - type: return_statement
                fields:
                  text: return this;
                children: []
                pos: 12328
                length: 12
              pos: 12284
              length: 60
          children: []
          pos: 12234
          length: 110
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: process
              children: []
              pos: 12621
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node externsRoot
                children: []
                pos: 12629
                length: 16
              pos: 12597
              length: 447
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(scopeCreator);
                children: []
                pos: 12666
                length: 41
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(topScope);
                children: []
                pos: 12712
                length: 37
              - type: local_variable_declaration
                fields:
                  text: Node externsAndJs = jsRoot.getParent();
                children: []
                pos: 12755
                length: 39
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(externsAndJs != null);
                children: []
                pos: 12799
                length: 47
              - type: expression_statement
                fields:
                  text: |-
                    Preconditions.checkState(
                            externsRoot == null || externsAndJs.hasChild(externsRoot));
                children: []
                pos: 12851
                length: 93
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: externsRoot
                            children: []
                            pos: 12954
                            length: 11
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 12969
                            length: 4
                        children: []
                        pos: 12954
                        length: 19
                    children: []
                    pos: 12953
                    length: 21
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: check(externsRoot, true);
                    children: []
                    pos: 12983
                    length: 25
                  pos: 12975
                  length: 39
                pos: 12950
                length: 64
              - type: expression_statement
                fields:
                  text: check(jsRoot, false);
                children: []
                pos: 13019
                length: 21
              pos: 12660
              length: 384
          children: []
          pos: 12597
          length: 447
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: processForTesting
              children: []
              pos: 13119
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node externsRoot
                children: []
                pos: 13137
                length: 16
              pos: 13106
              length: 639
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(scopeCreator == null);
                children: []
                pos: 13174
                length: 47
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(topScope == null);
                children: []
                pos: 13226
                length: 43
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(jsRoot.getParent() != null);
                children: []
                pos: 13275
                length: 53
              - type: local_variable_declaration
                fields:
                  text: Node externsAndJsRoot = jsRoot.getParent();
                children: []
                pos: 13333
                length: 43
              - type: expression_statement
                fields:
                  text: scopeCreator = new MemoizedScopeCreator(new TypedScopeCreator(compiler));
                children: []
                pos: 13382
                length: 73
              - type: expression_statement
                fields:
                  text: topScope = scopeCreator.createScope(externsAndJsRoot, null);
                children: []
                pos: 13460
                length: 60
              - type: local_variable_declaration
                fields:
                  text: |-
                    TypeInferencePass inference = new TypeInferencePass(compiler,
                            reverseInterpreter, topScope, scopeCreator);
                children: []
                pos: 13526
                length: 114
              - type: expression_statement
                fields:
                  text: inference.process(externsRoot, jsRoot);
                children: []
                pos: 13646
                length: 39
              - type: expression_statement
                fields:
                  text: process(externsRoot, jsRoot);
                children: []
                pos: 13690
                length: 29
              - type: return_statement
                fields:
                  text: return topScope;
                children: []
                pos: 13725
                length: 16
              pos: 13168
              length: 577
          children: []
          pos: 13106
          length: 639
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: check
              children: []
              pos: 13762
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node node
                children: []
                pos: 13768
                length: 9
              pos: 13750
              length: 349
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(node);
                children: []
                pos: 13802
                length: 33
              - type: local_variable_declaration
                fields:
                  text: NodeTraversal t = new NodeTraversal(compiler, this, scopeCreator);
                children: []
                pos: 13841
                length: 66
              - type: expression_statement
                fields:
                  text: inExterns = externs;
                children: []
                pos: 13912
                length: 20
              - type: expression_statement
                fields:
                  text: t.traverseWithScope(node, topScope);
                children: []
                pos: 13937
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: externs
                        children: []
                        pos: 13982
                        length: 7
                    children: []
                    pos: 13981
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: inferJSDocInfo.process(node, null);
                    children: []
                    pos: 13999
                    length: 35
                  pos: 13991
                  length: 49
                pos: 13978
                length: 117
              pos: 13796
              length: 303
          children: []
          pos: 13750
          length: 349
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkNoTypeCheckSection
              children: []
              pos: 14117
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 14141
                length: 6
              pos: 14104
              length: 537
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 14185
                        length: 11
                    children: []
                    pos: 14184
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.SCRIPT:
                              case Token.BLOCK:
                              case Token.VAR:
                              case Token.FUNCTION:
                              case Token.ASSIGN:
                                JSDocInfo info = n.getJSDocInfo();
                                if (info != null && info.isNoTypeCheck()) {
                                  if (enterSection) {
                                    noTypeCheckSection++;
                                  } else {
                                    noTypeCheckSection--;
                                  }
                                }
                                validator.setShouldReport(noTypeCheckSection == 0);
                                break;
                            }
                    children: []
                    pos: 14198
                    length: 439
                children: []
                pos: 14177
                length: 460
              pos: 14171
              length: 470
          children: []
          pos: 14104
          length: 537
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: report
              children: []
              pos: 14658
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 14665
                length: 15
              pos: 14645
              length: 195
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: noTypeCheckSection
                            children: []
                            pos: 14758
                            length: 18
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 14780
                            length: 1
                        children: []
                        pos: 14758
                        length: 23
                    children: []
                    pos: 14757
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: t.report(n, diagnosticType, arguments);
                    children: []
                    pos: 14791
                    length: 39
                  pos: 14783
                  length: 53
                pos: 14754
                length: 82
              pos: 14748
              length: 92
          children: []
          pos: 14645
          length: 195
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: shouldTraverse
              children: []
              pos: 14871
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 14893
                length: 15
              pos: 14844
              length: 1141
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: checkNoTypeCheckSection(n, true);
                children: []
                pos: 14937
                length: 33
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 14983
                        length: 11
                    children: []
                    pos: 14982
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.FUNCTION:
                                // normal type checking
                                final Scope outerScope = t.getScope();
                                final String functionPrivateName = n.getFirstChild().getString();
                                if (functionPrivateName != null && functionPrivateName.length() > 0 &&
                                    outerScope.isDeclared(functionPrivateName, false) &&
                                    // Ideally, we would want to check whether the type in the scope
                                    // differs from the type being defined, but then the extern
                                    // redeclarations of built-in types generates spurious warnings.
                                    !(outerScope.getVar(
                                        functionPrivateName).getType() instanceof FunctionType)) {
                                  report(t, n, FUNCTION_MASKS_VARIABLE, functionPrivateName);
                                }

                                // TODO(user): Only traverse the function's body. The function's
                                // name and arguments are traversed by the scope creator, and ideally
                                // should not be traversed by the type checker.
                                break;
                            }
                    children: []
                    pos: 14996
                    length: 968
                children: []
                pos: 14975
                length: 989
              - type: return_statement
                fields:
                  text: return true;
                children: []
                pos: 15969
                length: 12
              pos: 14931
              length: 1054
          children: []
          pos: 14844
          length: 1141
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visit
              children: []
              pos: 16458
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 16464
                length: 15
              pos: 16434
              length: 10190
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType childType;
                children: []
                pos: 16508
                length: 17
              - type: local_variable_declaration
                fields:
                  text: JSType leftType, rightType;
                children: []
                pos: 16530
                length: 27
              - type: local_variable_declaration
                fields:
                  text: Node left, right;
                children: []
                pos: 16562
                length: 17
              - type: local_variable_declaration
                fields:
                  text: boolean typeable = true;
                children: []
                pos: 16650
                length: 24
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 16688
                        length: 11
                    children: []
                    pos: 16687
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.NAME:
                                typeable = visitName(t, n, parent);
                                break;

                              case Token.PARAM_LIST:
                                typeable = false;
                                break;

                              case Token.COMMA:
                                ensureTyped(t, n, getJSType(n.getLastChild()));
                                break;

                              case Token.TRUE:
                              case Token.FALSE:
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.THIS:
                                ensureTyped(t, n, t.getScope().getTypeOfThis());
                                break;

                              case Token.NULL:
                                ensureTyped(t, n, NULL_TYPE);
                                break;

                              case Token.NUMBER:
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.STRING:
                                ensureTyped(t, n, STRING_TYPE);
                                break;

                              case Token.STRING_KEY:
                                typeable = false;
                                break;

                              case Token.GETTER_DEF:
                              case Token.SETTER_DEF:
                                // Object literal keys are handled with OBJECTLIT
                                break;

                              case Token.ARRAYLIT:
                                ensureTyped(t, n, ARRAY_TYPE);
                                break;

                              case Token.REGEXP:
                                ensureTyped(t, n, REGEXP_TYPE);
                                break;

                              case Token.GETPROP:
                                visitGetProp(t, n, parent);
                                typeable = !(parent.isAssign() &&
                                             parent.getFirstChild() == n);
                                break;

                              case Token.GETELEM:
                                visitGetElem(t, n);
                                // The type of GETELEM is always unknown, so no point counting that.
                                // If that unknown leaks elsewhere (say by an assignment to another
                                // variable), then it will be counted.
                                typeable = false;
                                break;

                              case Token.VAR:
                                visitVar(t, n);
                                typeable = false;
                                break;

                              case Token.NEW:
                                visitNew(t, n);
                                break;

                              case Token.CALL:
                                visitCall(t, n);
                                typeable = !parent.isExprResult();
                                break;

                              case Token.RETURN:
                                visitReturn(t, n);
                                typeable = false;
                                break;

                              case Token.DEC:
                              case Token.INC:
                                left = n.getFirstChild();
                                validator.expectNumber(
                                    t, left, getJSType(left), "increment/decrement");
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.NOT:
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.VOID:
                                ensureTyped(t, n, VOID_TYPE);
                                break;

                              case Token.TYPEOF:
                                ensureTyped(t, n, STRING_TYPE);
                                break;

                              case Token.BITNOT:
                                childType = getJSType(n.getFirstChild());
                                if (!childType.matchesInt32Context()) {
                                  report(t, n, BIT_OPERATION, NodeUtil.opToStr(n.getType()),
                                      childType.toString());
                                }
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.POS:
                              case Token.NEG:
                                left = n.getFirstChild();
                                validator.expectNumber(t, left, getJSType(left), "sign operator");
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.EQ:
                              case Token.NE:
                              case Token.SHEQ:
                              case Token.SHNE: {
                                left = n.getFirstChild();
                                right = n.getLastChild();

                                if (left.isTypeOf()) {
                                  if (right.isString()) {
                                    checkTypeofString(t, right, right.getString());
                                  }
                                } else if (right.isTypeOf() && left.isString()) {
                                  checkTypeofString(t, left, left.getString());
                                }

                                leftType = getJSType(left);
                                rightType = getJSType(right);

                                // We do not want to warn about explicit comparisons to VOID. People
                                // often do this if they think their type annotations screwed up.
                                //
                                // We do want to warn about cases where people compare things like
                                // (Array|null) == (Function|null)
                                // because it probably means they screwed up.
                                //
                                // This heuristic here is not perfect, but should catch cases we
                                // care about without too many false negatives.
                                JSType leftTypeRestricted = leftType.restrictByNotNullOrUndefined();
                                JSType rightTypeRestricted = rightType.restrictByNotNullOrUndefined();

                                TernaryValue result = TernaryValue.UNKNOWN;
                                if (n.getType() == Token.EQ || n.getType() == Token.NE) {
                                  result = leftTypeRestricted.testForEquality(rightTypeRestricted);
                                  if (n.isNE()) {
                                    result = result.not();
                                  }
                                } else {
                                  // SHEQ or SHNE
                                  if (!leftTypeRestricted.canTestForShallowEqualityWith(
                                          rightTypeRestricted)) {
                                    result = n.getType() == Token.SHEQ ?
                                        TernaryValue.FALSE : TernaryValue.TRUE;
                                  }
                                }

                                if (result != TernaryValue.UNKNOWN) {
                                  report(t, n, DETERMINISTIC_TEST, leftType.toString(),
                                      rightType.toString(), result.toString());
                                }
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;
                              }

                              case Token.LT:
                              case Token.LE:
                              case Token.GT:
                              case Token.GE:
                                leftType = getJSType(n.getFirstChild());
                                rightType = getJSType(n.getLastChild());
                                if (rightType.isNumber()) {
                                  validator.expectNumber(
                                      t, n, leftType, "left side of numeric comparison");
                                } else if (leftType.isNumber()) {
                                  validator.expectNumber(
                                      t, n, rightType, "right side of numeric comparison");
                                } else if (leftType.matchesNumberContext() &&
                                           rightType.matchesNumberContext()) {
                                  // OK.
                                } else {
                                  // Whether the comparison is numeric will be determined at runtime
                                  // each time the expression is evaluated. Regardless, both operands
                                  // should match a string context.
                                  String message = "left side of comparison";
                                  validator.expectString(t, n, leftType, message);
                                  validator.expectNotNullOrUndefined(
                                      t, n, leftType, message, getNativeType(STRING_TYPE));
                                  message = "right side of comparison";
                                  validator.expectString(t, n, rightType, message);
                                  validator.expectNotNullOrUndefined(
                                      t, n, rightType, message, getNativeType(STRING_TYPE));
                                }
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.IN:
                                validator.expectObject(t, n, getJSType(n.getLastChild()),
                                                       "'in' requires an object");
                                left = n.getFirstChild();
                                validator.expectString(t, left, getJSType(left), "left side of 'in'");
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.INSTANCEOF:
                                left = n.getFirstChild();
                                right = n.getLastChild();
                                rightType = getJSType(right).restrictByNotNullOrUndefined();
                                validator.expectAnyObject(
                                    t, left, getJSType(left), "deterministic instanceof yields false");
                                validator.expectActualObject(
                                    t, right, rightType, "instanceof requires an object");
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.ASSIGN:
                                visitAssign(t, n);
                                typeable = false;
                                break;

                              case Token.ASSIGN_LSH:
                              case Token.ASSIGN_RSH:
                              case Token.ASSIGN_URSH:
                              case Token.ASSIGN_DIV:
                              case Token.ASSIGN_MOD:
                              case Token.ASSIGN_BITOR:
                              case Token.ASSIGN_BITXOR:
                              case Token.ASSIGN_BITAND:
                              case Token.ASSIGN_SUB:
                              case Token.ASSIGN_ADD:
                              case Token.ASSIGN_MUL:
                              case Token.LSH:
                              case Token.RSH:
                              case Token.URSH:
                              case Token.DIV:
                              case Token.MOD:
                              case Token.BITOR:
                              case Token.BITXOR:
                              case Token.BITAND:
                              case Token.SUB:
                              case Token.ADD:
                              case Token.MUL:
                                visitBinaryOperator(n.getType(), t, n);
                                break;

                              case Token.DELPROP:
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.CASE:
                                JSType switchType = getJSType(parent.getFirstChild());
                                JSType caseType = getJSType(n.getFirstChild());
                                validator.expectSwitchMatchesCase(t, n, switchType, caseType);
                                typeable = false;
                                break;

                              case Token.WITH: {
                                Node child = n.getFirstChild();
                                childType = getJSType(child);
                                validator.expectObject(t, child, childType, "with requires an object");
                                typeable = false;
                                break;
                              }

                              case Token.FUNCTION:
                                visitFunction(t, n);
                                break;

                              // These nodes have no interesting type behavior.
                              case Token.LABEL:
                              case Token.LABEL_NAME:
                              case Token.SWITCH:
                              case Token.BREAK:
                              case Token.CATCH:
                              case Token.TRY:
                              case Token.SCRIPT:
                              case Token.EXPR_RESULT:
                              case Token.BLOCK:
                              case Token.EMPTY:
                              case Token.DEFAULT_CASE:
                              case Token.CONTINUE:
                              case Token.DEBUGGER:
                              case Token.THROW:
                                typeable = false;
                                break;

                              // These nodes require data flow analysis.
                              case Token.DO:
                              case Token.FOR:
                              case Token.IF:
                              case Token.WHILE:
                                typeable = false;
                                break;

                              // These nodes are typed during the type inference.
                              case Token.AND:
                              case Token.HOOK:
                              case Token.OBJECTLIT:
                              case Token.OR:
                                if (n.getJSType() != null) { // If we didn't run type inference.
                                  ensureTyped(t, n);
                                } else {
                                  // If this is an enum, then give that type to the objectlit as well.
                                  if ((n.isObjectLit())
                                      && (parent.getJSType() instanceof EnumType)) {
                                    ensureTyped(t, n, parent.getJSType());
                                  } else {
                                    ensureTyped(t, n);
                                  }
                                }
                                if (n.isObjectLit()) {
                                  for (Node key : n.children()) {
                                    visitObjLitKey(t, key, n);
                                  }
                                }
                                break;

                              default:
                                report(t, n, UNEXPECTED_TOKEN, Token.name(n.getType()));
                                ensureTyped(t, n);
                                break;
                            }
                    children: []
                    pos: 16701
                    length: 9697
                children: []
                pos: 16680
                length: 9718
              - type: expression_statement
                fields:
                  text: typeable = typeable && !inExterns;
                children: []
                pos: 26481
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: typeable
                        children: []
                        pos: 26525
                        length: 8
                    children: []
                    pos: 26524
                    length: 10
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: doPercentTypedAccounting(t, n);
                    children: []
                    pos: 26543
                    length: 31
                  pos: 26535
                  length: 45
                pos: 26521
                length: 59
              - type: expression_statement
                fields:
                  text: checkNoTypeCheckSection(n, false);
                children: []
                pos: 26586
                length: 34
              pos: 16502
              length: 10122
          children: []
          pos: 16434
          length: 10190
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkTypeofString
              children: []
              pos: 26641
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 26659
                length: 15
              pos: 26628
              length: 317
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: |-
                            !(s.equals("number") || s.equals("string") || s.equals("boolean") ||
                                      s.equals("undefined") || s.equals("function") ||
                                      s.equals("object") || s.equals("unknown"))
                        children: []
                        pos: 26704
                        length: 180
                    children: []
                    pos: 26703
                    length: 182
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: validator.expectValidTypeofName(t, n, s);
                    children: []
                    pos: 26894
                    length: 41
                  pos: 26886
                  length: 55
                pos: 26700
                length: 241
              pos: 26694
              length: 251
          children: []
          pos: 26628
          length: 317
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: doPercentTypedAccounting
              children: []
              pos: 27068
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 27093
                length: 15
              pos: 27055
              length: 384
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 27124
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: type
                            children: []
                            pos: 27161
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 27169
                            length: 4
                        children: []
                        pos: 27161
                        length: 12
                    children: []
                    pos: 27160
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: nullCount++;
                    children: []
                    pos: 27183
                    length: 12
                  pos: 27175
                  length: 26
                pos: 27157
                length: 278
              pos: 27118
              length: 321
          children: []
          pos: 27055
          length: 384
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitAssign
              children: []
              pos: 27776
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 27788
                length: 15
              pos: 27763
              length: 3934
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSDocInfo info = assign.getJSDocInfo();
                children: []
                pos: 27824
                length: 39
              - type: local_variable_declaration
                fields:
                  text: Node lvalue = assign.getFirstChild();
                children: []
                pos: 27868
                length: 37
              - type: local_variable_declaration
                fields:
                  text: Node rvalue = assign.getLastChild();
                children: []
                pos: 27910
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: lvalue.isGetProp()
                        children: []
                        pos: 28028
                        length: 18
                    children: []
                    pos: 28027
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Node object = lvalue.getFirstChild();
                    children: []
                    pos: 28056
                    length: 37
                  - type: local_variable_declaration
                    fields:
                      text: JSType objectJsType = getJSType(object);
                    children: []
                    pos: 28100
                    length: 40
                  - type: local_variable_declaration
                    fields:
                      text: String property = lvalue.getLastChild().getString();
                    children: []
                    pos: 28147
                    length: 52
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: object.isGetProp()
                            children: []
                            pos: 28331
                            length: 18
                        children: []
                        pos: 28330
                        length: 20
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType jsType = getJSType(object.getFirstChild());
                        children: []
                        pos: 28361
                        length: 50
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: jsType.isInterface()
                                    children: []
                                    pos: 28424
                                    length: 20
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: object.getLastChild().getString().equals("prototype")
                                    children: []
                                    pos: 28460
                                    length: 53
                                children: []
                                pos: 28424
                                length: 89
                            children: []
                            pos: 28423
                            length: 91
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: visitInterfaceGetprop(t, assign, object, property,
                                lvalue, rvalue);
                            children: []
                            pos: 28527
                            length: 67
                          pos: 28515
                          length: 89
                        pos: 28420
                        length: 184
                      pos: 28351
                      length: 261
                    pos: 28327
                    length: 285
                  - type: expression_statement
                    fields:
                      text: checkEnumAlias(t, info, rvalue);
                    children: []
                    pos: 28620
                    length: 32
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: property.equals("prototype")
                            children: []
                            pos: 28912
                            length: 28
                        children: []
                        pos: 28911
                        length: 30
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: not_equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: objectJsType
                                        children: []
                                        pos: 28956
                                        length: 12
                                      right:
                                        type: null_literal
                                        fields: {}
                                        children: []
                                        pos: 28972
                                        length: 4
                                    children: []
                                    pos: 28956
                                    length: 20
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: objectJsType.isFunctionType()
                                    children: []
                                    pos: 28980
                                    length: 29
                                children: []
                                pos: 28956
                                length: 53
                            children: []
                            pos: 28955
                            length: 55
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: local_variable_declaration
                            fields:
                              text: FunctionType functionType = objectJsType.toMaybeFunctionType();
                            children: []
                            pos: 29023
                            length: 63
                          - type: if_statement
                            fields:
                              condition:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: method_invocation
                                    fields:
                                      text: functionType.isConstructor()
                                    children: []
                                    pos: 29101
                                    length: 28
                                children: []
                                pos: 29100
                                length: 30
                            children:
                            - type: block
                              fields: {}
                              children:
                              - type: local_variable_declaration
                                fields:
                                  text: JSType rvalueType = rvalue.getJSType();
                                children: []
                                pos: 29145
                                length: 39
                              - type: expression_statement
                                fields:
                                  text: |-
                                    validator.expectObject(t, rvalue, rvalueType,
                                                    OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
                                children: []
                                pos: 29197
                                length: 100
                              - type: return_statement
                                fields:
                                  text: return;
                                children: []
                                pos: 29310
                                length: 7
                              pos: 29131
                              length: 198
                            pos: 29097
                            length: 232
                          pos: 29011
                          length: 328
                        pos: 28952
                        length: 387
                      pos: 28942
                      length: 405
                    pos: 28908
                    length: 439
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        ObjectType type = ObjectType.cast(
                                  objectJsType.restrictByNotNullOrUndefined());
                    children: []
                    pos: 29504
                    length: 90
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 29605
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 29613
                                length: 4
                            children: []
                            pos: 29605
                            length: 12
                        children: []
                        pos: 29604
                        length: 14
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: and
                                    fields:
                                      left:
                                        type: method_invocation
                                        fields:
                                          text: type.hasProperty(property)
                                        children: []
                                        pos: 29633
                                        length: 26
                                      right:
                                        type: unary_expression
                                        fields:
                                          text: "!type.isPropertyTypeInferred(property)"
                                        children: []
                                        pos: 29675
                                        length: 38
                                    children: []
                                    pos: 29633
                                    length: 80
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: "!propertyIsImplicitCast(type, property)"
                                    children: []
                                    pos: 29729
                                    length: 39
                                children: []
                                pos: 29633
                                length: 135
                            children: []
                            pos: 29632
                            length: 137
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: local_variable_declaration
                            fields:
                              text: JSType expectedType = type.getPropertyType(property);
                            children: []
                            pos: 29782
                            length: 53
                          - type: if_statement
                            fields:
                              condition:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: unary_expression
                                    fields:
                                      text: "!expectedType.isUnknownType()"
                                    children: []
                                    pos: 29850
                                    length: 29
                                children: []
                                pos: 29849
                                length: 31
                            children:
                            - type: block
                              fields: {}
                              children:
                              - type: expression_statement
                                fields:
                                  text: |-
                                    validator.expectCanAssignToPropertyOf(
                                                    t, assign, getJSType(rvalue),
                                                    expectedType, object, property);
                                children: []
                                pos: 29895
                                length: 133
                              - type: expression_statement
                                fields:
                                  text: |-
                                    checkPropertyInheritanceOnGetpropAssign(
                                                    t, assign, object, property, info, expectedType);
                                children: []
                                pos: 30041
                                length: 106
                              - type: return_statement
                                fields:
                                  text: return;
                                children: []
                                pos: 30160
                                length: 7
                              pos: 29881
                              length: 298
                            pos: 29846
                            length: 333
                          pos: 29770
                          length: 419
                        pos: 29629
                        length: 560
                      pos: 29619
                      length: 578
                    pos: 29601
                    length: 596
                  - type: expression_statement
                    fields:
                      text: |-
                        checkPropertyInheritanceOnGetpropAssign(
                                  t, assign, object, property, info, getNativeType(UNKNOWN_TYPE));
                    children: []
                    pos: 30350
                    length: 115
                  pos: 28048
                  length: 2423
                pos: 28024
                length: 2447
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = getJSType(lvalue);
                children: []
                pos: 30720
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: lvalue.isQualifiedName()
                        children: []
                        pos: 30765
                        length: 24
                    children: []
                    pos: 30764
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType rvalueType = getJSType(assign.getLastChild());
                    children: []
                    pos: 30841
                    length: 53
                  - type: local_variable_declaration
                    fields:
                      text: Var var = t.getScope().getVar(lvalue.getQualifiedName());
                    children: []
                    pos: 30901
                    length: 57
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: var
                                children: []
                                pos: 30969
                                length: 3
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 30976
                                length: 4
                            children: []
                            pos: 30969
                            length: 11
                        children: []
                        pos: 30968
                        length: 13
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: method_invocation
                                fields:
                                  text: var.isTypeInferred()
                                children: []
                                pos: 30996
                                length: 20
                            children: []
                            pos: 30995
                            length: 22
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: return_statement
                            fields:
                              text: return;
                            children: []
                            pos: 31030
                            length: 7
                          pos: 31018
                          length: 29
                        pos: 30992
                        length: 55
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: NodeUtil.getRootOfQualifiedName(lvalue).isThis()
                                    children: []
                                    pos: 31061
                                    length: 48
                                  right:
                                    type: not_equals
                                    fields:
                                      left:
                                        type: method_invocation
                                        fields:
                                          text: t.getScope()
                                        children: []
                                        pos: 31125
                                        length: 12
                                      right:
                                        type: method_invocation
                                        fields:
                                          text: var.getScope()
                                        children: []
                                        pos: 31141
                                        length: 14
                                    children: []
                                    pos: 31125
                                    length: 30
                                children: []
                                pos: 31061
                                length: 94
                            children: []
                            pos: 31060
                            length: 96
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: return_statement
                            fields:
                              text: return;
                            children: []
                            pos: 31236
                            length: 7
                          pos: 31157
                          length: 96
                        pos: 31057
                        length: 196
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: not_equals
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: var.getType()
                                    children: []
                                    pos: 31267
                                    length: 13
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 31284
                                    length: 4
                                children: []
                                pos: 31267
                                length: 21
                            children: []
                            pos: 31266
                            length: 23
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: leftType = var.getType();
                            children: []
                            pos: 31302
                            length: 25
                          pos: 31290
                          length: 47
                        pos: 31263
                        length: 74
                      pos: 30982
                      length: 363
                    pos: 30965
                    length: 380
                  pos: 30791
                  length: 560
                pos: 30761
                length: 590
              - type: local_variable_declaration
                fields:
                  text: Node rightChild = assign.getLastChild();
                children: []
                pos: 31419
                length: 40
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = getJSType(rightChild);
                children: []
                pos: 31464
                length: 41
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: |-
                            validator.expectCanAssignTo(
                                        t, assign, rightType, leftType, "assignment")
                        children: []
                        pos: 31514
                        length: 86
                    children: []
                    pos: 31513
                    length: 88
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, assign, rightType);
                    children: []
                    pos: 31610
                    length: 34
                  pos: 31602
                  length: 48
                pos: 31510
                length: 183
              pos: 27818
              length: 3879
          children: []
          pos: 27763
          length: 3934
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkPropertyInheritanceOnGetpropAssign
              children: []
              pos: 31714
              length: 39
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 31761
                length: 15
              pos: 31701
              length: 1242
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: object.isGetProp()
                        children: []
                        pos: 32375
                        length: 18
                    children: []
                    pos: 32374
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Node object2 = object.getFirstChild();
                    children: []
                    pos: 32403
                    length: 38
                  - type: local_variable_declaration
                    fields:
                      text: String property2 = NodeUtil.getStringValue(object.getLastChild());
                    children: []
                    pos: 32448
                    length: 66
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: '"prototype".equals(property2)'
                            children: []
                            pos: 32526
                            length: 29
                        children: []
                        pos: 32525
                        length: 31
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType jsType = getJSType(object2);
                        children: []
                        pos: 32567
                        length: 35
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: method_invocation
                                fields:
                                  text: jsType.isFunctionType()
                                children: []
                                pos: 32615
                                length: 23
                            children: []
                            pos: 32614
                            length: 25
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: local_variable_declaration
                            fields:
                              text: FunctionType functionType = jsType.toMaybeFunctionType();
                            children: []
                            pos: 32652
                            length: 57
                          - type: if_statement
                            fields:
                              condition:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: or
                                    fields:
                                      left:
                                        type: method_invocation
                                        fields:
                                          text: functionType.isConstructor()
                                        children: []
                                        pos: 32724
                                        length: 28
                                      right:
                                        type: method_invocation
                                        fields:
                                          text: functionType.isInterface()
                                        children: []
                                        pos: 32756
                                        length: 26
                                    children: []
                                    pos: 32724
                                    length: 58
                                children: []
                                pos: 32723
                                length: 60
                            children:
                            - type: block
                              fields: {}
                              children:
                              - type: expression_statement
                                fields:
                                  text: |-
                                    checkDeclaredPropertyInheritance(
                                                    t, assign, functionType, property, info, propertyType);
                                children: []
                                pos: 32798
                                length: 105
                              pos: 32784
                              length: 131
                            pos: 32720
                            length: 195
                          pos: 32640
                          length: 285
                        pos: 32611
                        length: 314
                      pos: 32557
                      length: 376
                    pos: 32522
                    length: 411
                  pos: 32395
                  length: 544
                pos: 32371
                length: 568
              pos: 31864
              length: 1079
          children: []
          pos: 31701
          length: 1242
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitObjLitKey
              children: []
              pos: 33241
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 33256
                length: 15
              pos: 33228
              length: 2108
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: objlit.isFromExterns()
                        children: []
                        pos: 33437
                        length: 22
                    children: []
                    pos: 33436
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, key);
                    children: []
                    pos: 33469
                    length: 20
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 33496
                    length: 7
                  pos: 33461
                  length: 48
                pos: 33433
                length: 76
              - type: local_variable_declaration
                fields:
                  text: Node rvalue = key.getFirstChild();
                children: []
                pos: 33743
                length: 34
              - type: local_variable_declaration
                fields:
                  text: |-
                    JSType rightType = NodeUtil.getObjectLitKeyTypeFromValueType(
                            key, getJSType(rvalue));
                children: []
                pos: 33782
                length: 94
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: rightType
                            children: []
                            pos: 33885
                            length: 9
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 33898
                            length: 4
                        children: []
                        pos: 33885
                        length: 17
                    children: []
                    pos: 33884
                    length: 19
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: rightType = getNativeType(UNKNOWN_TYPE);
                    children: []
                    pos: 33912
                    length: 40
                  pos: 33904
                  length: 54
                pos: 33881
                length: 77
              - type: local_variable_declaration
                fields:
                  text: Node owner = objlit;
                children: []
                pos: 33964
                length: 20
              - type: local_variable_declaration
                fields:
                  text: JSType keyType = getJSType(key);
                children: []
                pos: 34044
                length: 32
              - type: local_variable_declaration
                fields:
                  text: JSType allowedValueType = keyType;
                children: []
                pos: 34082
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: allowedValueType.isEnumElementType()
                        children: []
                        pos: 34125
                        length: 36
                    children: []
                    pos: 34124
                    length: 38
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        allowedValueType =
                                  allowedValueType.toMaybeEnumElementType().getPrimitiveType();
                    children: []
                    pos: 34171
                    length: 90
                  pos: 34163
                  length: 104
                pos: 34121
                length: 146
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean valid = validator.expectCanAssignToPropertyOf(t, key,
                            rightType, allowedValueType,
                            owner, NodeUtil.getObjectLitKeyName(key));
                children: []
                pos: 34273
                length: 149
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: valid
                        children: []
                        pos: 34431
                        length: 5
                    children: []
                    pos: 34430
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, key, rightType);
                    children: []
                    pos: 34446
                    length: 31
                  pos: 34438
                  length: 45
                pos: 34427
                length: 96
              - type: local_variable_declaration
                fields:
                  text: JSType objlitType = getJSType(objlit);
                children: []
                pos: 34809
                length: 38
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType type = ObjectType.cast(
                            objlitType.restrictByNotNullOrUndefined());
                children: []
                pos: 34852
                length: 86
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: type
                            children: []
                            pos: 34947
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 34955
                            length: 4
                        children: []
                        pos: 34947
                        length: 12
                    children: []
                    pos: 34946
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: String property = NodeUtil.getObjectLitKeyName(key);
                    children: []
                    pos: 34969
                    length: 52
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: type.hasProperty(property)
                                    children: []
                                    pos: 35032
                                    length: 26
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: "!type.isPropertyTypeInferred(property)"
                                    children: []
                                    pos: 35072
                                    length: 38
                                children: []
                                pos: 35032
                                length: 78
                              right:
                                type: unary_expression
                                fields:
                                  text: "!propertyIsImplicitCast(type, property)"
                                children: []
                                pos: 35124
                                length: 39
                            children: []
                            pos: 35032
                            length: 131
                        children: []
                        pos: 35031
                        length: 133
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            validator.expectCanAssignToPropertyOf(
                                        t, key, keyType,
                                        type.getPropertyType(property), owner, property);
                        children: []
                        pos: 35175
                        length: 129
                      pos: 35165
                      length: 147
                    pos: 35028
                    length: 284
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 35319
                    length: 7
                  pos: 34961
                  length: 371
                pos: 34943
                length: 389
              pos: 33296
              length: 2040
          children: []
          pos: 33228
          length: 2108
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: propertyIsImplicitCast
              children: []
              pos: 35471
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: ObjectType type
                children: []
                pos: 35494
                length: 15
              pos: 35455
              length: 309
            body:
              type: block
              fields: {}
              children:
              - type: for_statement
                fields:
                  text: |-
                    for (; type != null; type = type.getImplicitPrototype()) {
                          JSDocInfo docInfo = type.getOwnPropertyJSDocInfo(prop);
                          if (docInfo != null && docInfo.isImplicitCast()) {
                            return true;
                          }
                        }
                children: []
                pos: 35530
                length: 212
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 35747
                length: 13
              pos: 35524
              length: 240
          children: []
          pos: 35455
          length: 309
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkDeclaredPropertyInheritance
              children: []
              pos: 36033
              length: 32
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 36073
                length: 15
              pos: 36020
              length: 4902
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: hasUnknownOrEmptySupertype(ctorType)
                        children: []
                        pos: 36286
                        length: 36
                    children: []
                    pos: 36285
                    length: 38
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 36332
                    length: 7
                  pos: 36324
                  length: 21
                pos: 36282
                length: 63
              - type: local_variable_declaration
                fields:
                  text: FunctionType superClass = ctorType.getSuperClassConstructor();
                children: []
                pos: 36351
                length: 62
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean superClassHasProperty = superClass != null &&
                            superClass.getInstanceType().hasProperty(propertyName);
                children: []
                pos: 36418
                length: 117
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean superClassHasDeclaredProperty = superClass != null &&
                            superClass.getInstanceType().isPropertyTypeDeclared(propertyName);
                children: []
                pos: 36540
                length: 136
              - type: local_variable_declaration
                fields:
                  text: boolean superInterfaceHasProperty = false;
                children: []
                pos: 36703
                length: 42
              - type: local_variable_declaration
                fields:
                  text: boolean superInterfaceHasDeclaredProperty = false;
                children: []
                pos: 36750
                length: 50
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: ctorType.isInterface()
                        children: []
                        pos: 36809
                        length: 22
                    children: []
                    pos: 36808
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: enhanced_for_statement
                    fields:
                      text: |-
                        for (ObjectType interfaceType : ctorType.getExtendedInterfaces()) {
                                superInterfaceHasProperty =
                                    superInterfaceHasProperty ||
                                    interfaceType.hasProperty(propertyName);
                                superInterfaceHasDeclaredProperty =
                                    superInterfaceHasDeclaredProperty ||
                                    interfaceType.isPropertyTypeDeclared(propertyName);
                              }
                    children: []
                    pos: 36841
                    length: 362
                  pos: 36833
                  length: 376
                pos: 36805
                length: 404
              - type: local_variable_declaration
                fields:
                  text: boolean declaredOverride = info != null && info.isOverride();
                children: []
                pos: 37214
                length: 61
              - type: local_variable_declaration
                fields:
                  text: boolean foundInterfaceProperty = false;
                children: []
                pos: 37281
                length: 39
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: ctorType.isConstructor()
                        children: []
                        pos: 37329
                        length: 24
                    children: []
                    pos: 37328
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: enhanced_for_statement
                    fields:
                      text: |-
                        for (JSType implementedInterface :
                                  ctorType.getAllImplementedInterfaces()) {
                                if (implementedInterface.isUnknownType() ||
                                    implementedInterface.isEmptyType()) {
                                  continue;
                                }
                                FunctionType interfaceType =
                                    implementedInterface.toObjectType().getConstructor();
                                Preconditions.checkNotNull(interfaceType);

                                boolean interfaceHasProperty =
                                    interfaceType.getPrototype().hasProperty(propertyName);
                                foundInterfaceProperty = foundInterfaceProperty ||
                                    interfaceHasProperty;
                                if (reportMissingOverride.isOn()
                                    && !declaredOverride
                                    && interfaceHasProperty) {
                                  // @override not present, but the property does override an interface
                                  // property
                                  compiler.report(t.makeError(n, reportMissingOverride,
                                      HIDDEN_INTERFACE_PROPERTY, propertyName,
                                      interfaceType.getTopMostDefiningType(propertyName).toString()));
                                }
                              }
                    children: []
                    pos: 37363
                    length: 1004
                  pos: 37355
                  length: 1018
                pos: 37325
                length: 1048
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: and
                            fields:
                              left:
                                type: unary_expression
                                fields:
                                  text: "!declaredOverride"
                                children: []
                                pos: 38383
                                length: 17
                              right:
                                type: unary_expression
                                fields:
                                  text: "!superClassHasProperty"
                                children: []
                                pos: 38412
                                length: 22
                            children: []
                            pos: 38383
                            length: 51
                          right:
                            type: unary_expression
                            fields:
                              text: "!superInterfaceHasProperty"
                            children: []
                            pos: 38446
                            length: 26
                        children: []
                        pos: 38383
                        length: 89
                    children: []
                    pos: 38382
                    length: 91
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 38542
                    length: 7
                  pos: 38474
                  length: 81
                pos: 38379
                length: 176
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType topInstanceType = superClassHasDeclaredProperty ?
                            superClass.getTopMostDefiningType(propertyName) : null;
                children: []
                pos: 38561
                length: 124
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean declaredLocally =
                            ctorType.isConstructor() &&
                            (ctorType.getPrototype().hasOwnProperty(propertyName) ||
                             ctorType.getInstanceType().hasOwnProperty(propertyName));
                children: []
                pos: 38690
                length: 193
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: reportMissingOverride.isOn()
                                    children: []
                                    pos: 38892
                                    length: 28
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: "!declaredOverride"
                                    children: []
                                    pos: 38932
                                    length: 17
                                children: []
                                pos: 38892
                                length: 57
                              right:
                                type: identifier
                                fields:
                                  text: superClassHasDeclaredProperty
                                children: []
                                pos: 38961
                                length: 29
                            children: []
                            pos: 38892
                            length: 98
                          right:
                            type: identifier
                            fields:
                              text: declaredLocally
                            children: []
                            pos: 39002
                            length: 15
                        children: []
                        pos: 38892
                        length: 125
                    children: []
                    pos: 38891
                    length: 127
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        compiler.report(t.makeError(n, reportMissingOverride,
                                  HIDDEN_SUPERCLASS_PROPERTY, propertyName,
                                  topInstanceType.toString()));
                    children: []
                    pos: 39121
                    length: 145
                  pos: 39019
                  length: 253
                pos: 38888
                length: 384
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: superClassHasDeclaredProperty
                        children: []
                        pos: 39345
                        length: 29
                    children: []
                    pos: 39344
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        JSType superClassPropType =
                                  superClass.getInstanceType().getPropertyType(propertyName);
                    children: []
                    pos: 39430
                    length: 97
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: unary_expression
                            fields:
                              text: "!propertyType.canAssignTo(superClassPropType)"
                            children: []
                            pos: 39538
                            length: 45
                        children: []
                        pos: 39537
                        length: 47
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            compiler.report(
                                        t.makeError(n, HIDDEN_SUPERCLASS_PROPERTY_MISMATCH,
                                            propertyName, topInstanceType.toString(),
                                            superClassPropType.toString(), propertyType.toString()));
                        children: []
                        pos: 39595
                        length: 212
                      pos: 39585
                      length: 230
                    pos: 39534
                    length: 281
                  pos: 39376
                  length: 445
                pos: 39341
                length: 1577
              pos: 36185
              length: 4737
          children: []
          pos: 36020
          length: 4902
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: hasUnknownOrEmptySupertype
              children: []
              pos: 41083
              length: 26
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FunctionType ctor
                children: []
                pos: 41110
                length: 17
              pos: 41060
              length: 815
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkArgument(ctor.isConstructor() || ctor.isInterface());
                children: []
                pos: 41135
                length: 72
              - type: expression_statement
                fields:
                  text: Preconditions.checkArgument(!ctor.isUnknownType());
                children: []
                pos: 41212
                length: 51
              - type: while_statement
                fields:
                  text: |-
                    while (true) {
                          ObjectType maybeSuperInstanceType =
                              ctor.getPrototype().getImplicitPrototype();
                          if (maybeSuperInstanceType == null) {
                            return false;
                          }
                          if (maybeSuperInstanceType.isUnknownType() ||
                              maybeSuperInstanceType.isEmptyType()) {
                            return true;
                          }
                          ctor = maybeSuperInstanceType.getConstructor();
                          if (ctor == null) {
                            return false;
                          }
                          Preconditions.checkState(ctor.isConstructor() || ctor.isInterface());
                        }
                children: []
                pos: 41364
                length: 507
              pos: 41129
              length: 746
          children: []
          pos: 41060
          length: 815
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitInterfaceGetprop
              children: []
              pos: 42013
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 42035
                length: 15
              pos: 42000
              length: 1082
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType rvalueType = getJSType(rvalue);
                children: []
                pos: 42134
                length: 38
              - type: local_variable_declaration
                fields:
                  text: |-
                    String abstractMethodName =
                            compiler.getCodingConvention().getAbstractMethodName();
                children: []
                pos: 42371
                length: 91
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!rvalueType.isFunctionType()"
                        children: []
                        pos: 42471
                        length: 28
                    children: []
                    pos: 42470
                    length: 30
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        String abstractMethodMessage = (abstractMethodName != null)
                                 ? ", or " + abstractMethodName
                                 : "";
                    children: []
                    pos: 42584
                    length: 114
                  - type: expression_statement
                    fields:
                      text: |-
                        compiler.report(
                                  t.makeError(object, INVALID_INTERFACE_MEMBER_DECLARATION,
                                      abstractMethodMessage));
                    children: []
                    pos: 42705
                    length: 123
                  pos: 42501
                  length: 333
                pos: 42467
                length: 367
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: assign.getLastChild().isFunction()
                            children: []
                            pos: 42844
                            length: 34
                          right:
                            type: unary_expression
                            fields:
                              text: "!NodeUtil.isEmptyBlock(assign.getLastChild().getLastChild())"
                            children: []
                            pos: 42890
                            length: 60
                        children: []
                        pos: 42844
                        length: 106
                    children: []
                    pos: 42843
                    length: 108
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        compiler.report(
                                  t.makeError(object, INTERFACE_FUNCTION_NOT_EMPTY,
                                      abstractMethodName));
                    children: []
                    pos: 42960
                    length: 112
                  pos: 42952
                  length: 126
                pos: 42840
                length: 238
              pos: 42127
              length: 955
          children: []
          pos: 42000
          length: 1082
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitName
              children: []
              pos: 43411
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 43421
                length: 15
              pos: 43403
              length: 1096
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int parentNodeType = parent.getType();
                children: []
                pos: 43917
                length: 38
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: or
                                fields:
                                  left:
                                    type: equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: parentNodeType
                                        children: []
                                        pos: 43964
                                        length: 14
                                      right:
                                        type: field_access
                                        fields:
                                          text: Token.FUNCTION
                                        children: []
                                        pos: 43982
                                        length: 14
                                    children: []
                                    pos: 43964
                                    length: 32
                                  right:
                                    type: equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: parentNodeType
                                        children: []
                                        pos: 44008
                                        length: 14
                                      right:
                                        type: field_access
                                        fields:
                                          text: Token.CATCH
                                        children: []
                                        pos: 44026
                                        length: 11
                                    children: []
                                    pos: 44008
                                    length: 29
                                children: []
                                pos: 43964
                                length: 73
                              right:
                                type: equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: parentNodeType
                                    children: []
                                    pos: 44049
                                    length: 14
                                  right:
                                    type: field_access
                                    fields:
                                      text: Token.PARAM_LIST
                                    children: []
                                    pos: 44067
                                    length: 16
                                children: []
                                pos: 44049
                                length: 34
                            children: []
                            pos: 43964
                            length: 119
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: parentNodeType
                                children: []
                                pos: 44095
                                length: 14
                              right:
                                type: field_access
                                fields:
                                  text: Token.VAR
                                children: []
                                pos: 44113
                                length: 9
                            children: []
                            pos: 44095
                            length: 27
                        children: []
                        pos: 43964
                        length: 158
                    children: []
                    pos: 43963
                    length: 160
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return false;
                    children: []
                    pos: 44132
                    length: 13
                  pos: 44124
                  length: 27
                pos: 43960
                length: 191
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 44157
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: type
                            children: []
                            pos: 44194
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 44202
                            length: 4
                        children: []
                        pos: 44194
                        length: 12
                    children: []
                    pos: 44193
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: type = getNativeType(UNKNOWN_TYPE);
                    children: []
                    pos: 44216
                    length: 35
                  - type: local_variable_declaration
                    fields:
                      text: Var var = t.getScope().getVar(n.getString());
                    children: []
                    pos: 44258
                    length: 45
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: var
                                children: []
                                pos: 44314
                                length: 3
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 44321
                                length: 4
                            children: []
                            pos: 44314
                            length: 11
                        children: []
                        pos: 44313
                        length: 13
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType varType = var.getType();
                        children: []
                        pos: 44337
                        length: 31
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: varType
                                    children: []
                                    pos: 44381
                                    length: 7
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 44392
                                    length: 4
                                children: []
                                pos: 44381
                                length: 15
                            children: []
                            pos: 44380
                            length: 17
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: type = varType;
                            children: []
                            pos: 44410
                            length: 15
                          pos: 44398
                          length: 37
                        pos: 44377
                        length: 58
                      pos: 44327
                      length: 116
                    pos: 44310
                    length: 133
                  pos: 44208
                  length: 241
                pos: 44190
                length: 259
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n, type);
                children: []
                pos: 44454
                length: 24
              - type: return_statement
                fields:
                  text: return true;
                children: []
                pos: 44483
                length: 12
              pos: 43459
              length: 1040
          children: []
          pos: 43403
          length: 1096
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitGetProp
              children: []
              pos: 44790
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 44803
                length: 15
              pos: 44777
              length: 743
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node property = n.getLastChild();
                children: []
                pos: 45053
                length: 33
              - type: local_variable_declaration
                fields:
                  text: Node objNode = n.getFirstChild();
                children: []
                pos: 45091
                length: 33
              - type: local_variable_declaration
                fields:
                  text: JSType childType = getJSType(objNode);
                children: []
                pos: 45129
                length: 38
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: childType.isDict()
                        children: []
                        pos: 45177
                        length: 18
                    children: []
                    pos: 45176
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS,
                        "'.'", "dict");
                    children: []
                    pos: 45205
                    length: 74
                  pos: 45197
                  length: 88
                pos: 45173
                length: 320
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n);
                children: []
                pos: 45498
                length: 18
              pos: 44841
              length: 679
          children: []
          pos: 44777
          length: 743
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkPropertyAccess
              children: []
              pos: 45859
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType childType
                children: []
                pos: 45879
                length: 16
              pos: 45846
              length: 1250
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType propType = getJSType(n);
                children: []
                pos: 46216
                length: 31
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: propType.isEquivalentTo(typeRegistry.getNativeType(UNKNOWN_TYPE))
                        children: []
                        pos: 46256
                        length: 65
                    children: []
                    pos: 46255
                    length: 67
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: childType = childType.autobox();
                    children: []
                    pos: 46331
                    length: 32
                  - type: local_variable_declaration
                    fields:
                      text: ObjectType objectType = ObjectType.cast(childType);
                    children: []
                    pos: 46370
                    length: 51
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: objectType
                                children: []
                                pos: 46432
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 46446
                                length: 4
                            children: []
                            pos: 46432
                            length: 18
                        children: []
                        pos: 46431
                        length: 20
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: or
                                fields:
                                  left:
                                    type: unary_expression
                                    fields:
                                      text: "!objectType.hasProperty(propName)"
                                    children: []
                                    pos: 46647
                                    length: 33
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: |-
                                        objectType.isEquivalentTo(
                                                        typeRegistry.getNativeType(UNKNOWN_TYPE))
                                    children: []
                                    pos: 46696
                                    length: 84
                                children: []
                                pos: 46647
                                length: 133
                            children: []
                            pos: 46646
                            length: 135
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: if_statement
                            fields:
                              condition:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: instanceof_expression
                                    fields:
                                      text: objectType instanceof EnumType
                                    children: []
                                    pos: 46798
                                    length: 30
                                children: []
                                pos: 46797
                                length: 32
                            children:
                            - type: block
                              fields: {}
                              children:
                              - type: expression_statement
                                fields:
                                  text: report(t, n, INEXISTENT_ENUM_ELEMENT, propName);
                                children: []
                                pos: 46844
                                length: 48
                              pos: 46830
                              length: 74
                            pos: 46794
                            length: 196
                          pos: 46782
                          length: 218
                        pos: 46643
                        length: 357
                      pos: 46452
                      length: 557
                    pos: 46428
                    length: 658
                  pos: 46323
                  length: 769
                pos: 46252
                length: 840
              pos: 45945
              length: 1151
          children: []
          pos: 45846
          length: 1250
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkPropertyAccessHelper
              children: []
              pos: 47113
              length: 25
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType objectType
                children: []
                pos: 47139
                length: 17
              pos: 47100
              length: 412
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: and
                            fields:
                              left:
                                type: unary_expression
                                fields:
                                  text: "!objectType.isEmptyType()"
                                children: []
                                pos: 47216
                                length: 25
                              right:
                                type: identifier
                                fields:
                                  text: reportMissingProperties
                                children: []
                                pos: 47253
                                length: 23
                            children: []
                            pos: 47216
                            length: 60
                          right:
                            type: unary_expression
                            fields:
                              text: "!isPropertyTest(n)"
                            children: []
                            pos: 47280
                            length: 18
                        children: []
                        pos: 47216
                        length: 82
                    children: []
                    pos: 47215
                    length: 84
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: unary_expression
                            fields:
                              text: "!typeRegistry.canPropertyBeDefined(objectType,
                                propName)"
                            children: []
                            pos: 47312
                            length: 56
                        children: []
                        pos: 47311
                        length: 58
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            report(t, n, INEXISTENT_PROPERTY, propName,
                                        validator.getReadableJSTypeName(n.getFirstChild(), true));
                        children: []
                        pos: 47380
                        length: 114
                      pos: 47370
                      length: 132
                    pos: 47308
                    length: 194
                  pos: 47300
                  length: 208
                pos: 47212
                length: 296
              pos: 47206
              length: 306
          children: []
          pos: 47100
          length: 412
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isPropertyTest
              children: []
              pos: 47739
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getProp
                children: []
                pos: 47754
                length: 12
              pos: 47723
              length: 748
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node parent = getProp.getParent();
                children: []
                pos: 47774
                length: 34
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: parent.getType()
                        children: []
                        pos: 47821
                        length: 16
                    children: []
                    pos: 47820
                    length: 18
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.CALL:
                                return parent.getFirstChild() != getProp &&
                                    compiler.getCodingConvention().isPropertyTestFunction(parent);

                              case Token.IF:
                              case Token.WHILE:
                              case Token.DO:
                              case Token.FOR:
                                return NodeUtil.getConditionExpression(parent) == getProp;

                              case Token.INSTANCEOF:
                              case Token.TYPEOF:
                                return true;

                              case Token.AND:
                              case Token.HOOK:
                                return parent.getFirstChild() == getProp;

                              case Token.NOT:
                                return parent.getParent().isOr() &&
                                    parent.getParent().getFirstChild() == parent;
                            }
                    children: []
                    pos: 47839
                    length: 610
                children: []
                pos: 47813
                length: 636
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 48454
                length: 13
              pos: 47768
              length: 703
          children: []
          pos: 47723
          length: 748
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitGetElem
              children: []
              pos: 48714
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 48727
                length: 15
              pos: 48701
              length: 185
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    validator.expectIndexMatch(
                            t, n, getJSType(n.getFirstChild()), getJSType(n.getLastChild()));
                children: []
                pos: 48758
                length: 101
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n);
                children: []
                pos: 48864
                length: 18
              pos: 48752
              length: 134
          children: []
          pos: 48701
          length: 185
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitVar
              children: []
              pos: 49125
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 49134
                length: 15
              pos: 49112
              length: 1060
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: 'JSDocInfo varInfo = n.hasOneChild() ? n.getJSDocInfo() :
                    null;'
                children: []
                pos: 49327
                length: 62
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (Node name : n.children()) {
                          Node value = name.getFirstChild();
                          // A null var would indicate a bug in the scope creation logic.
                          Var var = t.getScope().getVar(name.getString());

                          if (value != null) {
                            JSType valueType = getJSType(value);
                            JSType nameType = var.getType();
                            nameType = (nameType == null) ? getNativeType(UNKNOWN_TYPE) : nameType;

                            JSDocInfo info = name.getJSDocInfo();
                            if (info == null) {
                              info = varInfo;
                            }

                            checkEnumAlias(t, info, value);
                            if (var.isTypeInferred()) {
                              ensureTyped(t, name, valueType);
                            } else {
                              validator.expectCanAssignTo(
                                  t, value, valueType, nameType, "initializing variable");
                            }
                          }
                        }
                children: []
                pos: 49394
                length: 774
              pos: 49159
              length: 1013
          children: []
          pos: 49112
          length: 1060
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitNew
              children: []
              pos: 50225
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 50234
                length: 15
              pos: 50212
              length: 557
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node constructor = n.getFirstChild();
                children: []
                pos: 50265
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
                children: []
                pos: 50307
                length: 68
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: type.isConstructor()
                                children: []
                                pos: 50384
                                length: 20
                              right:
                                type: method_invocation
                                fields:
                                  text: type.isEmptyType()
                                children: []
                                pos: 50408
                                length: 18
                            children: []
                            pos: 50384
                            length: 42
                          right:
                            type: method_invocation
                            fields:
                              text: type.isUnknownType()
                            children: []
                            pos: 50430
                            length: 20
                        children: []
                        pos: 50384
                        length: 66
                    children: []
                    pos: 50383
                    length: 68
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType fnType = type.toMaybeFunctionType();
                    children: []
                    pos: 50460
                    length: 49
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: fnType
                                children: []
                                pos: 50520
                                length: 6
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 50530
                                length: 4
                            children: []
                            pos: 50520
                            length: 14
                        children: []
                        pos: 50519
                        length: 16
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: visitParameterList(t, n, fnType);
                        children: []
                        pos: 50546
                        length: 33
                      - type: expression_statement
                        fields:
                          text: ensureTyped(t, n, fnType.getInstanceType());
                        children: []
                        pos: 50588
                        length: 44
                      pos: 50536
                      length: 104
                    pos: 50516
                    length: 166
                  pos: 50452
                  length: 236
                pos: 50380
                length: 385
              pos: 50259
              length: 510
          children: []
          pos: 50212
          length: 557
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkInterfaceConflictProperties
              children: []
              pos: 51307
              length: 32
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 51340
                length: 15
              pos: 51294
              length: 987
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Set<String> currentPropertyNames = interfaceType.getPropertyNames();
                children: []
                pos: 51523
                length: 68
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (String name : currentPropertyNames) {
                          ObjectType oType = properties.get(name);
                          if (oType != null) {
                            if (!interfaceType.getPropertyType(name).isEquivalentTo(
                                oType.getPropertyType(name))) {
                              compiler.report(
                                  t.makeError(n, INCOMPATIBLE_EXTENDED_PROPERTY_TYPE,
                                      functionName, name, oType.toString(),
                                      interfaceType.toString()));
                            }
                          }
                          currentProperties.put(name, interfaceType);
                        }
                children: []
                pos: 51596
                length: 494
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (ObjectType iType : interfaceType.getCtorExtendedInterfaces()) {
                          checkInterfaceConflictProperties(t, n, functionName, properties,
                              currentProperties, iType);
                        }
                children: []
                pos: 52095
                length: 182
              pos: 51517
              length: 764
          children: []
          pos: 51294
          length: 987
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitFunction
              children: []
              pos: 52539
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 52553
                length: 15
              pos: 52526
              length: 3473
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: FunctionType functionType = JSType.toMaybeFunctionType(n.getJSType());
                children: []
                pos: 52584
                length: 70
              - type: local_variable_declaration
                fields:
                  text: String functionPrivateName = n.getFirstChild().getString();
                children: []
                pos: 52659
                length: 59
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: functionType.isConstructor()
                        children: []
                        pos: 52727
                        length: 28
                    children: []
                    pos: 52726
                    length: 30
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType baseConstructor = functionType.getSuperClassConstructor();
                    children: []
                    pos: 52765
                    length: 71
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: and
                                    fields:
                                      left:
                                        type: not_equals
                                        fields:
                                          left:
                                            type: identifier
                                            fields:
                                              text: baseConstructor
                                            children: []
                                            pos: 52847
                                            length: 15
                                          right:
                                            type: method_invocation
                                            fields:
                                              text: getNativeType(OBJECT_FUNCTION_TYPE)
                                            children: []
                                            pos: 52866
                                            length: 35
                                        children: []
                                        pos: 52847
                                        length: 54
                                      right:
                                        type: not_equals
                                        fields:
                                          left:
                                            type: identifier
                                            fields:
                                              text: baseConstructor
                                            children: []
                                            pos: 52915
                                            length: 15
                                          right:
                                            type: null_literal
                                            fields: {}
                                            children: []
                                            pos: 52934
                                            length: 4
                                        children: []
                                        pos: 52915
                                        length: 23
                                    children: []
                                    pos: 52847
                                    length: 91
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: baseConstructor.isInterface()
                                    children: []
                                    pos: 52952
                                    length: 29
                                children: []
                                pos: 52847
                                length: 134
                              right:
                                type: method_invocation
                                fields:
                                  text: functionType.isConstructor()
                                children: []
                                pos: 52985
                                length: 28
                            children: []
                            pos: 52847
                            length: 166
                        children: []
                        pos: 52846
                        length: 168
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            compiler.report(
                                        t.makeError(n, CONFLICTING_EXTENDED_TYPE,
                                                    "constructor", functionPrivateName));
                        children: []
                        pos: 53025
                        length: 132
                      pos: 53015
                      length: 150
                    pos: 52843
                    length: 1785
                  pos: 52757
                  length: 1877
                pos: 52723
                length: 3272
              pos: 52578
              length: 3421
          children: []
          pos: 52526
          length: 3473
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitCall
              children: []
              pos: 56239
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 56249
                length: 15
              pos: 56226
              length: 2026
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node child = n.getFirstChild();
                children: []
                pos: 56280
                length: 31
              - type: local_variable_declaration
                fields:
                  text: JSType childType = getJSType(child).restrictByNotNullOrUndefined();
                children: []
                pos: 56316
                length: 67
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!childType.canBeCalled()"
                        children: []
                        pos: 56393
                        length: 24
                    children: []
                    pos: 56392
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: report(t, n, NOT_CALLABLE, childType.toString());
                    children: []
                    pos: 56427
                    length: 49
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, n);
                    children: []
                    pos: 56483
                    length: 18
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 56508
                    length: 7
                  pos: 56419
                  length: 102
                pos: 56389
                length: 132
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: childType.isFunctionType()
                        children: []
                        pos: 56656
                        length: 26
                    children: []
                    pos: 56655
                    length: 28
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType functionType = childType.toMaybeFunctionType();
                    children: []
                    pos: 56692
                    length: 60
                  - type: local_variable_declaration
                    fields:
                      text: boolean isExtern = false;
                    children: []
                    pos: 56760
                    length: 25
                  - type: local_variable_declaration
                    fields:
                      text: JSDocInfo functionJSDocInfo = functionType.getJSDocInfo();
                    children: []
                    pos: 56792
                    length: 58
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: functionJSDocInfo
                                    children: []
                                    pos: 56861
                                    length: 17
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 56882
                                    length: 4
                                children: []
                                pos: 56861
                                length: 25
                              right:
                                type: not_equals
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: functionJSDocInfo.getAssociatedNode()
                                    children: []
                                    pos: 56901
                                    length: 37
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 56942
                                    length: 4
                                children: []
                                pos: 56901
                                length: 45
                            children: []
                            pos: 56861
                            length: 85
                        children: []
                        pos: 56859
                        length: 88
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: isExtern = functionJSDocInfo.getAssociatedNode().isFromExterns();
                        children: []
                        pos: 56958
                        length: 65
                      pos: 56948
                      length: 83
                    pos: 56857
                    length: 174
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: functionType.isConstructor()
                                    children: []
                                    pos: 57188
                                    length: 28
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: "!functionType.isNativeObjectType()"
                                    children: []
                                    pos: 57230
                                    length: 34
                                children: []
                                pos: 57188
                                length: 76
                              right:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: or
                                    fields:
                                      left:
                                        type: or
                                        fields:
                                          left:
                                            type: method_invocation
                                            fields:
                                              text: functionType.getReturnType().isUnknownType()
                                            children: []
                                            pos: 57279
                                            length: 44
                                          right:
                                            type: method_invocation
                                            fields:
                                              text: functionType.getReturnType().isVoidType()
                                            children: []
                                            pos: 57338
                                            length: 41
                                        children: []
                                        pos: 57279
                                        length: 100
                                      right:
                                        type: unary_expression
                                        fields:
                                          text: "!isExtern"
                                        children: []
                                        pos: 57394
                                        length: 9
                                    children: []
                                    pos: 57279
                                    length: 124
                                children: []
                                pos: 57278
                                length: 126
                            children: []
                            pos: 57188
                            length: 216
                        children: []
                        pos: 57187
                        length: 218
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: report(t, n, CONSTRUCTOR_NOT_CALLABLE, childType.toString());
                        children: []
                        pos: 57416
                        length: 61
                      pos: 57406
                      length: 79
                    pos: 57184
                    length: 301
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: and
                                    fields:
                                      left:
                                        type: method_invocation
                                        fields:
                                          text: functionType.isOrdinaryFunction()
                                        children: []
                                        pos: 57592
                                        length: 33
                                      right:
                                        type: unary_expression
                                        fields:
                                          text: "!functionType.getTypeOfThis().isUnknownType()"
                                        children: []
                                        pos: 57639
                                        length: 45
                                    children: []
                                    pos: 57592
                                    length: 92
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: "!functionType.getTypeOfThis().isNativeObjectType()"
                                    children: []
                                    pos: 57698
                                    length: 50
                                children: []
                                pos: 57592
                                length: 156
                              right:
                                type: unary_expression
                                fields:
                                  text: |-
                                    !(child.isGetElem() ||
                                                child.isGetProp())
                                children: []
                                pos: 57762
                                length: 53
                            children: []
                            pos: 57592
                            length: 223
                        children: []
                        pos: 57591
                        length: 225
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: report(t, n, EXPECTED_THIS_TYPE, functionType.toString());
                        children: []
                        pos: 57827
                        length: 58
                      pos: 57817
                      length: 76
                    pos: 57588
                    length: 305
                  - type: expression_statement
                    fields:
                      text: visitParameterList(t, n, functionType);
                    children: []
                    pos: 57901
                    length: 39
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, n, functionType.getReturnType());
                    children: []
                    pos: 57947
                    length: 48
                  pos: 56684
                  length: 1317
                pos: 56652
                length: 1387
              pos: 56274
              length: 1978
          children: []
          pos: 56226
          length: 2026
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitParameterList
              children: []
              pos: 58333
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 58352
                length: 15
              pos: 58320
              length: 1386
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Iterator<Node> arguments = call.children().iterator();
                children: []
                pos: 58419
                length: 54
              - type: expression_statement
                fields:
                  text: arguments.next();
                children: []
                pos: 58478
                length: 17
              - type: local_variable_declaration
                fields:
                  text: Iterator<Node> parameters = functionType.getParameters().iterator();
                children: []
                pos: 58527
                length: 68
              - type: local_variable_declaration
                fields:
                  text: int ordinal = 0;
                children: []
                pos: 58600
                length: 16
              - type: local_variable_declaration
                fields:
                  text: Node parameter = null;
                children: []
                pos: 58621
                length: 22
              - type: local_variable_declaration
                fields:
                  text: Node argument = null;
                children: []
                pos: 58648
                length: 21
              - type: while_statement
                fields:
                  text: |-
                    while (arguments.hasNext() &&
                               (parameters.hasNext() ||
                                parameter != null && parameter.isVarArgs())) {
                          // If there are no parameters left in the list, then the while loop
                          // above implies that this must be a var_args function.
                          if (parameters.hasNext()) {
                            parameter = parameters.next();
                          }
                          argument = arguments.next();
                          ordinal++;

                          validator.expectArgumentMatchesParameter(t, argument,
                              getJSType(argument), getJSType(parameter), call, ordinal);
                        }
                children: []
                pos: 58674
                length: 529
              - type: local_variable_declaration
                fields:
                  text: int numArgs = call.getChildCount() - 1;
                children: []
                pos: 59209
                length: 39
              - type: local_variable_declaration
                fields:
                  text: int minArgs = functionType.getMinArguments();
                children: []
                pos: 59253
                length: 45
              - type: local_variable_declaration
                fields:
                  text: int maxArgs = functionType.getMaxArguments();
                children: []
                pos: 59303
                length: 45
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: greater_than
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: minArgs
                                children: []
                                pos: 59357
                                length: 7
                              right:
                                type: identifier
                                fields:
                                  text: numArgs
                                children: []
                                pos: 59367
                                length: 7
                            children: []
                            pos: 59357
                            length: 17
                          right:
                            type: less_than
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: maxArgs
                                children: []
                                pos: 59378
                                length: 7
                              right:
                                type: identifier
                                fields:
                                  text: numArgs
                                children: []
                                pos: 59388
                                length: 7
                            children: []
                            pos: 59378
                            length: 17
                        children: []
                        pos: 59357
                        length: 38
                    children: []
                    pos: 59356
                    length: 40
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        report(t, call, WRONG_ARGUMENT_COUNT,
                                      validator.getReadableJSTypeName(call.getFirstChild(), false),
                                      String.valueOf(numArgs), String.valueOf(minArgs),
                                      maxArgs != Integer.MAX_VALUE ?
                                      " and no more than " + maxArgs + " argument(s)" : "");
                    children: []
                    pos: 59405
                    length: 291
                  pos: 59397
                  length: 305
                pos: 59353
                length: 349
              pos: 58413
              length: 1293
          children: []
          pos: 58320
          length: 1386
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitReturn
              children: []
              pos: 59948
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 59960
                length: 15
              pos: 59935
              length: 897
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType jsType = getJSType(t.getEnclosingFunction());
                children: []
                pos: 59991
                length: 52
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: jsType.isFunctionType()
                        children: []
                        pos: 60053
                        length: 23
                    children: []
                    pos: 60052
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType functionType = jsType.toMaybeFunctionType();
                    children: []
                    pos: 60086
                    length: 57
                  - type: local_variable_declaration
                    fields:
                      text: JSType returnType = functionType.getReturnType();
                    children: []
                    pos: 60151
                    length: 49
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: returnType
                                children: []
                                pos: 60312
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 60326
                                length: 4
                            children: []
                            pos: 60312
                            length: 18
                        children: []
                        pos: 60311
                        length: 20
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: returnType = getNativeType(VOID_TYPE);
                        children: []
                        pos: 60342
                        length: 38
                      pos: 60332
                      length: 56
                    pos: 60308
                    length: 80
                  - type: local_variable_declaration
                    fields:
                      text: Node valueNode = n.getFirstChild();
                    children: []
                    pos: 60440
                    length: 35
                  - type: local_variable_declaration
                    fields:
                      text: JSType actualReturnType;
                    children: []
                    pos: 60482
                    length: 24
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: valueNode
                                children: []
                                pos: 60517
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 60530
                                length: 4
                            children: []
                            pos: 60517
                            length: 17
                        children: []
                        pos: 60516
                        length: 19
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: actualReturnType = getNativeType(VOID_TYPE);
                        children: []
                        pos: 60546
                        length: 44
                      - type: expression_statement
                        fields:
                          text: valueNode = n;
                        children: []
                        pos: 60599
                        length: 14
                      pos: 60536
                      length: 85
                    pos: 60513
                    length: 172
                  - type: expression_statement
                    fields:
                      text: |-
                        validator.expectCanAssignTo(t, valueNode, actualReturnType, returnType,
                                  "inconsistent return type");
                    children: []
                    pos: 60712
                    length: 110
                  pos: 60078
                  length: 750
                pos: 60049
                length: 779
              pos: 59985
              length: 847
          children: []
          pos: 59935
          length: 897
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitBinaryOperator
              children: []
              pos: 61240
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int op
                children: []
                pos: 61260
                length: 6
              pos: 61227
              length: 1682
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 61299
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = getJSType(left);
                children: []
                pos: 61334
                length: 34
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 61373
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = getJSType(right);
                children: []
                pos: 61408
                length: 36
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: op
                        children: []
                        pos: 61457
                        length: 2
                    children: []
                    pos: 61456
                    length: 4
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.ASSIGN_LSH:
                              case Token.ASSIGN_RSH:
                              case Token.LSH:
                              case Token.RSH:
                              case Token.ASSIGN_URSH:
                              case Token.URSH:
                                if (!leftType.matchesInt32Context()) {
                                  report(t, left, BIT_OPERATION,
                                           NodeUtil.opToStr(n.getType()), leftType.toString());
                                }
                                if (!rightType.matchesUint32Context()) {
                                  report(t, right, BIT_OPERATION,
                                           NodeUtil.opToStr(n.getType()), rightType.toString());
                                }
                                break;

                              case Token.ASSIGN_DIV:
                              case Token.ASSIGN_MOD:
                              case Token.ASSIGN_MUL:
                              case Token.ASSIGN_SUB:
                              case Token.DIV:
                              case Token.MOD:
                              case Token.MUL:
                              case Token.SUB:
                                validator.expectNumber(t, left, leftType, "left operand");
                                validator.expectNumber(t, right, rightType, "right operand");
                                break;

                              case Token.ASSIGN_BITAND:
                              case Token.ASSIGN_BITXOR:
                              case Token.ASSIGN_BITOR:
                              case Token.BITAND:
                              case Token.BITXOR:
                              case Token.BITOR:
                                validator.expectBitwiseable(t, left, leftType,
                                    "bad left operand to bitwise operator");
                                validator.expectBitwiseable(t, right, rightType,
                                    "bad right operand to bitwise operator");
                                break;

                              case Token.ASSIGN_ADD:
                              case Token.ADD:
                                break;

                              default:
                                report(t, n, UNEXPECTED_TOKEN, Token.name(op));
                            }
                    children: []
                    pos: 61461
                    length: 1421
                children: []
                pos: 61449
                length: 1433
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n);
                children: []
                pos: 62887
                length: 18
              pos: 61293
              length: 1616
          children: []
          pos: 61227
          length: 1682
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkEnumAlias
              children: []
              pos: 63366
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 63388
                length: 15
              pos: 63353
              length: 613
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: declInfo
                                children: []
                                pos: 63447
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 63459
                                length: 4
                            children: []
                            pos: 63447
                            length: 16
                          right:
                            type: unary_expression
                            fields:
                              text: "!declInfo.hasEnumParameterType()"
                            children: []
                            pos: 63467
                            length: 32
                        children: []
                        pos: 63447
                        length: 52
                    children: []
                    pos: 63446
                    length: 54
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 63509
                    length: 7
                  pos: 63501
                  length: 21
                pos: 63443
                length: 79
              - type: local_variable_declaration
                fields:
                  text: JSType valueType = getJSType(value);
                children: []
                pos: 63528
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!valueType.isEnumType()"
                        children: []
                        pos: 63573
                        length: 23
                    children: []
                    pos: 63572
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 63606
                    length: 7
                  pos: 63598
                  length: 21
                pos: 63569
                length: 50
              - type: local_variable_declaration
                fields:
                  text: EnumType valueEnumType = valueType.toMaybeEnumType();
                children: []
                pos: 63625
                length: 53
              - type: local_variable_declaration
                fields:
                  text: |-
                    JSType valueEnumPrimitiveType =
                            valueEnumType.getElementsType().getPrimitiveType();
                children: []
                pos: 63683
                length: 91
              - type: expression_statement
                fields:
                  text: |-
                    validator.expectCanAssignTo(t, value, valueEnumPrimitiveType,
                            declInfo.getEnumParameterType().evaluate(t.getScope(), typeRegistry),
                            "incompatible enum element types");
                children: []
                pos: 63779
                length: 183
              pos: 63437
              length: 529
          children: []
          pos: 63353
          length: 613
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getJSType
              children: []
              pos: 64091
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 64101
                length: 6
              pos: 64076
              length: 461
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType jsType = n.getJSType();
                children: []
                pos: 64115
                length: 30
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: jsType
                            children: []
                            pos: 64154
                            length: 6
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 64164
                            length: 4
                        children: []
                        pos: 64154
                        length: 14
                    children: []
                    pos: 64153
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return getNativeType(UNKNOWN_TYPE);
                    children: []
                    pos: 64458
                    length: 35
                  pos: 64170
                  length: 329
                pos: 64150
                length: 383
              pos: 64109
              length: 428
          children: []
          pos: 64076
          length: 461
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensureTyped
              children: []
              pos: 64989
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 65001
                length: 15
              pos: 64976
              length: 107
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n, getNativeType(UNKNOWN_TYPE));
                children: []
                pos: 65032
                length: 47
              pos: 65026
              length: 57
          children: []
          pos: 64976
          length: 107
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensureTyped
              children: []
              pos: 65100
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 65112
                length: 15
              pos: 65087
              length: 118
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n, getNativeType(type));
                children: []
                pos: 65162
                length: 39
              pos: 65156
              length: 49
          children: []
          pos: 65087
          length: 118
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensureTyped
              children: []
              pos: 66034
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 66046
                length: 15
              pos: 66021
              length: 818
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    Preconditions.checkState(!n.isFunction() ||
                                type.isFunctionType() ||
                                type.isUnknownType());
                children: []
                pos: 66148
                length: 115
              - type: local_variable_declaration
                fields:
                  text: JSDocInfo info = n.getJSDocInfo();
                children: []
                pos: 66268
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: info
                            children: []
                            pos: 66311
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 66319
                            length: 4
                        children: []
                        pos: 66311
                        length: 12
                    children: []
                    pos: 66310
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: info.hasType()
                            children: []
                            pos: 66337
                            length: 14
                        children: []
                        pos: 66336
                        length: 16
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType infoType = info.getType().evaluate(t.getScope(),
                            typeRegistry);
                        children: []
                        pos: 66363
                        length: 70
                      - type: expression_statement
                        fields:
                          text: validator.expectCanCast(t, n, infoType, type);
                        children: []
                        pos: 66442
                        length: 46
                      - type: expression_statement
                        fields:
                          text: type = infoType;
                        children: []
                        pos: 66497
                        length: 16
                      pos: 66353
                      length: 168
                    pos: 66333
                    length: 188
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: info.isImplicitCast()
                                children: []
                                pos: 66533
                                length: 21
                              right:
                                type: unary_expression
                                fields:
                                  text: "!inExterns"
                                children: []
                                pos: 66558
                                length: 10
                            children: []
                            pos: 66533
                            length: 35
                        children: []
                        pos: 66532
                        length: 37
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: |-
                            String propName = n.isGetProp() ?
                                        n.getLastChild().getString() : "(missing)";
                        children: []
                        pos: 66580
                        length: 89
                      - type: expression_statement
                        fields:
                          text: |-
                            compiler.report(
                                        t.makeError(n, ILLEGAL_IMPLICIT_CAST, propName));
                        children: []
                        pos: 66678
                        length: 78
                      pos: 66570
                      length: 194
                    pos: 66529
                    length: 235
                  pos: 66325
                  length: 445
                pos: 66307
                length: 463
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: n.getJSType()
                            children: []
                            pos: 66780
                            length: 13
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 66797
                            length: 4
                        children: []
                        pos: 66780
                        length: 21
                    children: []
                    pos: 66779
                    length: 23
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: n.setJSType(type);
                    children: []
                    pos: 66811
                    length: 18
                  pos: 66803
                  length: 32
                pos: 66776
                length: 59
              pos: 66084
              length: 755
          children: []
          pos: 66021
          length: 818
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getTypedPercent
              children: []
              pos: 66970
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 66963
              length: 147
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int total = nullCount + unknownCount + typedCount;
                children: []
                pos: 66994
                length: 50
              - type: return_statement
                fields:
                  text: 'return (total == 0) ? 0.0 : (100.0 * typedCount) / total;'
                children: []
                pos: 67049
                length: 57
              pos: 66988
              length: 122
          children: []
          pos: 66963
          length: 147
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getNativeType
              children: []
              pos: 67129
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSTypeNative typeId
                children: []
                pos: 67143
                length: 19
              pos: 67114
              length: 102
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return typeRegistry.getNativeType(typeId);
                children: []
                pos: 67170
                length: 42
              pos: 67164
              length: 52
          children: []
          pos: 67114
          length: 102
        pos: 2305
        length: 64913
    children: []
    pos: 2305
    length: 64913
  pos: 0
  length: 67219
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: TypeCheck
        children: []
        pos: 2318
        length: 9
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNEXPECTED_TOKEN = DiagnosticType.error(
                    "JSC_INTERNAL_ERROR_UNEXPECTED_TOKEN",
                    "Internal Error: Don't know how to handle {0}");
          children: []
          pos: 2412
          length: 168
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType BAD_DELETE =
                    DiagnosticType.warning(
                        "JSC_BAD_DELETE_OPERAND",
                        "delete operator needs a reference operand");
          children: []
          pos: 2647
          length: 162
        - type: field_declaration
          fields:
            text: |-
              protected static final String OVERRIDING_PROTOTYPE_WITH_NON_OBJECT =
                    "overriding prototype with non-object";
          children: []
          pos: 2844
          length: 114
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType DETERMINISTIC_TEST =
                    DiagnosticType.warning(
                        "JSC_DETERMINISTIC_TEST",
                        "condition always evaluates to {2}\n" +
                        "left : {0}\n" +
                        "right: {1}");
          children: []
          pos: 3092
          length: 216
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType DETERMINISTIC_TEST_NO_RESULT =
                    DiagnosticType.warning(
                        "JSC_DETERMINISTIC_TEST_NO_RESULT",
                        "condition always evaluates to the same value\n" +
                        "left : {0}\n" +
                        "right: {1}");
          children: []
          pos: 3312
          length: 247
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INEXISTENT_ENUM_ELEMENT =
                    DiagnosticType.warning(
                        "JSC_INEXISTENT_ENUM_ELEMENT",
                        "element {0} does not exist on this enum");
          children: []
          pos: 3563
          length: 178
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INEXISTENT_PROPERTY =
                    DiagnosticType.disabled(
                        "JSC_INEXISTENT_PROPERTY",
                        "Property {0} never defined on {1}");
          children: []
          pos: 3838
          length: 165
        - type: field_declaration
          fields:
            text: |-
              protected static final DiagnosticType NOT_A_CONSTRUCTOR =
                    DiagnosticType.warning(
                        "JSC_NOT_A_CONSTRUCTOR",
                        "cannot instantiate non-constructor");
          children: []
          pos: 4007
          length: 171
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType BIT_OPERATION =
                    DiagnosticType.warning(
                        "JSC_BAD_TYPE_FOR_BIT_OPERATION",
                        "operator {0} cannot be applied to {1}");
          children: []
          pos: 4182
          length: 169
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType NOT_CALLABLE =
                    DiagnosticType.warning(
                        "JSC_NOT_FUNCTION_TYPE",
                        "{0} expressions are not callable");
          children: []
          pos: 4355
          length: 154
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType CONSTRUCTOR_NOT_CALLABLE =
                    DiagnosticType.warning(
                        "JSC_CONSTRUCTOR_NOT_CALLABLE",
                        "Constructor {0} should be called with the \"new\" keyword");
          children: []
          pos: 4513
          length: 198
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType FUNCTION_MASKS_VARIABLE =
                    DiagnosticType.warning(
                        "JSC_FUNCTION_MASKS_VARIABLE",
                        "function {0} masks variable (IE bug)");
          children: []
          pos: 4715
          length: 175
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType MULTIPLE_VAR_DEF = DiagnosticType.warning(
                    "JSC_MULTIPLE_VAR_DEF",
                    "declaration of multiple variables with shared type information");
          children: []
          pos: 4894
          length: 173
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ENUM_DUP = DiagnosticType.error("JSC_ENUM_DUP",
                    "enum element {0} already defined");
          children: []
          pos: 5071
          length: 118
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ENUM_NOT_CONSTANT =
                    DiagnosticType.warning("JSC_ENUM_NOT_CONSTANT",
                        "enum key {0} must be a syntactic constant");
          children: []
          pos: 5193
          length: 157
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INVALID_INTERFACE_MEMBER_DECLARATION =
                    DiagnosticType.warning(
                        "JSC_INVALID_INTERFACE_MEMBER_DECLARATION",
                        "interface members can only be empty property declarations,"
                        + " empty functions{0}");
          children: []
          pos: 5354
          length: 257
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INTERFACE_FUNCTION_NOT_EMPTY =
                    DiagnosticType.warning(
                        "JSC_INTERFACE_FUNCTION_NOT_EMPTY",
                        "interface member functions must have an empty body");
          children: []
          pos: 5615
          length: 199
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType CONFLICTING_EXTENDED_TYPE =
                    DiagnosticType.warning(
                        "JSC_CONFLICTING_EXTENDED_TYPE",
                        "{1} cannot extend this type; {0}s can only extend {0}s");
          children: []
          pos: 5818
          length: 197
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType CONFLICTING_IMPLEMENTED_TYPE =
                  DiagnosticType.warning(
                      "JSC_CONFLICTING_IMPLEMENTED_TYPE",
                      "{0} cannot implement this type; " +
                      "an interface can only extend, but not implement interfaces");
          children: []
          pos: 6019
          length: 246
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType BAD_IMPLEMENTED_TYPE =
                    DiagnosticType.warning(
                        "JSC_IMPLEMENTS_NON_INTERFACE",
                        "can only implement interfaces");
          children: []
          pos: 6269
          length: 166
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType HIDDEN_SUPERCLASS_PROPERTY =
                    DiagnosticType.warning(
                        "JSC_HIDDEN_SUPERCLASS_PROPERTY",
                        "property {0} already defined on superclass {1}; " +
                        "use @override to override it");
          children: []
          pos: 6439
          length: 236
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType HIDDEN_INTERFACE_PROPERTY =
                    DiagnosticType.warning(
                        "JSC_HIDDEN_INTERFACE_PROPERTY",
                        "property {0} already defined on interface {1}; " +
                        "use @override to override it");
          children: []
          pos: 6679
          length: 233
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType HIDDEN_SUPERCLASS_PROPERTY_MISMATCH =
                    DiagnosticType.warning("JSC_HIDDEN_SUPERCLASS_PROPERTY_MISMATCH",
                        "mismatch of the {0} property type and the type " +
                        "of the property it overrides from superclass {1}\n" +
                        "original: {2}\n" +
                        "override: {3}");
          children: []
          pos: 6916
          length: 322
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNKNOWN_OVERRIDE =
                    DiagnosticType.warning(
                        "JSC_UNKNOWN_OVERRIDE",
                        "property {0} not defined on any superclass of {1}");
          children: []
          pos: 7242
          length: 174
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INTERFACE_METHOD_OVERRIDE =
                    DiagnosticType.warning(
                        "JSC_INTERFACE_METHOD_OVERRIDE",
                        "property {0} is already defined by the {1} extended interface");
          children: []
          pos: 7420
          length: 204
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNKNOWN_EXPR_TYPE =
                    DiagnosticType.warning("JSC_UNKNOWN_EXPR_TYPE",
                        "could not determine the type of this expression");
          children: []
          pos: 7628
          length: 163
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNRESOLVED_TYPE =
                    DiagnosticType.warning("JSC_UNRESOLVED_TYPE",
                        "could not resolve the name {0} to a type");
          children: []
          pos: 7795
          length: 152
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType WRONG_ARGUMENT_COUNT =
                    DiagnosticType.warning(
                        "JSC_WRONG_ARGUMENT_COUNT",
                        "Function {0}: called with {1} argument(s). " +
                        "Function requires at least {2} argument(s){3}.");
          children: []
          pos: 7951
          length: 237
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ILLEGAL_IMPLICIT_CAST =
                    DiagnosticType.warning(
                        "JSC_ILLEGAL_IMPLICIT_CAST",
                        "Illegal annotation on {0}. @implicitCast may only be used in " +
                        "externs.");
          children: []
          pos: 8192
          length: 219
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INCOMPATIBLE_EXTENDED_PROPERTY_TYPE =
                    DiagnosticType.warning(
                        "JSC_INCOMPATIBLE_EXTENDED_PROPERTY_TYPE",
                        "Interface {0} has a property {1} with incompatible types in " +
                        "its super interfaces {2} and {3}");
          children: []
          pos: 8415
          length: 270
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType EXPECTED_THIS_TYPE =
                    DiagnosticType.warning(
                        "JSC_EXPECTED_THIS_TYPE",
                        "\"{0}\" must be called with a \"this\" type");
          children: []
          pos: 8689
          length: 172
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticGroup ALL_DIAGNOSTICS = new DiagnosticGroup(
                    DETERMINISTIC_TEST,
                    DETERMINISTIC_TEST_NO_RESULT,
                    INEXISTENT_ENUM_ELEMENT,
                    INEXISTENT_PROPERTY,
                    NOT_A_CONSTRUCTOR,
                    BIT_OPERATION,
                    NOT_CALLABLE,
                    CONSTRUCTOR_NOT_CALLABLE,
                    FUNCTION_MASKS_VARIABLE,
                    MULTIPLE_VAR_DEF,
                    ENUM_DUP,
                    ENUM_NOT_CONSTANT,
                    INVALID_INTERFACE_MEMBER_DECLARATION,
                    INTERFACE_FUNCTION_NOT_EMPTY,
                    CONFLICTING_EXTENDED_TYPE,
                    CONFLICTING_IMPLEMENTED_TYPE,
                    BAD_IMPLEMENTED_TYPE,
                    HIDDEN_SUPERCLASS_PROPERTY,
                    HIDDEN_INTERFACE_PROPERTY,
                    HIDDEN_SUPERCLASS_PROPERTY_MISMATCH,
                    UNKNOWN_OVERRIDE,
                    INTERFACE_METHOD_OVERRIDE,
                    UNKNOWN_EXPR_TYPE,
                    UNRESOLVED_TYPE,
                    WRONG_ARGUMENT_COUNT,
                    ILLEGAL_IMPLICIT_CAST,
                    INCOMPATIBLE_EXTENDED_PROPERTY_TYPE,
                    EXPECTED_THIS_TYPE,
                    RhinoErrorReporter.TYPE_PARSE_ERROR,
                    TypedScopeCreator.UNKNOWN_LENDS,
                    TypedScopeCreator.LENDS_ON_NON_OBJECT,
                    TypedScopeCreator.CTOR_INITIALIZER,
                    TypedScopeCreator.IFACE_INITIALIZER,
                    FunctionTypeBuilder.THIS_TYPE_NON_OBJECT);
          children: []
          pos: 8865
          length: 1160
        - type: field_declaration
          fields:
            text: private final AbstractCompiler compiler;
          children: []
          pos: 10029
          length: 40
        - type: field_declaration
          fields:
            text: private final TypeValidator validator;
          children: []
          pos: 10072
          length: 38
        - type: field_declaration
          fields:
            text: private final ReverseAbstractInterpreter reverseInterpreter;
          children: []
          pos: 10114
          length: 60
        - type: field_declaration
          fields:
            text: private final JSTypeRegistry typeRegistry;
          children: []
          pos: 10178
          length: 42
        - type: field_declaration
          fields:
            text: private Scope topScope;
          children: []
          pos: 10223
          length: 23
        - type: field_declaration
          fields:
            text: private ScopeCreator scopeCreator;
          children: []
          pos: 10250
          length: 34
        - type: field_declaration
          fields:
            text: private final CheckLevel reportMissingOverride;
          children: []
          pos: 10288
          length: 47
        - type: field_declaration
          fields:
            text: private final CheckLevel reportUnknownTypes;
          children: []
          pos: 10338
          length: 44
        - type: field_declaration
          fields:
            text: private boolean reportMissingProperties = true;
          children: []
          pos: 10482
          length: 47
        - type: field_declaration
          fields:
            text: private InferJSDocInfo inferJSDocInfo = null;
          children: []
          pos: 10533
          length: 45
        - type: field_declaration
          fields:
            text: private int typedCount = 0;
          children: []
          pos: 10659
          length: 27
        - type: field_declaration
          fields:
            text: private int nullCount = 0;
          children: []
          pos: 10689
          length: 26
        - type: field_declaration
          fields:
            text: private int unknownCount = 0;
          children: []
          pos: 10718
          length: 29
        - type: field_declaration
          fields:
            text: private boolean inExterns;
          children: []
          pos: 10750
          length: 26
        - type: field_declaration
          fields:
            text: private int noTypeCheckSection = 0;
          children: []
          pos: 10867
          length: 35
        - type: constructor_declaration
          fields:
            text: |-
              public TypeCheck(AbstractCompiler compiler,
                    ReverseAbstractInterpreter reverseInterpreter,
                    JSTypeRegistry typeRegistry,
                    Scope topScope,
                    ScopeCreator scopeCreator,
                    CheckLevel reportMissingOverride,
                    CheckLevel reportUnknownTypes) {
                  this.compiler = compiler;
                  this.validator = compiler.getTypeValidator();
                  this.reverseInterpreter = reverseInterpreter;
                  this.typeRegistry = typeRegistry;
                  this.topScope = topScope;
                  this.scopeCreator = scopeCreator;
                  this.reportMissingOverride = reportMissingOverride;
                  this.reportUnknownTypes = reportUnknownTypes;
                  this.inferJSDocInfo = new InferJSDocInfo(compiler);
                }
          children: []
          pos: 10906
          length: 667
        - type: constructor_declaration
          fields:
            text: |-
              public TypeCheck(AbstractCompiler compiler,
                    ReverseAbstractInterpreter reverseInterpreter,
                    JSTypeRegistry typeRegistry,
                    CheckLevel reportMissingOverride,
                    CheckLevel reportUnknownTypes) {
                  this(compiler, reverseInterpreter, typeRegistry, null, null,
                      reportMissingOverride, reportUnknownTypes);
                }
          children: []
          pos: 11577
          length: 331
        - type: constructor_declaration
          fields:
            text: |-
              TypeCheck(AbstractCompiler compiler,
                    ReverseAbstractInterpreter reverseInterpreter,
                    JSTypeRegistry typeRegistry) {
                  this(compiler, reverseInterpreter, typeRegistry, null, null,
                       CheckLevel.WARNING, CheckLevel.OFF);
                }
          children: []
          pos: 11912
          length: 241
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: reportMissingProperties
              children: []
              pos: 12244
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: boolean report
                children: []
                pos: 12268
                length: 14
              pos: 12234
              length: 110
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: reportMissingProperties = report;
                children: []
                pos: 12290
                length: 33
              - type: return_statement
                fields:
                  text: return this;
                children: []
                pos: 12328
                length: 12
              pos: 12284
              length: 60
          children: []
          pos: 12234
          length: 110
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: process
              children: []
              pos: 12621
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node externsRoot
                children: []
                pos: 12629
                length: 16
              pos: 12597
              length: 447
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(scopeCreator);
                children: []
                pos: 12666
                length: 41
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(topScope);
                children: []
                pos: 12712
                length: 37
              - type: local_variable_declaration
                fields:
                  text: Node externsAndJs = jsRoot.getParent();
                children: []
                pos: 12755
                length: 39
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(externsAndJs != null);
                children: []
                pos: 12799
                length: 47
              - type: expression_statement
                fields:
                  text: |-
                    Preconditions.checkState(
                            externsRoot == null || externsAndJs.hasChild(externsRoot));
                children: []
                pos: 12851
                length: 93
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: externsRoot
                            children: []
                            pos: 12954
                            length: 11
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 12969
                            length: 4
                        children: []
                        pos: 12954
                        length: 19
                    children: []
                    pos: 12953
                    length: 21
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: check(externsRoot, true);
                    children: []
                    pos: 12983
                    length: 25
                  pos: 12975
                  length: 39
                pos: 12950
                length: 64
              - type: expression_statement
                fields:
                  text: check(jsRoot, false);
                children: []
                pos: 13019
                length: 21
              pos: 12660
              length: 384
          children: []
          pos: 12597
          length: 447
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: processForTesting
              children: []
              pos: 13119
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node externsRoot
                children: []
                pos: 13137
                length: 16
              pos: 13106
              length: 639
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(scopeCreator == null);
                children: []
                pos: 13174
                length: 47
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(topScope == null);
                children: []
                pos: 13226
                length: 43
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(jsRoot.getParent() != null);
                children: []
                pos: 13275
                length: 53
              - type: local_variable_declaration
                fields:
                  text: Node externsAndJsRoot = jsRoot.getParent();
                children: []
                pos: 13333
                length: 43
              - type: expression_statement
                fields:
                  text: scopeCreator = new MemoizedScopeCreator(new TypedScopeCreator(compiler));
                children: []
                pos: 13382
                length: 73
              - type: expression_statement
                fields:
                  text: topScope = scopeCreator.createScope(externsAndJsRoot, null);
                children: []
                pos: 13460
                length: 60
              - type: local_variable_declaration
                fields:
                  text: |-
                    TypeInferencePass inference = new TypeInferencePass(compiler,
                            reverseInterpreter, topScope, scopeCreator);
                children: []
                pos: 13526
                length: 114
              - type: expression_statement
                fields:
                  text: inference.process(externsRoot, jsRoot);
                children: []
                pos: 13646
                length: 39
              - type: expression_statement
                fields:
                  text: process(externsRoot, jsRoot);
                children: []
                pos: 13690
                length: 29
              - type: return_statement
                fields:
                  text: return topScope;
                children: []
                pos: 13725
                length: 16
              pos: 13168
              length: 577
          children: []
          pos: 13106
          length: 639
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: check
              children: []
              pos: 13762
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node node
                children: []
                pos: 13768
                length: 9
              pos: 13750
              length: 349
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(node);
                children: []
                pos: 13802
                length: 33
              - type: local_variable_declaration
                fields:
                  text: NodeTraversal t = new NodeTraversal(compiler, this, scopeCreator);
                children: []
                pos: 13841
                length: 66
              - type: expression_statement
                fields:
                  text: inExterns = externs;
                children: []
                pos: 13912
                length: 20
              - type: expression_statement
                fields:
                  text: t.traverseWithScope(node, topScope);
                children: []
                pos: 13937
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: externs
                        children: []
                        pos: 13982
                        length: 7
                    children: []
                    pos: 13981
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: inferJSDocInfo.process(node, null);
                    children: []
                    pos: 13999
                    length: 35
                  pos: 13991
                  length: 49
                pos: 13978
                length: 117
              pos: 13796
              length: 303
          children: []
          pos: 13750
          length: 349
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkNoTypeCheckSection
              children: []
              pos: 14117
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 14141
                length: 6
              pos: 14104
              length: 537
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 14185
                        length: 11
                    children: []
                    pos: 14184
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.SCRIPT:
                              case Token.BLOCK:
                              case Token.VAR:
                              case Token.FUNCTION:
                              case Token.ASSIGN:
                                JSDocInfo info = n.getJSDocInfo();
                                if (info != null && info.isNoTypeCheck()) {
                                  if (enterSection) {
                                    noTypeCheckSection++;
                                  } else {
                                    noTypeCheckSection--;
                                  }
                                }
                                validator.setShouldReport(noTypeCheckSection == 0);
                                break;
                            }
                    children: []
                    pos: 14198
                    length: 439
                children: []
                pos: 14177
                length: 460
              pos: 14171
              length: 470
          children: []
          pos: 14104
          length: 537
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: report
              children: []
              pos: 14658
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 14665
                length: 15
              pos: 14645
              length: 195
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: noTypeCheckSection
                            children: []
                            pos: 14758
                            length: 18
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 14780
                            length: 1
                        children: []
                        pos: 14758
                        length: 23
                    children: []
                    pos: 14757
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: t.report(n, diagnosticType, arguments);
                    children: []
                    pos: 14791
                    length: 39
                  pos: 14783
                  length: 53
                pos: 14754
                length: 82
              pos: 14748
              length: 92
          children: []
          pos: 14645
          length: 195
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: shouldTraverse
              children: []
              pos: 14871
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 14893
                length: 15
              pos: 14844
              length: 1141
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: checkNoTypeCheckSection(n, true);
                children: []
                pos: 14937
                length: 33
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 14983
                        length: 11
                    children: []
                    pos: 14982
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.FUNCTION:
                                // normal type checking
                                final Scope outerScope = t.getScope();
                                final String functionPrivateName = n.getFirstChild().getString();
                                if (functionPrivateName != null && functionPrivateName.length() > 0 &&
                                    outerScope.isDeclared(functionPrivateName, false) &&
                                    // Ideally, we would want to check whether the type in the scope
                                    // differs from the type being defined, but then the extern
                                    // redeclarations of built-in types generates spurious warnings.
                                    !(outerScope.getVar(
                                        functionPrivateName).getType() instanceof FunctionType)) {
                                  report(t, n, FUNCTION_MASKS_VARIABLE, functionPrivateName);
                                }

                                // TODO(user): Only traverse the function's body. The function's
                                // name and arguments are traversed by the scope creator, and ideally
                                // should not be traversed by the type checker.
                                break;
                            }
                    children: []
                    pos: 14996
                    length: 968
                children: []
                pos: 14975
                length: 989
              - type: return_statement
                fields:
                  text: return true;
                children: []
                pos: 15969
                length: 12
              pos: 14931
              length: 1054
          children: []
          pos: 14844
          length: 1141
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visit
              children: []
              pos: 16458
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 16464
                length: 15
              pos: 16434
              length: 10190
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType childType;
                children: []
                pos: 16508
                length: 17
              - type: local_variable_declaration
                fields:
                  text: JSType leftType, rightType;
                children: []
                pos: 16530
                length: 27
              - type: local_variable_declaration
                fields:
                  text: Node left, right;
                children: []
                pos: 16562
                length: 17
              - type: local_variable_declaration
                fields:
                  text: boolean typeable = true;
                children: []
                pos: 16650
                length: 24
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 16688
                        length: 11
                    children: []
                    pos: 16687
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.NAME:
                                typeable = visitName(t, n, parent);
                                break;

                              case Token.PARAM_LIST:
                                typeable = false;
                                break;

                              case Token.COMMA:
                                ensureTyped(t, n, getJSType(n.getLastChild()));
                                break;

                              case Token.TRUE:
                              case Token.FALSE:
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.THIS:
                                ensureTyped(t, n, t.getScope().getTypeOfThis());
                                break;

                              case Token.NULL:
                                ensureTyped(t, n, NULL_TYPE);
                                break;

                              case Token.NUMBER:
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.STRING:
                                ensureTyped(t, n, STRING_TYPE);
                                break;

                              case Token.STRING_KEY:
                                typeable = false;
                                break;

                              case Token.GETTER_DEF:
                              case Token.SETTER_DEF:
                                // Object literal keys are handled with OBJECTLIT
                                break;

                              case Token.ARRAYLIT:
                                ensureTyped(t, n, ARRAY_TYPE);
                                break;

                              case Token.REGEXP:
                                ensureTyped(t, n, REGEXP_TYPE);
                                break;

                              case Token.GETPROP:
                                visitGetProp(t, n, parent);
                                typeable = !(parent.isAssign() &&
                                             parent.getFirstChild() == n);
                                break;

                              case Token.GETELEM:
                                visitGetElem(t, n);
                                // The type of GETELEM is always unknown, so no point counting that.
                                // If that unknown leaks elsewhere (say by an assignment to another
                                // variable), then it will be counted.
                                typeable = false;
                                break;

                              case Token.VAR:
                                visitVar(t, n);
                                typeable = false;
                                break;

                              case Token.NEW:
                                visitNew(t, n);
                                break;

                              case Token.CALL:
                                visitCall(t, n);
                                typeable = !parent.isExprResult();
                                break;

                              case Token.RETURN:
                                visitReturn(t, n);
                                typeable = false;
                                break;

                              case Token.DEC:
                              case Token.INC:
                                left = n.getFirstChild();
                                validator.expectNumber(
                                    t, left, getJSType(left), "increment/decrement");
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.NOT:
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.VOID:
                                ensureTyped(t, n, VOID_TYPE);
                                break;

                              case Token.TYPEOF:
                                ensureTyped(t, n, STRING_TYPE);
                                break;

                              case Token.BITNOT:
                                childType = getJSType(n.getFirstChild());
                                if (!childType.matchesInt32Context()) {
                                  report(t, n, BIT_OPERATION, NodeUtil.opToStr(n.getType()),
                                      childType.toString());
                                }
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.POS:
                              case Token.NEG:
                                left = n.getFirstChild();
                                validator.expectNumber(t, left, getJSType(left), "sign operator");
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.EQ:
                              case Token.NE:
                              case Token.SHEQ:
                              case Token.SHNE: {
                                left = n.getFirstChild();
                                right = n.getLastChild();

                                if (left.isTypeOf()) {
                                  if (right.isString()) {
                                    checkTypeofString(t, right, right.getString());
                                  }
                                } else if (right.isTypeOf() && left.isString()) {
                                  checkTypeofString(t, left, left.getString());
                                }

                                leftType = getJSType(left);
                                rightType = getJSType(right);

                                // We do not want to warn about explicit comparisons to VOID. People
                                // often do this if they think their type annotations screwed up.
                                //
                                // We do want to warn about cases where people compare things like
                                // (Array|null) == (Function|null)
                                // because it probably means they screwed up.
                                //
                                // This heuristic here is not perfect, but should catch cases we
                                // care about without too many false negatives.
                                JSType leftTypeRestricted = leftType.restrictByNotNullOrUndefined();
                                JSType rightTypeRestricted = rightType.restrictByNotNullOrUndefined();

                                TernaryValue result = TernaryValue.UNKNOWN;
                                if (n.getType() == Token.EQ || n.getType() == Token.NE) {
                                  result = leftTypeRestricted.testForEquality(rightTypeRestricted);
                                  if (n.isNE()) {
                                    result = result.not();
                                  }
                                } else {
                                  // SHEQ or SHNE
                                  if (!leftTypeRestricted.canTestForShallowEqualityWith(
                                          rightTypeRestricted)) {
                                    result = n.getType() == Token.SHEQ ?
                                        TernaryValue.FALSE : TernaryValue.TRUE;
                                  }
                                }

                                if (result != TernaryValue.UNKNOWN) {
                                  report(t, n, DETERMINISTIC_TEST, leftType.toString(),
                                      rightType.toString(), result.toString());
                                }
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;
                              }

                              case Token.LT:
                              case Token.LE:
                              case Token.GT:
                              case Token.GE:
                                leftType = getJSType(n.getFirstChild());
                                rightType = getJSType(n.getLastChild());
                                if (rightType.isNumber()) {
                                  validator.expectNumber(
                                      t, n, leftType, "left side of numeric comparison");
                                } else if (leftType.isNumber()) {
                                  validator.expectNumber(
                                      t, n, rightType, "right side of numeric comparison");
                                } else if (leftType.matchesNumberContext() &&
                                           rightType.matchesNumberContext()) {
                                  // OK.
                                } else {
                                  // Whether the comparison is numeric will be determined at runtime
                                  // each time the expression is evaluated. Regardless, both operands
                                  // should match a string context.
                                  String message = "left side of comparison";
                                  validator.expectString(t, n, leftType, message);
                                  validator.expectNotNullOrUndefined(
                                      t, n, leftType, message, getNativeType(STRING_TYPE));
                                  message = "right side of comparison";
                                  validator.expectString(t, n, rightType, message);
                                  validator.expectNotNullOrUndefined(
                                      t, n, rightType, message, getNativeType(STRING_TYPE));
                                }
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.IN:
                                validator.expectObject(t, n, getJSType(n.getLastChild()),
                                                       "'in' requires an object");
                                left = n.getFirstChild();
                                validator.expectString(t, left, getJSType(left), "left side of 'in'");
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.INSTANCEOF:
                                left = n.getFirstChild();
                                right = n.getLastChild();
                                rightType = getJSType(right).restrictByNotNullOrUndefined();
                                validator.expectAnyObject(
                                    t, left, getJSType(left), "deterministic instanceof yields false");
                                validator.expectActualObject(
                                    t, right, rightType, "instanceof requires an object");
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.ASSIGN:
                                visitAssign(t, n);
                                typeable = false;
                                break;

                              case Token.ASSIGN_LSH:
                              case Token.ASSIGN_RSH:
                              case Token.ASSIGN_URSH:
                              case Token.ASSIGN_DIV:
                              case Token.ASSIGN_MOD:
                              case Token.ASSIGN_BITOR:
                              case Token.ASSIGN_BITXOR:
                              case Token.ASSIGN_BITAND:
                              case Token.ASSIGN_SUB:
                              case Token.ASSIGN_ADD:
                              case Token.ASSIGN_MUL:
                              case Token.LSH:
                              case Token.RSH:
                              case Token.URSH:
                              case Token.DIV:
                              case Token.MOD:
                              case Token.BITOR:
                              case Token.BITXOR:
                              case Token.BITAND:
                              case Token.SUB:
                              case Token.ADD:
                              case Token.MUL:
                                visitBinaryOperator(n.getType(), t, n);
                                break;

                              case Token.DELPROP:
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.CASE:
                                JSType switchType = getJSType(parent.getFirstChild());
                                JSType caseType = getJSType(n.getFirstChild());
                                validator.expectSwitchMatchesCase(t, n, switchType, caseType);
                                typeable = false;
                                break;

                              case Token.WITH: {
                                Node child = n.getFirstChild();
                                childType = getJSType(child);
                                validator.expectObject(t, child, childType, "with requires an object");
                                typeable = false;
                                break;
                              }

                              case Token.FUNCTION:
                                visitFunction(t, n);
                                break;

                              // These nodes have no interesting type behavior.
                              case Token.LABEL:
                              case Token.LABEL_NAME:
                              case Token.SWITCH:
                              case Token.BREAK:
                              case Token.CATCH:
                              case Token.TRY:
                              case Token.SCRIPT:
                              case Token.EXPR_RESULT:
                              case Token.BLOCK:
                              case Token.EMPTY:
                              case Token.DEFAULT_CASE:
                              case Token.CONTINUE:
                              case Token.DEBUGGER:
                              case Token.THROW:
                                typeable = false;
                                break;

                              // These nodes require data flow analysis.
                              case Token.DO:
                              case Token.FOR:
                              case Token.IF:
                              case Token.WHILE:
                                typeable = false;
                                break;

                              // These nodes are typed during the type inference.
                              case Token.AND:
                              case Token.HOOK:
                              case Token.OBJECTLIT:
                              case Token.OR:
                                if (n.getJSType() != null) { // If we didn't run type inference.
                                  ensureTyped(t, n);
                                } else {
                                  // If this is an enum, then give that type to the objectlit as well.
                                  if ((n.isObjectLit())
                                      && (parent.getJSType() instanceof EnumType)) {
                                    ensureTyped(t, n, parent.getJSType());
                                  } else {
                                    ensureTyped(t, n);
                                  }
                                }
                                if (n.isObjectLit()) {
                                  for (Node key : n.children()) {
                                    visitObjLitKey(t, key, n);
                                  }
                                }
                                break;

                              default:
                                report(t, n, UNEXPECTED_TOKEN, Token.name(n.getType()));
                                ensureTyped(t, n);
                                break;
                            }
                    children: []
                    pos: 16701
                    length: 9697
                children: []
                pos: 16680
                length: 9718
              - type: expression_statement
                fields:
                  text: typeable = typeable && !inExterns;
                children: []
                pos: 26481
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: typeable
                        children: []
                        pos: 26525
                        length: 8
                    children: []
                    pos: 26524
                    length: 10
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: doPercentTypedAccounting(t, n);
                    children: []
                    pos: 26543
                    length: 31
                  pos: 26535
                  length: 45
                pos: 26521
                length: 59
              - type: expression_statement
                fields:
                  text: checkNoTypeCheckSection(n, false);
                children: []
                pos: 26586
                length: 34
              pos: 16502
              length: 10122
          children: []
          pos: 16434
          length: 10190
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkTypeofString
              children: []
              pos: 26641
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 26659
                length: 15
              pos: 26628
              length: 317
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: |-
                            !(s.equals("number") || s.equals("string") || s.equals("boolean") ||
                                      s.equals("undefined") || s.equals("function") ||
                                      s.equals("object") || s.equals("unknown"))
                        children: []
                        pos: 26704
                        length: 180
                    children: []
                    pos: 26703
                    length: 182
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: validator.expectValidTypeofName(t, n, s);
                    children: []
                    pos: 26894
                    length: 41
                  pos: 26886
                  length: 55
                pos: 26700
                length: 241
              pos: 26694
              length: 251
          children: []
          pos: 26628
          length: 317
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: doPercentTypedAccounting
              children: []
              pos: 27068
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 27093
                length: 15
              pos: 27055
              length: 384
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 27124
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: type
                            children: []
                            pos: 27161
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 27169
                            length: 4
                        children: []
                        pos: 27161
                        length: 12
                    children: []
                    pos: 27160
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: nullCount++;
                    children: []
                    pos: 27183
                    length: 12
                  pos: 27175
                  length: 26
                pos: 27157
                length: 278
              pos: 27118
              length: 321
          children: []
          pos: 27055
          length: 384
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitAssign
              children: []
              pos: 27776
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 27788
                length: 15
              pos: 27763
              length: 3934
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSDocInfo info = assign.getJSDocInfo();
                children: []
                pos: 27824
                length: 39
              - type: local_variable_declaration
                fields:
                  text: Node lvalue = assign.getFirstChild();
                children: []
                pos: 27868
                length: 37
              - type: local_variable_declaration
                fields:
                  text: Node rvalue = assign.getLastChild();
                children: []
                pos: 27910
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: lvalue.isGetProp()
                        children: []
                        pos: 28028
                        length: 18
                    children: []
                    pos: 28027
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Node object = lvalue.getFirstChild();
                    children: []
                    pos: 28056
                    length: 37
                  - type: local_variable_declaration
                    fields:
                      text: JSType objectJsType = getJSType(object);
                    children: []
                    pos: 28100
                    length: 40
                  - type: local_variable_declaration
                    fields:
                      text: String property = lvalue.getLastChild().getString();
                    children: []
                    pos: 28147
                    length: 52
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: object.isGetProp()
                            children: []
                            pos: 28331
                            length: 18
                        children: []
                        pos: 28330
                        length: 20
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType jsType = getJSType(object.getFirstChild());
                        children: []
                        pos: 28361
                        length: 50
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: jsType.isInterface()
                                    children: []
                                    pos: 28424
                                    length: 20
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: object.getLastChild().getString().equals("prototype")
                                    children: []
                                    pos: 28460
                                    length: 53
                                children: []
                                pos: 28424
                                length: 89
                            children: []
                            pos: 28423
                            length: 91
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: visitInterfaceGetprop(t, assign, object, property,
                                lvalue, rvalue);
                            children: []
                            pos: 28527
                            length: 67
                          pos: 28515
                          length: 89
                        pos: 28420
                        length: 184
                      pos: 28351
                      length: 261
                    pos: 28327
                    length: 285
                  - type: expression_statement
                    fields:
                      text: checkEnumAlias(t, info, rvalue);
                    children: []
                    pos: 28620
                    length: 32
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: property.equals("prototype")
                            children: []
                            pos: 28912
                            length: 28
                        children: []
                        pos: 28911
                        length: 30
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: not_equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: objectJsType
                                        children: []
                                        pos: 28956
                                        length: 12
                                      right:
                                        type: null_literal
                                        fields: {}
                                        children: []
                                        pos: 28972
                                        length: 4
                                    children: []
                                    pos: 28956
                                    length: 20
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: objectJsType.isFunctionType()
                                    children: []
                                    pos: 28980
                                    length: 29
                                children: []
                                pos: 28956
                                length: 53
                            children: []
                            pos: 28955
                            length: 55
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: local_variable_declaration
                            fields:
                              text: FunctionType functionType = objectJsType.toMaybeFunctionType();
                            children: []
                            pos: 29023
                            length: 63
                          - type: if_statement
                            fields:
                              condition:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: method_invocation
                                    fields:
                                      text: functionType.isConstructor()
                                    children: []
                                    pos: 29101
                                    length: 28
                                children: []
                                pos: 29100
                                length: 30
                            children:
                            - type: block
                              fields: {}
                              children:
                              - type: local_variable_declaration
                                fields:
                                  text: JSType rvalueType = rvalue.getJSType();
                                children: []
                                pos: 29145
                                length: 39
                              - type: expression_statement
                                fields:
                                  text: |-
                                    validator.expectObject(t, rvalue, rvalueType,
                                                    OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
                                children: []
                                pos: 29197
                                length: 100
                              - type: return_statement
                                fields:
                                  text: return;
                                children: []
                                pos: 29310
                                length: 7
                              pos: 29131
                              length: 198
                            pos: 29097
                            length: 232
                          pos: 29011
                          length: 328
                        pos: 28952
                        length: 387
                      pos: 28942
                      length: 405
                    pos: 28908
                    length: 439
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        ObjectType type = ObjectType.cast(
                                  objectJsType.restrictByNotNullOrUndefined());
                    children: []
                    pos: 29504
                    length: 90
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 29605
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 29613
                                length: 4
                            children: []
                            pos: 29605
                            length: 12
                        children: []
                        pos: 29604
                        length: 14
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: and
                                    fields:
                                      left:
                                        type: method_invocation
                                        fields:
                                          text: type.hasProperty(property)
                                        children: []
                                        pos: 29633
                                        length: 26
                                      right:
                                        type: unary_expression
                                        fields:
                                          text: "!type.isPropertyTypeInferred(property)"
                                        children: []
                                        pos: 29675
                                        length: 38
                                    children: []
                                    pos: 29633
                                    length: 80
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: "!propertyIsImplicitCast(type, property)"
                                    children: []
                                    pos: 29729
                                    length: 39
                                children: []
                                pos: 29633
                                length: 135
                            children: []
                            pos: 29632
                            length: 137
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: local_variable_declaration
                            fields:
                              text: JSType expectedType = type.getPropertyType(property);
                            children: []
                            pos: 29782
                            length: 53
                          - type: if_statement
                            fields:
                              condition:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: unary_expression
                                    fields:
                                      text: "!expectedType.isUnknownType()"
                                    children: []
                                    pos: 29850
                                    length: 29
                                children: []
                                pos: 29849
                                length: 31
                            children:
                            - type: block
                              fields: {}
                              children:
                              - type: expression_statement
                                fields:
                                  text: |-
                                    validator.expectCanAssignToPropertyOf(
                                                    t, assign, getJSType(rvalue),
                                                    expectedType, object, property);
                                children: []
                                pos: 29895
                                length: 133
                              - type: expression_statement
                                fields:
                                  text: |-
                                    checkPropertyInheritanceOnGetpropAssign(
                                                    t, assign, object, property, info, expectedType);
                                children: []
                                pos: 30041
                                length: 106
                              - type: return_statement
                                fields:
                                  text: return;
                                children: []
                                pos: 30160
                                length: 7
                              pos: 29881
                              length: 298
                            pos: 29846
                            length: 333
                          pos: 29770
                          length: 419
                        pos: 29629
                        length: 560
                      pos: 29619
                      length: 578
                    pos: 29601
                    length: 596
                  - type: expression_statement
                    fields:
                      text: |-
                        checkPropertyInheritanceOnGetpropAssign(
                                  t, assign, object, property, info, getNativeType(UNKNOWN_TYPE));
                    children: []
                    pos: 30350
                    length: 115
                  pos: 28048
                  length: 2423
                pos: 28024
                length: 2447
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = getJSType(lvalue);
                children: []
                pos: 30720
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: lvalue.isQualifiedName()
                        children: []
                        pos: 30765
                        length: 24
                    children: []
                    pos: 30764
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType rvalueType = getJSType(assign.getLastChild());
                    children: []
                    pos: 30841
                    length: 53
                  - type: local_variable_declaration
                    fields:
                      text: Var var = t.getScope().getVar(lvalue.getQualifiedName());
                    children: []
                    pos: 30901
                    length: 57
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: var
                                children: []
                                pos: 30969
                                length: 3
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 30976
                                length: 4
                            children: []
                            pos: 30969
                            length: 11
                        children: []
                        pos: 30968
                        length: 13
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: method_invocation
                                fields:
                                  text: var.isTypeInferred()
                                children: []
                                pos: 30996
                                length: 20
                            children: []
                            pos: 30995
                            length: 22
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: return_statement
                            fields:
                              text: return;
                            children: []
                            pos: 31030
                            length: 7
                          pos: 31018
                          length: 29
                        pos: 30992
                        length: 55
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: NodeUtil.getRootOfQualifiedName(lvalue).isThis()
                                    children: []
                                    pos: 31061
                                    length: 48
                                  right:
                                    type: not_equals
                                    fields:
                                      left:
                                        type: method_invocation
                                        fields:
                                          text: t.getScope()
                                        children: []
                                        pos: 31125
                                        length: 12
                                      right:
                                        type: method_invocation
                                        fields:
                                          text: var.getScope()
                                        children: []
                                        pos: 31141
                                        length: 14
                                    children: []
                                    pos: 31125
                                    length: 30
                                children: []
                                pos: 31061
                                length: 94
                            children: []
                            pos: 31060
                            length: 96
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: return_statement
                            fields:
                              text: return;
                            children: []
                            pos: 31236
                            length: 7
                          pos: 31157
                          length: 96
                        pos: 31057
                        length: 196
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: not_equals
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: var.getType()
                                    children: []
                                    pos: 31267
                                    length: 13
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 31284
                                    length: 4
                                children: []
                                pos: 31267
                                length: 21
                            children: []
                            pos: 31266
                            length: 23
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: leftType = var.getType();
                            children: []
                            pos: 31302
                            length: 25
                          pos: 31290
                          length: 47
                        pos: 31263
                        length: 74
                      pos: 30982
                      length: 363
                    pos: 30965
                    length: 380
                  pos: 30791
                  length: 560
                pos: 30761
                length: 590
              - type: local_variable_declaration
                fields:
                  text: Node rightChild = assign.getLastChild();
                children: []
                pos: 31419
                length: 40
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = getJSType(rightChild);
                children: []
                pos: 31464
                length: 41
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: |-
                            validator.expectCanAssignTo(
                                        t, assign, rightType, leftType, "assignment")
                        children: []
                        pos: 31514
                        length: 86
                    children: []
                    pos: 31513
                    length: 88
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, assign, rightType);
                    children: []
                    pos: 31610
                    length: 34
                  pos: 31602
                  length: 48
                pos: 31510
                length: 183
              pos: 27818
              length: 3879
          children: []
          pos: 27763
          length: 3934
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkPropertyInheritanceOnGetpropAssign
              children: []
              pos: 31714
              length: 39
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 31761
                length: 15
              pos: 31701
              length: 1242
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: object.isGetProp()
                        children: []
                        pos: 32375
                        length: 18
                    children: []
                    pos: 32374
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Node object2 = object.getFirstChild();
                    children: []
                    pos: 32403
                    length: 38
                  - type: local_variable_declaration
                    fields:
                      text: String property2 = NodeUtil.getStringValue(object.getLastChild());
                    children: []
                    pos: 32448
                    length: 66
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: '"prototype".equals(property2)'
                            children: []
                            pos: 32526
                            length: 29
                        children: []
                        pos: 32525
                        length: 31
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType jsType = getJSType(object2);
                        children: []
                        pos: 32567
                        length: 35
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: method_invocation
                                fields:
                                  text: jsType.isFunctionType()
                                children: []
                                pos: 32615
                                length: 23
                            children: []
                            pos: 32614
                            length: 25
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: local_variable_declaration
                            fields:
                              text: FunctionType functionType = jsType.toMaybeFunctionType();
                            children: []
                            pos: 32652
                            length: 57
                          - type: if_statement
                            fields:
                              condition:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: or
                                    fields:
                                      left:
                                        type: method_invocation
                                        fields:
                                          text: functionType.isConstructor()
                                        children: []
                                        pos: 32724
                                        length: 28
                                      right:
                                        type: method_invocation
                                        fields:
                                          text: functionType.isInterface()
                                        children: []
                                        pos: 32756
                                        length: 26
                                    children: []
                                    pos: 32724
                                    length: 58
                                children: []
                                pos: 32723
                                length: 60
                            children:
                            - type: block
                              fields: {}
                              children:
                              - type: expression_statement
                                fields:
                                  text: |-
                                    checkDeclaredPropertyInheritance(
                                                    t, assign, functionType, property, info, propertyType);
                                children: []
                                pos: 32798
                                length: 105
                              pos: 32784
                              length: 131
                            pos: 32720
                            length: 195
                          pos: 32640
                          length: 285
                        pos: 32611
                        length: 314
                      pos: 32557
                      length: 376
                    pos: 32522
                    length: 411
                  pos: 32395
                  length: 544
                pos: 32371
                length: 568
              pos: 31864
              length: 1079
          children: []
          pos: 31701
          length: 1242
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitObjLitKey
              children: []
              pos: 33241
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 33256
                length: 15
              pos: 33228
              length: 2108
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: objlit.isFromExterns()
                        children: []
                        pos: 33437
                        length: 22
                    children: []
                    pos: 33436
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, key);
                    children: []
                    pos: 33469
                    length: 20
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 33496
                    length: 7
                  pos: 33461
                  length: 48
                pos: 33433
                length: 76
              - type: local_variable_declaration
                fields:
                  text: Node rvalue = key.getFirstChild();
                children: []
                pos: 33743
                length: 34
              - type: local_variable_declaration
                fields:
                  text: |-
                    JSType rightType = NodeUtil.getObjectLitKeyTypeFromValueType(
                            key, getJSType(rvalue));
                children: []
                pos: 33782
                length: 94
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: rightType
                            children: []
                            pos: 33885
                            length: 9
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 33898
                            length: 4
                        children: []
                        pos: 33885
                        length: 17
                    children: []
                    pos: 33884
                    length: 19
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: rightType = getNativeType(UNKNOWN_TYPE);
                    children: []
                    pos: 33912
                    length: 40
                  pos: 33904
                  length: 54
                pos: 33881
                length: 77
              - type: local_variable_declaration
                fields:
                  text: Node owner = objlit;
                children: []
                pos: 33964
                length: 20
              - type: local_variable_declaration
                fields:
                  text: JSType keyType = getJSType(key);
                children: []
                pos: 34044
                length: 32
              - type: local_variable_declaration
                fields:
                  text: JSType allowedValueType = keyType;
                children: []
                pos: 34082
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: allowedValueType.isEnumElementType()
                        children: []
                        pos: 34125
                        length: 36
                    children: []
                    pos: 34124
                    length: 38
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        allowedValueType =
                                  allowedValueType.toMaybeEnumElementType().getPrimitiveType();
                    children: []
                    pos: 34171
                    length: 90
                  pos: 34163
                  length: 104
                pos: 34121
                length: 146
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean valid = validator.expectCanAssignToPropertyOf(t, key,
                            rightType, allowedValueType,
                            owner, NodeUtil.getObjectLitKeyName(key));
                children: []
                pos: 34273
                length: 149
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: valid
                        children: []
                        pos: 34431
                        length: 5
                    children: []
                    pos: 34430
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, key, rightType);
                    children: []
                    pos: 34446
                    length: 31
                  pos: 34438
                  length: 45
                pos: 34427
                length: 96
              - type: local_variable_declaration
                fields:
                  text: JSType objlitType = getJSType(objlit);
                children: []
                pos: 34809
                length: 38
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType type = ObjectType.cast(
                            objlitType.restrictByNotNullOrUndefined());
                children: []
                pos: 34852
                length: 86
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: type
                            children: []
                            pos: 34947
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 34955
                            length: 4
                        children: []
                        pos: 34947
                        length: 12
                    children: []
                    pos: 34946
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: String property = NodeUtil.getObjectLitKeyName(key);
                    children: []
                    pos: 34969
                    length: 52
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: type.hasProperty(property)
                                    children: []
                                    pos: 35032
                                    length: 26
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: "!type.isPropertyTypeInferred(property)"
                                    children: []
                                    pos: 35072
                                    length: 38
                                children: []
                                pos: 35032
                                length: 78
                              right:
                                type: unary_expression
                                fields:
                                  text: "!propertyIsImplicitCast(type, property)"
                                children: []
                                pos: 35124
                                length: 39
                            children: []
                            pos: 35032
                            length: 131
                        children: []
                        pos: 35031
                        length: 133
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            validator.expectCanAssignToPropertyOf(
                                        t, key, keyType,
                                        type.getPropertyType(property), owner, property);
                        children: []
                        pos: 35175
                        length: 129
                      pos: 35165
                      length: 147
                    pos: 35028
                    length: 284
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 35319
                    length: 7
                  pos: 34961
                  length: 371
                pos: 34943
                length: 389
              pos: 33296
              length: 2040
          children: []
          pos: 33228
          length: 2108
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: propertyIsImplicitCast
              children: []
              pos: 35471
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: ObjectType type
                children: []
                pos: 35494
                length: 15
              pos: 35455
              length: 309
            body:
              type: block
              fields: {}
              children:
              - type: for_statement
                fields:
                  text: |-
                    for (; type != null; type = type.getImplicitPrototype()) {
                          JSDocInfo docInfo = type.getOwnPropertyJSDocInfo(prop);
                          if (docInfo != null && docInfo.isImplicitCast()) {
                            return true;
                          }
                        }
                children: []
                pos: 35530
                length: 212
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 35747
                length: 13
              pos: 35524
              length: 240
          children: []
          pos: 35455
          length: 309
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkDeclaredPropertyInheritance
              children: []
              pos: 36033
              length: 32
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 36073
                length: 15
              pos: 36020
              length: 4902
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: hasUnknownOrEmptySupertype(ctorType)
                        children: []
                        pos: 36286
                        length: 36
                    children: []
                    pos: 36285
                    length: 38
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 36332
                    length: 7
                  pos: 36324
                  length: 21
                pos: 36282
                length: 63
              - type: local_variable_declaration
                fields:
                  text: FunctionType superClass = ctorType.getSuperClassConstructor();
                children: []
                pos: 36351
                length: 62
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean superClassHasProperty = superClass != null &&
                            superClass.getInstanceType().hasProperty(propertyName);
                children: []
                pos: 36418
                length: 117
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean superClassHasDeclaredProperty = superClass != null &&
                            superClass.getInstanceType().isPropertyTypeDeclared(propertyName);
                children: []
                pos: 36540
                length: 136
              - type: local_variable_declaration
                fields:
                  text: boolean superInterfaceHasProperty = false;
                children: []
                pos: 36703
                length: 42
              - type: local_variable_declaration
                fields:
                  text: boolean superInterfaceHasDeclaredProperty = false;
                children: []
                pos: 36750
                length: 50
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: ctorType.isInterface()
                        children: []
                        pos: 36809
                        length: 22
                    children: []
                    pos: 36808
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: enhanced_for_statement
                    fields:
                      text: |-
                        for (ObjectType interfaceType : ctorType.getExtendedInterfaces()) {
                                superInterfaceHasProperty =
                                    superInterfaceHasProperty ||
                                    interfaceType.hasProperty(propertyName);
                                superInterfaceHasDeclaredProperty =
                                    superInterfaceHasDeclaredProperty ||
                                    interfaceType.isPropertyTypeDeclared(propertyName);
                              }
                    children: []
                    pos: 36841
                    length: 362
                  pos: 36833
                  length: 376
                pos: 36805
                length: 404
              - type: local_variable_declaration
                fields:
                  text: boolean declaredOverride = info != null && info.isOverride();
                children: []
                pos: 37214
                length: 61
              - type: local_variable_declaration
                fields:
                  text: boolean foundInterfaceProperty = false;
                children: []
                pos: 37281
                length: 39
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: ctorType.isConstructor()
                        children: []
                        pos: 37329
                        length: 24
                    children: []
                    pos: 37328
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: enhanced_for_statement
                    fields:
                      text: |-
                        for (JSType implementedInterface :
                                  ctorType.getAllImplementedInterfaces()) {
                                if (implementedInterface.isUnknownType() ||
                                    implementedInterface.isEmptyType()) {
                                  continue;
                                }
                                FunctionType interfaceType =
                                    implementedInterface.toObjectType().getConstructor();
                                Preconditions.checkNotNull(interfaceType);

                                boolean interfaceHasProperty =
                                    interfaceType.getPrototype().hasProperty(propertyName);
                                foundInterfaceProperty = foundInterfaceProperty ||
                                    interfaceHasProperty;
                                if (reportMissingOverride.isOn()
                                    && !declaredOverride
                                    && interfaceHasProperty) {
                                  // @override not present, but the property does override an interface
                                  // property
                                  compiler.report(t.makeError(n, reportMissingOverride,
                                      HIDDEN_INTERFACE_PROPERTY, propertyName,
                                      interfaceType.getTopMostDefiningType(propertyName).toString()));
                                }
                              }
                    children: []
                    pos: 37363
                    length: 1004
                  pos: 37355
                  length: 1018
                pos: 37325
                length: 1048
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: and
                            fields:
                              left:
                                type: unary_expression
                                fields:
                                  text: "!declaredOverride"
                                children: []
                                pos: 38383
                                length: 17
                              right:
                                type: unary_expression
                                fields:
                                  text: "!superClassHasProperty"
                                children: []
                                pos: 38412
                                length: 22
                            children: []
                            pos: 38383
                            length: 51
                          right:
                            type: unary_expression
                            fields:
                              text: "!superInterfaceHasProperty"
                            children: []
                            pos: 38446
                            length: 26
                        children: []
                        pos: 38383
                        length: 89
                    children: []
                    pos: 38382
                    length: 91
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 38542
                    length: 7
                  pos: 38474
                  length: 81
                pos: 38379
                length: 176
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType topInstanceType = superClassHasDeclaredProperty ?
                            superClass.getTopMostDefiningType(propertyName) : null;
                children: []
                pos: 38561
                length: 124
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean declaredLocally =
                            ctorType.isConstructor() &&
                            (ctorType.getPrototype().hasOwnProperty(propertyName) ||
                             ctorType.getInstanceType().hasOwnProperty(propertyName));
                children: []
                pos: 38690
                length: 193
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: reportMissingOverride.isOn()
                                    children: []
                                    pos: 38892
                                    length: 28
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: "!declaredOverride"
                                    children: []
                                    pos: 38932
                                    length: 17
                                children: []
                                pos: 38892
                                length: 57
                              right:
                                type: identifier
                                fields:
                                  text: superClassHasDeclaredProperty
                                children: []
                                pos: 38961
                                length: 29
                            children: []
                            pos: 38892
                            length: 98
                          right:
                            type: identifier
                            fields:
                              text: declaredLocally
                            children: []
                            pos: 39002
                            length: 15
                        children: []
                        pos: 38892
                        length: 125
                    children: []
                    pos: 38891
                    length: 127
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        compiler.report(t.makeError(n, reportMissingOverride,
                                  HIDDEN_SUPERCLASS_PROPERTY, propertyName,
                                  topInstanceType.toString()));
                    children: []
                    pos: 39121
                    length: 145
                  pos: 39019
                  length: 253
                pos: 38888
                length: 384
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: superClassHasDeclaredProperty
                        children: []
                        pos: 39345
                        length: 29
                    children: []
                    pos: 39344
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        JSType superClassPropType =
                                  superClass.getInstanceType().getPropertyType(propertyName);
                    children: []
                    pos: 39430
                    length: 97
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: unary_expression
                            fields:
                              text: "!propertyType.canAssignTo(superClassPropType)"
                            children: []
                            pos: 39538
                            length: 45
                        children: []
                        pos: 39537
                        length: 47
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            compiler.report(
                                        t.makeError(n, HIDDEN_SUPERCLASS_PROPERTY_MISMATCH,
                                            propertyName, topInstanceType.toString(),
                                            superClassPropType.toString(), propertyType.toString()));
                        children: []
                        pos: 39595
                        length: 212
                      pos: 39585
                      length: 230
                    pos: 39534
                    length: 281
                  pos: 39376
                  length: 445
                pos: 39341
                length: 1577
              pos: 36185
              length: 4737
          children: []
          pos: 36020
          length: 4902
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: hasUnknownOrEmptySupertype
              children: []
              pos: 41083
              length: 26
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FunctionType ctor
                children: []
                pos: 41110
                length: 17
              pos: 41060
              length: 815
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkArgument(ctor.isConstructor() || ctor.isInterface());
                children: []
                pos: 41135
                length: 72
              - type: expression_statement
                fields:
                  text: Preconditions.checkArgument(!ctor.isUnknownType());
                children: []
                pos: 41212
                length: 51
              - type: while_statement
                fields:
                  text: |-
                    while (true) {
                          ObjectType maybeSuperInstanceType =
                              ctor.getPrototype().getImplicitPrototype();
                          if (maybeSuperInstanceType == null) {
                            return false;
                          }
                          if (maybeSuperInstanceType.isUnknownType() ||
                              maybeSuperInstanceType.isEmptyType()) {
                            return true;
                          }
                          ctor = maybeSuperInstanceType.getConstructor();
                          if (ctor == null) {
                            return false;
                          }
                          Preconditions.checkState(ctor.isConstructor() || ctor.isInterface());
                        }
                children: []
                pos: 41364
                length: 507
              pos: 41129
              length: 746
          children: []
          pos: 41060
          length: 815
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitInterfaceGetprop
              children: []
              pos: 42013
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 42035
                length: 15
              pos: 42000
              length: 1082
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType rvalueType = getJSType(rvalue);
                children: []
                pos: 42134
                length: 38
              - type: local_variable_declaration
                fields:
                  text: |-
                    String abstractMethodName =
                            compiler.getCodingConvention().getAbstractMethodName();
                children: []
                pos: 42371
                length: 91
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!rvalueType.isFunctionType()"
                        children: []
                        pos: 42471
                        length: 28
                    children: []
                    pos: 42470
                    length: 30
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        String abstractMethodMessage = (abstractMethodName != null)
                                 ? ", or " + abstractMethodName
                                 : "";
                    children: []
                    pos: 42584
                    length: 114
                  - type: expression_statement
                    fields:
                      text: |-
                        compiler.report(
                                  t.makeError(object, INVALID_INTERFACE_MEMBER_DECLARATION,
                                      abstractMethodMessage));
                    children: []
                    pos: 42705
                    length: 123
                  pos: 42501
                  length: 333
                pos: 42467
                length: 367
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: assign.getLastChild().isFunction()
                            children: []
                            pos: 42844
                            length: 34
                          right:
                            type: unary_expression
                            fields:
                              text: "!NodeUtil.isEmptyBlock(assign.getLastChild().getLastChild())"
                            children: []
                            pos: 42890
                            length: 60
                        children: []
                        pos: 42844
                        length: 106
                    children: []
                    pos: 42843
                    length: 108
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        compiler.report(
                                  t.makeError(object, INTERFACE_FUNCTION_NOT_EMPTY,
                                      abstractMethodName));
                    children: []
                    pos: 42960
                    length: 112
                  pos: 42952
                  length: 126
                pos: 42840
                length: 238
              pos: 42127
              length: 955
          children: []
          pos: 42000
          length: 1082
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitName
              children: []
              pos: 43411
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 43421
                length: 15
              pos: 43403
              length: 1096
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int parentNodeType = parent.getType();
                children: []
                pos: 43917
                length: 38
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: or
                                fields:
                                  left:
                                    type: equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: parentNodeType
                                        children: []
                                        pos: 43964
                                        length: 14
                                      right:
                                        type: field_access
                                        fields:
                                          text: Token.FUNCTION
                                        children: []
                                        pos: 43982
                                        length: 14
                                    children: []
                                    pos: 43964
                                    length: 32
                                  right:
                                    type: equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: parentNodeType
                                        children: []
                                        pos: 44008
                                        length: 14
                                      right:
                                        type: field_access
                                        fields:
                                          text: Token.CATCH
                                        children: []
                                        pos: 44026
                                        length: 11
                                    children: []
                                    pos: 44008
                                    length: 29
                                children: []
                                pos: 43964
                                length: 73
                              right:
                                type: equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: parentNodeType
                                    children: []
                                    pos: 44049
                                    length: 14
                                  right:
                                    type: field_access
                                    fields:
                                      text: Token.PARAM_LIST
                                    children: []
                                    pos: 44067
                                    length: 16
                                children: []
                                pos: 44049
                                length: 34
                            children: []
                            pos: 43964
                            length: 119
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: parentNodeType
                                children: []
                                pos: 44095
                                length: 14
                              right:
                                type: field_access
                                fields:
                                  text: Token.VAR
                                children: []
                                pos: 44113
                                length: 9
                            children: []
                            pos: 44095
                            length: 27
                        children: []
                        pos: 43964
                        length: 158
                    children: []
                    pos: 43963
                    length: 160
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return false;
                    children: []
                    pos: 44132
                    length: 13
                  pos: 44124
                  length: 27
                pos: 43960
                length: 191
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 44157
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: type
                            children: []
                            pos: 44194
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 44202
                            length: 4
                        children: []
                        pos: 44194
                        length: 12
                    children: []
                    pos: 44193
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: type = getNativeType(UNKNOWN_TYPE);
                    children: []
                    pos: 44216
                    length: 35
                  - type: local_variable_declaration
                    fields:
                      text: Var var = t.getScope().getVar(n.getString());
                    children: []
                    pos: 44258
                    length: 45
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: var
                                children: []
                                pos: 44314
                                length: 3
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 44321
                                length: 4
                            children: []
                            pos: 44314
                            length: 11
                        children: []
                        pos: 44313
                        length: 13
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType varType = var.getType();
                        children: []
                        pos: 44337
                        length: 31
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: varType
                                    children: []
                                    pos: 44381
                                    length: 7
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 44392
                                    length: 4
                                children: []
                                pos: 44381
                                length: 15
                            children: []
                            pos: 44380
                            length: 17
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: type = varType;
                            children: []
                            pos: 44410
                            length: 15
                          pos: 44398
                          length: 37
                        pos: 44377
                        length: 58
                      pos: 44327
                      length: 116
                    pos: 44310
                    length: 133
                  pos: 44208
                  length: 241
                pos: 44190
                length: 259
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n, type);
                children: []
                pos: 44454
                length: 24
              - type: return_statement
                fields:
                  text: return true;
                children: []
                pos: 44483
                length: 12
              pos: 43459
              length: 1040
          children: []
          pos: 43403
          length: 1096
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitGetProp
              children: []
              pos: 44790
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 44803
                length: 15
              pos: 44777
              length: 818
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node property = n.getLastChild();
                children: []
                pos: 45053
                length: 33
              - type: local_variable_declaration
                fields:
                  text: Node objNode = n.getFirstChild();
                children: []
                pos: 45091
                length: 33
              - type: local_variable_declaration
                fields:
                  text: JSType childType = getJSType(objNode);
                children: []
                pos: 45129
                length: 38
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: childType.isDict()
                        children: []
                        pos: 45177
                        length: 18
                    children: []
                    pos: 45176
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS,
                        "'.'", "dict");
                    children: []
                    pos: 45205
                    length: 74
                  pos: 45197
                  length: 88
                pos: 45173
                length: 395
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n);
                children: []
                pos: 45573
                length: 18
              pos: 44841
              length: 754
          children: []
          pos: 44777
          length: 818
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkPropertyAccess
              children: []
              pos: 45934
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType childType
                children: []
                pos: 45954
                length: 16
              pos: 45921
              length: 1250
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType propType = getJSType(n);
                children: []
                pos: 46291
                length: 31
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: propType.isEquivalentTo(typeRegistry.getNativeType(UNKNOWN_TYPE))
                        children: []
                        pos: 46331
                        length: 65
                    children: []
                    pos: 46330
                    length: 67
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: childType = childType.autobox();
                    children: []
                    pos: 46406
                    length: 32
                  - type: local_variable_declaration
                    fields:
                      text: ObjectType objectType = ObjectType.cast(childType);
                    children: []
                    pos: 46445
                    length: 51
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: objectType
                                children: []
                                pos: 46507
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 46521
                                length: 4
                            children: []
                            pos: 46507
                            length: 18
                        children: []
                        pos: 46506
                        length: 20
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: or
                                fields:
                                  left:
                                    type: unary_expression
                                    fields:
                                      text: "!objectType.hasProperty(propName)"
                                    children: []
                                    pos: 46722
                                    length: 33
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: |-
                                        objectType.isEquivalentTo(
                                                        typeRegistry.getNativeType(UNKNOWN_TYPE))
                                    children: []
                                    pos: 46771
                                    length: 84
                                children: []
                                pos: 46722
                                length: 133
                            children: []
                            pos: 46721
                            length: 135
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: if_statement
                            fields:
                              condition:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: instanceof_expression
                                    fields:
                                      text: objectType instanceof EnumType
                                    children: []
                                    pos: 46873
                                    length: 30
                                children: []
                                pos: 46872
                                length: 32
                            children:
                            - type: block
                              fields: {}
                              children:
                              - type: expression_statement
                                fields:
                                  text: report(t, n, INEXISTENT_ENUM_ELEMENT, propName);
                                children: []
                                pos: 46919
                                length: 48
                              pos: 46905
                              length: 74
                            pos: 46869
                            length: 196
                          pos: 46857
                          length: 218
                        pos: 46718
                        length: 357
                      pos: 46527
                      length: 557
                    pos: 46503
                    length: 658
                  pos: 46398
                  length: 769
                pos: 46327
                length: 840
              pos: 46020
              length: 1151
          children: []
          pos: 45921
          length: 1250
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkPropertyAccessHelper
              children: []
              pos: 47188
              length: 25
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType objectType
                children: []
                pos: 47214
                length: 17
              pos: 47175
              length: 412
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: and
                            fields:
                              left:
                                type: unary_expression
                                fields:
                                  text: "!objectType.isEmptyType()"
                                children: []
                                pos: 47291
                                length: 25
                              right:
                                type: identifier
                                fields:
                                  text: reportMissingProperties
                                children: []
                                pos: 47328
                                length: 23
                            children: []
                            pos: 47291
                            length: 60
                          right:
                            type: unary_expression
                            fields:
                              text: "!isPropertyTest(n)"
                            children: []
                            pos: 47355
                            length: 18
                        children: []
                        pos: 47291
                        length: 82
                    children: []
                    pos: 47290
                    length: 84
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: unary_expression
                            fields:
                              text: "!typeRegistry.canPropertyBeDefined(objectType,
                                propName)"
                            children: []
                            pos: 47387
                            length: 56
                        children: []
                        pos: 47386
                        length: 58
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            report(t, n, INEXISTENT_PROPERTY, propName,
                                        validator.getReadableJSTypeName(n.getFirstChild(), true));
                        children: []
                        pos: 47455
                        length: 114
                      pos: 47445
                      length: 132
                    pos: 47383
                    length: 194
                  pos: 47375
                  length: 208
                pos: 47287
                length: 296
              pos: 47281
              length: 306
          children: []
          pos: 47175
          length: 412
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isPropertyTest
              children: []
              pos: 47814
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getProp
                children: []
                pos: 47829
                length: 12
              pos: 47798
              length: 748
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node parent = getProp.getParent();
                children: []
                pos: 47849
                length: 34
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: parent.getType()
                        children: []
                        pos: 47896
                        length: 16
                    children: []
                    pos: 47895
                    length: 18
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.CALL:
                                return parent.getFirstChild() != getProp &&
                                    compiler.getCodingConvention().isPropertyTestFunction(parent);

                              case Token.IF:
                              case Token.WHILE:
                              case Token.DO:
                              case Token.FOR:
                                return NodeUtil.getConditionExpression(parent) == getProp;

                              case Token.INSTANCEOF:
                              case Token.TYPEOF:
                                return true;

                              case Token.AND:
                              case Token.HOOK:
                                return parent.getFirstChild() == getProp;

                              case Token.NOT:
                                return parent.getParent().isOr() &&
                                    parent.getParent().getFirstChild() == parent;
                            }
                    children: []
                    pos: 47914
                    length: 610
                children: []
                pos: 47888
                length: 636
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 48529
                length: 13
              pos: 47843
              length: 703
          children: []
          pos: 47798
          length: 748
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitGetElem
              children: []
              pos: 48789
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 48802
                length: 15
              pos: 48776
              length: 185
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    validator.expectIndexMatch(
                            t, n, getJSType(n.getFirstChild()), getJSType(n.getLastChild()));
                children: []
                pos: 48833
                length: 101
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n);
                children: []
                pos: 48939
                length: 18
              pos: 48827
              length: 134
          children: []
          pos: 48776
          length: 185
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitVar
              children: []
              pos: 49200
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 49209
                length: 15
              pos: 49187
              length: 1060
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: 'JSDocInfo varInfo = n.hasOneChild() ? n.getJSDocInfo() :
                    null;'
                children: []
                pos: 49402
                length: 62
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (Node name : n.children()) {
                          Node value = name.getFirstChild();
                          // A null var would indicate a bug in the scope creation logic.
                          Var var = t.getScope().getVar(name.getString());

                          if (value != null) {
                            JSType valueType = getJSType(value);
                            JSType nameType = var.getType();
                            nameType = (nameType == null) ? getNativeType(UNKNOWN_TYPE) : nameType;

                            JSDocInfo info = name.getJSDocInfo();
                            if (info == null) {
                              info = varInfo;
                            }

                            checkEnumAlias(t, info, value);
                            if (var.isTypeInferred()) {
                              ensureTyped(t, name, valueType);
                            } else {
                              validator.expectCanAssignTo(
                                  t, value, valueType, nameType, "initializing variable");
                            }
                          }
                        }
                children: []
                pos: 49469
                length: 774
              pos: 49234
              length: 1013
          children: []
          pos: 49187
          length: 1060
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitNew
              children: []
              pos: 50300
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 50309
                length: 15
              pos: 50287
              length: 557
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node constructor = n.getFirstChild();
                children: []
                pos: 50340
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
                children: []
                pos: 50382
                length: 68
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: type.isConstructor()
                                children: []
                                pos: 50459
                                length: 20
                              right:
                                type: method_invocation
                                fields:
                                  text: type.isEmptyType()
                                children: []
                                pos: 50483
                                length: 18
                            children: []
                            pos: 50459
                            length: 42
                          right:
                            type: method_invocation
                            fields:
                              text: type.isUnknownType()
                            children: []
                            pos: 50505
                            length: 20
                        children: []
                        pos: 50459
                        length: 66
                    children: []
                    pos: 50458
                    length: 68
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType fnType = type.toMaybeFunctionType();
                    children: []
                    pos: 50535
                    length: 49
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: fnType
                                children: []
                                pos: 50595
                                length: 6
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 50605
                                length: 4
                            children: []
                            pos: 50595
                            length: 14
                        children: []
                        pos: 50594
                        length: 16
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: visitParameterList(t, n, fnType);
                        children: []
                        pos: 50621
                        length: 33
                      - type: expression_statement
                        fields:
                          text: ensureTyped(t, n, fnType.getInstanceType());
                        children: []
                        pos: 50663
                        length: 44
                      pos: 50611
                      length: 104
                    pos: 50591
                    length: 166
                  pos: 50527
                  length: 236
                pos: 50455
                length: 385
              pos: 50334
              length: 510
          children: []
          pos: 50287
          length: 557
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkInterfaceConflictProperties
              children: []
              pos: 51382
              length: 32
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 51415
                length: 15
              pos: 51369
              length: 987
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Set<String> currentPropertyNames = interfaceType.getPropertyNames();
                children: []
                pos: 51598
                length: 68
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (String name : currentPropertyNames) {
                          ObjectType oType = properties.get(name);
                          if (oType != null) {
                            if (!interfaceType.getPropertyType(name).isEquivalentTo(
                                oType.getPropertyType(name))) {
                              compiler.report(
                                  t.makeError(n, INCOMPATIBLE_EXTENDED_PROPERTY_TYPE,
                                      functionName, name, oType.toString(),
                                      interfaceType.toString()));
                            }
                          }
                          currentProperties.put(name, interfaceType);
                        }
                children: []
                pos: 51671
                length: 494
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (ObjectType iType : interfaceType.getCtorExtendedInterfaces()) {
                          checkInterfaceConflictProperties(t, n, functionName, properties,
                              currentProperties, iType);
                        }
                children: []
                pos: 52170
                length: 182
              pos: 51592
              length: 764
          children: []
          pos: 51369
          length: 987
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitFunction
              children: []
              pos: 52614
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 52628
                length: 15
              pos: 52601
              length: 3473
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: FunctionType functionType = JSType.toMaybeFunctionType(n.getJSType());
                children: []
                pos: 52659
                length: 70
              - type: local_variable_declaration
                fields:
                  text: String functionPrivateName = n.getFirstChild().getString();
                children: []
                pos: 52734
                length: 59
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: functionType.isConstructor()
                        children: []
                        pos: 52802
                        length: 28
                    children: []
                    pos: 52801
                    length: 30
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType baseConstructor = functionType.getSuperClassConstructor();
                    children: []
                    pos: 52840
                    length: 71
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: and
                                    fields:
                                      left:
                                        type: not_equals
                                        fields:
                                          left:
                                            type: identifier
                                            fields:
                                              text: baseConstructor
                                            children: []
                                            pos: 52922
                                            length: 15
                                          right:
                                            type: method_invocation
                                            fields:
                                              text: getNativeType(OBJECT_FUNCTION_TYPE)
                                            children: []
                                            pos: 52941
                                            length: 35
                                        children: []
                                        pos: 52922
                                        length: 54
                                      right:
                                        type: not_equals
                                        fields:
                                          left:
                                            type: identifier
                                            fields:
                                              text: baseConstructor
                                            children: []
                                            pos: 52990
                                            length: 15
                                          right:
                                            type: null_literal
                                            fields: {}
                                            children: []
                                            pos: 53009
                                            length: 4
                                        children: []
                                        pos: 52990
                                        length: 23
                                    children: []
                                    pos: 52922
                                    length: 91
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: baseConstructor.isInterface()
                                    children: []
                                    pos: 53027
                                    length: 29
                                children: []
                                pos: 52922
                                length: 134
                              right:
                                type: method_invocation
                                fields:
                                  text: functionType.isConstructor()
                                children: []
                                pos: 53060
                                length: 28
                            children: []
                            pos: 52922
                            length: 166
                        children: []
                        pos: 52921
                        length: 168
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            compiler.report(
                                        t.makeError(n, CONFLICTING_EXTENDED_TYPE,
                                                    "constructor", functionPrivateName));
                        children: []
                        pos: 53100
                        length: 132
                      pos: 53090
                      length: 150
                    pos: 52918
                    length: 1785
                  pos: 52832
                  length: 1877
                pos: 52798
                length: 3272
              pos: 52653
              length: 3421
          children: []
          pos: 52601
          length: 3473
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitCall
              children: []
              pos: 56314
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 56324
                length: 15
              pos: 56301
              length: 2026
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node child = n.getFirstChild();
                children: []
                pos: 56355
                length: 31
              - type: local_variable_declaration
                fields:
                  text: JSType childType = getJSType(child).restrictByNotNullOrUndefined();
                children: []
                pos: 56391
                length: 67
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!childType.canBeCalled()"
                        children: []
                        pos: 56468
                        length: 24
                    children: []
                    pos: 56467
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: report(t, n, NOT_CALLABLE, childType.toString());
                    children: []
                    pos: 56502
                    length: 49
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, n);
                    children: []
                    pos: 56558
                    length: 18
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 56583
                    length: 7
                  pos: 56494
                  length: 102
                pos: 56464
                length: 132
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: childType.isFunctionType()
                        children: []
                        pos: 56731
                        length: 26
                    children: []
                    pos: 56730
                    length: 28
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType functionType = childType.toMaybeFunctionType();
                    children: []
                    pos: 56767
                    length: 60
                  - type: local_variable_declaration
                    fields:
                      text: boolean isExtern = false;
                    children: []
                    pos: 56835
                    length: 25
                  - type: local_variable_declaration
                    fields:
                      text: JSDocInfo functionJSDocInfo = functionType.getJSDocInfo();
                    children: []
                    pos: 56867
                    length: 58
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: functionJSDocInfo
                                    children: []
                                    pos: 56936
                                    length: 17
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 56957
                                    length: 4
                                children: []
                                pos: 56936
                                length: 25
                              right:
                                type: not_equals
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: functionJSDocInfo.getAssociatedNode()
                                    children: []
                                    pos: 56976
                                    length: 37
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 57017
                                    length: 4
                                children: []
                                pos: 56976
                                length: 45
                            children: []
                            pos: 56936
                            length: 85
                        children: []
                        pos: 56934
                        length: 88
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: isExtern = functionJSDocInfo.getAssociatedNode().isFromExterns();
                        children: []
                        pos: 57033
                        length: 65
                      pos: 57023
                      length: 83
                    pos: 56932
                    length: 174
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: functionType.isConstructor()
                                    children: []
                                    pos: 57263
                                    length: 28
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: "!functionType.isNativeObjectType()"
                                    children: []
                                    pos: 57305
                                    length: 34
                                children: []
                                pos: 57263
                                length: 76
                              right:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: or
                                    fields:
                                      left:
                                        type: or
                                        fields:
                                          left:
                                            type: method_invocation
                                            fields:
                                              text: functionType.getReturnType().isUnknownType()
                                            children: []
                                            pos: 57354
                                            length: 44
                                          right:
                                            type: method_invocation
                                            fields:
                                              text: functionType.getReturnType().isVoidType()
                                            children: []
                                            pos: 57413
                                            length: 41
                                        children: []
                                        pos: 57354
                                        length: 100
                                      right:
                                        type: unary_expression
                                        fields:
                                          text: "!isExtern"
                                        children: []
                                        pos: 57469
                                        length: 9
                                    children: []
                                    pos: 57354
                                    length: 124
                                children: []
                                pos: 57353
                                length: 126
                            children: []
                            pos: 57263
                            length: 216
                        children: []
                        pos: 57262
                        length: 218
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: report(t, n, CONSTRUCTOR_NOT_CALLABLE, childType.toString());
                        children: []
                        pos: 57491
                        length: 61
                      pos: 57481
                      length: 79
                    pos: 57259
                    length: 301
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: and
                                    fields:
                                      left:
                                        type: method_invocation
                                        fields:
                                          text: functionType.isOrdinaryFunction()
                                        children: []
                                        pos: 57667
                                        length: 33
                                      right:
                                        type: unary_expression
                                        fields:
                                          text: "!functionType.getTypeOfThis().isUnknownType()"
                                        children: []
                                        pos: 57714
                                        length: 45
                                    children: []
                                    pos: 57667
                                    length: 92
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: "!functionType.getTypeOfThis().isNativeObjectType()"
                                    children: []
                                    pos: 57773
                                    length: 50
                                children: []
                                pos: 57667
                                length: 156
                              right:
                                type: unary_expression
                                fields:
                                  text: |-
                                    !(child.isGetElem() ||
                                                child.isGetProp())
                                children: []
                                pos: 57837
                                length: 53
                            children: []
                            pos: 57667
                            length: 223
                        children: []
                        pos: 57666
                        length: 225
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: report(t, n, EXPECTED_THIS_TYPE, functionType.toString());
                        children: []
                        pos: 57902
                        length: 58
                      pos: 57892
                      length: 76
                    pos: 57663
                    length: 305
                  - type: expression_statement
                    fields:
                      text: visitParameterList(t, n, functionType);
                    children: []
                    pos: 57976
                    length: 39
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, n, functionType.getReturnType());
                    children: []
                    pos: 58022
                    length: 48
                  pos: 56759
                  length: 1317
                pos: 56727
                length: 1387
              pos: 56349
              length: 1978
          children: []
          pos: 56301
          length: 2026
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitParameterList
              children: []
              pos: 58408
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 58427
                length: 15
              pos: 58395
              length: 1386
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Iterator<Node> arguments = call.children().iterator();
                children: []
                pos: 58494
                length: 54
              - type: expression_statement
                fields:
                  text: arguments.next();
                children: []
                pos: 58553
                length: 17
              - type: local_variable_declaration
                fields:
                  text: Iterator<Node> parameters = functionType.getParameters().iterator();
                children: []
                pos: 58602
                length: 68
              - type: local_variable_declaration
                fields:
                  text: int ordinal = 0;
                children: []
                pos: 58675
                length: 16
              - type: local_variable_declaration
                fields:
                  text: Node parameter = null;
                children: []
                pos: 58696
                length: 22
              - type: local_variable_declaration
                fields:
                  text: Node argument = null;
                children: []
                pos: 58723
                length: 21
              - type: while_statement
                fields:
                  text: |-
                    while (arguments.hasNext() &&
                               (parameters.hasNext() ||
                                parameter != null && parameter.isVarArgs())) {
                          // If there are no parameters left in the list, then the while loop
                          // above implies that this must be a var_args function.
                          if (parameters.hasNext()) {
                            parameter = parameters.next();
                          }
                          argument = arguments.next();
                          ordinal++;

                          validator.expectArgumentMatchesParameter(t, argument,
                              getJSType(argument), getJSType(parameter), call, ordinal);
                        }
                children: []
                pos: 58749
                length: 529
              - type: local_variable_declaration
                fields:
                  text: int numArgs = call.getChildCount() - 1;
                children: []
                pos: 59284
                length: 39
              - type: local_variable_declaration
                fields:
                  text: int minArgs = functionType.getMinArguments();
                children: []
                pos: 59328
                length: 45
              - type: local_variable_declaration
                fields:
                  text: int maxArgs = functionType.getMaxArguments();
                children: []
                pos: 59378
                length: 45
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: greater_than
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: minArgs
                                children: []
                                pos: 59432
                                length: 7
                              right:
                                type: identifier
                                fields:
                                  text: numArgs
                                children: []
                                pos: 59442
                                length: 7
                            children: []
                            pos: 59432
                            length: 17
                          right:
                            type: less_than
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: maxArgs
                                children: []
                                pos: 59453
                                length: 7
                              right:
                                type: identifier
                                fields:
                                  text: numArgs
                                children: []
                                pos: 59463
                                length: 7
                            children: []
                            pos: 59453
                            length: 17
                        children: []
                        pos: 59432
                        length: 38
                    children: []
                    pos: 59431
                    length: 40
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        report(t, call, WRONG_ARGUMENT_COUNT,
                                      validator.getReadableJSTypeName(call.getFirstChild(), false),
                                      String.valueOf(numArgs), String.valueOf(minArgs),
                                      maxArgs != Integer.MAX_VALUE ?
                                      " and no more than " + maxArgs + " argument(s)" : "");
                    children: []
                    pos: 59480
                    length: 291
                  pos: 59472
                  length: 305
                pos: 59428
                length: 349
              pos: 58488
              length: 1293
          children: []
          pos: 58395
          length: 1386
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitReturn
              children: []
              pos: 60023
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 60035
                length: 15
              pos: 60010
              length: 897
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType jsType = getJSType(t.getEnclosingFunction());
                children: []
                pos: 60066
                length: 52
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: jsType.isFunctionType()
                        children: []
                        pos: 60128
                        length: 23
                    children: []
                    pos: 60127
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType functionType = jsType.toMaybeFunctionType();
                    children: []
                    pos: 60161
                    length: 57
                  - type: local_variable_declaration
                    fields:
                      text: JSType returnType = functionType.getReturnType();
                    children: []
                    pos: 60226
                    length: 49
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: returnType
                                children: []
                                pos: 60387
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 60401
                                length: 4
                            children: []
                            pos: 60387
                            length: 18
                        children: []
                        pos: 60386
                        length: 20
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: returnType = getNativeType(VOID_TYPE);
                        children: []
                        pos: 60417
                        length: 38
                      pos: 60407
                      length: 56
                    pos: 60383
                    length: 80
                  - type: local_variable_declaration
                    fields:
                      text: Node valueNode = n.getFirstChild();
                    children: []
                    pos: 60515
                    length: 35
                  - type: local_variable_declaration
                    fields:
                      text: JSType actualReturnType;
                    children: []
                    pos: 60557
                    length: 24
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: valueNode
                                children: []
                                pos: 60592
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 60605
                                length: 4
                            children: []
                            pos: 60592
                            length: 17
                        children: []
                        pos: 60591
                        length: 19
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: actualReturnType = getNativeType(VOID_TYPE);
                        children: []
                        pos: 60621
                        length: 44
                      - type: expression_statement
                        fields:
                          text: valueNode = n;
                        children: []
                        pos: 60674
                        length: 14
                      pos: 60611
                      length: 85
                    pos: 60588
                    length: 172
                  - type: expression_statement
                    fields:
                      text: |-
                        validator.expectCanAssignTo(t, valueNode, actualReturnType, returnType,
                                  "inconsistent return type");
                    children: []
                    pos: 60787
                    length: 110
                  pos: 60153
                  length: 750
                pos: 60124
                length: 779
              pos: 60060
              length: 847
          children: []
          pos: 60010
          length: 897
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitBinaryOperator
              children: []
              pos: 61315
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int op
                children: []
                pos: 61335
                length: 6
              pos: 61302
              length: 1682
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 61374
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = getJSType(left);
                children: []
                pos: 61409
                length: 34
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 61448
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = getJSType(right);
                children: []
                pos: 61483
                length: 36
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: op
                        children: []
                        pos: 61532
                        length: 2
                    children: []
                    pos: 61531
                    length: 4
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.ASSIGN_LSH:
                              case Token.ASSIGN_RSH:
                              case Token.LSH:
                              case Token.RSH:
                              case Token.ASSIGN_URSH:
                              case Token.URSH:
                                if (!leftType.matchesInt32Context()) {
                                  report(t, left, BIT_OPERATION,
                                           NodeUtil.opToStr(n.getType()), leftType.toString());
                                }
                                if (!rightType.matchesUint32Context()) {
                                  report(t, right, BIT_OPERATION,
                                           NodeUtil.opToStr(n.getType()), rightType.toString());
                                }
                                break;

                              case Token.ASSIGN_DIV:
                              case Token.ASSIGN_MOD:
                              case Token.ASSIGN_MUL:
                              case Token.ASSIGN_SUB:
                              case Token.DIV:
                              case Token.MOD:
                              case Token.MUL:
                              case Token.SUB:
                                validator.expectNumber(t, left, leftType, "left operand");
                                validator.expectNumber(t, right, rightType, "right operand");
                                break;

                              case Token.ASSIGN_BITAND:
                              case Token.ASSIGN_BITXOR:
                              case Token.ASSIGN_BITOR:
                              case Token.BITAND:
                              case Token.BITXOR:
                              case Token.BITOR:
                                validator.expectBitwiseable(t, left, leftType,
                                    "bad left operand to bitwise operator");
                                validator.expectBitwiseable(t, right, rightType,
                                    "bad right operand to bitwise operator");
                                break;

                              case Token.ASSIGN_ADD:
                              case Token.ADD:
                                break;

                              default:
                                report(t, n, UNEXPECTED_TOKEN, Token.name(op));
                            }
                    children: []
                    pos: 61536
                    length: 1421
                children: []
                pos: 61524
                length: 1433
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n);
                children: []
                pos: 62962
                length: 18
              pos: 61368
              length: 1616
          children: []
          pos: 61302
          length: 1682
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkEnumAlias
              children: []
              pos: 63441
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 63463
                length: 15
              pos: 63428
              length: 613
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: declInfo
                                children: []
                                pos: 63522
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 63534
                                length: 4
                            children: []
                            pos: 63522
                            length: 16
                          right:
                            type: unary_expression
                            fields:
                              text: "!declInfo.hasEnumParameterType()"
                            children: []
                            pos: 63542
                            length: 32
                        children: []
                        pos: 63522
                        length: 52
                    children: []
                    pos: 63521
                    length: 54
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 63584
                    length: 7
                  pos: 63576
                  length: 21
                pos: 63518
                length: 79
              - type: local_variable_declaration
                fields:
                  text: JSType valueType = getJSType(value);
                children: []
                pos: 63603
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!valueType.isEnumType()"
                        children: []
                        pos: 63648
                        length: 23
                    children: []
                    pos: 63647
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 63681
                    length: 7
                  pos: 63673
                  length: 21
                pos: 63644
                length: 50
              - type: local_variable_declaration
                fields:
                  text: EnumType valueEnumType = valueType.toMaybeEnumType();
                children: []
                pos: 63700
                length: 53
              - type: local_variable_declaration
                fields:
                  text: |-
                    JSType valueEnumPrimitiveType =
                            valueEnumType.getElementsType().getPrimitiveType();
                children: []
                pos: 63758
                length: 91
              - type: expression_statement
                fields:
                  text: |-
                    validator.expectCanAssignTo(t, value, valueEnumPrimitiveType,
                            declInfo.getEnumParameterType().evaluate(t.getScope(), typeRegistry),
                            "incompatible enum element types");
                children: []
                pos: 63854
                length: 183
              pos: 63512
              length: 529
          children: []
          pos: 63428
          length: 613
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getJSType
              children: []
              pos: 64166
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 64176
                length: 6
              pos: 64151
              length: 461
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType jsType = n.getJSType();
                children: []
                pos: 64190
                length: 30
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: jsType
                            children: []
                            pos: 64229
                            length: 6
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 64239
                            length: 4
                        children: []
                        pos: 64229
                        length: 14
                    children: []
                    pos: 64228
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return getNativeType(UNKNOWN_TYPE);
                    children: []
                    pos: 64533
                    length: 35
                  pos: 64245
                  length: 329
                pos: 64225
                length: 383
              pos: 64184
              length: 428
          children: []
          pos: 64151
          length: 461
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensureTyped
              children: []
              pos: 65064
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 65076
                length: 15
              pos: 65051
              length: 107
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n, getNativeType(UNKNOWN_TYPE));
                children: []
                pos: 65107
                length: 47
              pos: 65101
              length: 57
          children: []
          pos: 65051
          length: 107
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensureTyped
              children: []
              pos: 65175
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 65187
                length: 15
              pos: 65162
              length: 118
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n, getNativeType(type));
                children: []
                pos: 65237
                length: 39
              pos: 65231
              length: 49
          children: []
          pos: 65162
          length: 118
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensureTyped
              children: []
              pos: 66109
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 66121
                length: 15
              pos: 66096
              length: 818
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    Preconditions.checkState(!n.isFunction() ||
                                type.isFunctionType() ||
                                type.isUnknownType());
                children: []
                pos: 66223
                length: 115
              - type: local_variable_declaration
                fields:
                  text: JSDocInfo info = n.getJSDocInfo();
                children: []
                pos: 66343
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: info
                            children: []
                            pos: 66386
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 66394
                            length: 4
                        children: []
                        pos: 66386
                        length: 12
                    children: []
                    pos: 66385
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: info.hasType()
                            children: []
                            pos: 66412
                            length: 14
                        children: []
                        pos: 66411
                        length: 16
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType infoType = info.getType().evaluate(t.getScope(),
                            typeRegistry);
                        children: []
                        pos: 66438
                        length: 70
                      - type: expression_statement
                        fields:
                          text: validator.expectCanCast(t, n, infoType, type);
                        children: []
                        pos: 66517
                        length: 46
                      - type: expression_statement
                        fields:
                          text: type = infoType;
                        children: []
                        pos: 66572
                        length: 16
                      pos: 66428
                      length: 168
                    pos: 66408
                    length: 188
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: info.isImplicitCast()
                                children: []
                                pos: 66608
                                length: 21
                              right:
                                type: unary_expression
                                fields:
                                  text: "!inExterns"
                                children: []
                                pos: 66633
                                length: 10
                            children: []
                            pos: 66608
                            length: 35
                        children: []
                        pos: 66607
                        length: 37
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: |-
                            String propName = n.isGetProp() ?
                                        n.getLastChild().getString() : "(missing)";
                        children: []
                        pos: 66655
                        length: 89
                      - type: expression_statement
                        fields:
                          text: |-
                            compiler.report(
                                        t.makeError(n, ILLEGAL_IMPLICIT_CAST, propName));
                        children: []
                        pos: 66753
                        length: 78
                      pos: 66645
                      length: 194
                    pos: 66604
                    length: 235
                  pos: 66400
                  length: 445
                pos: 66382
                length: 463
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: n.getJSType()
                            children: []
                            pos: 66855
                            length: 13
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 66872
                            length: 4
                        children: []
                        pos: 66855
                        length: 21
                    children: []
                    pos: 66854
                    length: 23
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: n.setJSType(type);
                    children: []
                    pos: 66886
                    length: 18
                  pos: 66878
                  length: 32
                pos: 66851
                length: 59
              pos: 66159
              length: 755
          children: []
          pos: 66096
          length: 818
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getTypedPercent
              children: []
              pos: 67045
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 67038
              length: 147
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int total = nullCount + unknownCount + typedCount;
                children: []
                pos: 67069
                length: 50
              - type: return_statement
                fields:
                  text: 'return (total == 0) ? 0.0 : (100.0 * typedCount) / total;'
                children: []
                pos: 67124
                length: 57
              pos: 67063
              length: 122
          children: []
          pos: 67038
          length: 147
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getNativeType
              children: []
              pos: 67204
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSTypeNative typeId
                children: []
                pos: 67218
                length: 19
              pos: 67189
              length: 102
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return typeRegistry.getNativeType(typeId);
                children: []
                pos: 67245
                length: 42
              pos: 67239
              length: 52
          children: []
          pos: 67189
          length: 102
        pos: 2305
        length: 64988
    children: []
    pos: 2305
    length: 64988
  pos: 0
  length: 67294
text_diff: "--- before\n+++ after\n@@ -1311,6 +1311,8 @@\n \n     if (childType.isDict())
  {\n       report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, \"'.'\", \"dict\");\n+
  \   } else if (n.getJSType() != null && parent.isAssign()) {\n+      return;\n     }
  else if (validator.expectNotNullOrUndefined(t, n, childType,\n         \"No properties
  on this expression\", getNativeType(OBJECT_TYPE))) {\n       checkPropertyAccess(childType,
  property.getString(), t, n);\n"
tree_diff: ''
