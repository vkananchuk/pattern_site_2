---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: TypeCheck
        children: []
        pos: 2333
        length: 9
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNEXPECTED_TOKEN = DiagnosticType.error(
                    "JSC_INTERNAL_ERROR_UNEXPECTED_TOKEN",
                    "Internal Error: Don't know how to handle {0}");
          children: []
          pos: 2427
          length: 168
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType BAD_DELETE =
                    // TODO(user): make this an error
                    DiagnosticType.warning(
                        "JSC_BAD_DELETE_OPERAND",
                        "delete operator needs a reference operand");
          children: []
          pos: 2627
          length: 202
        - type: field_declaration
          fields:
            text: |-
              protected static final String OVERRIDING_PROTOTYPE_WITH_NON_OBJECT =
                    "overriding prototype with non-object";
          children: []
          pos: 2864
          length: 114
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType DETERMINISTIC_TEST =
                    DiagnosticType.warning(
                        "JSC_DETERMINISTIC_TEST",
                        "condition always evaluates to {2}\n" +
                        "left : {0}\n" +
                        "right: {1}");
          children: []
          pos: 3112
          length: 216
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType DETERMINISTIC_TEST_NO_RESULT =
                    DiagnosticType.warning(
                        "JSC_DETERMINISTIC_TEST_NO_RESULT",
                        "condition always evaluates to the same value\n" +
                        "left : {0}\n" +
                        "right: {1}");
          children: []
          pos: 3332
          length: 247
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INEXISTENT_ENUM_ELEMENT =
                    DiagnosticType.warning(
                        "JSC_INEXISTENT_ENUM_ELEMENT",
                        "element {0} does not exist on this enum");
          children: []
          pos: 3583
          length: 178
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INEXISTENT_PROPERTY =
                    DiagnosticType.disabled(
                        "JSC_INEXISTENT_PROPERTY",
                        "Property {0} never defined on {1}");
          children: []
          pos: 3858
          length: 165
        - type: field_declaration
          fields:
            text: |-
              protected static final DiagnosticType NOT_A_CONSTRUCTOR =
                    DiagnosticType.warning(
                        "JSC_NOT_A_CONSTRUCTOR",
                        "cannot instantiate non-constructor");
          children: []
          pos: 4027
          length: 171
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType BIT_OPERATION =
                    DiagnosticType.warning(
                        "JSC_BAD_TYPE_FOR_BIT_OPERATION",
                        "operator {0} cannot be applied to {1}");
          children: []
          pos: 4202
          length: 169
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType NOT_CALLABLE =
                    DiagnosticType.warning(
                        "JSC_NOT_FUNCTION_TYPE",
                        "{0} expressions are not callable");
          children: []
          pos: 4375
          length: 154
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType CONSTRUCTOR_NOT_CALLABLE =
                    DiagnosticType.warning(
                        "JSC_CONSTRUCTOR_NOT_CALLABLE",
                        "Constructor {0} should be called with the \"new\" keyword");
          children: []
          pos: 4533
          length: 198
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType FUNCTION_MASKS_VARIABLE =
                    DiagnosticType.warning(
                        "JSC_FUNCTION_MASKS_VARIABLE",
                        "function {0} masks variable (IE bug)");
          children: []
          pos: 4735
          length: 175
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType MULTIPLE_VAR_DEF = DiagnosticType.warning(
                    "JSC_MULTIPLE_VAR_DEF",
                    "declaration of multiple variables with shared type information");
          children: []
          pos: 4914
          length: 173
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ENUM_DUP = DiagnosticType.error("JSC_ENUM_DUP",
                    "enum element {0} already defined");
          children: []
          pos: 5091
          length: 118
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ENUM_NOT_CONSTANT =
                    DiagnosticType.warning("JSC_ENUM_NOT_CONSTANT",
                        "enum key {0} must be a syntactic constant");
          children: []
          pos: 5213
          length: 157
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INVALID_INTERFACE_MEMBER_DECLARATION =
                    DiagnosticType.warning(
                        "JSC_INVALID_INTERFACE_MEMBER_DECLARATION",
                        "interface members can only be empty property declarations,"
                        + " empty functions{0}");
          children: []
          pos: 5374
          length: 257
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INTERFACE_FUNCTION_NOT_EMPTY =
                    DiagnosticType.warning(
                        "JSC_INTERFACE_FUNCTION_NOT_EMPTY",
                        "interface member functions must have an empty body");
          children: []
          pos: 5635
          length: 199
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType CONFLICTING_EXTENDED_TYPE =
                    DiagnosticType.warning(
                        "JSC_CONFLICTING_EXTENDED_TYPE",
                        "{0} cannot extend this type; " +
                        "a constructor can only extend objects " +
                        "and an interface can only extend interfaces");
          children: []
          pos: 5838
          length: 283
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType CONFLICTING_IMPLEMENTED_TYPE =
                  DiagnosticType.warning(
                      "JSC_CONFLICTING_IMPLEMENTED_TYPE",
                      "{0} cannot implement this type; " +
                      "an interface can only extend, but not implement interfaces");
          children: []
          pos: 6125
          length: 246
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType BAD_IMPLEMENTED_TYPE =
                    DiagnosticType.warning(
                        "JSC_IMPLEMENTS_NON_INTERFACE",
                        "can only implement interfaces");
          children: []
          pos: 6375
          length: 166
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType HIDDEN_SUPERCLASS_PROPERTY =
                    DiagnosticType.warning(
                        "JSC_HIDDEN_SUPERCLASS_PROPERTY",
                        "property {0} already defined on superclass {1}; " +
                        "use @override to override it");
          children: []
          pos: 6545
          length: 236
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType HIDDEN_INTERFACE_PROPERTY =
                    DiagnosticType.warning(
                        "JSC_HIDDEN_INTERFACE_PROPERTY",
                        "property {0} already defined on interface {1}; " +
                        "use @override to override it");
          children: []
          pos: 6785
          length: 233
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType HIDDEN_SUPERCLASS_PROPERTY_MISMATCH =
                    DiagnosticType.warning("JSC_HIDDEN_SUPERCLASS_PROPERTY_MISMATCH",
                        "mismatch of the {0} property type and the type " +
                        "of the property it overrides from superclass {1}\n" +
                        "original: {2}\n" +
                        "override: {3}");
          children: []
          pos: 7022
          length: 322
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNKNOWN_OVERRIDE =
                    DiagnosticType.warning(
                        "JSC_UNKNOWN_OVERRIDE",
                        "property {0} not defined on any superclass of {1}");
          children: []
          pos: 7348
          length: 174
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INTERFACE_METHOD_OVERRIDE =
                    DiagnosticType.warning(
                        "JSC_INTERFACE_METHOD_OVERRIDE",
                        "property {0} is already defined by the {1} extended interface");
          children: []
          pos: 7526
          length: 204
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNKNOWN_EXPR_TYPE =
                    DiagnosticType.warning("JSC_UNKNOWN_EXPR_TYPE",
                        "could not determine the type of this expression");
          children: []
          pos: 7734
          length: 163
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNRESOLVED_TYPE =
                    DiagnosticType.warning("JSC_UNRESOLVED_TYPE",
                        "could not resolve the name {0} to a type");
          children: []
          pos: 7901
          length: 152
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType WRONG_ARGUMENT_COUNT =
                    DiagnosticType.warning(
                        "JSC_WRONG_ARGUMENT_COUNT",
                        "Function {0}: called with {1} argument(s). " +
                        "Function requires at least {2} argument(s){3}.");
          children: []
          pos: 8057
          length: 237
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ILLEGAL_IMPLICIT_CAST =
                    DiagnosticType.warning(
                        "JSC_ILLEGAL_IMPLICIT_CAST",
                        "Illegal annotation on {0}. @implicitCast may only be used in " +
                        "externs.");
          children: []
          pos: 8298
          length: 219
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INCOMPATIBLE_EXTENDED_PROPERTY_TYPE =
                    DiagnosticType.warning(
                        "JSC_INCOMPATIBLE_EXTENDED_PROPERTY_TYPE",
                        "Interface {0} has a property {1} with incompatible types in " +
                        "its super interfaces {2} and {3}");
          children: []
          pos: 8521
          length: 270
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType EXPECTED_THIS_TYPE =
                    DiagnosticType.warning(
                        "JSC_EXPECTED_THIS_TYPE",
                        "\"{0}\" must be called with a \"this\" type");
          children: []
          pos: 8795
          length: 172
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticGroup ALL_DIAGNOSTICS = new DiagnosticGroup(
                    DETERMINISTIC_TEST,
                    DETERMINISTIC_TEST_NO_RESULT,
                    INEXISTENT_ENUM_ELEMENT,
                    INEXISTENT_PROPERTY,
                    NOT_A_CONSTRUCTOR,
                    BIT_OPERATION,
                    NOT_CALLABLE,
                    CONSTRUCTOR_NOT_CALLABLE,
                    FUNCTION_MASKS_VARIABLE,
                    MULTIPLE_VAR_DEF,
                    ENUM_DUP,
                    ENUM_NOT_CONSTANT,
                    INVALID_INTERFACE_MEMBER_DECLARATION,
                    INTERFACE_FUNCTION_NOT_EMPTY,
                    CONFLICTING_EXTENDED_TYPE,
                    CONFLICTING_IMPLEMENTED_TYPE,
                    BAD_IMPLEMENTED_TYPE,
                    HIDDEN_SUPERCLASS_PROPERTY,
                    HIDDEN_INTERFACE_PROPERTY,
                    HIDDEN_SUPERCLASS_PROPERTY_MISMATCH,
                    UNKNOWN_OVERRIDE,
                    INTERFACE_METHOD_OVERRIDE,
                    UNKNOWN_EXPR_TYPE,
                    UNRESOLVED_TYPE,
                    WRONG_ARGUMENT_COUNT,
                    ILLEGAL_IMPLICIT_CAST,
                    INCOMPATIBLE_EXTENDED_PROPERTY_TYPE,
                    EXPECTED_THIS_TYPE,
                    RhinoErrorReporter.TYPE_PARSE_ERROR,
                    TypedScopeCreator.UNKNOWN_LENDS,
                    TypedScopeCreator.LENDS_ON_NON_OBJECT,
                    TypedScopeCreator.CTOR_INITIALIZER,
                    TypedScopeCreator.IFACE_INITIALIZER,
                    FunctionTypeBuilder.THIS_TYPE_NON_OBJECT);
          children: []
          pos: 8971
          length: 1160
        - type: field_declaration
          fields:
            text: private final AbstractCompiler compiler;
          children: []
          pos: 10135
          length: 40
        - type: field_declaration
          fields:
            text: private final TypeValidator validator;
          children: []
          pos: 10178
          length: 38
        - type: field_declaration
          fields:
            text: private final ReverseAbstractInterpreter reverseInterpreter;
          children: []
          pos: 10220
          length: 60
        - type: field_declaration
          fields:
            text: private final JSTypeRegistry typeRegistry;
          children: []
          pos: 10284
          length: 42
        - type: field_declaration
          fields:
            text: private Scope topScope;
          children: []
          pos: 10329
          length: 23
        - type: field_declaration
          fields:
            text: private ScopeCreator scopeCreator;
          children: []
          pos: 10356
          length: 34
        - type: field_declaration
          fields:
            text: private final CheckLevel reportMissingOverride;
          children: []
          pos: 10394
          length: 47
        - type: field_declaration
          fields:
            text: private final CheckLevel reportUnknownTypes;
          children: []
          pos: 10444
          length: 44
        - type: field_declaration
          fields:
            text: private boolean reportMissingProperties = true;
          children: []
          pos: 10588
          length: 47
        - type: field_declaration
          fields:
            text: private InferJSDocInfo inferJSDocInfo = null;
          children: []
          pos: 10639
          length: 45
        - type: field_declaration
          fields:
            text: private int typedCount = 0;
          children: []
          pos: 10765
          length: 27
        - type: field_declaration
          fields:
            text: private int nullCount = 0;
          children: []
          pos: 10795
          length: 26
        - type: field_declaration
          fields:
            text: private int unknownCount = 0;
          children: []
          pos: 10824
          length: 29
        - type: field_declaration
          fields:
            text: private boolean inExterns;
          children: []
          pos: 10856
          length: 26
        - type: field_declaration
          fields:
            text: private int noTypeCheckSection = 0;
          children: []
          pos: 10973
          length: 35
        - type: constructor_declaration
          fields:
            text: |-
              public TypeCheck(AbstractCompiler compiler,
                    ReverseAbstractInterpreter reverseInterpreter,
                    JSTypeRegistry typeRegistry,
                    Scope topScope,
                    ScopeCreator scopeCreator,
                    CheckLevel reportMissingOverride,
                    CheckLevel reportUnknownTypes) {
                  this.compiler = compiler;
                  this.validator = compiler.getTypeValidator();
                  this.reverseInterpreter = reverseInterpreter;
                  this.typeRegistry = typeRegistry;
                  this.topScope = topScope;
                  this.scopeCreator = scopeCreator;
                  this.reportMissingOverride = reportMissingOverride;
                  this.reportUnknownTypes = reportUnknownTypes;
                  this.inferJSDocInfo = new InferJSDocInfo(compiler);
                }
          children: []
          pos: 11012
          length: 667
        - type: constructor_declaration
          fields:
            text: |-
              public TypeCheck(AbstractCompiler compiler,
                    ReverseAbstractInterpreter reverseInterpreter,
                    JSTypeRegistry typeRegistry,
                    CheckLevel reportMissingOverride,
                    CheckLevel reportUnknownTypes) {
                  this(compiler, reverseInterpreter, typeRegistry, null, null,
                      reportMissingOverride, reportUnknownTypes);
                }
          children: []
          pos: 11683
          length: 331
        - type: constructor_declaration
          fields:
            text: |-
              TypeCheck(AbstractCompiler compiler,
                    ReverseAbstractInterpreter reverseInterpreter,
                    JSTypeRegistry typeRegistry) {
                  this(compiler, reverseInterpreter, typeRegistry, null, null,
                       CheckLevel.WARNING, CheckLevel.OFF);
                }
          children: []
          pos: 12018
          length: 241
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: reportMissingProperties
              children: []
              pos: 12350
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: boolean report
                children: []
                pos: 12374
                length: 14
              pos: 12340
              length: 110
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: reportMissingProperties = report;
                children: []
                pos: 12396
                length: 33
              - type: return_statement
                fields:
                  text: return this;
                children: []
                pos: 12434
                length: 12
              pos: 12390
              length: 60
          children: []
          pos: 12340
          length: 110
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: process
              children: []
              pos: 12715
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node externsRoot
                children: []
                pos: 12723
                length: 16
              pos: 12703
              length: 435
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(scopeCreator);
                children: []
                pos: 12760
                length: 41
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(topScope);
                children: []
                pos: 12806
                length: 37
              - type: local_variable_declaration
                fields:
                  text: Node externsAndJs = jsRoot.getParent();
                children: []
                pos: 12849
                length: 39
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(externsAndJs != null);
                children: []
                pos: 12893
                length: 47
              - type: expression_statement
                fields:
                  text: |-
                    Preconditions.checkState(
                            externsRoot == null || externsAndJs.hasChild(externsRoot));
                children: []
                pos: 12945
                length: 93
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: externsRoot
                            children: []
                            pos: 13048
                            length: 11
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 13063
                            length: 4
                        children: []
                        pos: 13048
                        length: 19
                    children: []
                    pos: 13047
                    length: 21
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: check(externsRoot, true);
                    children: []
                    pos: 13077
                    length: 25
                  pos: 13069
                  length: 39
                pos: 13044
                length: 64
              - type: expression_statement
                fields:
                  text: check(jsRoot, false);
                children: []
                pos: 13113
                length: 21
              pos: 12754
              length: 384
          children: []
          pos: 12703
          length: 435
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: processForTesting
              children: []
              pos: 13213
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node externsRoot
                children: []
                pos: 13231
                length: 16
              pos: 13200
              length: 639
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(scopeCreator == null);
                children: []
                pos: 13268
                length: 47
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(topScope == null);
                children: []
                pos: 13320
                length: 43
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(jsRoot.getParent() != null);
                children: []
                pos: 13369
                length: 53
              - type: local_variable_declaration
                fields:
                  text: Node externsAndJsRoot = jsRoot.getParent();
                children: []
                pos: 13427
                length: 43
              - type: expression_statement
                fields:
                  text: scopeCreator = new MemoizedScopeCreator(new TypedScopeCreator(compiler));
                children: []
                pos: 13476
                length: 73
              - type: expression_statement
                fields:
                  text: topScope = scopeCreator.createScope(externsAndJsRoot, null);
                children: []
                pos: 13554
                length: 60
              - type: local_variable_declaration
                fields:
                  text: |-
                    TypeInferencePass inference = new TypeInferencePass(compiler,
                            reverseInterpreter, topScope, scopeCreator);
                children: []
                pos: 13620
                length: 114
              - type: expression_statement
                fields:
                  text: inference.process(externsRoot, jsRoot);
                children: []
                pos: 13740
                length: 39
              - type: expression_statement
                fields:
                  text: process(externsRoot, jsRoot);
                children: []
                pos: 13784
                length: 29
              - type: return_statement
                fields:
                  text: return topScope;
                children: []
                pos: 13819
                length: 16
              pos: 13262
              length: 577
          children: []
          pos: 13200
          length: 639
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: check
              children: []
              pos: 13856
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node node
                children: []
                pos: 13862
                length: 9
              pos: 13844
              length: 349
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(node);
                children: []
                pos: 13896
                length: 33
              - type: local_variable_declaration
                fields:
                  text: NodeTraversal t = new NodeTraversal(compiler, this, scopeCreator);
                children: []
                pos: 13935
                length: 66
              - type: expression_statement
                fields:
                  text: inExterns = externs;
                children: []
                pos: 14006
                length: 20
              - type: expression_statement
                fields:
                  text: t.traverseWithScope(node, topScope);
                children: []
                pos: 14031
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: externs
                        children: []
                        pos: 14076
                        length: 7
                    children: []
                    pos: 14075
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: inferJSDocInfo.process(node, null);
                    children: []
                    pos: 14093
                    length: 35
                  pos: 14085
                  length: 49
                pos: 14072
                length: 117
              pos: 13890
              length: 303
          children: []
          pos: 13844
          length: 349
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkNoTypeCheckSection
              children: []
              pos: 14211
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 14235
                length: 6
              pos: 14198
              length: 537
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 14279
                        length: 11
                    children: []
                    pos: 14278
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.SCRIPT:
                              case Token.BLOCK:
                              case Token.VAR:
                              case Token.FUNCTION:
                              case Token.ASSIGN:
                                JSDocInfo info = n.getJSDocInfo();
                                if (info != null && info.isNoTypeCheck()) {
                                  if (enterSection) {
                                    noTypeCheckSection++;
                                  } else {
                                    noTypeCheckSection--;
                                  }
                                }
                                validator.setShouldReport(noTypeCheckSection == 0);
                                break;
                            }
                    children: []
                    pos: 14292
                    length: 439
                children: []
                pos: 14271
                length: 460
              pos: 14265
              length: 470
          children: []
          pos: 14198
          length: 537
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: report
              children: []
              pos: 14752
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 14759
                length: 15
              pos: 14739
              length: 195
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: noTypeCheckSection
                            children: []
                            pos: 14852
                            length: 18
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 14874
                            length: 1
                        children: []
                        pos: 14852
                        length: 23
                    children: []
                    pos: 14851
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: t.report(n, diagnosticType, arguments);
                    children: []
                    pos: 14885
                    length: 39
                  pos: 14877
                  length: 53
                pos: 14848
                length: 82
              pos: 14842
              length: 92
          children: []
          pos: 14739
          length: 195
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: shouldTraverse
              children: []
              pos: 14953
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 14975
                length: 15
              pos: 14938
              length: 1243
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: checkNoTypeCheckSection(n, true);
                children: []
                pos: 15019
                length: 33
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 15065
                        length: 11
                    children: []
                    pos: 15064
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.FUNCTION:
                                // normal type checking
                                final TypeCheck outerThis = this;
                                final Scope outerScope = t.getScope();
                                final FunctionType functionType = (FunctionType) n.getJSType();
                                final String functionPrivateName = n.getFirstChild().getString();
                                if (functionPrivateName != null && functionPrivateName.length() > 0 &&
                                    outerScope.isDeclared(functionPrivateName, false) &&
                                    // Ideally, we would want to check whether the type in the scope
                                    // differs from the type being defined, but then the extern
                                    // redeclarations of built-in types generates spurious warnings.
                                    !(outerScope.getVar(
                                        functionPrivateName).getType() instanceof FunctionType)) {
                                  report(t, n, FUNCTION_MASKS_VARIABLE, functionPrivateName);
                                }

                                // TODO(user): Only traverse the function's body. The function's
                                // name and arguments are traversed by the scope creator, and ideally
                                // should not be traversed by the type checker.
                                break;
                            }
                    children: []
                    pos: 15078
                    length: 1082
                children: []
                pos: 15057
                length: 1103
              - type: return_statement
                fields:
                  text: return true;
                children: []
                pos: 16165
                length: 12
              pos: 15013
              length: 1168
          children: []
          pos: 14938
          length: 1243
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visit
              children: []
              pos: 16642
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 16648
                length: 15
              pos: 16630
              length: 10298
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType childType;
                children: []
                pos: 16692
                length: 17
              - type: local_variable_declaration
                fields:
                  text: JSType leftType, rightType;
                children: []
                pos: 16714
                length: 27
              - type: local_variable_declaration
                fields:
                  text: Node left, right;
                children: []
                pos: 16746
                length: 17
              - type: local_variable_declaration
                fields:
                  text: boolean typeable = true;
                children: []
                pos: 16834
                length: 24
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 16872
                        length: 11
                    children: []
                    pos: 16871
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.NAME:
                                typeable = visitName(t, n, parent);
                                break;

                              case Token.LP:
                                // If this is under a FUNCTION node, it is a parameter list and can be
                                // ignored here.
                                if (parent.getType() != Token.FUNCTION) {
                                  ensureTyped(t, n, getJSType(n.getFirstChild()));
                                } else {
                                  typeable = false;
                                }
                                break;

                              case Token.COMMA:
                                ensureTyped(t, n, getJSType(n.getLastChild()));
                                break;

                              case Token.TRUE:
                              case Token.FALSE:
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.THIS:
                                ensureTyped(t, n, t.getScope().getTypeOfThis());
                                break;

                              case Token.REF_SPECIAL:
                                ensureTyped(t, n);
                                break;

                              case Token.GET_REF:
                                ensureTyped(t, n, getJSType(n.getFirstChild()));
                                break;

                              case Token.NULL:
                                ensureTyped(t, n, NULL_TYPE);
                                break;

                              case Token.NUMBER:
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.STRING:
                                // Object literal keys are handled with OBJECTLIT
                                if (!NodeUtil.isObjectLitKey(n, n.getParent())) {
                                  ensureTyped(t, n, STRING_TYPE);
                                }
                                break;

                              case Token.GET:
                              case Token.SET:
                                // Object literal keys are handled with OBJECTLIT
                                break;

                              case Token.ARRAYLIT:
                                ensureTyped(t, n, ARRAY_TYPE);
                                break;

                              case Token.REGEXP:
                                ensureTyped(t, n, REGEXP_TYPE);
                                break;

                              case Token.GETPROP:
                                visitGetProp(t, n, parent);
                                typeable = !(parent.getType() == Token.ASSIGN &&
                                             parent.getFirstChild() == n);
                                break;

                              case Token.GETELEM:
                                visitGetElem(t, n);
                                // The type of GETELEM is always unknown, so no point counting that.
                                // If that unknown leaks elsewhere (say by an assignment to another
                                // variable), then it will be counted.
                                typeable = false;
                                break;

                              case Token.VAR:
                                visitVar(t, n);
                                typeable = false;
                                break;

                              case Token.NEW:
                                visitNew(t, n);
                                typeable = true;
                                break;

                              case Token.CALL:
                                visitCall(t, n);
                                typeable = !NodeUtil.isExpressionNode(parent);
                                break;

                              case Token.RETURN:
                                visitReturn(t, n);
                                typeable = false;
                                break;

                              case Token.DEC:
                              case Token.INC:
                                left = n.getFirstChild();
                                validator.expectNumber(
                                    t, left, getJSType(left), "increment/decrement");
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.NOT:
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.VOID:
                                ensureTyped(t, n, VOID_TYPE);
                                break;

                              case Token.TYPEOF:
                                ensureTyped(t, n, STRING_TYPE);
                                break;

                              case Token.BITNOT:
                                childType = getJSType(n.getFirstChild());
                                if (!childType.matchesInt32Context()) {
                                  report(t, n, BIT_OPERATION, NodeUtil.opToStr(n.getType()),
                                      childType.toString());
                                }
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.POS:
                              case Token.NEG:
                                left = n.getFirstChild();
                                validator.expectNumber(t, left, getJSType(left), "sign operator");
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.EQ:
                              case Token.NE: {
                                leftType = getJSType(n.getFirstChild());
                                rightType = getJSType(n.getLastChild());

                                JSType leftTypeRestricted = leftType.restrictByNotNullOrUndefined();
                                JSType rightTypeRestricted = rightType.restrictByNotNullOrUndefined();
                                TernaryValue result =
                                    leftTypeRestricted.testForEquality(rightTypeRestricted);
                                if (result != TernaryValue.UNKNOWN) {
                                  if (n.getType() == Token.NE) {
                                    result = result.not();
                                  }
                                  report(t, n, DETERMINISTIC_TEST, leftType.toString(),
                                      rightType.toString(), result.toString());
                                }
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;
                              }

                              case Token.SHEQ:
                              case Token.SHNE: {
                                leftType = getJSType(n.getFirstChild());
                                rightType = getJSType(n.getLastChild());

                                JSType leftTypeRestricted = leftType.restrictByNotNullOrUndefined();
                                JSType rightTypeRestricted = rightType.restrictByNotNullOrUndefined();
                                if (!leftTypeRestricted.canTestForShallowEqualityWith(
                                        rightTypeRestricted)) {
                                  report(t, n, DETERMINISTIC_TEST_NO_RESULT, leftType.toString(),
                                      rightType.toString());
                                }
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;
                              }

                              case Token.LT:
                              case Token.LE:
                              case Token.GT:
                              case Token.GE:
                                leftType = getJSType(n.getFirstChild());
                                rightType = getJSType(n.getLastChild());
                                if (rightType.isNumber()) {
                                  validator.expectNumber(
                                      t, n, leftType, "left side of numeric comparison");
                                } else if (leftType.isNumber()) {
                                  validator.expectNumber(
                                      t, n, rightType, "right side of numeric comparison");
                                } else if (leftType.matchesNumberContext() &&
                                           rightType.matchesNumberContext()) {
                                  // OK.
                                } else {
                                  // Whether the comparison is numeric will be determined at runtime
                                  // each time the expression is evaluated. Regardless, both operands
                                  // should match a string context.
                                  String message = "left side of comparison";
                                  validator.expectString(t, n, leftType, message);
                                  validator.expectNotNullOrUndefined(
                                      t, n, leftType, message, getNativeType(STRING_TYPE));
                                  message = "right side of comparison";
                                  validator.expectString(t, n, rightType, message);
                                  validator.expectNotNullOrUndefined(
                                      t, n, rightType, message, getNativeType(STRING_TYPE));
                                }
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.IN:
                                left = n.getFirstChild();
                                right = n.getLastChild();
                                leftType = getJSType(left);
                                rightType = getJSType(right);
                                validator.expectObject(t, n, rightType, "'in' requires an object");
                                validator.expectString(t, left, leftType, "left side of 'in'");
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.INSTANCEOF:
                                left = n.getFirstChild();
                                right = n.getLastChild();
                                leftType = getJSType(left);
                                rightType = getJSType(right).restrictByNotNullOrUndefined();

                                validator.expectAnyObject(
                                    t, left, leftType, "deterministic instanceof yields false");
                                validator.expectActualObject(
                                    t, right, rightType, "instanceof requires an object");
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.ASSIGN:
                                visitAssign(t, n);
                                typeable = false;
                                break;

                              case Token.ASSIGN_LSH:
                              case Token.ASSIGN_RSH:
                              case Token.ASSIGN_URSH:
                              case Token.ASSIGN_DIV:
                              case Token.ASSIGN_MOD:
                              case Token.ASSIGN_BITOR:
                              case Token.ASSIGN_BITXOR:
                              case Token.ASSIGN_BITAND:
                              case Token.ASSIGN_SUB:
                              case Token.ASSIGN_ADD:
                              case Token.ASSIGN_MUL:
                              case Token.LSH:
                              case Token.RSH:
                              case Token.URSH:
                              case Token.DIV:
                              case Token.MOD:
                              case Token.BITOR:
                              case Token.BITXOR:
                              case Token.BITAND:
                              case Token.SUB:
                              case Token.ADD:
                              case Token.MUL:
                                visitBinaryOperator(n.getType(), t, n);
                                break;

                              case Token.DELPROP:
                                if (!isReference(n.getFirstChild())) {
                                  report(t, n, BAD_DELETE);
                                }
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.CASE:
                                JSType switchType = getJSType(parent.getFirstChild());
                                JSType caseType = getJSType(n.getFirstChild());
                                validator.expectSwitchMatchesCase(t, n, switchType, caseType);
                                typeable = false;
                                break;

                              case Token.WITH: {
                                Node child = n.getFirstChild();
                                childType = getJSType(child);
                                validator.expectObject(
                                    t, child, childType, "with requires an object");
                                typeable = false;
                                break;
                              }

                              case Token.FUNCTION:
                                visitFunction(t, n);
                                break;

                              // These nodes have no interesting type behavior.
                              case Token.LABEL:
                              case Token.LABEL_NAME:
                              case Token.SWITCH:
                              case Token.BREAK:
                              case Token.CATCH:
                              case Token.TRY:
                              case Token.SCRIPT:
                              case Token.EXPR_RESULT:
                              case Token.BLOCK:
                              case Token.EMPTY:
                              case Token.DEFAULT:
                              case Token.CONTINUE:
                              case Token.DEBUGGER:
                              case Token.THROW:
                                typeable = false;
                                break;

                              // These nodes require data flow analysis.
                              case Token.DO:
                              case Token.FOR:
                              case Token.IF:
                              case Token.WHILE:
                                typeable = false;
                                break;

                              // These nodes are typed during the type inference.
                              case Token.AND:
                              case Token.HOOK:
                              case Token.OBJECTLIT:
                              case Token.OR:
                                if (n.getJSType() != null) { // If we didn't run type inference.
                                  ensureTyped(t, n);
                                } else {
                                  // If this is an enum, then give that type to the objectlit as well.
                                  if ((n.getType() == Token.OBJECTLIT)
                                      && (parent.getJSType() instanceof EnumType)) {
                                    ensureTyped(t, n, parent.getJSType());
                                  } else {
                                    ensureTyped(t, n);
                                  }
                                }
                                if (n.getType() == Token.OBJECTLIT) {
                                  for (Node key : n.children()) {
                                    visitObjLitKey(t, key, n);
                                  }
                                }
                                break;

                              default:
                                report(t, n, UNEXPECTED_TOKEN, Token.name(n.getType()));
                                ensureTyped(t, n);
                                break;
                            }
                    children: []
                    pos: 16885
                    length: 9817
                children: []
                pos: 16864
                length: 9838
              - type: expression_statement
                fields:
                  text: typeable = typeable && !inExterns;
                children: []
                pos: 26785
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: typeable
                        children: []
                        pos: 26829
                        length: 8
                    children: []
                    pos: 26828
                    length: 10
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: doPercentTypedAccounting(t, n);
                    children: []
                    pos: 26847
                    length: 31
                  pos: 26839
                  length: 45
                pos: 26825
                length: 59
              - type: expression_statement
                fields:
                  text: checkNoTypeCheckSection(n, false);
                children: []
                pos: 26890
                length: 34
              pos: 16686
              length: 10242
          children: []
          pos: 16630
          length: 10298
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: doPercentTypedAccounting
              children: []
              pos: 27051
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 27076
                length: 15
              pos: 27038
              length: 384
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 27107
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: type
                            children: []
                            pos: 27144
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 27152
                            length: 4
                        children: []
                        pos: 27144
                        length: 12
                    children: []
                    pos: 27143
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: nullCount++;
                    children: []
                    pos: 27166
                    length: 12
                  pos: 27158
                  length: 26
                pos: 27140
                length: 278
              pos: 27101
              length: 321
          children: []
          pos: 27038
          length: 384
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitAssign
              children: []
              pos: 27774
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 27786
                length: 15
              pos: 27761
              length: 3765
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSDocInfo info = assign.getJSDocInfo();
                children: []
                pos: 27822
                length: 39
              - type: local_variable_declaration
                fields:
                  text: Node lvalue = assign.getFirstChild();
                children: []
                pos: 27866
                length: 37
              - type: local_variable_declaration
                fields:
                  text: Node rvalue = assign.getLastChild();
                children: []
                pos: 27908
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: lvalue.getType()
                            children: []
                            pos: 27954
                            length: 16
                          right:
                            type: field_access
                            fields:
                              text: Token.GETPROP
                            children: []
                            pos: 27974
                            length: 13
                        children: []
                        pos: 27954
                        length: 33
                    children: []
                    pos: 27953
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Node object = lvalue.getFirstChild();
                    children: []
                    pos: 27997
                    length: 37
                  - type: local_variable_declaration
                    fields:
                      text: JSType objectJsType = getJSType(object);
                    children: []
                    pos: 28041
                    length: 40
                  - type: local_variable_declaration
                    fields:
                      text: String property = lvalue.getLastChild().getString();
                    children: []
                    pos: 28088
                    length: 52
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: object.getType()
                                children: []
                                pos: 28272
                                length: 16
                              right:
                                type: field_access
                                fields:
                                  text: Token.GETPROP
                                children: []
                                pos: 28292
                                length: 13
                            children: []
                            pos: 28272
                            length: 33
                        children: []
                        pos: 28271
                        length: 35
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType jsType = getJSType(object.getFirstChild());
                        children: []
                        pos: 28317
                        length: 50
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: jsType.isInterface()
                                    children: []
                                    pos: 28380
                                    length: 20
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: object.getLastChild().getString().equals("prototype")
                                    children: []
                                    pos: 28416
                                    length: 53
                                children: []
                                pos: 28380
                                length: 89
                            children: []
                            pos: 28379
                            length: 91
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: visitInterfaceGetprop(t, assign, object, property,
                                lvalue, rvalue);
                            children: []
                            pos: 28483
                            length: 67
                          pos: 28471
                          length: 89
                        pos: 28376
                        length: 184
                      pos: 28307
                      length: 261
                    pos: 28268
                    length: 300
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: info
                                    children: []
                                    pos: 28624
                                    length: 4
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 28632
                                    length: 4
                                children: []
                                pos: 28624
                                length: 12
                              right:
                                type: method_invocation
                                fields:
                                  text: info.hasType()
                                children: []
                                pos: 28640
                                length: 14
                            children: []
                            pos: 28624
                            length: 30
                        children: []
                        pos: 28623
                        length: 32
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            visitAnnotatedAssignGetprop(t, assign,
                                        info.getType().evaluate(t.getScope(), typeRegistry), object,
                                        property, rvalue);
                        children: []
                        pos: 28666
                        length: 142
                      - type: return_statement
                        fields:
                          text: return;
                        children: []
                        pos: 28817
                        length: 7
                      pos: 28656
                      length: 176
                    pos: 28620
                    length: 212
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: info
                                    children: []
                                    pos: 28888
                                    length: 4
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 28896
                                    length: 4
                                children: []
                                pos: 28888
                                length: 12
                              right:
                                type: method_invocation
                                fields:
                                  text: info.hasEnumParameterType()
                                children: []
                                pos: 28904
                                length: 27
                            children: []
                            pos: 28888
                            length: 43
                        children: []
                        pos: 28887
                        length: 45
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            checkEnumInitializer(
                                        t, rvalue, info.getEnumParameterType().evaluate(
                                            t.getScope(), typeRegistry));
                        children: []
                        pos: 28943
                        length: 128
                      - type: return_statement
                        fields:
                          text: return;
                        children: []
                        pos: 29080
                        length: 7
                      pos: 28933
                      length: 162
                    pos: 28884
                    length: 211
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: property.equals("prototype")
                            children: []
                            pos: 29140
                            length: 28
                        children: []
                        pos: 29139
                        length: 30
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: instanceof_expression
                                fields:
                                  text: objectJsType instanceof FunctionType
                                children: []
                                pos: 29184
                                length: 36
                            children: []
                            pos: 29183
                            length: 38
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: local_variable_declaration
                            fields:
                              text: FunctionType functionType = (FunctionType) objectJsType;
                            children: []
                            pos: 29234
                            length: 56
                          - type: if_statement
                            fields:
                              condition:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: method_invocation
                                    fields:
                                      text: functionType.isConstructor()
                                    children: []
                                    pos: 29305
                                    length: 28
                                children: []
                                pos: 29304
                                length: 30
                            children:
                            - type: block
                              fields: {}
                              children:
                              - type: local_variable_declaration
                                fields:
                                  text: JSType rvalueType = rvalue.getJSType();
                                children: []
                                pos: 29349
                                length: 39
                              - type: expression_statement
                                fields:
                                  text: |-
                                    validator.expectObject(t, rvalue, rvalueType,
                                                    OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
                                children: []
                                pos: 29401
                                length: 100
                              pos: 29335
                              length: 178
                            pos: 29301
                            length: 212
                          pos: 29222
                          length: 301
                        pos: 29180
                        length: 409
                      - type: return_statement
                        fields:
                          text: return;
                        children: []
                        pos: 29598
                        length: 7
                      pos: 29170
                      length: 443
                    pos: 29136
                    length: 477
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: object.getType()
                                children: []
                                pos: 29667
                                length: 16
                              right:
                                type: field_access
                                fields:
                                  text: Token.GETPROP
                                children: []
                                pos: 29687
                                length: 13
                            children: []
                            pos: 29667
                            length: 33
                        children: []
                        pos: 29666
                        length: 35
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: Node object2 = object.getFirstChild();
                        children: []
                        pos: 29712
                        length: 38
                      - type: local_variable_declaration
                        fields:
                          text: String property2 = NodeUtil.getStringValue(object.getLastChild());
                        children: []
                        pos: 29759
                        length: 66
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: method_invocation
                                fields:
                                  text: '"prototype".equals(property2)'
                                children: []
                                pos: 29839
                                length: 29
                            children: []
                            pos: 29838
                            length: 31
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: local_variable_declaration
                            fields:
                              text: JSType jsType = object2.getJSType();
                            children: []
                            pos: 29882
                            length: 36
                          - type: if_statement
                            fields:
                              condition:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: instanceof_expression
                                    fields:
                                      text: jsType instanceof FunctionType
                                    children: []
                                    pos: 29933
                                    length: 30
                                children: []
                                pos: 29932
                                length: 32
                            children:
                            - type: block
                              fields: {}
                              children:
                              - type: local_variable_declaration
                                fields:
                                  text: FunctionType functionType = (FunctionType)
                                    jsType;
                                children: []
                                pos: 29979
                                length: 50
                              - type: if_statement
                                fields:
                                  condition:
                                    type: parenthesized_expression
                                    fields:
                                      expression:
                                        type: or
                                        fields:
                                          left:
                                            type: method_invocation
                                            fields:
                                              text: functionType.isConstructor()
                                            children: []
                                            pos: 30046
                                            length: 28
                                          right:
                                            type: method_invocation
                                            fields:
                                              text: functionType.isInterface()
                                            children: []
                                            pos: 30078
                                            length: 26
                                        children: []
                                        pos: 30046
                                        length: 58
                                    children: []
                                    pos: 30045
                                    length: 60
                                children:
                                - type: block
                                  fields: {}
                                  children:
                                  - type: expression_statement
                                    fields:
                                      text: |-
                                        checkDeclaredPropertyInheritance(
                                                          t, assign, functionType, property, info, getJSType(rvalue));
                                    children: []
                                    pos: 30122
                                    length: 112
                                  pos: 30106
                                  length: 142
                                pos: 30042
                                length: 206
                              pos: 29965
                              length: 295
                            pos: 29929
                            length: 401
                          - type: return_statement
                            fields:
                              text: return;
                            children: []
                            pos: 30341
                            length: 7
                          pos: 29870
                          length: 488
                        pos: 29835
                        length: 523
                      pos: 29702
                      length: 664
                    pos: 29663
                    length: 703
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        ObjectType type = ObjectType.cast(
                                  objectJsType.restrictByNotNullOrUndefined());
                    children: []
                    pos: 30406
                    length: 90
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 30507
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 30515
                                length: 4
                            children: []
                            pos: 30507
                            length: 12
                        children: []
                        pos: 30506
                        length: 14
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: and
                                    fields:
                                      left:
                                        type: method_invocation
                                        fields:
                                          text: type.hasProperty(property)
                                        children: []
                                        pos: 30535
                                        length: 26
                                      right:
                                        type: unary_expression
                                        fields:
                                          text: "!type.isPropertyTypeInferred(property)"
                                        children: []
                                        pos: 30577
                                        length: 38
                                    children: []
                                    pos: 30535
                                    length: 80
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: "!propertyIsImplicitCast(type, property)"
                                    children: []
                                    pos: 30631
                                    length: 39
                                children: []
                                pos: 30535
                                length: 135
                            children: []
                            pos: 30534
                            length: 137
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: |-
                                validator.expectCanAssignToPropertyOf(
                                              t, assign, getJSType(rvalue),
                                              type.getPropertyType(property), object, property);
                            children: []
                            pos: 30684
                            length: 147
                          pos: 30672
                          length: 169
                        pos: 30531
                        length: 310
                      - type: return_statement
                        fields:
                          text: return;
                        children: []
                        pos: 30850
                        length: 7
                      pos: 30521
                      length: 344
                    pos: 30503
                    length: 362
                  pos: 27989
                  length: 2882
                pos: 27950
                length: 3226
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = getJSType(lvalue);
                children: []
                pos: 31207
                length: 36
              - type: local_variable_declaration
                fields:
                  text: Node rightChild = assign.getLastChild();
                children: []
                pos: 31248
                length: 40
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = getJSType(rightChild);
                children: []
                pos: 31293
                length: 41
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: |-
                            validator.expectCanAssignTo(
                                        t, assign, rightType, leftType, "assignment")
                        children: []
                        pos: 31343
                        length: 86
                    children: []
                    pos: 31342
                    length: 88
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, assign, rightType);
                    children: []
                    pos: 31439
                    length: 34
                  pos: 31431
                  length: 48
                pos: 31339
                length: 183
              pos: 27816
              length: 3710
          children: []
          pos: 27761
          length: 3765
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitObjLitKey
              children: []
              pos: 31824
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 31839
                length: 15
              pos: 31811
              length: 1693
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node rvalue = key.getFirstChild();
                children: []
                pos: 32112
                length: 34
              - type: local_variable_declaration
                fields:
                  text: |-
                    JSType rightType = NodeUtil.getObjectLitKeyTypeFromValueType(
                            key, getJSType(rvalue));
                children: []
                pos: 32151
                length: 94
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: rightType
                            children: []
                            pos: 32254
                            length: 9
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 32267
                            length: 4
                        children: []
                        pos: 32254
                        length: 17
                    children: []
                    pos: 32253
                    length: 19
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: rightType = getNativeType(UNKNOWN_TYPE);
                    children: []
                    pos: 32281
                    length: 40
                  pos: 32273
                  length: 54
                pos: 32250
                length: 77
              - type: local_variable_declaration
                fields:
                  text: Node owner = objlit;
                children: []
                pos: 32333
                length: 20
              - type: local_variable_declaration
                fields:
                  text: JSType keyType = getJSType(key);
                children: []
                pos: 32413
                length: 32
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean valid = validator.expectCanAssignToPropertyOf(t, key,
                            rightType, keyType,
                            owner, NodeUtil.getObjectLitKeyName(key));
                children: []
                pos: 32450
                length: 140
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: valid
                        children: []
                        pos: 32599
                        length: 5
                    children: []
                    pos: 32598
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, key, rightType);
                    children: []
                    pos: 32614
                    length: 31
                  pos: 32606
                  length: 45
                pos: 32595
                length: 96
              - type: local_variable_declaration
                fields:
                  text: JSType objlitType = getJSType(objlit);
                children: []
                pos: 32977
                length: 38
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType type = ObjectType.cast(
                            objlitType.restrictByNotNullOrUndefined());
                children: []
                pos: 33020
                length: 86
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: type
                            children: []
                            pos: 33115
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 33123
                            length: 4
                        children: []
                        pos: 33115
                        length: 12
                    children: []
                    pos: 33114
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: String property = NodeUtil.getObjectLitKeyName(key);
                    children: []
                    pos: 33137
                    length: 52
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: type.hasProperty(property)
                                    children: []
                                    pos: 33200
                                    length: 26
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: "!type.isPropertyTypeInferred(property)"
                                    children: []
                                    pos: 33240
                                    length: 38
                                children: []
                                pos: 33200
                                length: 78
                              right:
                                type: unary_expression
                                fields:
                                  text: "!propertyIsImplicitCast(type, property)"
                                children: []
                                pos: 33292
                                length: 39
                            children: []
                            pos: 33200
                            length: 131
                        children: []
                        pos: 33199
                        length: 133
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            validator.expectCanAssignToPropertyOf(
                                        t, key, keyType,
                                        type.getPropertyType(property), owner, property);
                        children: []
                        pos: 33343
                        length: 129
                      pos: 33333
                      length: 147
                    pos: 33196
                    length: 284
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 33487
                    length: 7
                  pos: 33129
                  length: 371
                pos: 33111
                length: 389
              pos: 31879
              length: 1625
          children: []
          pos: 31811
          length: 1693
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: propertyIsImplicitCast
              children: []
              pos: 33638
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: ObjectType type
                children: []
                pos: 33661
                length: 15
              pos: 33622
              length: 309
            body:
              type: block
              fields: {}
              children:
              - type: for_statement
                fields:
                  text: |-
                    for (; type != null; type = type.getImplicitPrototype()) {
                          JSDocInfo docInfo = type.getOwnPropertyJSDocInfo(prop);
                          if (docInfo != null && docInfo.isImplicitCast()) {
                            return true;
                          }
                        }
                children: []
                pos: 33697
                length: 212
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 33914
                length: 13
              pos: 33691
              length: 240
          children: []
          pos: 33622
          length: 309
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkDeclaredPropertyInheritance
              children: []
              pos: 34200
              length: 32
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 34240
                length: 15
              pos: 34187
              length: 4272
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: hasUnknownOrEmptySupertype(ctorType)
                        children: []
                        pos: 34453
                        length: 36
                    children: []
                    pos: 34452
                    length: 38
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 34499
                    length: 7
                  pos: 34491
                  length: 21
                pos: 34449
                length: 63
              - type: local_variable_declaration
                fields:
                  text: FunctionType superClass = ctorType.getSuperClassConstructor();
                children: []
                pos: 34518
                length: 62
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean superClassHasProperty = superClass != null &&
                            superClass.getPrototype().hasProperty(propertyName);
                children: []
                pos: 34585
                length: 114
              - type: local_variable_declaration
                fields:
                  text: boolean superInterfacesHasProperty = false;
                children: []
                pos: 34725
                length: 43
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: ctorType.isInterface()
                        children: []
                        pos: 34777
                        length: 22
                    children: []
                    pos: 34776
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: enhanced_for_statement
                    fields:
                      text: |-
                        for (ObjectType interfaceType : ctorType.getExtendedInterfaces()) {
                                superInterfacesHasProperty =
                                  superInterfacesHasProperty || interfaceType.hasProperty(propertyName);
                              }
                    children: []
                    pos: 34809
                    length: 193
                  pos: 34801
                  length: 207
                pos: 34773
                length: 235
              - type: local_variable_declaration
                fields:
                  text: boolean declaredOverride = info != null && info.isOverride();
                children: []
                pos: 35013
                length: 61
              - type: local_variable_declaration
                fields:
                  text: boolean foundInterfaceProperty = false;
                children: []
                pos: 35080
                length: 39
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: ctorType.isConstructor()
                        children: []
                        pos: 35128
                        length: 24
                    children: []
                    pos: 35127
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: enhanced_for_statement
                    fields:
                      text: |-
                        for (JSType implementedInterface :
                                  ctorType.getAllImplementedInterfaces()) {
                                if (implementedInterface.isUnknownType() ||
                                    implementedInterface.isEmptyType()) {
                                  continue;
                                }
                                FunctionType interfaceType =
                                    implementedInterface.toObjectType().getConstructor();
                                Preconditions.checkNotNull(interfaceType);
                                boolean interfaceHasProperty =
                                    interfaceType.getPrototype().hasProperty(propertyName);
                                foundInterfaceProperty = foundInterfaceProperty || interfaceHasProperty;
                                if (reportMissingOverride.isOn() && !declaredOverride &&
                                    interfaceHasProperty) {
                                  // @override not present, but the property does override an interface
                                  // property
                                  compiler.report(t.makeError(n, reportMissingOverride,
                                      HIDDEN_INTERFACE_PROPERTY, propertyName,
                                      interfaceType.getTopMostDefiningType(propertyName).toString()));
                                }
                              }
                    children: []
                    pos: 35162
                    length: 979
                  pos: 35154
                  length: 993
                pos: 35124
                length: 1023
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: and
                            fields:
                              left:
                                type: unary_expression
                                fields:
                                  text: "!declaredOverride"
                                children: []
                                pos: 36157
                                length: 17
                              right:
                                type: unary_expression
                                fields:
                                  text: "!superClassHasProperty"
                                children: []
                                pos: 36178
                                length: 22
                            children: []
                            pos: 36157
                            length: 43
                          right:
                            type: unary_expression
                            fields:
                              text: "!superInterfacesHasProperty"
                            children: []
                            pos: 36212
                            length: 27
                        children: []
                        pos: 36157
                        length: 82
                    children: []
                    pos: 36156
                    length: 84
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 36309
                    length: 7
                  pos: 36241
                  length: 81
                pos: 36153
                length: 169
              - type: local_variable_declaration
                fields:
                  text: |-
                    JSType topInstanceType = superClassHasProperty ?
                            superClass.getTopMostDefiningType(propertyName) : null;
                children: []
                pos: 36328
                length: 112
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: reportMissingOverride.isOn()
                                    children: []
                                    pos: 36449
                                    length: 28
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: ctorType.isConstructor()
                                    children: []
                                    pos: 36481
                                    length: 24
                                children: []
                                pos: 36449
                                length: 56
                              right:
                                type: unary_expression
                                fields:
                                  text: "!declaredOverride"
                                children: []
                                pos: 36517
                                length: 17
                            children: []
                            pos: 36449
                            length: 85
                          right:
                            type: identifier
                            fields:
                              text: superClassHasProperty
                            children: []
                            pos: 36538
                            length: 21
                        children: []
                        pos: 36449
                        length: 110
                    children: []
                    pos: 36448
                    length: 112
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        compiler.report(t.makeError(n, reportMissingOverride,
                                  HIDDEN_SUPERCLASS_PROPERTY, propertyName,
                                  topInstanceType.toString()));
                    children: []
                    pos: 36663
                    length: 145
                  pos: 36561
                  length: 253
                pos: 36445
                length: 369
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!declaredOverride"
                        children: []
                        pos: 36823
                        length: 17
                    children: []
                    pos: 36822
                    length: 19
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 36889
                    length: 7
                  pos: 36842
                  length: 60
                pos: 36819
                length: 83
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: superClassHasProperty
                        children: []
                        pos: 36974
                        length: 21
                    children: []
                    pos: 36973
                    length: 23
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        JSType superClassPropType =
                                  superClass.getPrototype().getPropertyType(propertyName);
                    children: []
                    pos: 37051
                    length: 94
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: unary_expression
                            fields:
                              text: "!propertyType.canAssignTo(superClassPropType)"
                            children: []
                            pos: 37156
                            length: 45
                        children: []
                        pos: 37155
                        length: 47
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            compiler.report(
                                        t.makeError(n, HIDDEN_SUPERCLASS_PROPERTY_MISMATCH,
                                            propertyName, topInstanceType.toString(),
                                            superClassPropType.toString(), propertyType.toString()));
                        children: []
                        pos: 37213
                        length: 212
                      pos: 37203
                      length: 230
                    pos: 37152
                    length: 281
                  pos: 36997
                  length: 442
                pos: 36970
                length: 1485
              pos: 34352
              length: 4107
          children: []
          pos: 34187
          length: 4272
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: hasUnknownOrEmptySupertype
              children: []
              pos: 38620
              length: 26
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FunctionType ctor
                children: []
                pos: 38647
                length: 17
              pos: 38597
              length: 815
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkArgument(ctor.isConstructor() || ctor.isInterface());
                children: []
                pos: 38672
                length: 72
              - type: expression_statement
                fields:
                  text: Preconditions.checkArgument(!ctor.isUnknownType());
                children: []
                pos: 38749
                length: 51
              - type: while_statement
                fields:
                  text: |-
                    while (true) {
                          ObjectType maybeSuperInstanceType =
                              ctor.getPrototype().getImplicitPrototype();
                          if (maybeSuperInstanceType == null) {
                            return false;
                          }
                          if (maybeSuperInstanceType.isUnknownType() ||
                              maybeSuperInstanceType.isEmptyType()) {
                            return true;
                          }
                          ctor = maybeSuperInstanceType.getConstructor();
                          if (ctor == null) {
                            return false;
                          }
                          Preconditions.checkState(ctor.isConstructor() || ctor.isInterface());
                        }
                children: []
                pos: 38901
                length: 507
              pos: 38666
              length: 746
          children: []
          pos: 38597
          length: 815
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitInterfaceGetprop
              children: []
              pos: 39550
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 39572
                length: 15
              pos: 39537
              length: 1206
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType rvalueType = getJSType(rvalue);
                children: []
                pos: 39671
                length: 38
              - type: local_variable_declaration
                fields:
                  text: |-
                    String abstractMethodName =
                            compiler.getCodingConvention().getAbstractMethodName();
                children: []
                pos: 39908
                length: 91
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: unary_expression
                            fields:
                              text: "!rvalueType.isOrdinaryFunction()"
                            children: []
                            pos: 40008
                            length: 32
                          right:
                            type: unary_expression
                            fields:
                              text: |-
                                !(rvalue.isQualifiedName() &&
                                          rvalue.getQualifiedName().equals(abstractMethodName))
                            children: []
                            pos: 40052
                            length: 93
                        children: []
                        pos: 40008
                        length: 137
                    children: []
                    pos: 40007
                    length: 139
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        String abstractMethodMessage = (abstractMethodName != null)
                                 ? ", or " + abstractMethodName
                                 : "";
                    children: []
                    pos: 40230
                    length: 114
                  - type: expression_statement
                    fields:
                      text: |-
                        compiler.report(
                                  t.makeError(object, INVALID_INTERFACE_MEMBER_DECLARATION,
                                      abstractMethodMessage));
                    children: []
                    pos: 40351
                    length: 123
                  pos: 40147
                  length: 333
                pos: 40004
                length: 476
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: assign.getLastChild().getType()
                                children: []
                                pos: 40490
                                length: 31
                              right:
                                type: field_access
                                fields:
                                  text: Token.FUNCTION
                                children: []
                                pos: 40525
                                length: 14
                            children: []
                            pos: 40490
                            length: 49
                          right:
                            type: unary_expression
                            fields:
                              text: "!NodeUtil.isEmptyBlock(assign.getLastChild().getLastChild())"
                            children: []
                            pos: 40551
                            length: 60
                        children: []
                        pos: 40490
                        length: 121
                    children: []
                    pos: 40489
                    length: 123
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        compiler.report(
                                  t.makeError(object, INTERFACE_FUNCTION_NOT_EMPTY,
                                      abstractMethodName));
                    children: []
                    pos: 40621
                    length: 112
                  pos: 40613
                  length: 126
                pos: 40486
                length: 253
              pos: 39664
              length: 1079
          children: []
          pos: 39537
          length: 1206
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitAnnotatedAssignGetprop
              children: []
              pos: 40912
              length: 27
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 40940
                length: 15
              pos: 40899
              length: 297
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    validator.expectCanAssignToPropertyOf(t, assign, getJSType(rvalue), type,
                            object, property);
                children: []
                pos: 41092
                length: 100
              pos: 41032
              length: 164
          children: []
          pos: 40899
          length: 297
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitName
              children: []
              pos: 41525
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 41535
                length: 15
              pos: 41517
              length: 1088
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int parentNodeType = parent.getType();
                children: []
                pos: 42031
                length: 38
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: or
                                fields:
                                  left:
                                    type: equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: parentNodeType
                                        children: []
                                        pos: 42078
                                        length: 14
                                      right:
                                        type: field_access
                                        fields:
                                          text: Token.FUNCTION
                                        children: []
                                        pos: 42096
                                        length: 14
                                    children: []
                                    pos: 42078
                                    length: 32
                                  right:
                                    type: equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: parentNodeType
                                        children: []
                                        pos: 42122
                                        length: 14
                                      right:
                                        type: field_access
                                        fields:
                                          text: Token.CATCH
                                        children: []
                                        pos: 42140
                                        length: 11
                                    children: []
                                    pos: 42122
                                    length: 29
                                children: []
                                pos: 42078
                                length: 73
                              right:
                                type: equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: parentNodeType
                                    children: []
                                    pos: 42163
                                    length: 14
                                  right:
                                    type: field_access
                                    fields:
                                      text: Token.LP
                                    children: []
                                    pos: 42181
                                    length: 8
                                children: []
                                pos: 42163
                                length: 26
                            children: []
                            pos: 42078
                            length: 111
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: parentNodeType
                                children: []
                                pos: 42201
                                length: 14
                              right:
                                type: field_access
                                fields:
                                  text: Token.VAR
                                children: []
                                pos: 42219
                                length: 9
                            children: []
                            pos: 42201
                            length: 27
                        children: []
                        pos: 42078
                        length: 150
                    children: []
                    pos: 42077
                    length: 152
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return false;
                    children: []
                    pos: 42238
                    length: 13
                  pos: 42230
                  length: 27
                pos: 42074
                length: 183
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 42263
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: type
                            children: []
                            pos: 42300
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 42308
                            length: 4
                        children: []
                        pos: 42300
                        length: 12
                    children: []
                    pos: 42299
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: type = getNativeType(UNKNOWN_TYPE);
                    children: []
                    pos: 42322
                    length: 35
                  - type: local_variable_declaration
                    fields:
                      text: Var var = t.getScope().getVar(n.getString());
                    children: []
                    pos: 42364
                    length: 45
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: var
                                children: []
                                pos: 42420
                                length: 3
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 42427
                                length: 4
                            children: []
                            pos: 42420
                            length: 11
                        children: []
                        pos: 42419
                        length: 13
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType varType = var.getType();
                        children: []
                        pos: 42443
                        length: 31
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: varType
                                    children: []
                                    pos: 42487
                                    length: 7
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 42498
                                    length: 4
                                children: []
                                pos: 42487
                                length: 15
                            children: []
                            pos: 42486
                            length: 17
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: type = varType;
                            children: []
                            pos: 42516
                            length: 15
                          pos: 42504
                          length: 37
                        pos: 42483
                        length: 58
                      pos: 42433
                      length: 116
                    pos: 42416
                    length: 133
                  pos: 42314
                  length: 241
                pos: 42296
                length: 259
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n, type);
                children: []
                pos: 42560
                length: 24
              - type: return_statement
                fields:
                  text: return true;
                children: []
                pos: 42589
                length: 12
              pos: 41573
              length: 1032
          children: []
          pos: 41517
          length: 1088
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitGetProp
              children: []
              pos: 42896
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 42909
                length: 15
              pos: 42883
              length: 1058
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: n.getJSType()
                                children: []
                                pos: 43168
                                length: 13
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 43185
                                length: 4
                            children: []
                            pos: 43168
                            length: 21
                          right:
                            type: equals
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: parent.getType()
                                children: []
                                pos: 43193
                                length: 16
                              right:
                                type: field_access
                                fields:
                                  text: Token.ASSIGN
                                children: []
                                pos: 43213
                                length: 12
                            children: []
                            pos: 43193
                            length: 32
                        children: []
                        pos: 43168
                        length: 57
                    children: []
                    pos: 43167
                    length: 59
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 43235
                    length: 7
                  pos: 43227
                  length: 21
                pos: 43164
                length: 84
              - type: local_variable_declaration
                fields:
                  text: Node property = n.getLastChild();
                children: []
                pos: 43460
                length: 33
              - type: local_variable_declaration
                fields:
                  text: Node objNode = n.getFirstChild();
                children: []
                pos: 43498
                length: 33
              - type: local_variable_declaration
                fields:
                  text: JSType childType = getJSType(objNode);
                children: []
                pos: 43536
                length: 38
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: |-
                            !validator.expectNotNullOrUndefined(t, n, childType,
                                        childType + " has no properties", getNativeType(OBJECT_TYPE))
                        children: []
                        pos: 43675
                        length: 126
                    children: []
                    pos: 43674
                    length: 128
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, n);
                    children: []
                    pos: 43811
                    length: 18
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 43836
                    length: 7
                  pos: 43803
                  length: 46
                pos: 43671
                length: 178
              - type: expression_statement
                fields:
                  text: checkPropertyAccess(childType, property.getString(), t, n);
                children: []
                pos: 43855
                length: 59
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n);
                children: []
                pos: 43919
                length: 18
              pos: 42947
              length: 994
          children: []
          pos: 42883
          length: 1058
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkPropertyAccess
              children: []
              pos: 44025
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType childType
                children: []
                pos: 44045
                length: 16
              pos: 44012
              length: 1024
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: ObjectType objectType = childType.dereference();
                children: []
                pos: 44117
                length: 48
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: objectType
                            children: []
                            pos: 44174
                            length: 10
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 44188
                            length: 4
                        children: []
                        pos: 44174
                        length: 18
                    children: []
                    pos: 44173
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType propType = getJSType(n);
                    children: []
                    pos: 44202
                    length: 31
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: or
                                    fields:
                                      left:
                                        type: unary_expression
                                        fields:
                                          text: "!objectType.hasProperty(propName)"
                                        children: []
                                        pos: 44245
                                        length: 33
                                      right:
                                        type: method_invocation
                                        fields:
                                          text: objectType.equals(typeRegistry.getNativeType(UNKNOWN_TYPE))
                                        children: []
                                        pos: 44293
                                        length: 59
                                    children: []
                                    pos: 44245
                                    length: 107
                                children: []
                                pos: 44244
                                length: 109
                              right:
                                type: method_invocation
                                fields:
                                  text: propType.equals(typeRegistry.getNativeType(UNKNOWN_TYPE))
                                children: []
                                pos: 44367
                                length: 57
                            children: []
                            pos: 44244
                            length: 180
                        children: []
                        pos: 44243
                        length: 182
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: instanceof_expression
                                fields:
                                  text: objectType instanceof EnumType
                                children: []
                                pos: 44440
                                length: 30
                            children: []
                            pos: 44439
                            length: 32
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: report(t, n, INEXISTENT_ENUM_ELEMENT, propName);
                            children: []
                            pos: 44484
                            length: 48
                          pos: 44472
                          length: 70
                        pos: 44436
                        length: 432
                      pos: 44426
                      length: 450
                    pos: 44240
                    length: 636
                  pos: 44194
                  length: 688
                pos: 44170
                length: 862
              pos: 44111
              length: 925
          children: []
          pos: 44012
          length: 1024
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isPropertyTest
              children: []
              pos: 45263
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getProp
                children: []
                pos: 45278
                length: 12
              pos: 45247
              length: 763
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node parent = getProp.getParent();
                children: []
                pos: 45298
                length: 34
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: parent.getType()
                        children: []
                        pos: 45345
                        length: 16
                    children: []
                    pos: 45344
                    length: 18
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.CALL:
                                return parent.getFirstChild() != getProp &&
                                    compiler.getCodingConvention().isPropertyTestFunction(parent);

                              case Token.IF:
                              case Token.WHILE:
                              case Token.DO:
                              case Token.FOR:
                                return NodeUtil.getConditionExpression(parent) == getProp;

                              case Token.INSTANCEOF:
                              case Token.TYPEOF:
                                return true;

                              case Token.AND:
                              case Token.HOOK:
                                return parent.getFirstChild() == getProp;

                              case Token.NOT:
                                return parent.getParent().getType() == Token.OR &&
                                    parent.getParent().getFirstChild() == parent;
                            }
                    children: []
                    pos: 45363
                    length: 625
                children: []
                pos: 45337
                length: 651
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 45993
                length: 13
              pos: 45292
              length: 718
          children: []
          pos: 45247
          length: 763
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitGetElem
              children: []
              pos: 46253
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 46266
                length: 15
              pos: 46240
              length: 222
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 46297
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 46332
                length: 30
              - type: expression_statement
                fields:
                  text: validator.expectIndexMatch(t, n, getJSType(left), getJSType(right));
                children: []
                pos: 46367
                length: 68
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n);
                children: []
                pos: 46440
                length: 18
              pos: 46291
              length: 171
          children: []
          pos: 46240
          length: 222
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitVar
              children: []
              pos: 46701
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 46710
                length: 15
              pos: 46688
              length: 1336
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: 'JSDocInfo varInfo = n.hasOneChild() ? n.getJSDocInfo() :
                    null;'
                children: []
                pos: 46903
                length: 62
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (Node name : n.children()) {
                          Node value = name.getFirstChild();
                          // A null var would indicate a bug in the scope creation logic.
                          Var var = t.getScope().getVar(name.getString());

                          if (value != null) {
                            JSType valueType = getJSType(value);
                            JSType nameType = var.getType();
                            nameType = (nameType == null) ? getNativeType(UNKNOWN_TYPE) : nameType;

                            JSDocInfo info = name.getJSDocInfo();
                            if (info == null) {
                              info = varInfo;
                            }
                            if (info != null && info.hasEnumParameterType()) {
                              // var.getType() can never be null, this would indicate a bug in the
                              // scope creation logic.
                              checkEnumInitializer(
                                  t, value,
                                  info.getEnumParameterType().evaluate(t.getScope(), typeRegistry));
                            } else if (var.isTypeInferred()) {
                              ensureTyped(t, name, valueType);
                            } else {
                              validator.expectCanAssignTo(
                                  t, value, valueType, nameType, "initializing variable");
                            }
                          }
                        }
                children: []
                pos: 46970
                length: 1050
              pos: 46735
              length: 1289
          children: []
          pos: 46688
          length: 1336
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitNew
              children: []
              pos: 48077
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 48086
                length: 15
              pos: 48064
              length: 863
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node constructor = n.getFirstChild();
                children: []
                pos: 48117
                length: 37
              - type: local_variable_declaration
                fields:
                  text: FunctionType type = getFunctionType(constructor);
                children: []
                pos: 48159
                length: 49
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 48217
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 48225
                                length: 4
                            children: []
                            pos: 48217
                            length: 12
                          right:
                            type: method_invocation
                            fields:
                              text: type.isConstructor()
                            children: []
                            pos: 48233
                            length: 20
                        children: []
                        pos: 48217
                        length: 36
                    children: []
                    pos: 48216
                    length: 38
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: visitParameterList(t, n, type);
                    children: []
                    pos: 48263
                    length: 31
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, n, type.getInstanceType());
                    children: []
                    pos: 48301
                    length: 42
                  pos: 48255
                  length: 94
                pos: 48213
                length: 710
              pos: 48111
              length: 816
          children: []
          pos: 48064
          length: 863
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkInterfaceConflictProperties
              children: []
              pos: 49465
              length: 32
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 49498
                length: 15
              pos: 49452
              length: 987
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Set<String> currentPropertyNames = interfaceType.getPropertyNames();
                children: []
                pos: 49681
                length: 68
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (String name : currentPropertyNames) {
                          ObjectType oType = properties.get(name);
                          if (oType != null) {
                            if (!interfaceType.getPropertyType(name).isEquivalentTo(
                                oType.getPropertyType(name))) {
                              compiler.report(
                                  t.makeError(n, INCOMPATIBLE_EXTENDED_PROPERTY_TYPE,
                                      functionName, name, oType.toString(),
                                      interfaceType.toString()));
                            }
                          }
                          currentProperties.put(name, interfaceType);
                        }
                children: []
                pos: 49754
                length: 494
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (ObjectType iType : interfaceType.getCtorExtendedInterfaces()) {
                          checkInterfaceConflictProperties(t, n, functionName, properties,
                              currentProperties, iType);
                        }
                children: []
                pos: 50253
                length: 182
              pos: 49675
              length: 764
          children: []
          pos: 49452
          length: 987
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitFunction
              children: []
              pos: 50697
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 50711
                length: 15
              pos: 50684
              length: 2824
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: FunctionType functionType = (FunctionType) n.getJSType();
                children: []
                pos: 50742
                length: 57
              - type: local_variable_declaration
                fields:
                  text: String functionPrivateName = n.getFirstChild().getString();
                children: []
                pos: 50804
                length: 59
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: functionType.isConstructor()
                        children: []
                        pos: 50872
                        length: 28
                    children: []
                    pos: 50871
                    length: 30
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        FunctionType baseConstructor = functionType.
                                  getPrototype().getImplicitPrototype().getConstructor();
                    children: []
                    pos: 50910
                    length: 110
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: not_equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: baseConstructor
                                        children: []
                                        pos: 51031
                                        length: 15
                                      right:
                                        type: null_literal
                                        fields: {}
                                        children: []
                                        pos: 51050
                                        length: 4
                                    children: []
                                    pos: 51031
                                    length: 23
                                  right:
                                    type: not_equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: baseConstructor
                                        children: []
                                        pos: 51068
                                        length: 15
                                      right:
                                        type: method_invocation
                                        fields:
                                          text: getNativeType(OBJECT_FUNCTION_TYPE)
                                        children: []
                                        pos: 51087
                                        length: 35
                                    children: []
                                    pos: 51068
                                    length: 54
                                children: []
                                pos: 51031
                                length: 91
                              right:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: and
                                    fields:
                                      left:
                                        type: method_invocation
                                        fields:
                                          text: baseConstructor.isInterface()
                                        children: []
                                        pos: 51137
                                        length: 29
                                      right:
                                        type: method_invocation
                                        fields:
                                          text: functionType.isConstructor()
                                        children: []
                                        pos: 51170
                                        length: 28
                                    children: []
                                    pos: 51137
                                    length: 61
                                children: []
                                pos: 51136
                                length: 63
                            children: []
                            pos: 51031
                            length: 168
                        children: []
                        pos: 51030
                        length: 170
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            compiler.report(
                                        t.makeError(n, CONFLICTING_EXTENDED_TYPE, functionPrivateName));
                        children: []
                        pos: 51211
                        length: 93
                      pos: 51201
                      length: 111
                    pos: 51027
                    length: 1149
                  pos: 50902
                  length: 1280
                pos: 50868
                length: 2636
              pos: 50736
              length: 2772
          children: []
          pos: 50684
          length: 2824
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitCall
              children: []
              pos: 53748
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 53758
                length: 15
              pos: 53735
              length: 2099
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node child = n.getFirstChild();
                children: []
                pos: 53789
                length: 31
              - type: local_variable_declaration
                fields:
                  text: JSType childType = getJSType(child).restrictByNotNullOrUndefined();
                children: []
                pos: 53825
                length: 67
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!childType.canBeCalled()"
                        children: []
                        pos: 53902
                        length: 24
                    children: []
                    pos: 53901
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: report(t, n, NOT_CALLABLE, childType.toString());
                    children: []
                    pos: 53936
                    length: 49
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, n);
                    children: []
                    pos: 53992
                    length: 18
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 54017
                    length: 7
                  pos: 53928
                  length: 102
                pos: 53898
                length: 132
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: childType instanceof FunctionType
                        children: []
                        pos: 54165
                        length: 33
                    children: []
                    pos: 54164
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType functionType = (FunctionType) childType;
                    children: []
                    pos: 54208
                    length: 53
                  - type: local_variable_declaration
                    fields:
                      text: boolean isExtern = false;
                    children: []
                    pos: 54269
                    length: 25
                  - type: local_variable_declaration
                    fields:
                      text: JSDocInfo functionJSDocInfo = functionType.getJSDocInfo();
                    children: []
                    pos: 54301
                    length: 58
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: functionJSDocInfo
                                children: []
                                pos: 54369
                                length: 17
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 54390
                                length: 4
                            children: []
                            pos: 54369
                            length: 25
                        children: []
                        pos: 54368
                        length: 27
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: String sourceName = functionJSDocInfo.getSourceName();
                        children: []
                        pos: 54406
                        length: 54
                      - type: local_variable_declaration
                        fields:
                          text: CompilerInput functionSource = compiler.getInput(sourceName);
                        children: []
                        pos: 54469
                        length: 61
                      - type: expression_statement
                        fields:
                          text: isExtern = functionSource.isExtern();
                        children: []
                        pos: 54539
                        length: 37
                      pos: 54396
                      length: 188
                    pos: 54366
                    length: 218
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: functionType.isConstructor()
                                    children: []
                                    pos: 54741
                                    length: 28
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: "!functionType.isNativeObjectType()"
                                    children: []
                                    pos: 54783
                                    length: 34
                                children: []
                                pos: 54741
                                length: 76
                              right:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: or
                                    fields:
                                      left:
                                        type: or
                                        fields:
                                          left:
                                            type: method_invocation
                                            fields:
                                              text: functionType.getReturnType().isUnknownType()
                                            children: []
                                            pos: 54832
                                            length: 44
                                          right:
                                            type: method_invocation
                                            fields:
                                              text: functionType.getReturnType().isVoidType()
                                            children: []
                                            pos: 54891
                                            length: 41
                                        children: []
                                        pos: 54832
                                        length: 100
                                      right:
                                        type: unary_expression
                                        fields:
                                          text: "!isExtern"
                                        children: []
                                        pos: 54947
                                        length: 9
                                    children: []
                                    pos: 54832
                                    length: 124
                                children: []
                                pos: 54831
                                length: 126
                            children: []
                            pos: 54741
                            length: 216
                        children: []
                        pos: 54740
                        length: 218
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: report(t, n, CONSTRUCTOR_NOT_CALLABLE, childType.toString());
                        children: []
                        pos: 54969
                        length: 61
                      pos: 54959
                      length: 79
                    pos: 54737
                    length: 301
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: and
                                    fields:
                                      left:
                                        type: method_invocation
                                        fields:
                                          text: functionType.isOrdinaryFunction()
                                        children: []
                                        pos: 55144
                                        length: 33
                                      right:
                                        type: unary_expression
                                        fields:
                                          text: "!functionType.getTypeOfThis().isUnknownType()"
                                        children: []
                                        pos: 55191
                                        length: 45
                                    children: []
                                    pos: 55144
                                    length: 92
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: "!functionType.getTypeOfThis().isNativeObjectType()"
                                    children: []
                                    pos: 55250
                                    length: 50
                                children: []
                                pos: 55144
                                length: 156
                              right:
                                type: unary_expression
                                fields:
                                  text: |-
                                    !(child.getType() == Token.GETELEM ||
                                                child.getType() == Token.GETPROP)
                                children: []
                                pos: 55314
                                length: 83
                            children: []
                            pos: 55144
                            length: 253
                        children: []
                        pos: 55143
                        length: 255
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: report(t, n, EXPECTED_THIS_TYPE, functionType.toString());
                        children: []
                        pos: 55409
                        length: 58
                      pos: 55399
                      length: 76
                    pos: 55140
                    length: 335
                  - type: expression_statement
                    fields:
                      text: visitParameterList(t, n, functionType);
                    children: []
                    pos: 55483
                    length: 39
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, n, functionType.getReturnType());
                    children: []
                    pos: 55529
                    length: 48
                  pos: 54200
                  length: 1383
                pos: 54161
                length: 1460
              pos: 53783
              length: 2051
          children: []
          pos: 53735
          length: 2099
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitParameterList
              children: []
              pos: 55915
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 55934
                length: 15
              pos: 55902
              length: 1386
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Iterator<Node> arguments = call.children().iterator();
                children: []
                pos: 56001
                length: 54
              - type: expression_statement
                fields:
                  text: arguments.next();
                children: []
                pos: 56060
                length: 17
              - type: local_variable_declaration
                fields:
                  text: Iterator<Node> parameters = functionType.getParameters().iterator();
                children: []
                pos: 56109
                length: 68
              - type: local_variable_declaration
                fields:
                  text: int ordinal = 0;
                children: []
                pos: 56182
                length: 16
              - type: local_variable_declaration
                fields:
                  text: Node parameter = null;
                children: []
                pos: 56203
                length: 22
              - type: local_variable_declaration
                fields:
                  text: Node argument = null;
                children: []
                pos: 56230
                length: 21
              - type: while_statement
                fields:
                  text: |-
                    while (arguments.hasNext() &&
                               (parameters.hasNext() ||
                                parameter != null && parameter.isVarArgs())) {
                          // If there are no parameters left in the list, then the while loop
                          // above implies that this must be a var_args function.
                          if (parameters.hasNext()) {
                            parameter = parameters.next();
                          }
                          argument = arguments.next();
                          ordinal++;

                          validator.expectArgumentMatchesParameter(t, argument,
                              getJSType(argument), getJSType(parameter), call, ordinal);
                        }
                children: []
                pos: 56256
                length: 529
              - type: local_variable_declaration
                fields:
                  text: int numArgs = call.getChildCount() - 1;
                children: []
                pos: 56791
                length: 39
              - type: local_variable_declaration
                fields:
                  text: int minArgs = functionType.getMinArguments();
                children: []
                pos: 56835
                length: 45
              - type: local_variable_declaration
                fields:
                  text: int maxArgs = functionType.getMaxArguments();
                children: []
                pos: 56885
                length: 45
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: greater_than
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: minArgs
                                children: []
                                pos: 56939
                                length: 7
                              right:
                                type: identifier
                                fields:
                                  text: numArgs
                                children: []
                                pos: 56949
                                length: 7
                            children: []
                            pos: 56939
                            length: 17
                          right:
                            type: less_than
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: maxArgs
                                children: []
                                pos: 56960
                                length: 7
                              right:
                                type: identifier
                                fields:
                                  text: numArgs
                                children: []
                                pos: 56970
                                length: 7
                            children: []
                            pos: 56960
                            length: 17
                        children: []
                        pos: 56939
                        length: 38
                    children: []
                    pos: 56938
                    length: 40
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        report(t, call, WRONG_ARGUMENT_COUNT,
                                      validator.getReadableJSTypeName(call.getFirstChild(), false),
                                      String.valueOf(numArgs), String.valueOf(minArgs),
                                      maxArgs != Integer.MAX_VALUE ?
                                      " and no more than " + maxArgs + " argument(s)" : "");
                    children: []
                    pos: 56987
                    length: 291
                  pos: 56979
                  length: 305
                pos: 56935
                length: 349
              pos: 55995
              length: 1293
          children: []
          pos: 55902
          length: 1386
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitReturn
              children: []
              pos: 57530
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 57542
                length: 15
              pos: 57517
              length: 1070
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node function = t.getEnclosingFunction();
                children: []
                pos: 57573
                length: 41
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: function
                            children: []
                            pos: 57718
                            length: 8
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 57730
                            length: 4
                        children: []
                        pos: 57718
                        length: 16
                    children: []
                    pos: 57717
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 57744
                    length: 7
                  pos: 57736
                  length: 21
                pos: 57714
                length: 43
              - type: local_variable_declaration
                fields:
                  text: JSType jsType = getJSType(function);
                children: []
                pos: 57762
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: jsType instanceof FunctionType
                        children: []
                        pos: 57808
                        length: 30
                    children: []
                    pos: 57807
                    length: 32
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType functionType = (FunctionType) jsType;
                    children: []
                    pos: 57848
                    length: 50
                  - type: local_variable_declaration
                    fields:
                      text: JSType returnType = functionType.getReturnType();
                    children: []
                    pos: 57906
                    length: 49
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: returnType
                                children: []
                                pos: 58067
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 58081
                                length: 4
                            children: []
                            pos: 58067
                            length: 18
                        children: []
                        pos: 58066
                        length: 20
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: returnType = getNativeType(VOID_TYPE);
                        children: []
                        pos: 58097
                        length: 38
                      pos: 58087
                      length: 56
                    pos: 58063
                    length: 80
                  - type: local_variable_declaration
                    fields:
                      text: Node valueNode = n.getFirstChild();
                    children: []
                    pos: 58195
                    length: 35
                  - type: local_variable_declaration
                    fields:
                      text: JSType actualReturnType;
                    children: []
                    pos: 58237
                    length: 24
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: valueNode
                                children: []
                                pos: 58272
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 58285
                                length: 4
                            children: []
                            pos: 58272
                            length: 17
                        children: []
                        pos: 58271
                        length: 19
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: actualReturnType = getNativeType(VOID_TYPE);
                        children: []
                        pos: 58301
                        length: 44
                      - type: expression_statement
                        fields:
                          text: valueNode = n;
                        children: []
                        pos: 58354
                        length: 14
                      pos: 58291
                      length: 85
                    pos: 58268
                    length: 172
                  - type: expression_statement
                    fields:
                      text: |-
                        validator.expectCanAssignTo(t, valueNode, actualReturnType, returnType,
                                  "inconsistent return type");
                    children: []
                    pos: 58467
                    length: 110
                  pos: 57840
                  length: 743
                pos: 57804
                length: 779
              pos: 57567
              length: 1020
          children: []
          pos: 57517
          length: 1070
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitBinaryOperator
              children: []
              pos: 58995
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int op
                children: []
                pos: 59015
                length: 6
              pos: 58982
              length: 1688
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 59054
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = getJSType(left);
                children: []
                pos: 59089
                length: 34
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 59128
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = getJSType(right);
                children: []
                pos: 59163
                length: 36
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: op
                        children: []
                        pos: 59212
                        length: 2
                    children: []
                    pos: 59211
                    length: 4
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.ASSIGN_LSH:
                              case Token.ASSIGN_RSH:
                              case Token.LSH:
                              case Token.RSH:
                              case Token.ASSIGN_URSH:
                              case Token.URSH:
                                if (!leftType.matchesInt32Context()) {
                                  report(t, left, BIT_OPERATION,
                                           NodeUtil.opToStr(n.getType()), leftType.toString());
                                }
                                if (!rightType.matchesUint32Context()) {
                                  report(t, right, BIT_OPERATION,
                                           NodeUtil.opToStr(n.getType()), rightType.toString());
                                }
                                break;

                              case Token.ASSIGN_DIV:
                              case Token.ASSIGN_MOD:
                              case Token.ASSIGN_MUL:
                              case Token.ASSIGN_SUB:
                              case Token.DIV:
                              case Token.MOD:
                              case Token.MUL:
                              case Token.SUB:
                                validator.expectNumber(t, left, leftType, "left operand");
                                validator.expectNumber(t, right, rightType, "right operand");
                                break;

                              case Token.ASSIGN_BITAND:
                              case Token.ASSIGN_BITXOR:
                              case Token.ASSIGN_BITOR:
                              case Token.BITAND:
                              case Token.BITXOR:
                              case Token.BITOR:
                                validator.expectBitwiseable(t, left, leftType,
                                    "bad left operand to bitwise operator");
                                validator.expectBitwiseable(t, right, rightType,
                                    "bad right operand to bitwise operator");
                                break;

                              case Token.ASSIGN_ADD:
                              case Token.ADD:
                                break;

                              default:
                                report(t, n, UNEXPECTED_TOKEN, Node.tokenToName(op));
                            }
                    children: []
                    pos: 59216
                    length: 1427
                children: []
                pos: 59204
                length: 1439
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n);
                children: []
                pos: 60648
                length: 18
              pos: 59048
              length: 1622
          children: []
          pos: 58982
          length: 1688
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkEnumInitializer
              children: []
              pos: 61350
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 61378
                length: 15
              pos: 61337
              length: 1288
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: value.getType()
                            children: []
                            pos: 61439
                            length: 15
                          right:
                            type: field_access
                            fields:
                              text: Token.OBJECTLIT
                            children: []
                            pos: 61458
                            length: 15
                        children: []
                        pos: 61439
                        length: 34
                    children: []
                    pos: 61438
                    length: 36
                children:
                - type: block
                  fields: {}
                  children:
                  - type: for_statement
                    fields:
                      text: |-
                        for (Node key = value.getFirstChild();
                                   key != null; key = key.getNext()) {
                                Node propValue = key.getFirstChild();

                                // the value's type must be assignable to the enum's primitive type
                                validator.expectCanAssignTo(
                                    t, propValue, getJSType(propValue), primitiveType,
                                    "element type must match enum's type");
                              }
                    children: []
                    pos: 61483
                    length: 368
                  pos: 61475
                  length: 382
                pos: 61435
                length: 1186
              pos: 61429
              length: 1196
          children: []
          pos: 61337
          length: 1288
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isReference
              children: []
              pos: 62917
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 62929
                length: 6
              pos: 62894
              length: 216
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 62951
                        length: 11
                    children: []
                    pos: 62950
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.GETELEM:
                              case Token.GETPROP:
                              case Token.NAME:
                                return true;

                              default:
                                return false;
                            }
                    children: []
                    pos: 62964
                    length: 141
                children: []
                pos: 62943
                length: 162
              pos: 62937
              length: 173
          children: []
          pos: 62894
          length: 216
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getJSType
              children: []
              pos: 63235
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 63245
                length: 6
              pos: 63220
              length: 461
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType jsType = n.getJSType();
                children: []
                pos: 63259
                length: 30
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: jsType
                            children: []
                            pos: 63298
                            length: 6
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 63308
                            length: 4
                        children: []
                        pos: 63298
                        length: 14
                    children: []
                    pos: 63297
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return getNativeType(UNKNOWN_TYPE);
                    children: []
                    pos: 63602
                    length: 35
                  pos: 63314
                  length: 329
                pos: 63294
                length: 383
              pos: 63253
              length: 428
          children: []
          pos: 63220
          length: 461
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getFunctionType
              children: []
              pos: 63808
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 63824
                length: 6
              pos: 63787
              length: 335
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType type = getJSType(n).restrictByNotNullOrUndefined();
                children: []
                pos: 63838
                length: 58
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: type.isUnknownType()
                        children: []
                        pos: 63905
                        length: 20
                    children: []
                    pos: 63904
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return typeRegistry.getNativeFunctionType(U2U_CONSTRUCTOR_TYPE);
                    children: []
                    pos: 63935
                    length: 64
                  pos: 63927
                  length: 78
                pos: 63901
                length: 217
              pos: 63832
              length: 290
          children: []
          pos: 63787
          length: 335
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensureTyped
              children: []
              pos: 64574
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 64586
                length: 15
              pos: 64561
              length: 107
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n, getNativeType(UNKNOWN_TYPE));
                children: []
                pos: 64617
                length: 47
              pos: 64611
              length: 57
          children: []
          pos: 64561
          length: 107
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensureTyped
              children: []
              pos: 64685
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 64697
                length: 15
              pos: 64672
              length: 118
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n, getNativeType(type));
                children: []
                pos: 64747
                length: 39
              pos: 64741
              length: 49
          children: []
          pos: 64672
          length: 118
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensureTyped
              children: []
              pos: 65619
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 65631
                length: 15
              pos: 65606
              length: 854
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    Preconditions.checkState(n.getType() != Token.FUNCTION ||
                                type instanceof FunctionType ||
                                type.isUnknownType());
                children: []
                pos: 65733
                length: 136
              - type: local_variable_declaration
                fields:
                  text: JSDocInfo info = n.getJSDocInfo();
                children: []
                pos: 65874
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: info
                            children: []
                            pos: 65917
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 65925
                            length: 4
                        children: []
                        pos: 65917
                        length: 12
                    children: []
                    pos: 65916
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: info.hasType()
                            children: []
                            pos: 65943
                            length: 14
                        children: []
                        pos: 65942
                        length: 16
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType infoType = info.getType().evaluate(t.getScope(),
                            typeRegistry);
                        children: []
                        pos: 65969
                        length: 70
                      - type: expression_statement
                        fields:
                          text: validator.expectCanCast(t, n, infoType, type);
                        children: []
                        pos: 66048
                        length: 46
                      - type: expression_statement
                        fields:
                          text: type = infoType;
                        children: []
                        pos: 66103
                        length: 16
                      pos: 65959
                      length: 168
                    pos: 65939
                    length: 188
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: info.isImplicitCast()
                                children: []
                                pos: 66139
                                length: 21
                              right:
                                type: unary_expression
                                fields:
                                  text: "!inExterns"
                                children: []
                                pos: 66164
                                length: 10
                            children: []
                            pos: 66139
                            length: 35
                        children: []
                        pos: 66138
                        length: 37
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: |-
                            String propName = n.getType() == Token.GETPROP ?
                                        n.getLastChild().getString() : "(missing)";
                        children: []
                        pos: 66186
                        length: 104
                      - type: expression_statement
                        fields:
                          text: |-
                            compiler.report(
                                        t.makeError(n, ILLEGAL_IMPLICIT_CAST, propName));
                        children: []
                        pos: 66299
                        length: 78
                      pos: 66176
                      length: 209
                    pos: 66135
                    length: 250
                  pos: 65931
                  length: 460
                pos: 65913
                length: 478
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: n.getJSType()
                            children: []
                            pos: 66401
                            length: 13
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 66418
                            length: 4
                        children: []
                        pos: 66401
                        length: 21
                    children: []
                    pos: 66400
                    length: 23
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: n.setJSType(type);
                    children: []
                    pos: 66432
                    length: 18
                  pos: 66424
                  length: 32
                pos: 66397
                length: 59
              pos: 65669
              length: 791
          children: []
          pos: 65606
          length: 854
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getTypedPercent
              children: []
              pos: 66591
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 66584
              length: 187
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int total = nullCount + unknownCount + typedCount;
                children: []
                pos: 66615
                length: 50
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: total
                            children: []
                            pos: 66674
                            length: 5
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 66683
                            length: 1
                        children: []
                        pos: 66674
                        length: 10
                    children: []
                    pos: 66673
                    length: 12
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return 0.0;
                    children: []
                    pos: 66694
                    length: 11
                  pos: 66686
                  length: 25
                pos: 66670
                length: 97
              pos: 66609
              length: 162
          children: []
          pos: 66584
          length: 187
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getNativeType
              children: []
              pos: 66790
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSTypeNative typeId
                children: []
                pos: 66804
                length: 19
              pos: 66775
              length: 102
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return typeRegistry.getNativeType(typeId);
                children: []
                pos: 66831
                length: 42
              pos: 66825
              length: 52
          children: []
          pos: 66775
          length: 102
        pos: 2320
        length: 64559
    children: []
    pos: 2320
    length: 64559
  pos: 0
  length: 66880
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: TypeCheck
        children: []
        pos: 2333
        length: 9
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNEXPECTED_TOKEN = DiagnosticType.error(
                    "JSC_INTERNAL_ERROR_UNEXPECTED_TOKEN",
                    "Internal Error: Don't know how to handle {0}");
          children: []
          pos: 2427
          length: 168
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType BAD_DELETE =
                    // TODO(user): make this an error
                    DiagnosticType.warning(
                        "JSC_BAD_DELETE_OPERAND",
                        "delete operator needs a reference operand");
          children: []
          pos: 2627
          length: 202
        - type: field_declaration
          fields:
            text: |-
              protected static final String OVERRIDING_PROTOTYPE_WITH_NON_OBJECT =
                    "overriding prototype with non-object";
          children: []
          pos: 2864
          length: 114
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType DETERMINISTIC_TEST =
                    DiagnosticType.warning(
                        "JSC_DETERMINISTIC_TEST",
                        "condition always evaluates to {2}\n" +
                        "left : {0}\n" +
                        "right: {1}");
          children: []
          pos: 3112
          length: 216
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType DETERMINISTIC_TEST_NO_RESULT =
                    DiagnosticType.warning(
                        "JSC_DETERMINISTIC_TEST_NO_RESULT",
                        "condition always evaluates to the same value\n" +
                        "left : {0}\n" +
                        "right: {1}");
          children: []
          pos: 3332
          length: 247
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INEXISTENT_ENUM_ELEMENT =
                    DiagnosticType.warning(
                        "JSC_INEXISTENT_ENUM_ELEMENT",
                        "element {0} does not exist on this enum");
          children: []
          pos: 3583
          length: 178
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INEXISTENT_PROPERTY =
                    DiagnosticType.disabled(
                        "JSC_INEXISTENT_PROPERTY",
                        "Property {0} never defined on {1}");
          children: []
          pos: 3858
          length: 165
        - type: field_declaration
          fields:
            text: |-
              protected static final DiagnosticType NOT_A_CONSTRUCTOR =
                    DiagnosticType.warning(
                        "JSC_NOT_A_CONSTRUCTOR",
                        "cannot instantiate non-constructor");
          children: []
          pos: 4027
          length: 171
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType BIT_OPERATION =
                    DiagnosticType.warning(
                        "JSC_BAD_TYPE_FOR_BIT_OPERATION",
                        "operator {0} cannot be applied to {1}");
          children: []
          pos: 4202
          length: 169
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType NOT_CALLABLE =
                    DiagnosticType.warning(
                        "JSC_NOT_FUNCTION_TYPE",
                        "{0} expressions are not callable");
          children: []
          pos: 4375
          length: 154
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType CONSTRUCTOR_NOT_CALLABLE =
                    DiagnosticType.warning(
                        "JSC_CONSTRUCTOR_NOT_CALLABLE",
                        "Constructor {0} should be called with the \"new\" keyword");
          children: []
          pos: 4533
          length: 198
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType FUNCTION_MASKS_VARIABLE =
                    DiagnosticType.warning(
                        "JSC_FUNCTION_MASKS_VARIABLE",
                        "function {0} masks variable (IE bug)");
          children: []
          pos: 4735
          length: 175
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType MULTIPLE_VAR_DEF = DiagnosticType.warning(
                    "JSC_MULTIPLE_VAR_DEF",
                    "declaration of multiple variables with shared type information");
          children: []
          pos: 4914
          length: 173
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ENUM_DUP = DiagnosticType.error("JSC_ENUM_DUP",
                    "enum element {0} already defined");
          children: []
          pos: 5091
          length: 118
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ENUM_NOT_CONSTANT =
                    DiagnosticType.warning("JSC_ENUM_NOT_CONSTANT",
                        "enum key {0} must be a syntactic constant");
          children: []
          pos: 5213
          length: 157
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INVALID_INTERFACE_MEMBER_DECLARATION =
                    DiagnosticType.warning(
                        "JSC_INVALID_INTERFACE_MEMBER_DECLARATION",
                        "interface members can only be empty property declarations,"
                        + " empty functions{0}");
          children: []
          pos: 5374
          length: 257
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INTERFACE_FUNCTION_NOT_EMPTY =
                    DiagnosticType.warning(
                        "JSC_INTERFACE_FUNCTION_NOT_EMPTY",
                        "interface member functions must have an empty body");
          children: []
          pos: 5635
          length: 199
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType CONFLICTING_EXTENDED_TYPE =
                    DiagnosticType.warning(
                        "JSC_CONFLICTING_EXTENDED_TYPE",
                        "{0} cannot extend this type; " +
                        "a constructor can only extend objects " +
                        "and an interface can only extend interfaces");
          children: []
          pos: 5838
          length: 283
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType CONFLICTING_IMPLEMENTED_TYPE =
                  DiagnosticType.warning(
                      "JSC_CONFLICTING_IMPLEMENTED_TYPE",
                      "{0} cannot implement this type; " +
                      "an interface can only extend, but not implement interfaces");
          children: []
          pos: 6125
          length: 246
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType BAD_IMPLEMENTED_TYPE =
                    DiagnosticType.warning(
                        "JSC_IMPLEMENTS_NON_INTERFACE",
                        "can only implement interfaces");
          children: []
          pos: 6375
          length: 166
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType HIDDEN_SUPERCLASS_PROPERTY =
                    DiagnosticType.warning(
                        "JSC_HIDDEN_SUPERCLASS_PROPERTY",
                        "property {0} already defined on superclass {1}; " +
                        "use @override to override it");
          children: []
          pos: 6545
          length: 236
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType HIDDEN_INTERFACE_PROPERTY =
                    DiagnosticType.warning(
                        "JSC_HIDDEN_INTERFACE_PROPERTY",
                        "property {0} already defined on interface {1}; " +
                        "use @override to override it");
          children: []
          pos: 6785
          length: 233
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType HIDDEN_SUPERCLASS_PROPERTY_MISMATCH =
                    DiagnosticType.warning("JSC_HIDDEN_SUPERCLASS_PROPERTY_MISMATCH",
                        "mismatch of the {0} property type and the type " +
                        "of the property it overrides from superclass {1}\n" +
                        "original: {2}\n" +
                        "override: {3}");
          children: []
          pos: 7022
          length: 322
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNKNOWN_OVERRIDE =
                    DiagnosticType.warning(
                        "JSC_UNKNOWN_OVERRIDE",
                        "property {0} not defined on any superclass of {1}");
          children: []
          pos: 7348
          length: 174
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INTERFACE_METHOD_OVERRIDE =
                    DiagnosticType.warning(
                        "JSC_INTERFACE_METHOD_OVERRIDE",
                        "property {0} is already defined by the {1} extended interface");
          children: []
          pos: 7526
          length: 204
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNKNOWN_EXPR_TYPE =
                    DiagnosticType.warning("JSC_UNKNOWN_EXPR_TYPE",
                        "could not determine the type of this expression");
          children: []
          pos: 7734
          length: 163
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNRESOLVED_TYPE =
                    DiagnosticType.warning("JSC_UNRESOLVED_TYPE",
                        "could not resolve the name {0} to a type");
          children: []
          pos: 7901
          length: 152
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType WRONG_ARGUMENT_COUNT =
                    DiagnosticType.warning(
                        "JSC_WRONG_ARGUMENT_COUNT",
                        "Function {0}: called with {1} argument(s). " +
                        "Function requires at least {2} argument(s){3}.");
          children: []
          pos: 8057
          length: 237
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ILLEGAL_IMPLICIT_CAST =
                    DiagnosticType.warning(
                        "JSC_ILLEGAL_IMPLICIT_CAST",
                        "Illegal annotation on {0}. @implicitCast may only be used in " +
                        "externs.");
          children: []
          pos: 8298
          length: 219
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INCOMPATIBLE_EXTENDED_PROPERTY_TYPE =
                    DiagnosticType.warning(
                        "JSC_INCOMPATIBLE_EXTENDED_PROPERTY_TYPE",
                        "Interface {0} has a property {1} with incompatible types in " +
                        "its super interfaces {2} and {3}");
          children: []
          pos: 8521
          length: 270
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType EXPECTED_THIS_TYPE =
                    DiagnosticType.warning(
                        "JSC_EXPECTED_THIS_TYPE",
                        "\"{0}\" must be called with a \"this\" type");
          children: []
          pos: 8795
          length: 172
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticGroup ALL_DIAGNOSTICS = new DiagnosticGroup(
                    DETERMINISTIC_TEST,
                    DETERMINISTIC_TEST_NO_RESULT,
                    INEXISTENT_ENUM_ELEMENT,
                    INEXISTENT_PROPERTY,
                    NOT_A_CONSTRUCTOR,
                    BIT_OPERATION,
                    NOT_CALLABLE,
                    CONSTRUCTOR_NOT_CALLABLE,
                    FUNCTION_MASKS_VARIABLE,
                    MULTIPLE_VAR_DEF,
                    ENUM_DUP,
                    ENUM_NOT_CONSTANT,
                    INVALID_INTERFACE_MEMBER_DECLARATION,
                    INTERFACE_FUNCTION_NOT_EMPTY,
                    CONFLICTING_EXTENDED_TYPE,
                    CONFLICTING_IMPLEMENTED_TYPE,
                    BAD_IMPLEMENTED_TYPE,
                    HIDDEN_SUPERCLASS_PROPERTY,
                    HIDDEN_INTERFACE_PROPERTY,
                    HIDDEN_SUPERCLASS_PROPERTY_MISMATCH,
                    UNKNOWN_OVERRIDE,
                    INTERFACE_METHOD_OVERRIDE,
                    UNKNOWN_EXPR_TYPE,
                    UNRESOLVED_TYPE,
                    WRONG_ARGUMENT_COUNT,
                    ILLEGAL_IMPLICIT_CAST,
                    INCOMPATIBLE_EXTENDED_PROPERTY_TYPE,
                    EXPECTED_THIS_TYPE,
                    RhinoErrorReporter.TYPE_PARSE_ERROR,
                    TypedScopeCreator.UNKNOWN_LENDS,
                    TypedScopeCreator.LENDS_ON_NON_OBJECT,
                    TypedScopeCreator.CTOR_INITIALIZER,
                    TypedScopeCreator.IFACE_INITIALIZER,
                    FunctionTypeBuilder.THIS_TYPE_NON_OBJECT);
          children: []
          pos: 8971
          length: 1160
        - type: field_declaration
          fields:
            text: private final AbstractCompiler compiler;
          children: []
          pos: 10135
          length: 40
        - type: field_declaration
          fields:
            text: private final TypeValidator validator;
          children: []
          pos: 10178
          length: 38
        - type: field_declaration
          fields:
            text: private final ReverseAbstractInterpreter reverseInterpreter;
          children: []
          pos: 10220
          length: 60
        - type: field_declaration
          fields:
            text: private final JSTypeRegistry typeRegistry;
          children: []
          pos: 10284
          length: 42
        - type: field_declaration
          fields:
            text: private Scope topScope;
          children: []
          pos: 10329
          length: 23
        - type: field_declaration
          fields:
            text: private ScopeCreator scopeCreator;
          children: []
          pos: 10356
          length: 34
        - type: field_declaration
          fields:
            text: private final CheckLevel reportMissingOverride;
          children: []
          pos: 10394
          length: 47
        - type: field_declaration
          fields:
            text: private final CheckLevel reportUnknownTypes;
          children: []
          pos: 10444
          length: 44
        - type: field_declaration
          fields:
            text: private boolean reportMissingProperties = true;
          children: []
          pos: 10588
          length: 47
        - type: field_declaration
          fields:
            text: private InferJSDocInfo inferJSDocInfo = null;
          children: []
          pos: 10639
          length: 45
        - type: field_declaration
          fields:
            text: private int typedCount = 0;
          children: []
          pos: 10765
          length: 27
        - type: field_declaration
          fields:
            text: private int nullCount = 0;
          children: []
          pos: 10795
          length: 26
        - type: field_declaration
          fields:
            text: private int unknownCount = 0;
          children: []
          pos: 10824
          length: 29
        - type: field_declaration
          fields:
            text: private boolean inExterns;
          children: []
          pos: 10856
          length: 26
        - type: field_declaration
          fields:
            text: private int noTypeCheckSection = 0;
          children: []
          pos: 10973
          length: 35
        - type: constructor_declaration
          fields:
            text: |-
              public TypeCheck(AbstractCompiler compiler,
                    ReverseAbstractInterpreter reverseInterpreter,
                    JSTypeRegistry typeRegistry,
                    Scope topScope,
                    ScopeCreator scopeCreator,
                    CheckLevel reportMissingOverride,
                    CheckLevel reportUnknownTypes) {
                  this.compiler = compiler;
                  this.validator = compiler.getTypeValidator();
                  this.reverseInterpreter = reverseInterpreter;
                  this.typeRegistry = typeRegistry;
                  this.topScope = topScope;
                  this.scopeCreator = scopeCreator;
                  this.reportMissingOverride = reportMissingOverride;
                  this.reportUnknownTypes = reportUnknownTypes;
                  this.inferJSDocInfo = new InferJSDocInfo(compiler);
                }
          children: []
          pos: 11012
          length: 667
        - type: constructor_declaration
          fields:
            text: |-
              public TypeCheck(AbstractCompiler compiler,
                    ReverseAbstractInterpreter reverseInterpreter,
                    JSTypeRegistry typeRegistry,
                    CheckLevel reportMissingOverride,
                    CheckLevel reportUnknownTypes) {
                  this(compiler, reverseInterpreter, typeRegistry, null, null,
                      reportMissingOverride, reportUnknownTypes);
                }
          children: []
          pos: 11683
          length: 331
        - type: constructor_declaration
          fields:
            text: |-
              TypeCheck(AbstractCompiler compiler,
                    ReverseAbstractInterpreter reverseInterpreter,
                    JSTypeRegistry typeRegistry) {
                  this(compiler, reverseInterpreter, typeRegistry, null, null,
                       CheckLevel.WARNING, CheckLevel.OFF);
                }
          children: []
          pos: 12018
          length: 241
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: reportMissingProperties
              children: []
              pos: 12350
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: boolean report
                children: []
                pos: 12374
                length: 14
              pos: 12340
              length: 110
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: reportMissingProperties = report;
                children: []
                pos: 12396
                length: 33
              - type: return_statement
                fields:
                  text: return this;
                children: []
                pos: 12434
                length: 12
              pos: 12390
              length: 60
          children: []
          pos: 12340
          length: 110
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: process
              children: []
              pos: 12715
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node externsRoot
                children: []
                pos: 12723
                length: 16
              pos: 12703
              length: 435
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(scopeCreator);
                children: []
                pos: 12760
                length: 41
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(topScope);
                children: []
                pos: 12806
                length: 37
              - type: local_variable_declaration
                fields:
                  text: Node externsAndJs = jsRoot.getParent();
                children: []
                pos: 12849
                length: 39
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(externsAndJs != null);
                children: []
                pos: 12893
                length: 47
              - type: expression_statement
                fields:
                  text: |-
                    Preconditions.checkState(
                            externsRoot == null || externsAndJs.hasChild(externsRoot));
                children: []
                pos: 12945
                length: 93
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: externsRoot
                            children: []
                            pos: 13048
                            length: 11
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 13063
                            length: 4
                        children: []
                        pos: 13048
                        length: 19
                    children: []
                    pos: 13047
                    length: 21
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: check(externsRoot, true);
                    children: []
                    pos: 13077
                    length: 25
                  pos: 13069
                  length: 39
                pos: 13044
                length: 64
              - type: expression_statement
                fields:
                  text: check(jsRoot, false);
                children: []
                pos: 13113
                length: 21
              pos: 12754
              length: 384
          children: []
          pos: 12703
          length: 435
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: processForTesting
              children: []
              pos: 13213
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node externsRoot
                children: []
                pos: 13231
                length: 16
              pos: 13200
              length: 639
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(scopeCreator == null);
                children: []
                pos: 13268
                length: 47
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(topScope == null);
                children: []
                pos: 13320
                length: 43
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(jsRoot.getParent() != null);
                children: []
                pos: 13369
                length: 53
              - type: local_variable_declaration
                fields:
                  text: Node externsAndJsRoot = jsRoot.getParent();
                children: []
                pos: 13427
                length: 43
              - type: expression_statement
                fields:
                  text: scopeCreator = new MemoizedScopeCreator(new TypedScopeCreator(compiler));
                children: []
                pos: 13476
                length: 73
              - type: expression_statement
                fields:
                  text: topScope = scopeCreator.createScope(externsAndJsRoot, null);
                children: []
                pos: 13554
                length: 60
              - type: local_variable_declaration
                fields:
                  text: |-
                    TypeInferencePass inference = new TypeInferencePass(compiler,
                            reverseInterpreter, topScope, scopeCreator);
                children: []
                pos: 13620
                length: 114
              - type: expression_statement
                fields:
                  text: inference.process(externsRoot, jsRoot);
                children: []
                pos: 13740
                length: 39
              - type: expression_statement
                fields:
                  text: process(externsRoot, jsRoot);
                children: []
                pos: 13784
                length: 29
              - type: return_statement
                fields:
                  text: return topScope;
                children: []
                pos: 13819
                length: 16
              pos: 13262
              length: 577
          children: []
          pos: 13200
          length: 639
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: check
              children: []
              pos: 13856
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node node
                children: []
                pos: 13862
                length: 9
              pos: 13844
              length: 349
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(node);
                children: []
                pos: 13896
                length: 33
              - type: local_variable_declaration
                fields:
                  text: NodeTraversal t = new NodeTraversal(compiler, this, scopeCreator);
                children: []
                pos: 13935
                length: 66
              - type: expression_statement
                fields:
                  text: inExterns = externs;
                children: []
                pos: 14006
                length: 20
              - type: expression_statement
                fields:
                  text: t.traverseWithScope(node, topScope);
                children: []
                pos: 14031
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: externs
                        children: []
                        pos: 14076
                        length: 7
                    children: []
                    pos: 14075
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: inferJSDocInfo.process(node, null);
                    children: []
                    pos: 14093
                    length: 35
                  pos: 14085
                  length: 49
                pos: 14072
                length: 117
              pos: 13890
              length: 303
          children: []
          pos: 13844
          length: 349
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkNoTypeCheckSection
              children: []
              pos: 14211
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 14235
                length: 6
              pos: 14198
              length: 537
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 14279
                        length: 11
                    children: []
                    pos: 14278
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.SCRIPT:
                              case Token.BLOCK:
                              case Token.VAR:
                              case Token.FUNCTION:
                              case Token.ASSIGN:
                                JSDocInfo info = n.getJSDocInfo();
                                if (info != null && info.isNoTypeCheck()) {
                                  if (enterSection) {
                                    noTypeCheckSection++;
                                  } else {
                                    noTypeCheckSection--;
                                  }
                                }
                                validator.setShouldReport(noTypeCheckSection == 0);
                                break;
                            }
                    children: []
                    pos: 14292
                    length: 439
                children: []
                pos: 14271
                length: 460
              pos: 14265
              length: 470
          children: []
          pos: 14198
          length: 537
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: report
              children: []
              pos: 14752
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 14759
                length: 15
              pos: 14739
              length: 195
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: noTypeCheckSection
                            children: []
                            pos: 14852
                            length: 18
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 14874
                            length: 1
                        children: []
                        pos: 14852
                        length: 23
                    children: []
                    pos: 14851
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: t.report(n, diagnosticType, arguments);
                    children: []
                    pos: 14885
                    length: 39
                  pos: 14877
                  length: 53
                pos: 14848
                length: 82
              pos: 14842
              length: 92
          children: []
          pos: 14739
          length: 195
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: shouldTraverse
              children: []
              pos: 14953
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 14975
                length: 15
              pos: 14938
              length: 1243
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: checkNoTypeCheckSection(n, true);
                children: []
                pos: 15019
                length: 33
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 15065
                        length: 11
                    children: []
                    pos: 15064
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.FUNCTION:
                                // normal type checking
                                final TypeCheck outerThis = this;
                                final Scope outerScope = t.getScope();
                                final FunctionType functionType = (FunctionType) n.getJSType();
                                final String functionPrivateName = n.getFirstChild().getString();
                                if (functionPrivateName != null && functionPrivateName.length() > 0 &&
                                    outerScope.isDeclared(functionPrivateName, false) &&
                                    // Ideally, we would want to check whether the type in the scope
                                    // differs from the type being defined, but then the extern
                                    // redeclarations of built-in types generates spurious warnings.
                                    !(outerScope.getVar(
                                        functionPrivateName).getType() instanceof FunctionType)) {
                                  report(t, n, FUNCTION_MASKS_VARIABLE, functionPrivateName);
                                }

                                // TODO(user): Only traverse the function's body. The function's
                                // name and arguments are traversed by the scope creator, and ideally
                                // should not be traversed by the type checker.
                                break;
                            }
                    children: []
                    pos: 15078
                    length: 1082
                children: []
                pos: 15057
                length: 1103
              - type: return_statement
                fields:
                  text: return true;
                children: []
                pos: 16165
                length: 12
              pos: 15013
              length: 1168
          children: []
          pos: 14938
          length: 1243
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visit
              children: []
              pos: 16642
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 16648
                length: 15
              pos: 16630
              length: 10298
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType childType;
                children: []
                pos: 16692
                length: 17
              - type: local_variable_declaration
                fields:
                  text: JSType leftType, rightType;
                children: []
                pos: 16714
                length: 27
              - type: local_variable_declaration
                fields:
                  text: Node left, right;
                children: []
                pos: 16746
                length: 17
              - type: local_variable_declaration
                fields:
                  text: boolean typeable = true;
                children: []
                pos: 16834
                length: 24
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 16872
                        length: 11
                    children: []
                    pos: 16871
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.NAME:
                                typeable = visitName(t, n, parent);
                                break;

                              case Token.LP:
                                // If this is under a FUNCTION node, it is a parameter list and can be
                                // ignored here.
                                if (parent.getType() != Token.FUNCTION) {
                                  ensureTyped(t, n, getJSType(n.getFirstChild()));
                                } else {
                                  typeable = false;
                                }
                                break;

                              case Token.COMMA:
                                ensureTyped(t, n, getJSType(n.getLastChild()));
                                break;

                              case Token.TRUE:
                              case Token.FALSE:
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.THIS:
                                ensureTyped(t, n, t.getScope().getTypeOfThis());
                                break;

                              case Token.REF_SPECIAL:
                                ensureTyped(t, n);
                                break;

                              case Token.GET_REF:
                                ensureTyped(t, n, getJSType(n.getFirstChild()));
                                break;

                              case Token.NULL:
                                ensureTyped(t, n, NULL_TYPE);
                                break;

                              case Token.NUMBER:
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.STRING:
                                // Object literal keys are handled with OBJECTLIT
                                if (!NodeUtil.isObjectLitKey(n, n.getParent())) {
                                  ensureTyped(t, n, STRING_TYPE);
                                }
                                break;

                              case Token.GET:
                              case Token.SET:
                                // Object literal keys are handled with OBJECTLIT
                                break;

                              case Token.ARRAYLIT:
                                ensureTyped(t, n, ARRAY_TYPE);
                                break;

                              case Token.REGEXP:
                                ensureTyped(t, n, REGEXP_TYPE);
                                break;

                              case Token.GETPROP:
                                visitGetProp(t, n, parent);
                                typeable = !(parent.getType() == Token.ASSIGN &&
                                             parent.getFirstChild() == n);
                                break;

                              case Token.GETELEM:
                                visitGetElem(t, n);
                                // The type of GETELEM is always unknown, so no point counting that.
                                // If that unknown leaks elsewhere (say by an assignment to another
                                // variable), then it will be counted.
                                typeable = false;
                                break;

                              case Token.VAR:
                                visitVar(t, n);
                                typeable = false;
                                break;

                              case Token.NEW:
                                visitNew(t, n);
                                typeable = true;
                                break;

                              case Token.CALL:
                                visitCall(t, n);
                                typeable = !NodeUtil.isExpressionNode(parent);
                                break;

                              case Token.RETURN:
                                visitReturn(t, n);
                                typeable = false;
                                break;

                              case Token.DEC:
                              case Token.INC:
                                left = n.getFirstChild();
                                validator.expectNumber(
                                    t, left, getJSType(left), "increment/decrement");
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.NOT:
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.VOID:
                                ensureTyped(t, n, VOID_TYPE);
                                break;

                              case Token.TYPEOF:
                                ensureTyped(t, n, STRING_TYPE);
                                break;

                              case Token.BITNOT:
                                childType = getJSType(n.getFirstChild());
                                if (!childType.matchesInt32Context()) {
                                  report(t, n, BIT_OPERATION, NodeUtil.opToStr(n.getType()),
                                      childType.toString());
                                }
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.POS:
                              case Token.NEG:
                                left = n.getFirstChild();
                                validator.expectNumber(t, left, getJSType(left), "sign operator");
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.EQ:
                              case Token.NE: {
                                leftType = getJSType(n.getFirstChild());
                                rightType = getJSType(n.getLastChild());

                                JSType leftTypeRestricted = leftType.restrictByNotNullOrUndefined();
                                JSType rightTypeRestricted = rightType.restrictByNotNullOrUndefined();
                                TernaryValue result =
                                    leftTypeRestricted.testForEquality(rightTypeRestricted);
                                if (result != TernaryValue.UNKNOWN) {
                                  if (n.getType() == Token.NE) {
                                    result = result.not();
                                  }
                                  report(t, n, DETERMINISTIC_TEST, leftType.toString(),
                                      rightType.toString(), result.toString());
                                }
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;
                              }

                              case Token.SHEQ:
                              case Token.SHNE: {
                                leftType = getJSType(n.getFirstChild());
                                rightType = getJSType(n.getLastChild());

                                JSType leftTypeRestricted = leftType.restrictByNotNullOrUndefined();
                                JSType rightTypeRestricted = rightType.restrictByNotNullOrUndefined();
                                if (!leftTypeRestricted.canTestForShallowEqualityWith(
                                        rightTypeRestricted)) {
                                  report(t, n, DETERMINISTIC_TEST_NO_RESULT, leftType.toString(),
                                      rightType.toString());
                                }
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;
                              }

                              case Token.LT:
                              case Token.LE:
                              case Token.GT:
                              case Token.GE:
                                leftType = getJSType(n.getFirstChild());
                                rightType = getJSType(n.getLastChild());
                                if (rightType.isNumber()) {
                                  validator.expectNumber(
                                      t, n, leftType, "left side of numeric comparison");
                                } else if (leftType.isNumber()) {
                                  validator.expectNumber(
                                      t, n, rightType, "right side of numeric comparison");
                                } else if (leftType.matchesNumberContext() &&
                                           rightType.matchesNumberContext()) {
                                  // OK.
                                } else {
                                  // Whether the comparison is numeric will be determined at runtime
                                  // each time the expression is evaluated. Regardless, both operands
                                  // should match a string context.
                                  String message = "left side of comparison";
                                  validator.expectString(t, n, leftType, message);
                                  validator.expectNotNullOrUndefined(
                                      t, n, leftType, message, getNativeType(STRING_TYPE));
                                  message = "right side of comparison";
                                  validator.expectString(t, n, rightType, message);
                                  validator.expectNotNullOrUndefined(
                                      t, n, rightType, message, getNativeType(STRING_TYPE));
                                }
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.IN:
                                left = n.getFirstChild();
                                right = n.getLastChild();
                                leftType = getJSType(left);
                                rightType = getJSType(right);
                                validator.expectObject(t, n, rightType, "'in' requires an object");
                                validator.expectString(t, left, leftType, "left side of 'in'");
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.INSTANCEOF:
                                left = n.getFirstChild();
                                right = n.getLastChild();
                                leftType = getJSType(left);
                                rightType = getJSType(right).restrictByNotNullOrUndefined();

                                validator.expectAnyObject(
                                    t, left, leftType, "deterministic instanceof yields false");
                                validator.expectActualObject(
                                    t, right, rightType, "instanceof requires an object");
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.ASSIGN:
                                visitAssign(t, n);
                                typeable = false;
                                break;

                              case Token.ASSIGN_LSH:
                              case Token.ASSIGN_RSH:
                              case Token.ASSIGN_URSH:
                              case Token.ASSIGN_DIV:
                              case Token.ASSIGN_MOD:
                              case Token.ASSIGN_BITOR:
                              case Token.ASSIGN_BITXOR:
                              case Token.ASSIGN_BITAND:
                              case Token.ASSIGN_SUB:
                              case Token.ASSIGN_ADD:
                              case Token.ASSIGN_MUL:
                              case Token.LSH:
                              case Token.RSH:
                              case Token.URSH:
                              case Token.DIV:
                              case Token.MOD:
                              case Token.BITOR:
                              case Token.BITXOR:
                              case Token.BITAND:
                              case Token.SUB:
                              case Token.ADD:
                              case Token.MUL:
                                visitBinaryOperator(n.getType(), t, n);
                                break;

                              case Token.DELPROP:
                                if (!isReference(n.getFirstChild())) {
                                  report(t, n, BAD_DELETE);
                                }
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.CASE:
                                JSType switchType = getJSType(parent.getFirstChild());
                                JSType caseType = getJSType(n.getFirstChild());
                                validator.expectSwitchMatchesCase(t, n, switchType, caseType);
                                typeable = false;
                                break;

                              case Token.WITH: {
                                Node child = n.getFirstChild();
                                childType = getJSType(child);
                                validator.expectObject(
                                    t, child, childType, "with requires an object");
                                typeable = false;
                                break;
                              }

                              case Token.FUNCTION:
                                visitFunction(t, n);
                                break;

                              // These nodes have no interesting type behavior.
                              case Token.LABEL:
                              case Token.LABEL_NAME:
                              case Token.SWITCH:
                              case Token.BREAK:
                              case Token.CATCH:
                              case Token.TRY:
                              case Token.SCRIPT:
                              case Token.EXPR_RESULT:
                              case Token.BLOCK:
                              case Token.EMPTY:
                              case Token.DEFAULT:
                              case Token.CONTINUE:
                              case Token.DEBUGGER:
                              case Token.THROW:
                                typeable = false;
                                break;

                              // These nodes require data flow analysis.
                              case Token.DO:
                              case Token.FOR:
                              case Token.IF:
                              case Token.WHILE:
                                typeable = false;
                                break;

                              // These nodes are typed during the type inference.
                              case Token.AND:
                              case Token.HOOK:
                              case Token.OBJECTLIT:
                              case Token.OR:
                                if (n.getJSType() != null) { // If we didn't run type inference.
                                  ensureTyped(t, n);
                                } else {
                                  // If this is an enum, then give that type to the objectlit as well.
                                  if ((n.getType() == Token.OBJECTLIT)
                                      && (parent.getJSType() instanceof EnumType)) {
                                    ensureTyped(t, n, parent.getJSType());
                                  } else {
                                    ensureTyped(t, n);
                                  }
                                }
                                if (n.getType() == Token.OBJECTLIT) {
                                  for (Node key : n.children()) {
                                    visitObjLitKey(t, key, n);
                                  }
                                }
                                break;

                              default:
                                report(t, n, UNEXPECTED_TOKEN, Token.name(n.getType()));
                                ensureTyped(t, n);
                                break;
                            }
                    children: []
                    pos: 16885
                    length: 9817
                children: []
                pos: 16864
                length: 9838
              - type: expression_statement
                fields:
                  text: typeable = typeable && !inExterns;
                children: []
                pos: 26785
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: typeable
                        children: []
                        pos: 26829
                        length: 8
                    children: []
                    pos: 26828
                    length: 10
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: doPercentTypedAccounting(t, n);
                    children: []
                    pos: 26847
                    length: 31
                  pos: 26839
                  length: 45
                pos: 26825
                length: 59
              - type: expression_statement
                fields:
                  text: checkNoTypeCheckSection(n, false);
                children: []
                pos: 26890
                length: 34
              pos: 16686
              length: 10242
          children: []
          pos: 16630
          length: 10298
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: doPercentTypedAccounting
              children: []
              pos: 27051
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 27076
                length: 15
              pos: 27038
              length: 384
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 27107
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: type
                            children: []
                            pos: 27144
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 27152
                            length: 4
                        children: []
                        pos: 27144
                        length: 12
                    children: []
                    pos: 27143
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: nullCount++;
                    children: []
                    pos: 27166
                    length: 12
                  pos: 27158
                  length: 26
                pos: 27140
                length: 278
              pos: 27101
              length: 321
          children: []
          pos: 27038
          length: 384
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitAssign
              children: []
              pos: 27774
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 27786
                length: 15
              pos: 27761
              length: 3765
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSDocInfo info = assign.getJSDocInfo();
                children: []
                pos: 27822
                length: 39
              - type: local_variable_declaration
                fields:
                  text: Node lvalue = assign.getFirstChild();
                children: []
                pos: 27866
                length: 37
              - type: local_variable_declaration
                fields:
                  text: Node rvalue = assign.getLastChild();
                children: []
                pos: 27908
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: lvalue.getType()
                            children: []
                            pos: 27954
                            length: 16
                          right:
                            type: field_access
                            fields:
                              text: Token.GETPROP
                            children: []
                            pos: 27974
                            length: 13
                        children: []
                        pos: 27954
                        length: 33
                    children: []
                    pos: 27953
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Node object = lvalue.getFirstChild();
                    children: []
                    pos: 27997
                    length: 37
                  - type: local_variable_declaration
                    fields:
                      text: JSType objectJsType = getJSType(object);
                    children: []
                    pos: 28041
                    length: 40
                  - type: local_variable_declaration
                    fields:
                      text: String property = lvalue.getLastChild().getString();
                    children: []
                    pos: 28088
                    length: 52
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: object.getType()
                                children: []
                                pos: 28272
                                length: 16
                              right:
                                type: field_access
                                fields:
                                  text: Token.GETPROP
                                children: []
                                pos: 28292
                                length: 13
                            children: []
                            pos: 28272
                            length: 33
                        children: []
                        pos: 28271
                        length: 35
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType jsType = getJSType(object.getFirstChild());
                        children: []
                        pos: 28317
                        length: 50
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: jsType.isInterface()
                                    children: []
                                    pos: 28380
                                    length: 20
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: object.getLastChild().getString().equals("prototype")
                                    children: []
                                    pos: 28416
                                    length: 53
                                children: []
                                pos: 28380
                                length: 89
                            children: []
                            pos: 28379
                            length: 91
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: visitInterfaceGetprop(t, assign, object, property,
                                lvalue, rvalue);
                            children: []
                            pos: 28483
                            length: 67
                          pos: 28471
                          length: 89
                        pos: 28376
                        length: 184
                      pos: 28307
                      length: 261
                    pos: 28268
                    length: 300
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: info
                                    children: []
                                    pos: 28624
                                    length: 4
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 28632
                                    length: 4
                                children: []
                                pos: 28624
                                length: 12
                              right:
                                type: method_invocation
                                fields:
                                  text: info.hasType()
                                children: []
                                pos: 28640
                                length: 14
                            children: []
                            pos: 28624
                            length: 30
                        children: []
                        pos: 28623
                        length: 32
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            visitAnnotatedAssignGetprop(t, assign,
                                        info.getType().evaluate(t.getScope(), typeRegistry), object,
                                        property, rvalue);
                        children: []
                        pos: 28666
                        length: 142
                      - type: return_statement
                        fields:
                          text: return;
                        children: []
                        pos: 28817
                        length: 7
                      pos: 28656
                      length: 176
                    pos: 28620
                    length: 212
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: info
                                    children: []
                                    pos: 28888
                                    length: 4
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 28896
                                    length: 4
                                children: []
                                pos: 28888
                                length: 12
                              right:
                                type: method_invocation
                                fields:
                                  text: info.hasEnumParameterType()
                                children: []
                                pos: 28904
                                length: 27
                            children: []
                            pos: 28888
                            length: 43
                        children: []
                        pos: 28887
                        length: 45
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            checkEnumInitializer(
                                        t, rvalue, info.getEnumParameterType().evaluate(
                                            t.getScope(), typeRegistry));
                        children: []
                        pos: 28943
                        length: 128
                      - type: return_statement
                        fields:
                          text: return;
                        children: []
                        pos: 29080
                        length: 7
                      pos: 28933
                      length: 162
                    pos: 28884
                    length: 211
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: property.equals("prototype")
                            children: []
                            pos: 29140
                            length: 28
                        children: []
                        pos: 29139
                        length: 30
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: instanceof_expression
                                fields:
                                  text: objectJsType instanceof FunctionType
                                children: []
                                pos: 29184
                                length: 36
                            children: []
                            pos: 29183
                            length: 38
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: local_variable_declaration
                            fields:
                              text: FunctionType functionType = (FunctionType) objectJsType;
                            children: []
                            pos: 29234
                            length: 56
                          - type: if_statement
                            fields:
                              condition:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: method_invocation
                                    fields:
                                      text: functionType.isConstructor()
                                    children: []
                                    pos: 29305
                                    length: 28
                                children: []
                                pos: 29304
                                length: 30
                            children:
                            - type: block
                              fields: {}
                              children:
                              - type: local_variable_declaration
                                fields:
                                  text: JSType rvalueType = rvalue.getJSType();
                                children: []
                                pos: 29349
                                length: 39
                              - type: expression_statement
                                fields:
                                  text: |-
                                    validator.expectObject(t, rvalue, rvalueType,
                                                    OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
                                children: []
                                pos: 29401
                                length: 100
                              pos: 29335
                              length: 178
                            pos: 29301
                            length: 212
                          pos: 29222
                          length: 301
                        pos: 29180
                        length: 409
                      - type: return_statement
                        fields:
                          text: return;
                        children: []
                        pos: 29598
                        length: 7
                      pos: 29170
                      length: 443
                    pos: 29136
                    length: 477
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: object.getType()
                                children: []
                                pos: 29667
                                length: 16
                              right:
                                type: field_access
                                fields:
                                  text: Token.GETPROP
                                children: []
                                pos: 29687
                                length: 13
                            children: []
                            pos: 29667
                            length: 33
                        children: []
                        pos: 29666
                        length: 35
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: Node object2 = object.getFirstChild();
                        children: []
                        pos: 29712
                        length: 38
                      - type: local_variable_declaration
                        fields:
                          text: String property2 = NodeUtil.getStringValue(object.getLastChild());
                        children: []
                        pos: 29759
                        length: 66
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: method_invocation
                                fields:
                                  text: '"prototype".equals(property2)'
                                children: []
                                pos: 29839
                                length: 29
                            children: []
                            pos: 29838
                            length: 31
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: local_variable_declaration
                            fields:
                              text: JSType jsType = object2.getJSType();
                            children: []
                            pos: 29882
                            length: 36
                          - type: if_statement
                            fields:
                              condition:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: instanceof_expression
                                    fields:
                                      text: jsType instanceof FunctionType
                                    children: []
                                    pos: 29933
                                    length: 30
                                children: []
                                pos: 29932
                                length: 32
                            children:
                            - type: block
                              fields: {}
                              children:
                              - type: local_variable_declaration
                                fields:
                                  text: FunctionType functionType = (FunctionType)
                                    jsType;
                                children: []
                                pos: 29979
                                length: 50
                              - type: if_statement
                                fields:
                                  condition:
                                    type: parenthesized_expression
                                    fields:
                                      expression:
                                        type: or
                                        fields:
                                          left:
                                            type: method_invocation
                                            fields:
                                              text: functionType.isConstructor()
                                            children: []
                                            pos: 30046
                                            length: 28
                                          right:
                                            type: method_invocation
                                            fields:
                                              text: functionType.isInterface()
                                            children: []
                                            pos: 30078
                                            length: 26
                                        children: []
                                        pos: 30046
                                        length: 58
                                    children: []
                                    pos: 30045
                                    length: 60
                                children:
                                - type: block
                                  fields: {}
                                  children:
                                  - type: expression_statement
                                    fields:
                                      text: |-
                                        checkDeclaredPropertyInheritance(
                                                          t, assign, functionType, property, info, getJSType(rvalue));
                                    children: []
                                    pos: 30122
                                    length: 112
                                  pos: 30106
                                  length: 142
                                pos: 30042
                                length: 206
                              pos: 29965
                              length: 295
                            pos: 29929
                            length: 401
                          - type: return_statement
                            fields:
                              text: return;
                            children: []
                            pos: 30341
                            length: 7
                          pos: 29870
                          length: 488
                        pos: 29835
                        length: 523
                      pos: 29702
                      length: 664
                    pos: 29663
                    length: 703
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        ObjectType type = ObjectType.cast(
                                  objectJsType.restrictByNotNullOrUndefined());
                    children: []
                    pos: 30406
                    length: 90
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 30507
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 30515
                                length: 4
                            children: []
                            pos: 30507
                            length: 12
                        children: []
                        pos: 30506
                        length: 14
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: and
                                    fields:
                                      left:
                                        type: method_invocation
                                        fields:
                                          text: type.hasProperty(property)
                                        children: []
                                        pos: 30535
                                        length: 26
                                      right:
                                        type: unary_expression
                                        fields:
                                          text: "!type.isPropertyTypeInferred(property)"
                                        children: []
                                        pos: 30577
                                        length: 38
                                    children: []
                                    pos: 30535
                                    length: 80
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: "!propertyIsImplicitCast(type, property)"
                                    children: []
                                    pos: 30631
                                    length: 39
                                children: []
                                pos: 30535
                                length: 135
                            children: []
                            pos: 30534
                            length: 137
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: |-
                                validator.expectCanAssignToPropertyOf(
                                              t, assign, getJSType(rvalue),
                                              type.getPropertyType(property), object, property);
                            children: []
                            pos: 30684
                            length: 147
                          pos: 30672
                          length: 169
                        pos: 30531
                        length: 310
                      - type: return_statement
                        fields:
                          text: return;
                        children: []
                        pos: 30850
                        length: 7
                      pos: 30521
                      length: 344
                    pos: 30503
                    length: 362
                  pos: 27989
                  length: 2882
                pos: 27950
                length: 3226
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = getJSType(lvalue);
                children: []
                pos: 31207
                length: 36
              - type: local_variable_declaration
                fields:
                  text: Node rightChild = assign.getLastChild();
                children: []
                pos: 31248
                length: 40
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = getJSType(rightChild);
                children: []
                pos: 31293
                length: 41
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: |-
                            validator.expectCanAssignTo(
                                        t, assign, rightType, leftType, "assignment")
                        children: []
                        pos: 31343
                        length: 86
                    children: []
                    pos: 31342
                    length: 88
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, assign, rightType);
                    children: []
                    pos: 31439
                    length: 34
                  pos: 31431
                  length: 48
                pos: 31339
                length: 183
              pos: 27816
              length: 3710
          children: []
          pos: 27761
          length: 3765
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitObjLitKey
              children: []
              pos: 31824
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 31839
                length: 15
              pos: 31811
              length: 1693
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node rvalue = key.getFirstChild();
                children: []
                pos: 32112
                length: 34
              - type: local_variable_declaration
                fields:
                  text: |-
                    JSType rightType = NodeUtil.getObjectLitKeyTypeFromValueType(
                            key, getJSType(rvalue));
                children: []
                pos: 32151
                length: 94
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: rightType
                            children: []
                            pos: 32254
                            length: 9
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 32267
                            length: 4
                        children: []
                        pos: 32254
                        length: 17
                    children: []
                    pos: 32253
                    length: 19
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: rightType = getNativeType(UNKNOWN_TYPE);
                    children: []
                    pos: 32281
                    length: 40
                  pos: 32273
                  length: 54
                pos: 32250
                length: 77
              - type: local_variable_declaration
                fields:
                  text: Node owner = objlit;
                children: []
                pos: 32333
                length: 20
              - type: local_variable_declaration
                fields:
                  text: JSType keyType = getJSType(key);
                children: []
                pos: 32413
                length: 32
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean valid = validator.expectCanAssignToPropertyOf(t, key,
                            rightType, keyType,
                            owner, NodeUtil.getObjectLitKeyName(key));
                children: []
                pos: 32450
                length: 140
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: valid
                        children: []
                        pos: 32599
                        length: 5
                    children: []
                    pos: 32598
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, key, rightType);
                    children: []
                    pos: 32614
                    length: 31
                  pos: 32606
                  length: 45
                pos: 32595
                length: 96
              - type: local_variable_declaration
                fields:
                  text: JSType objlitType = getJSType(objlit);
                children: []
                pos: 32977
                length: 38
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType type = ObjectType.cast(
                            objlitType.restrictByNotNullOrUndefined());
                children: []
                pos: 33020
                length: 86
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: type
                            children: []
                            pos: 33115
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 33123
                            length: 4
                        children: []
                        pos: 33115
                        length: 12
                    children: []
                    pos: 33114
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: String property = NodeUtil.getObjectLitKeyName(key);
                    children: []
                    pos: 33137
                    length: 52
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: type.hasProperty(property)
                                    children: []
                                    pos: 33200
                                    length: 26
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: "!type.isPropertyTypeInferred(property)"
                                    children: []
                                    pos: 33240
                                    length: 38
                                children: []
                                pos: 33200
                                length: 78
                              right:
                                type: unary_expression
                                fields:
                                  text: "!propertyIsImplicitCast(type, property)"
                                children: []
                                pos: 33292
                                length: 39
                            children: []
                            pos: 33200
                            length: 131
                        children: []
                        pos: 33199
                        length: 133
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            validator.expectCanAssignToPropertyOf(
                                        t, key, keyType,
                                        type.getPropertyType(property), owner, property);
                        children: []
                        pos: 33343
                        length: 129
                      pos: 33333
                      length: 147
                    pos: 33196
                    length: 284
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 33487
                    length: 7
                  pos: 33129
                  length: 371
                pos: 33111
                length: 389
              pos: 31879
              length: 1625
          children: []
          pos: 31811
          length: 1693
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: propertyIsImplicitCast
              children: []
              pos: 33638
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: ObjectType type
                children: []
                pos: 33661
                length: 15
              pos: 33622
              length: 309
            body:
              type: block
              fields: {}
              children:
              - type: for_statement
                fields:
                  text: |-
                    for (; type != null; type = type.getImplicitPrototype()) {
                          JSDocInfo docInfo = type.getOwnPropertyJSDocInfo(prop);
                          if (docInfo != null && docInfo.isImplicitCast()) {
                            return true;
                          }
                        }
                children: []
                pos: 33697
                length: 212
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 33914
                length: 13
              pos: 33691
              length: 240
          children: []
          pos: 33622
          length: 309
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkDeclaredPropertyInheritance
              children: []
              pos: 34200
              length: 32
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 34240
                length: 15
              pos: 34187
              length: 4272
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: hasUnknownOrEmptySupertype(ctorType)
                        children: []
                        pos: 34453
                        length: 36
                    children: []
                    pos: 34452
                    length: 38
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 34499
                    length: 7
                  pos: 34491
                  length: 21
                pos: 34449
                length: 63
              - type: local_variable_declaration
                fields:
                  text: FunctionType superClass = ctorType.getSuperClassConstructor();
                children: []
                pos: 34518
                length: 62
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean superClassHasProperty = superClass != null &&
                            superClass.getPrototype().hasProperty(propertyName);
                children: []
                pos: 34585
                length: 114
              - type: local_variable_declaration
                fields:
                  text: boolean superInterfacesHasProperty = false;
                children: []
                pos: 34725
                length: 43
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: ctorType.isInterface()
                        children: []
                        pos: 34777
                        length: 22
                    children: []
                    pos: 34776
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: enhanced_for_statement
                    fields:
                      text: |-
                        for (ObjectType interfaceType : ctorType.getExtendedInterfaces()) {
                                superInterfacesHasProperty =
                                  superInterfacesHasProperty || interfaceType.hasProperty(propertyName);
                              }
                    children: []
                    pos: 34809
                    length: 193
                  pos: 34801
                  length: 207
                pos: 34773
                length: 235
              - type: local_variable_declaration
                fields:
                  text: boolean declaredOverride = info != null && info.isOverride();
                children: []
                pos: 35013
                length: 61
              - type: local_variable_declaration
                fields:
                  text: boolean foundInterfaceProperty = false;
                children: []
                pos: 35080
                length: 39
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: ctorType.isConstructor()
                        children: []
                        pos: 35128
                        length: 24
                    children: []
                    pos: 35127
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: enhanced_for_statement
                    fields:
                      text: |-
                        for (JSType implementedInterface :
                                  ctorType.getAllImplementedInterfaces()) {
                                if (implementedInterface.isUnknownType() ||
                                    implementedInterface.isEmptyType()) {
                                  continue;
                                }
                                FunctionType interfaceType =
                                    implementedInterface.toObjectType().getConstructor();
                                Preconditions.checkNotNull(interfaceType);
                                boolean interfaceHasProperty =
                                    interfaceType.getPrototype().hasProperty(propertyName);
                                foundInterfaceProperty = foundInterfaceProperty || interfaceHasProperty;
                                if (reportMissingOverride.isOn() && !declaredOverride &&
                                    interfaceHasProperty) {
                                  // @override not present, but the property does override an interface
                                  // property
                                  compiler.report(t.makeError(n, reportMissingOverride,
                                      HIDDEN_INTERFACE_PROPERTY, propertyName,
                                      interfaceType.getTopMostDefiningType(propertyName).toString()));
                                }
                              }
                    children: []
                    pos: 35162
                    length: 979
                  pos: 35154
                  length: 993
                pos: 35124
                length: 1023
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: and
                            fields:
                              left:
                                type: unary_expression
                                fields:
                                  text: "!declaredOverride"
                                children: []
                                pos: 36157
                                length: 17
                              right:
                                type: unary_expression
                                fields:
                                  text: "!superClassHasProperty"
                                children: []
                                pos: 36178
                                length: 22
                            children: []
                            pos: 36157
                            length: 43
                          right:
                            type: unary_expression
                            fields:
                              text: "!superInterfacesHasProperty"
                            children: []
                            pos: 36212
                            length: 27
                        children: []
                        pos: 36157
                        length: 82
                    children: []
                    pos: 36156
                    length: 84
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 36309
                    length: 7
                  pos: 36241
                  length: 81
                pos: 36153
                length: 169
              - type: local_variable_declaration
                fields:
                  text: |-
                    JSType topInstanceType = superClassHasProperty ?
                            superClass.getTopMostDefiningType(propertyName) : null;
                children: []
                pos: 36328
                length: 112
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: reportMissingOverride.isOn()
                                    children: []
                                    pos: 36449
                                    length: 28
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: ctorType.isConstructor()
                                    children: []
                                    pos: 36481
                                    length: 24
                                children: []
                                pos: 36449
                                length: 56
                              right:
                                type: unary_expression
                                fields:
                                  text: "!declaredOverride"
                                children: []
                                pos: 36517
                                length: 17
                            children: []
                            pos: 36449
                            length: 85
                          right:
                            type: identifier
                            fields:
                              text: superClassHasProperty
                            children: []
                            pos: 36538
                            length: 21
                        children: []
                        pos: 36449
                        length: 110
                    children: []
                    pos: 36448
                    length: 112
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        compiler.report(t.makeError(n, reportMissingOverride,
                                  HIDDEN_SUPERCLASS_PROPERTY, propertyName,
                                  topInstanceType.toString()));
                    children: []
                    pos: 36663
                    length: 145
                  pos: 36561
                  length: 253
                pos: 36445
                length: 369
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!declaredOverride"
                        children: []
                        pos: 36823
                        length: 17
                    children: []
                    pos: 36822
                    length: 19
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 36889
                    length: 7
                  pos: 36842
                  length: 60
                pos: 36819
                length: 83
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: superClassHasProperty
                        children: []
                        pos: 36974
                        length: 21
                    children: []
                    pos: 36973
                    length: 23
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        JSType superClassPropType =
                                  superClass.getPrototype().getPropertyType(propertyName);
                    children: []
                    pos: 37051
                    length: 94
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: unary_expression
                            fields:
                              text: "!propertyType.canAssignTo(superClassPropType)"
                            children: []
                            pos: 37156
                            length: 45
                        children: []
                        pos: 37155
                        length: 47
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            compiler.report(
                                        t.makeError(n, HIDDEN_SUPERCLASS_PROPERTY_MISMATCH,
                                            propertyName, topInstanceType.toString(),
                                            superClassPropType.toString(), propertyType.toString()));
                        children: []
                        pos: 37213
                        length: 212
                      pos: 37203
                      length: 230
                    pos: 37152
                    length: 281
                  pos: 36997
                  length: 442
                pos: 36970
                length: 1485
              pos: 34352
              length: 4107
          children: []
          pos: 34187
          length: 4272
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: hasUnknownOrEmptySupertype
              children: []
              pos: 38620
              length: 26
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FunctionType ctor
                children: []
                pos: 38647
                length: 17
              pos: 38597
              length: 815
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkArgument(ctor.isConstructor() || ctor.isInterface());
                children: []
                pos: 38672
                length: 72
              - type: expression_statement
                fields:
                  text: Preconditions.checkArgument(!ctor.isUnknownType());
                children: []
                pos: 38749
                length: 51
              - type: while_statement
                fields:
                  text: |-
                    while (true) {
                          ObjectType maybeSuperInstanceType =
                              ctor.getPrototype().getImplicitPrototype();
                          if (maybeSuperInstanceType == null) {
                            return false;
                          }
                          if (maybeSuperInstanceType.isUnknownType() ||
                              maybeSuperInstanceType.isEmptyType()) {
                            return true;
                          }
                          ctor = maybeSuperInstanceType.getConstructor();
                          if (ctor == null) {
                            return false;
                          }
                          Preconditions.checkState(ctor.isConstructor() || ctor.isInterface());
                        }
                children: []
                pos: 38901
                length: 507
              pos: 38666
              length: 746
          children: []
          pos: 38597
          length: 815
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitInterfaceGetprop
              children: []
              pos: 39550
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 39572
                length: 15
              pos: 39537
              length: 1206
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType rvalueType = getJSType(rvalue);
                children: []
                pos: 39671
                length: 38
              - type: local_variable_declaration
                fields:
                  text: |-
                    String abstractMethodName =
                            compiler.getCodingConvention().getAbstractMethodName();
                children: []
                pos: 39908
                length: 91
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: unary_expression
                            fields:
                              text: "!rvalueType.isOrdinaryFunction()"
                            children: []
                            pos: 40008
                            length: 32
                          right:
                            type: unary_expression
                            fields:
                              text: |-
                                !(rvalue.isQualifiedName() &&
                                          rvalue.getQualifiedName().equals(abstractMethodName))
                            children: []
                            pos: 40052
                            length: 93
                        children: []
                        pos: 40008
                        length: 137
                    children: []
                    pos: 40007
                    length: 139
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        String abstractMethodMessage = (abstractMethodName != null)
                                 ? ", or " + abstractMethodName
                                 : "";
                    children: []
                    pos: 40230
                    length: 114
                  - type: expression_statement
                    fields:
                      text: |-
                        compiler.report(
                                  t.makeError(object, INVALID_INTERFACE_MEMBER_DECLARATION,
                                      abstractMethodMessage));
                    children: []
                    pos: 40351
                    length: 123
                  pos: 40147
                  length: 333
                pos: 40004
                length: 476
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: assign.getLastChild().getType()
                                children: []
                                pos: 40490
                                length: 31
                              right:
                                type: field_access
                                fields:
                                  text: Token.FUNCTION
                                children: []
                                pos: 40525
                                length: 14
                            children: []
                            pos: 40490
                            length: 49
                          right:
                            type: unary_expression
                            fields:
                              text: "!NodeUtil.isEmptyBlock(assign.getLastChild().getLastChild())"
                            children: []
                            pos: 40551
                            length: 60
                        children: []
                        pos: 40490
                        length: 121
                    children: []
                    pos: 40489
                    length: 123
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        compiler.report(
                                  t.makeError(object, INTERFACE_FUNCTION_NOT_EMPTY,
                                      abstractMethodName));
                    children: []
                    pos: 40621
                    length: 112
                  pos: 40613
                  length: 126
                pos: 40486
                length: 253
              pos: 39664
              length: 1079
          children: []
          pos: 39537
          length: 1206
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitAnnotatedAssignGetprop
              children: []
              pos: 40912
              length: 27
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 40940
                length: 15
              pos: 40899
              length: 297
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    validator.expectCanAssignToPropertyOf(t, assign, getJSType(rvalue), type,
                            object, property);
                children: []
                pos: 41092
                length: 100
              pos: 41032
              length: 164
          children: []
          pos: 40899
          length: 297
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitName
              children: []
              pos: 41525
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 41535
                length: 15
              pos: 41517
              length: 1088
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int parentNodeType = parent.getType();
                children: []
                pos: 42031
                length: 38
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: or
                                fields:
                                  left:
                                    type: equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: parentNodeType
                                        children: []
                                        pos: 42078
                                        length: 14
                                      right:
                                        type: field_access
                                        fields:
                                          text: Token.FUNCTION
                                        children: []
                                        pos: 42096
                                        length: 14
                                    children: []
                                    pos: 42078
                                    length: 32
                                  right:
                                    type: equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: parentNodeType
                                        children: []
                                        pos: 42122
                                        length: 14
                                      right:
                                        type: field_access
                                        fields:
                                          text: Token.CATCH
                                        children: []
                                        pos: 42140
                                        length: 11
                                    children: []
                                    pos: 42122
                                    length: 29
                                children: []
                                pos: 42078
                                length: 73
                              right:
                                type: equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: parentNodeType
                                    children: []
                                    pos: 42163
                                    length: 14
                                  right:
                                    type: field_access
                                    fields:
                                      text: Token.LP
                                    children: []
                                    pos: 42181
                                    length: 8
                                children: []
                                pos: 42163
                                length: 26
                            children: []
                            pos: 42078
                            length: 111
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: parentNodeType
                                children: []
                                pos: 42201
                                length: 14
                              right:
                                type: field_access
                                fields:
                                  text: Token.VAR
                                children: []
                                pos: 42219
                                length: 9
                            children: []
                            pos: 42201
                            length: 27
                        children: []
                        pos: 42078
                        length: 150
                    children: []
                    pos: 42077
                    length: 152
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return false;
                    children: []
                    pos: 42238
                    length: 13
                  pos: 42230
                  length: 27
                pos: 42074
                length: 183
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 42263
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: type
                            children: []
                            pos: 42300
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 42308
                            length: 4
                        children: []
                        pos: 42300
                        length: 12
                    children: []
                    pos: 42299
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: type = getNativeType(UNKNOWN_TYPE);
                    children: []
                    pos: 42322
                    length: 35
                  - type: local_variable_declaration
                    fields:
                      text: Var var = t.getScope().getVar(n.getString());
                    children: []
                    pos: 42364
                    length: 45
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: var
                                children: []
                                pos: 42420
                                length: 3
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 42427
                                length: 4
                            children: []
                            pos: 42420
                            length: 11
                        children: []
                        pos: 42419
                        length: 13
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType varType = var.getType();
                        children: []
                        pos: 42443
                        length: 31
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: varType
                                    children: []
                                    pos: 42487
                                    length: 7
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 42498
                                    length: 4
                                children: []
                                pos: 42487
                                length: 15
                            children: []
                            pos: 42486
                            length: 17
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: type = varType;
                            children: []
                            pos: 42516
                            length: 15
                          pos: 42504
                          length: 37
                        pos: 42483
                        length: 58
                      pos: 42433
                      length: 116
                    pos: 42416
                    length: 133
                  pos: 42314
                  length: 241
                pos: 42296
                length: 259
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n, type);
                children: []
                pos: 42560
                length: 24
              - type: return_statement
                fields:
                  text: return true;
                children: []
                pos: 42589
                length: 12
              pos: 41573
              length: 1032
          children: []
          pos: 41517
          length: 1088
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitGetProp
              children: []
              pos: 42896
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 42909
                length: 15
              pos: 42883
              length: 1058
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: n.getJSType()
                                children: []
                                pos: 43168
                                length: 13
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 43185
                                length: 4
                            children: []
                            pos: 43168
                            length: 21
                          right:
                            type: equals
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: parent.getType()
                                children: []
                                pos: 43193
                                length: 16
                              right:
                                type: field_access
                                fields:
                                  text: Token.ASSIGN
                                children: []
                                pos: 43213
                                length: 12
                            children: []
                            pos: 43193
                            length: 32
                        children: []
                        pos: 43168
                        length: 57
                    children: []
                    pos: 43167
                    length: 59
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 43235
                    length: 7
                  pos: 43227
                  length: 21
                pos: 43164
                length: 84
              - type: local_variable_declaration
                fields:
                  text: Node property = n.getLastChild();
                children: []
                pos: 43460
                length: 33
              - type: local_variable_declaration
                fields:
                  text: Node objNode = n.getFirstChild();
                children: []
                pos: 43498
                length: 33
              - type: local_variable_declaration
                fields:
                  text: JSType childType = getJSType(objNode);
                children: []
                pos: 43536
                length: 38
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: |-
                            !validator.expectNotNullOrUndefined(t, n, childType,
                                        childType + " has no properties", getNativeType(OBJECT_TYPE))
                        children: []
                        pos: 43675
                        length: 126
                    children: []
                    pos: 43674
                    length: 128
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, n);
                    children: []
                    pos: 43811
                    length: 18
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 43836
                    length: 7
                  pos: 43803
                  length: 46
                pos: 43671
                length: 178
              - type: expression_statement
                fields:
                  text: checkPropertyAccess(childType, property.getString(), t, n);
                children: []
                pos: 43855
                length: 59
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n);
                children: []
                pos: 43919
                length: 18
              pos: 42947
              length: 994
          children: []
          pos: 42883
          length: 1058
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkPropertyAccess
              children: []
              pos: 44025
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType childType
                children: []
                pos: 44045
                length: 16
              pos: 44012
              length: 1024
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: ObjectType objectType = childType.dereference();
                children: []
                pos: 44117
                length: 48
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: objectType
                            children: []
                            pos: 44174
                            length: 10
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 44188
                            length: 4
                        children: []
                        pos: 44174
                        length: 18
                    children: []
                    pos: 44173
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType propType = getJSType(n);
                    children: []
                    pos: 44202
                    length: 31
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: or
                                    fields:
                                      left:
                                        type: unary_expression
                                        fields:
                                          text: "!objectType.hasProperty(propName)"
                                        children: []
                                        pos: 44245
                                        length: 33
                                      right:
                                        type: method_invocation
                                        fields:
                                          text: objectType.equals(typeRegistry.getNativeType(UNKNOWN_TYPE))
                                        children: []
                                        pos: 44293
                                        length: 59
                                    children: []
                                    pos: 44245
                                    length: 107
                                children: []
                                pos: 44244
                                length: 109
                              right:
                                type: method_invocation
                                fields:
                                  text: propType.equals(typeRegistry.getNativeType(UNKNOWN_TYPE))
                                children: []
                                pos: 44367
                                length: 57
                            children: []
                            pos: 44244
                            length: 180
                        children: []
                        pos: 44243
                        length: 182
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: instanceof_expression
                                fields:
                                  text: objectType instanceof EnumType
                                children: []
                                pos: 44440
                                length: 30
                            children: []
                            pos: 44439
                            length: 32
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: report(t, n, INEXISTENT_ENUM_ELEMENT, propName);
                            children: []
                            pos: 44484
                            length: 48
                          pos: 44472
                          length: 70
                        pos: 44436
                        length: 432
                      pos: 44426
                      length: 450
                    pos: 44240
                    length: 636
                  pos: 44194
                  length: 688
                pos: 44170
                length: 862
              pos: 44111
              length: 925
          children: []
          pos: 44012
          length: 1024
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isPropertyTest
              children: []
              pos: 45263
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getProp
                children: []
                pos: 45278
                length: 12
              pos: 45247
              length: 763
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node parent = getProp.getParent();
                children: []
                pos: 45298
                length: 34
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: parent.getType()
                        children: []
                        pos: 45345
                        length: 16
                    children: []
                    pos: 45344
                    length: 18
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.CALL:
                                return parent.getFirstChild() != getProp &&
                                    compiler.getCodingConvention().isPropertyTestFunction(parent);

                              case Token.IF:
                              case Token.WHILE:
                              case Token.DO:
                              case Token.FOR:
                                return NodeUtil.getConditionExpression(parent) == getProp;

                              case Token.INSTANCEOF:
                              case Token.TYPEOF:
                                return true;

                              case Token.AND:
                              case Token.HOOK:
                                return parent.getFirstChild() == getProp;

                              case Token.NOT:
                                return parent.getParent().getType() == Token.OR &&
                                    parent.getParent().getFirstChild() == parent;
                            }
                    children: []
                    pos: 45363
                    length: 625
                children: []
                pos: 45337
                length: 651
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 45993
                length: 13
              pos: 45292
              length: 718
          children: []
          pos: 45247
          length: 763
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitGetElem
              children: []
              pos: 46253
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 46266
                length: 15
              pos: 46240
              length: 222
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 46297
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 46332
                length: 30
              - type: expression_statement
                fields:
                  text: validator.expectIndexMatch(t, n, getJSType(left), getJSType(right));
                children: []
                pos: 46367
                length: 68
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n);
                children: []
                pos: 46440
                length: 18
              pos: 46291
              length: 171
          children: []
          pos: 46240
          length: 222
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitVar
              children: []
              pos: 46701
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 46710
                length: 15
              pos: 46688
              length: 1336
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: 'JSDocInfo varInfo = n.hasOneChild() ? n.getJSDocInfo() :
                    null;'
                children: []
                pos: 46903
                length: 62
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (Node name : n.children()) {
                          Node value = name.getFirstChild();
                          // A null var would indicate a bug in the scope creation logic.
                          Var var = t.getScope().getVar(name.getString());

                          if (value != null) {
                            JSType valueType = getJSType(value);
                            JSType nameType = var.getType();
                            nameType = (nameType == null) ? getNativeType(UNKNOWN_TYPE) : nameType;

                            JSDocInfo info = name.getJSDocInfo();
                            if (info == null) {
                              info = varInfo;
                            }
                            if (info != null && info.hasEnumParameterType()) {
                              // var.getType() can never be null, this would indicate a bug in the
                              // scope creation logic.
                              checkEnumInitializer(
                                  t, value,
                                  info.getEnumParameterType().evaluate(t.getScope(), typeRegistry));
                            } else if (var.isTypeInferred()) {
                              ensureTyped(t, name, valueType);
                            } else {
                              validator.expectCanAssignTo(
                                  t, value, valueType, nameType, "initializing variable");
                            }
                          }
                        }
                children: []
                pos: 46970
                length: 1050
              pos: 46735
              length: 1289
          children: []
          pos: 46688
          length: 1336
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitNew
              children: []
              pos: 48077
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 48086
                length: 15
              pos: 48064
              length: 863
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node constructor = n.getFirstChild();
                children: []
                pos: 48117
                length: 37
              - type: local_variable_declaration
                fields:
                  text: FunctionType type = getFunctionType(constructor);
                children: []
                pos: 48159
                length: 49
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 48217
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 48225
                                length: 4
                            children: []
                            pos: 48217
                            length: 12
                          right:
                            type: method_invocation
                            fields:
                              text: type.isConstructor()
                            children: []
                            pos: 48233
                            length: 20
                        children: []
                        pos: 48217
                        length: 36
                    children: []
                    pos: 48216
                    length: 38
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: visitParameterList(t, n, type);
                    children: []
                    pos: 48263
                    length: 31
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, n, type.getInstanceType());
                    children: []
                    pos: 48301
                    length: 42
                  pos: 48255
                  length: 94
                pos: 48213
                length: 710
              pos: 48111
              length: 816
          children: []
          pos: 48064
          length: 863
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkInterfaceConflictProperties
              children: []
              pos: 49465
              length: 32
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 49498
                length: 15
              pos: 49452
              length: 987
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Set<String> currentPropertyNames = interfaceType.getPropertyNames();
                children: []
                pos: 49681
                length: 68
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (String name : currentPropertyNames) {
                          ObjectType oType = properties.get(name);
                          if (oType != null) {
                            if (!interfaceType.getPropertyType(name).isEquivalentTo(
                                oType.getPropertyType(name))) {
                              compiler.report(
                                  t.makeError(n, INCOMPATIBLE_EXTENDED_PROPERTY_TYPE,
                                      functionName, name, oType.toString(),
                                      interfaceType.toString()));
                            }
                          }
                          currentProperties.put(name, interfaceType);
                        }
                children: []
                pos: 49754
                length: 494
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (ObjectType iType : interfaceType.getCtorExtendedInterfaces()) {
                          checkInterfaceConflictProperties(t, n, functionName, properties,
                              currentProperties, iType);
                        }
                children: []
                pos: 50253
                length: 182
              pos: 49675
              length: 764
          children: []
          pos: 49452
          length: 987
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitFunction
              children: []
              pos: 50697
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 50711
                length: 15
              pos: 50684
              length: 2824
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: FunctionType functionType = (FunctionType) n.getJSType();
                children: []
                pos: 50742
                length: 57
              - type: local_variable_declaration
                fields:
                  text: String functionPrivateName = n.getFirstChild().getString();
                children: []
                pos: 50804
                length: 59
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: functionType.isConstructor()
                        children: []
                        pos: 50872
                        length: 28
                    children: []
                    pos: 50871
                    length: 30
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        FunctionType baseConstructor = functionType.
                                  getPrototype().getImplicitPrototype().getConstructor();
                    children: []
                    pos: 50910
                    length: 110
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: not_equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: baseConstructor
                                        children: []
                                        pos: 51031
                                        length: 15
                                      right:
                                        type: null_literal
                                        fields: {}
                                        children: []
                                        pos: 51050
                                        length: 4
                                    children: []
                                    pos: 51031
                                    length: 23
                                  right:
                                    type: not_equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: baseConstructor
                                        children: []
                                        pos: 51068
                                        length: 15
                                      right:
                                        type: method_invocation
                                        fields:
                                          text: getNativeType(OBJECT_FUNCTION_TYPE)
                                        children: []
                                        pos: 51087
                                        length: 35
                                    children: []
                                    pos: 51068
                                    length: 54
                                children: []
                                pos: 51031
                                length: 91
                              right:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: and
                                    fields:
                                      left:
                                        type: method_invocation
                                        fields:
                                          text: baseConstructor.isInterface()
                                        children: []
                                        pos: 51137
                                        length: 29
                                      right:
                                        type: method_invocation
                                        fields:
                                          text: functionType.isConstructor()
                                        children: []
                                        pos: 51170
                                        length: 28
                                    children: []
                                    pos: 51137
                                    length: 61
                                children: []
                                pos: 51136
                                length: 63
                            children: []
                            pos: 51031
                            length: 168
                        children: []
                        pos: 51030
                        length: 170
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            compiler.report(
                                        t.makeError(n, CONFLICTING_EXTENDED_TYPE, functionPrivateName));
                        children: []
                        pos: 51211
                        length: 93
                      pos: 51201
                      length: 111
                    pos: 51027
                    length: 1149
                  pos: 50902
                  length: 1280
                pos: 50868
                length: 2636
              pos: 50736
              length: 2772
          children: []
          pos: 50684
          length: 2824
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitCall
              children: []
              pos: 53748
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 53758
                length: 15
              pos: 53735
              length: 1757
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node child = n.getFirstChild();
                children: []
                pos: 53789
                length: 31
              - type: local_variable_declaration
                fields:
                  text: JSType childType = getJSType(child).restrictByNotNullOrUndefined();
                children: []
                pos: 53825
                length: 67
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!childType.canBeCalled()"
                        children: []
                        pos: 53902
                        length: 24
                    children: []
                    pos: 53901
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: report(t, n, NOT_CALLABLE, childType.toString());
                    children: []
                    pos: 53936
                    length: 49
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, n);
                    children: []
                    pos: 53992
                    length: 18
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 54017
                    length: 7
                  pos: 53928
                  length: 102
                pos: 53898
                length: 132
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: childType instanceof FunctionType
                        children: []
                        pos: 54165
                        length: 33
                    children: []
                    pos: 54164
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType functionType = (FunctionType) childType;
                    children: []
                    pos: 54208
                    length: 53
                  - type: local_variable_declaration
                    fields:
                      text: boolean isExtern = false;
                    children: []
                    pos: 54269
                    length: 25
                  - type: local_variable_declaration
                    fields:
                      text: JSDocInfo functionJSDocInfo = functionType.getJSDocInfo();
                    children: []
                    pos: 54301
                    length: 58
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: functionJSDocInfo
                                children: []
                                pos: 54369
                                length: 17
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 54390
                                length: 4
                            children: []
                            pos: 54369
                            length: 25
                        children: []
                        pos: 54368
                        length: 27
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: String sourceName = functionJSDocInfo.getSourceName();
                        children: []
                        pos: 54406
                        length: 54
                      - type: local_variable_declaration
                        fields:
                          text: CompilerInput functionSource = compiler.getInput(sourceName);
                        children: []
                        pos: 54469
                        length: 61
                      - type: expression_statement
                        fields:
                          text: isExtern = functionSource.isExtern();
                        children: []
                        pos: 54539
                        length: 37
                      pos: 54396
                      length: 188
                    pos: 54366
                    length: 218
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: functionType.isConstructor()
                                    children: []
                                    pos: 54741
                                    length: 28
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: "!functionType.isNativeObjectType()"
                                    children: []
                                    pos: 54783
                                    length: 34
                                children: []
                                pos: 54741
                                length: 76
                              right:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: or
                                    fields:
                                      left:
                                        type: or
                                        fields:
                                          left:
                                            type: method_invocation
                                            fields:
                                              text: functionType.getReturnType().isUnknownType()
                                            children: []
                                            pos: 54832
                                            length: 44
                                          right:
                                            type: method_invocation
                                            fields:
                                              text: functionType.getReturnType().isVoidType()
                                            children: []
                                            pos: 54891
                                            length: 41
                                        children: []
                                        pos: 54832
                                        length: 100
                                      right:
                                        type: unary_expression
                                        fields:
                                          text: "!isExtern"
                                        children: []
                                        pos: 54947
                                        length: 9
                                    children: []
                                    pos: 54832
                                    length: 124
                                children: []
                                pos: 54831
                                length: 126
                            children: []
                            pos: 54741
                            length: 216
                        children: []
                        pos: 54740
                        length: 218
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: report(t, n, CONSTRUCTOR_NOT_CALLABLE, childType.toString());
                        children: []
                        pos: 54969
                        length: 61
                      pos: 54959
                      length: 79
                    pos: 54737
                    length: 301
                  - type: expression_statement
                    fields:
                      text: visitParameterList(t, n, functionType);
                    children: []
                    pos: 55141
                    length: 39
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, n, functionType.getReturnType());
                    children: []
                    pos: 55187
                    length: 48
                  pos: 54200
                  length: 1041
                pos: 54161
                length: 1118
              pos: 53783
              length: 1709
          children: []
          pos: 53735
          length: 1757
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitParameterList
              children: []
              pos: 55573
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 55592
                length: 15
              pos: 55560
              length: 1386
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Iterator<Node> arguments = call.children().iterator();
                children: []
                pos: 55659
                length: 54
              - type: expression_statement
                fields:
                  text: arguments.next();
                children: []
                pos: 55718
                length: 17
              - type: local_variable_declaration
                fields:
                  text: Iterator<Node> parameters = functionType.getParameters().iterator();
                children: []
                pos: 55767
                length: 68
              - type: local_variable_declaration
                fields:
                  text: int ordinal = 0;
                children: []
                pos: 55840
                length: 16
              - type: local_variable_declaration
                fields:
                  text: Node parameter = null;
                children: []
                pos: 55861
                length: 22
              - type: local_variable_declaration
                fields:
                  text: Node argument = null;
                children: []
                pos: 55888
                length: 21
              - type: while_statement
                fields:
                  text: |-
                    while (arguments.hasNext() &&
                               (parameters.hasNext() ||
                                parameter != null && parameter.isVarArgs())) {
                          // If there are no parameters left in the list, then the while loop
                          // above implies that this must be a var_args function.
                          if (parameters.hasNext()) {
                            parameter = parameters.next();
                          }
                          argument = arguments.next();
                          ordinal++;

                          validator.expectArgumentMatchesParameter(t, argument,
                              getJSType(argument), getJSType(parameter), call, ordinal);
                        }
                children: []
                pos: 55914
                length: 529
              - type: local_variable_declaration
                fields:
                  text: int numArgs = call.getChildCount() - 1;
                children: []
                pos: 56449
                length: 39
              - type: local_variable_declaration
                fields:
                  text: int minArgs = functionType.getMinArguments();
                children: []
                pos: 56493
                length: 45
              - type: local_variable_declaration
                fields:
                  text: int maxArgs = functionType.getMaxArguments();
                children: []
                pos: 56543
                length: 45
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: greater_than
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: minArgs
                                children: []
                                pos: 56597
                                length: 7
                              right:
                                type: identifier
                                fields:
                                  text: numArgs
                                children: []
                                pos: 56607
                                length: 7
                            children: []
                            pos: 56597
                            length: 17
                          right:
                            type: less_than
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: maxArgs
                                children: []
                                pos: 56618
                                length: 7
                              right:
                                type: identifier
                                fields:
                                  text: numArgs
                                children: []
                                pos: 56628
                                length: 7
                            children: []
                            pos: 56618
                            length: 17
                        children: []
                        pos: 56597
                        length: 38
                    children: []
                    pos: 56596
                    length: 40
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        report(t, call, WRONG_ARGUMENT_COUNT,
                                      validator.getReadableJSTypeName(call.getFirstChild(), false),
                                      String.valueOf(numArgs), String.valueOf(minArgs),
                                      maxArgs != Integer.MAX_VALUE ?
                                      " and no more than " + maxArgs + " argument(s)" : "");
                    children: []
                    pos: 56645
                    length: 291
                  pos: 56637
                  length: 305
                pos: 56593
                length: 349
              pos: 55653
              length: 1293
          children: []
          pos: 55560
          length: 1386
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitReturn
              children: []
              pos: 57188
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 57200
                length: 15
              pos: 57175
              length: 1070
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node function = t.getEnclosingFunction();
                children: []
                pos: 57231
                length: 41
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: function
                            children: []
                            pos: 57376
                            length: 8
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 57388
                            length: 4
                        children: []
                        pos: 57376
                        length: 16
                    children: []
                    pos: 57375
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 57402
                    length: 7
                  pos: 57394
                  length: 21
                pos: 57372
                length: 43
              - type: local_variable_declaration
                fields:
                  text: JSType jsType = getJSType(function);
                children: []
                pos: 57420
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: jsType instanceof FunctionType
                        children: []
                        pos: 57466
                        length: 30
                    children: []
                    pos: 57465
                    length: 32
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType functionType = (FunctionType) jsType;
                    children: []
                    pos: 57506
                    length: 50
                  - type: local_variable_declaration
                    fields:
                      text: JSType returnType = functionType.getReturnType();
                    children: []
                    pos: 57564
                    length: 49
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: returnType
                                children: []
                                pos: 57725
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 57739
                                length: 4
                            children: []
                            pos: 57725
                            length: 18
                        children: []
                        pos: 57724
                        length: 20
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: returnType = getNativeType(VOID_TYPE);
                        children: []
                        pos: 57755
                        length: 38
                      pos: 57745
                      length: 56
                    pos: 57721
                    length: 80
                  - type: local_variable_declaration
                    fields:
                      text: Node valueNode = n.getFirstChild();
                    children: []
                    pos: 57853
                    length: 35
                  - type: local_variable_declaration
                    fields:
                      text: JSType actualReturnType;
                    children: []
                    pos: 57895
                    length: 24
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: valueNode
                                children: []
                                pos: 57930
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 57943
                                length: 4
                            children: []
                            pos: 57930
                            length: 17
                        children: []
                        pos: 57929
                        length: 19
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: actualReturnType = getNativeType(VOID_TYPE);
                        children: []
                        pos: 57959
                        length: 44
                      - type: expression_statement
                        fields:
                          text: valueNode = n;
                        children: []
                        pos: 58012
                        length: 14
                      pos: 57949
                      length: 85
                    pos: 57926
                    length: 172
                  - type: expression_statement
                    fields:
                      text: |-
                        validator.expectCanAssignTo(t, valueNode, actualReturnType, returnType,
                                  "inconsistent return type");
                    children: []
                    pos: 58125
                    length: 110
                  pos: 57498
                  length: 743
                pos: 57462
                length: 779
              pos: 57225
              length: 1020
          children: []
          pos: 57175
          length: 1070
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitBinaryOperator
              children: []
              pos: 58653
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int op
                children: []
                pos: 58673
                length: 6
              pos: 58640
              length: 1688
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 58712
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = getJSType(left);
                children: []
                pos: 58747
                length: 34
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 58786
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = getJSType(right);
                children: []
                pos: 58821
                length: 36
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: op
                        children: []
                        pos: 58870
                        length: 2
                    children: []
                    pos: 58869
                    length: 4
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.ASSIGN_LSH:
                              case Token.ASSIGN_RSH:
                              case Token.LSH:
                              case Token.RSH:
                              case Token.ASSIGN_URSH:
                              case Token.URSH:
                                if (!leftType.matchesInt32Context()) {
                                  report(t, left, BIT_OPERATION,
                                           NodeUtil.opToStr(n.getType()), leftType.toString());
                                }
                                if (!rightType.matchesUint32Context()) {
                                  report(t, right, BIT_OPERATION,
                                           NodeUtil.opToStr(n.getType()), rightType.toString());
                                }
                                break;

                              case Token.ASSIGN_DIV:
                              case Token.ASSIGN_MOD:
                              case Token.ASSIGN_MUL:
                              case Token.ASSIGN_SUB:
                              case Token.DIV:
                              case Token.MOD:
                              case Token.MUL:
                              case Token.SUB:
                                validator.expectNumber(t, left, leftType, "left operand");
                                validator.expectNumber(t, right, rightType, "right operand");
                                break;

                              case Token.ASSIGN_BITAND:
                              case Token.ASSIGN_BITXOR:
                              case Token.ASSIGN_BITOR:
                              case Token.BITAND:
                              case Token.BITXOR:
                              case Token.BITOR:
                                validator.expectBitwiseable(t, left, leftType,
                                    "bad left operand to bitwise operator");
                                validator.expectBitwiseable(t, right, rightType,
                                    "bad right operand to bitwise operator");
                                break;

                              case Token.ASSIGN_ADD:
                              case Token.ADD:
                                break;

                              default:
                                report(t, n, UNEXPECTED_TOKEN, Node.tokenToName(op));
                            }
                    children: []
                    pos: 58874
                    length: 1427
                children: []
                pos: 58862
                length: 1439
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n);
                children: []
                pos: 60306
                length: 18
              pos: 58706
              length: 1622
          children: []
          pos: 58640
          length: 1688
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkEnumInitializer
              children: []
              pos: 61008
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 61036
                length: 15
              pos: 60995
              length: 1288
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: value.getType()
                            children: []
                            pos: 61097
                            length: 15
                          right:
                            type: field_access
                            fields:
                              text: Token.OBJECTLIT
                            children: []
                            pos: 61116
                            length: 15
                        children: []
                        pos: 61097
                        length: 34
                    children: []
                    pos: 61096
                    length: 36
                children:
                - type: block
                  fields: {}
                  children:
                  - type: for_statement
                    fields:
                      text: |-
                        for (Node key = value.getFirstChild();
                                   key != null; key = key.getNext()) {
                                Node propValue = key.getFirstChild();

                                // the value's type must be assignable to the enum's primitive type
                                validator.expectCanAssignTo(
                                    t, propValue, getJSType(propValue), primitiveType,
                                    "element type must match enum's type");
                              }
                    children: []
                    pos: 61141
                    length: 368
                  pos: 61133
                  length: 382
                pos: 61093
                length: 1186
              pos: 61087
              length: 1196
          children: []
          pos: 60995
          length: 1288
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isReference
              children: []
              pos: 62575
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 62587
                length: 6
              pos: 62552
              length: 216
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 62609
                        length: 11
                    children: []
                    pos: 62608
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.GETELEM:
                              case Token.GETPROP:
                              case Token.NAME:
                                return true;

                              default:
                                return false;
                            }
                    children: []
                    pos: 62622
                    length: 141
                children: []
                pos: 62601
                length: 162
              pos: 62595
              length: 173
          children: []
          pos: 62552
          length: 216
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getJSType
              children: []
              pos: 62893
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 62903
                length: 6
              pos: 62878
              length: 461
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType jsType = n.getJSType();
                children: []
                pos: 62917
                length: 30
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: jsType
                            children: []
                            pos: 62956
                            length: 6
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 62966
                            length: 4
                        children: []
                        pos: 62956
                        length: 14
                    children: []
                    pos: 62955
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return getNativeType(UNKNOWN_TYPE);
                    children: []
                    pos: 63260
                    length: 35
                  pos: 62972
                  length: 329
                pos: 62952
                length: 383
              pos: 62911
              length: 428
          children: []
          pos: 62878
          length: 461
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getFunctionType
              children: []
              pos: 63466
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 63482
                length: 6
              pos: 63445
              length: 335
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType type = getJSType(n).restrictByNotNullOrUndefined();
                children: []
                pos: 63496
                length: 58
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: type.isUnknownType()
                        children: []
                        pos: 63563
                        length: 20
                    children: []
                    pos: 63562
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return typeRegistry.getNativeFunctionType(U2U_CONSTRUCTOR_TYPE);
                    children: []
                    pos: 63593
                    length: 64
                  pos: 63585
                  length: 78
                pos: 63559
                length: 217
              pos: 63490
              length: 290
          children: []
          pos: 63445
          length: 335
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensureTyped
              children: []
              pos: 64232
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 64244
                length: 15
              pos: 64219
              length: 107
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n, getNativeType(UNKNOWN_TYPE));
                children: []
                pos: 64275
                length: 47
              pos: 64269
              length: 57
          children: []
          pos: 64219
          length: 107
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensureTyped
              children: []
              pos: 64343
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 64355
                length: 15
              pos: 64330
              length: 118
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n, getNativeType(type));
                children: []
                pos: 64405
                length: 39
              pos: 64399
              length: 49
          children: []
          pos: 64330
          length: 118
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensureTyped
              children: []
              pos: 65277
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 65289
                length: 15
              pos: 65264
              length: 854
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    Preconditions.checkState(n.getType() != Token.FUNCTION ||
                                type instanceof FunctionType ||
                                type.isUnknownType());
                children: []
                pos: 65391
                length: 136
              - type: local_variable_declaration
                fields:
                  text: JSDocInfo info = n.getJSDocInfo();
                children: []
                pos: 65532
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: info
                            children: []
                            pos: 65575
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 65583
                            length: 4
                        children: []
                        pos: 65575
                        length: 12
                    children: []
                    pos: 65574
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: info.hasType()
                            children: []
                            pos: 65601
                            length: 14
                        children: []
                        pos: 65600
                        length: 16
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType infoType = info.getType().evaluate(t.getScope(),
                            typeRegistry);
                        children: []
                        pos: 65627
                        length: 70
                      - type: expression_statement
                        fields:
                          text: validator.expectCanCast(t, n, infoType, type);
                        children: []
                        pos: 65706
                        length: 46
                      - type: expression_statement
                        fields:
                          text: type = infoType;
                        children: []
                        pos: 65761
                        length: 16
                      pos: 65617
                      length: 168
                    pos: 65597
                    length: 188
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: info.isImplicitCast()
                                children: []
                                pos: 65797
                                length: 21
                              right:
                                type: unary_expression
                                fields:
                                  text: "!inExterns"
                                children: []
                                pos: 65822
                                length: 10
                            children: []
                            pos: 65797
                            length: 35
                        children: []
                        pos: 65796
                        length: 37
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: |-
                            String propName = n.getType() == Token.GETPROP ?
                                        n.getLastChild().getString() : "(missing)";
                        children: []
                        pos: 65844
                        length: 104
                      - type: expression_statement
                        fields:
                          text: |-
                            compiler.report(
                                        t.makeError(n, ILLEGAL_IMPLICIT_CAST, propName));
                        children: []
                        pos: 65957
                        length: 78
                      pos: 65834
                      length: 209
                    pos: 65793
                    length: 250
                  pos: 65589
                  length: 460
                pos: 65571
                length: 478
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: n.getJSType()
                            children: []
                            pos: 66059
                            length: 13
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 66076
                            length: 4
                        children: []
                        pos: 66059
                        length: 21
                    children: []
                    pos: 66058
                    length: 23
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: n.setJSType(type);
                    children: []
                    pos: 66090
                    length: 18
                  pos: 66082
                  length: 32
                pos: 66055
                length: 59
              pos: 65327
              length: 791
          children: []
          pos: 65264
          length: 854
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getTypedPercent
              children: []
              pos: 66249
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 66242
              length: 187
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int total = nullCount + unknownCount + typedCount;
                children: []
                pos: 66273
                length: 50
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: total
                            children: []
                            pos: 66332
                            length: 5
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 66341
                            length: 1
                        children: []
                        pos: 66332
                        length: 10
                    children: []
                    pos: 66331
                    length: 12
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return 0.0;
                    children: []
                    pos: 66352
                    length: 11
                  pos: 66344
                  length: 25
                pos: 66328
                length: 97
              pos: 66267
              length: 162
          children: []
          pos: 66242
          length: 187
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getNativeType
              children: []
              pos: 66448
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSTypeNative typeId
                children: []
                pos: 66462
                length: 19
              pos: 66433
              length: 102
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return typeRegistry.getNativeType(typeId);
                children: []
                pos: 66489
                length: 42
              pos: 66483
              length: 52
          children: []
          pos: 66433
          length: 102
        pos: 2320
        length: 64217
    children: []
    pos: 2320
    length: 64217
  pos: 0
  length: 66538
text_diff: "--- before\n+++ after\n@@ -1577,13 +1577,6 @@\n \n       // Functions
  with explcit 'this' types must be called in a GETPROP\n       // or GETELEM.\n-
  \     if (functionType.isOrdinaryFunction() &&\n-          !functionType.getTypeOfThis().isUnknownType()
  &&\n-          !functionType.getTypeOfThis().isNativeObjectType() &&\n-          !(child.getType()
  == Token.GETELEM ||\n-            child.getType() == Token.GETPROP)) {\n-        report(t,
  n, EXPECTED_THIS_TYPE, functionType.toString());\n-      }\n \n       visitParameterList(t,
  n, functionType);\n       ensureTyped(t, n, functionType.getReturnType());\n"
tree_diff: |+
  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  if_statement [55140,55475]
      parenthesized_expression [55143,55398]
          and [55144,55397]
              and [55144,55300]
                  and [55144,55236]
                      method_invocation: functionType.isOrdinaryFunction() [55144,55177]
                      unary_expression: !functionType.getTypeOfThis().isUnknownType() [55191,55236]
                  unary_expression: !functionType.getTypeOfThis().isNativeObjectType() [55250,55300]
              unary_expression: !(child.getType() == Token.GETELEM ||
              child.getType() == Token.GETPROP) [55314,55397]
      block [55399,55475]
          expression_statement: report(t, n, EXPECTED_THIS_TYPE, functionType.toString()); [55409,55467]

...
