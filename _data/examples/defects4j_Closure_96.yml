---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: TypeCheck
        children: []
        pos: 2320
        length: 9
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNEXPECTED_TOKEN = DiagnosticType.error(
                    "JSC_INTERNAL_ERROR_UNEXPECTED_TOKEN",
                    "Internal Error: Don't know how to handle {0}");
          children: []
          pos: 2414
          length: 168
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType BAD_DELETE =
                    // TODO(user): make this an error
                    DiagnosticType.warning(
                        "JSC_BAD_DELETE_OPERAND",
                        "delete operator needs a reference operand");
          children: []
          pos: 2614
          length: 202
        - type: field_declaration
          fields:
            text: |-
              protected static final String OVERRIDING_PROTOTYPE_WITH_NON_OBJECT =
                    "overriding prototype with non-object";
          children: []
          pos: 2851
          length: 114
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType DETERMINISTIC_TEST =
                    DiagnosticType.warning(
                        "JSC_DETERMINISTIC_TEST",
                        "condition always evaluates to {2}\n" +
                        "left : {0}\n" +
                        "right: {1}");
          children: []
          pos: 3099
          length: 216
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType DETERMINISTIC_TEST_NO_RESULT =
                    DiagnosticType.warning(
                        "JSC_DETERMINISTIC_TEST_NO_RESULT",
                        "condition always evaluates to the same value\n" +
                        "left : {0}\n" +
                        "right: {1}");
          children: []
          pos: 3319
          length: 247
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INEXISTENT_ENUM_ELEMENT =
                    DiagnosticType.warning(
                        "JSC_INEXISTENT_ENUM_ELEMENT",
                        "element {0} does not exist on this enum");
          children: []
          pos: 3570
          length: 178
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INEXISTENT_PROPERTY =
                    DiagnosticType.disabled(
                        "JSC_INEXISTENT_PROPERTY",
                        "Property {0} never defined on {1}");
          children: []
          pos: 3845
          length: 165
        - type: field_declaration
          fields:
            text: |-
              protected static final DiagnosticType NOT_A_CONSTRUCTOR =
                    DiagnosticType.warning(
                        "JSC_NOT_A_CONSTRUCTOR",
                        "cannot instantiate non-constructor");
          children: []
          pos: 4014
          length: 171
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType BIT_OPERATION =
                    DiagnosticType.warning(
                        "JSC_BAD_TYPE_FOR_BIT_OPERATION",
                        "operator {0} cannot be applied to {1}");
          children: []
          pos: 4189
          length: 169
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType NOT_CALLABLE =
                    DiagnosticType.warning(
                        "JSC_NOT_FUNCTION_TYPE",
                        "{0} expressions are not callable");
          children: []
          pos: 4362
          length: 154
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType CONSTRUCTOR_NOT_CALLABLE =
                    DiagnosticType.warning(
                        "JSC_CONSTRUCTOR_NOT_CALLABLE",
                        "Constructor {0} should be called with the \"new\" keyword");
          children: []
          pos: 4520
          length: 198
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType FUNCTION_MASKS_VARIABLE =
                    DiagnosticType.warning(
                        "JSC_FUNCTION_MASKS_VARIABLE",
                        "function {0} masks variable (IE bug)");
          children: []
          pos: 4722
          length: 175
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType MULTIPLE_VAR_DEF = DiagnosticType.warning(
                    "JSC_MULTIPLE_VAR_DEF",
                    "declaration of multiple variables with shared type information");
          children: []
          pos: 4901
          length: 173
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ENUM_DUP = DiagnosticType.error("JSC_ENUM_DUP",
                    "enum element {0} already defined");
          children: []
          pos: 5078
          length: 118
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ENUM_NOT_CONSTANT =
                    DiagnosticType.warning("JSC_ENUM_NOT_CONSTANT",
                        "enum key {0} must be a syntactic constant");
          children: []
          pos: 5200
          length: 157
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INVALID_INTERFACE_MEMBER_DECLARATION =
                    DiagnosticType.warning(
                        "JSC_INVALID_INTERFACE_MEMBER_DECLARATION",
                        "interface members can only be empty property declarations,"
                        + " empty functions{0}");
          children: []
          pos: 5361
          length: 257
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INTERFACE_FUNCTION_NOT_EMPTY =
                    DiagnosticType.warning(
                        "JSC_INTERFACE_FUNCTION_NOT_EMPTY",
                        "interface member functions must have an empty body");
          children: []
          pos: 5622
          length: 199
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType CONFLICTING_EXTENDED_TYPE =
                    DiagnosticType.warning(
                        "JSC_CONFLICTING_EXTENDED_TYPE",
                        "{0} cannot extend this type; " +
                        "a constructor can only extend objects " +
                        "and an interface can only extend interfaces");
          children: []
          pos: 5825
          length: 283
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType BAD_IMPLEMENTED_TYPE =
                    DiagnosticType.warning(
                        "JSC_IMPLEMENTS_NON_INTERFACE",
                        "can only implement interfaces");
          children: []
          pos: 6112
          length: 166
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType HIDDEN_SUPERCLASS_PROPERTY =
                    DiagnosticType.warning(
                        "JSC_HIDDEN_SUPERCLASS_PROPERTY",
                        "property {0} already defined on superclass {1}; " +
                        "use @override to override it");
          children: []
          pos: 6282
          length: 236
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType HIDDEN_INTERFACE_PROPERTY =
                    DiagnosticType.warning(
                        "JSC_HIDDEN_INTERFACE_PROPERTY",
                        "property {0} already defined on interface {1}; " +
                        "use @override to override it");
          children: []
          pos: 6522
          length: 233
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType HIDDEN_SUPERCLASS_PROPERTY_MISMATCH =
                    DiagnosticType.warning("JSC_HIDDEN_SUPERCLASS_PROPERTY_MISMATCH",
                        "mismatch of the {0} property type and the type " +
                        "of the property it overrides from superclass {1}\n" +
                        "original: {2}\n" +
                        "override: {3}");
          children: []
          pos: 6759
          length: 322
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType HIDDEN_INTERFACE_PROPERTY_MISMATCH =
                    DiagnosticType.warning(
                        "JSC_HIDDEN_INTERFACE_PROPERTY_MISMATCH",
                        "mismatch of the {0} property type and the type " +
                        "of the property it overrides from interface {1}\n" +
                        "original: {2}\n" +
                        "override: {3}");
          children: []
          pos: 7085
          length: 330
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNKNOWN_OVERRIDE =
                    DiagnosticType.warning(
                        "JSC_UNKNOWN_OVERRIDE",
                        "property {0} not defined on any superclass of {1}");
          children: []
          pos: 7419
          length: 174
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INTERFACE_METHOD_OVERRIDE =
                    DiagnosticType.warning(
                        "JSC_INTERFACE_METHOD_OVERRIDE",
                        "property {0} is already defined by the {1} extended interface");
          children: []
          pos: 7597
          length: 204
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNKNOWN_EXPR_TYPE =
                    DiagnosticType.warning("JSC_UNKNOWN_EXPR_TYPE",
                        "could not determine the type of this expression");
          children: []
          pos: 7805
          length: 163
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNRESOLVED_TYPE =
                    DiagnosticType.warning("JSC_UNRESOLVED_TYPE",
                        "could not resolve the name {0} to a type");
          children: []
          pos: 7972
          length: 152
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType WRONG_ARGUMENT_COUNT =
                    DiagnosticType.warning(
                        "JSC_WRONG_ARGUMENT_COUNT",
                        "Function {0}: called with {1} argument(s). " +
                        "Function requires at least {2} argument(s){3}.");
          children: []
          pos: 8128
          length: 237
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ILLEGAL_IMPLICIT_CAST =
                    DiagnosticType.warning(
                        "JSC_ILLEGAL_IMPLICIT_CAST",
                        "Illegal annotation on {0}. @implicitCast may only be used in " +
                        "externs.");
          children: []
          pos: 8369
          length: 219
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticGroup ALL_DIAGNOSTICS = new DiagnosticGroup(
                    DETERMINISTIC_TEST,
                    DETERMINISTIC_TEST_NO_RESULT,
                    INEXISTENT_ENUM_ELEMENT,
                    INEXISTENT_PROPERTY,
                    NOT_A_CONSTRUCTOR,
                    BIT_OPERATION,
                    NOT_CALLABLE,
                    CONSTRUCTOR_NOT_CALLABLE,
                    FUNCTION_MASKS_VARIABLE,
                    MULTIPLE_VAR_DEF,
                    ENUM_DUP,
                    ENUM_NOT_CONSTANT,
                    INVALID_INTERFACE_MEMBER_DECLARATION,
                    INTERFACE_FUNCTION_NOT_EMPTY,
                    CONFLICTING_EXTENDED_TYPE,
                    BAD_IMPLEMENTED_TYPE,
                    HIDDEN_SUPERCLASS_PROPERTY,
                    HIDDEN_INTERFACE_PROPERTY,
                    HIDDEN_SUPERCLASS_PROPERTY_MISMATCH,
                    HIDDEN_INTERFACE_PROPERTY_MISMATCH,
                    UNKNOWN_OVERRIDE,
                    INTERFACE_METHOD_OVERRIDE,
                    UNKNOWN_EXPR_TYPE,
                    UNRESOLVED_TYPE,
                    WRONG_ARGUMENT_COUNT,
                    ILLEGAL_IMPLICIT_CAST);
          children: []
          pos: 8592
          length: 837
        - type: field_declaration
          fields:
            text: private final AbstractCompiler compiler;
          children: []
          pos: 9433
          length: 40
        - type: field_declaration
          fields:
            text: private final TypeValidator validator;
          children: []
          pos: 9476
          length: 38
        - type: field_declaration
          fields:
            text: private final ReverseAbstractInterpreter reverseInterpreter;
          children: []
          pos: 9518
          length: 60
        - type: field_declaration
          fields:
            text: private final JSTypeRegistry typeRegistry;
          children: []
          pos: 9582
          length: 42
        - type: field_declaration
          fields:
            text: private Scope topScope;
          children: []
          pos: 9627
          length: 23
        - type: field_declaration
          fields:
            text: private ScopeCreator scopeCreator;
          children: []
          pos: 9654
          length: 34
        - type: field_declaration
          fields:
            text: private final CheckLevel reportMissingOverride;
          children: []
          pos: 9692
          length: 47
        - type: field_declaration
          fields:
            text: private final CheckLevel reportUnknownTypes;
          children: []
          pos: 9742
          length: 44
        - type: field_declaration
          fields:
            text: private boolean reportMissingProperties = true;
          children: []
          pos: 9886
          length: 47
        - type: field_declaration
          fields:
            text: private InferJSDocInfo inferJSDocInfo = null;
          children: []
          pos: 9937
          length: 45
        - type: field_declaration
          fields:
            text: private int typedCount = 0;
          children: []
          pos: 10063
          length: 27
        - type: field_declaration
          fields:
            text: private int nullCount = 0;
          children: []
          pos: 10093
          length: 26
        - type: field_declaration
          fields:
            text: private int unknownCount = 0;
          children: []
          pos: 10122
          length: 29
        - type: field_declaration
          fields:
            text: private boolean inExterns;
          children: []
          pos: 10154
          length: 26
        - type: field_declaration
          fields:
            text: private int noTypeCheckSection = 0;
          children: []
          pos: 10271
          length: 35
        - type: constructor_declaration
          fields:
            text: |-
              public TypeCheck(AbstractCompiler compiler,
                    ReverseAbstractInterpreter reverseInterpreter,
                    JSTypeRegistry typeRegistry,
                    Scope topScope,
                    ScopeCreator scopeCreator,
                    CheckLevel reportMissingOverride,
                    CheckLevel reportUnknownTypes) {
                  this.compiler = compiler;
                  this.validator = compiler.getTypeValidator();
                  this.reverseInterpreter = reverseInterpreter;
                  this.typeRegistry = typeRegistry;
                  this.topScope = topScope;
                  this.scopeCreator = scopeCreator;
                  this.reportMissingOverride = reportMissingOverride;
                  this.reportUnknownTypes = reportUnknownTypes;
                  this.inferJSDocInfo = new InferJSDocInfo(compiler);
                }
          children: []
          pos: 10310
          length: 667
        - type: constructor_declaration
          fields:
            text: |-
              public TypeCheck(AbstractCompiler compiler,
                    ReverseAbstractInterpreter reverseInterpreter,
                    JSTypeRegistry typeRegistry,
                    CheckLevel reportMissingOverride,
                    CheckLevel reportUnknownTypes) {
                  this(compiler, reverseInterpreter, typeRegistry, null, null,
                      reportMissingOverride, reportUnknownTypes);
                }
          children: []
          pos: 10981
          length: 331
        - type: constructor_declaration
          fields:
            text: |-
              TypeCheck(AbstractCompiler compiler,
                    ReverseAbstractInterpreter reverseInterpreter,
                    JSTypeRegistry typeRegistry) {
                  this(compiler, reverseInterpreter, typeRegistry, null, null,
                       CheckLevel.WARNING, CheckLevel.OFF);
                }
          children: []
          pos: 11316
          length: 241
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: reportMissingProperties
              children: []
              pos: 11648
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: boolean report
                children: []
                pos: 11672
                length: 14
              pos: 11638
              length: 110
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: reportMissingProperties = report;
                children: []
                pos: 11694
                length: 33
              - type: return_statement
                fields:
                  text: return this;
                children: []
                pos: 11732
                length: 12
              pos: 11688
              length: 60
          children: []
          pos: 11638
          length: 110
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: process
              children: []
              pos: 12013
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node externsRoot
                children: []
                pos: 12021
                length: 16
              pos: 12001
              length: 435
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(scopeCreator);
                children: []
                pos: 12058
                length: 41
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(topScope);
                children: []
                pos: 12104
                length: 37
              - type: local_variable_declaration
                fields:
                  text: Node externsAndJs = jsRoot.getParent();
                children: []
                pos: 12147
                length: 39
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(externsAndJs != null);
                children: []
                pos: 12191
                length: 47
              - type: expression_statement
                fields:
                  text: |-
                    Preconditions.checkState(
                            externsRoot == null || externsAndJs.hasChild(externsRoot));
                children: []
                pos: 12243
                length: 93
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: externsRoot
                            children: []
                            pos: 12346
                            length: 11
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 12361
                            length: 4
                        children: []
                        pos: 12346
                        length: 19
                    children: []
                    pos: 12345
                    length: 21
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: check(externsRoot, true);
                    children: []
                    pos: 12375
                    length: 25
                  pos: 12367
                  length: 39
                pos: 12342
                length: 64
              - type: expression_statement
                fields:
                  text: check(jsRoot, false);
                children: []
                pos: 12411
                length: 21
              pos: 12052
              length: 384
          children: []
          pos: 12001
          length: 435
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: processForTesting
              children: []
              pos: 12511
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node externsRoot
                children: []
                pos: 12529
                length: 16
              pos: 12498
              length: 639
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(scopeCreator == null);
                children: []
                pos: 12566
                length: 47
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(topScope == null);
                children: []
                pos: 12618
                length: 43
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(jsRoot.getParent() != null);
                children: []
                pos: 12667
                length: 53
              - type: local_variable_declaration
                fields:
                  text: Node externsAndJsRoot = jsRoot.getParent();
                children: []
                pos: 12725
                length: 43
              - type: expression_statement
                fields:
                  text: scopeCreator = new MemoizedScopeCreator(new TypedScopeCreator(compiler));
                children: []
                pos: 12774
                length: 73
              - type: expression_statement
                fields:
                  text: topScope = scopeCreator.createScope(externsAndJsRoot, null);
                children: []
                pos: 12852
                length: 60
              - type: local_variable_declaration
                fields:
                  text: |-
                    TypeInferencePass inference = new TypeInferencePass(compiler,
                            reverseInterpreter, topScope, scopeCreator);
                children: []
                pos: 12918
                length: 114
              - type: expression_statement
                fields:
                  text: inference.process(externsRoot, jsRoot);
                children: []
                pos: 13038
                length: 39
              - type: expression_statement
                fields:
                  text: process(externsRoot, jsRoot);
                children: []
                pos: 13082
                length: 29
              - type: return_statement
                fields:
                  text: return topScope;
                children: []
                pos: 13117
                length: 16
              pos: 12560
              length: 577
          children: []
          pos: 12498
          length: 639
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: check
              children: []
              pos: 13154
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node node
                children: []
                pos: 13160
                length: 9
              pos: 13142
              length: 349
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(node);
                children: []
                pos: 13194
                length: 33
              - type: local_variable_declaration
                fields:
                  text: NodeTraversal t = new NodeTraversal(compiler, this, scopeCreator);
                children: []
                pos: 13233
                length: 66
              - type: expression_statement
                fields:
                  text: inExterns = externs;
                children: []
                pos: 13304
                length: 20
              - type: expression_statement
                fields:
                  text: t.traverseWithScope(node, topScope);
                children: []
                pos: 13329
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: externs
                        children: []
                        pos: 13374
                        length: 7
                    children: []
                    pos: 13373
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: inferJSDocInfo.process(node, null);
                    children: []
                    pos: 13391
                    length: 35
                  pos: 13383
                  length: 49
                pos: 13370
                length: 117
              pos: 13188
              length: 303
          children: []
          pos: 13142
          length: 349
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkNoTypeCheckSection
              children: []
              pos: 13509
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 13533
                length: 6
              pos: 13496
              length: 537
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 13577
                        length: 11
                    children: []
                    pos: 13576
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.SCRIPT:
                              case Token.BLOCK:
                              case Token.VAR:
                              case Token.FUNCTION:
                              case Token.ASSIGN:
                                JSDocInfo info = n.getJSDocInfo();
                                if (info != null && info.isNoTypeCheck()) {
                                  if (enterSection) {
                                    noTypeCheckSection++;
                                  } else {
                                    noTypeCheckSection--;
                                  }
                                }
                                validator.setShouldReport(noTypeCheckSection == 0);
                                break;
                            }
                    children: []
                    pos: 13590
                    length: 439
                children: []
                pos: 13569
                length: 460
              pos: 13563
              length: 470
          children: []
          pos: 13496
          length: 537
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: report
              children: []
              pos: 14050
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 14057
                length: 15
              pos: 14037
              length: 195
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: noTypeCheckSection
                            children: []
                            pos: 14150
                            length: 18
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 14172
                            length: 1
                        children: []
                        pos: 14150
                        length: 23
                    children: []
                    pos: 14149
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: t.report(n, diagnosticType, arguments);
                    children: []
                    pos: 14183
                    length: 39
                  pos: 14175
                  length: 53
                pos: 14146
                length: 82
              pos: 14140
              length: 92
          children: []
          pos: 14037
          length: 195
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: shouldTraverse
              children: []
              pos: 14251
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 14273
                length: 15
              pos: 14236
              length: 1243
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: checkNoTypeCheckSection(n, true);
                children: []
                pos: 14317
                length: 33
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 14363
                        length: 11
                    children: []
                    pos: 14362
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.FUNCTION:
                                // normal type checking
                                final TypeCheck outerThis = this;
                                final Scope outerScope = t.getScope();
                                final FunctionType functionType = (FunctionType) n.getJSType();
                                final String functionPrivateName = n.getFirstChild().getString();
                                if (functionPrivateName != null && functionPrivateName.length() > 0 &&
                                    outerScope.isDeclared(functionPrivateName, false) &&
                                    // Ideally, we would want to check whether the type in the scope
                                    // differs from the type being defined, but then the extern
                                    // redeclarations of built-in types generates spurious warnings.
                                    !(outerScope.getVar(
                                        functionPrivateName).getType() instanceof FunctionType)) {
                                  report(t, n, FUNCTION_MASKS_VARIABLE, functionPrivateName);
                                }

                                // TODO(user): Only traverse the function's body. The function's
                                // name and arguments are traversed by the scope creator, and ideally
                                // should not be traversed by the type checker.
                                break;
                            }
                    children: []
                    pos: 14376
                    length: 1082
                children: []
                pos: 14355
                length: 1103
              - type: return_statement
                fields:
                  text: return true;
                children: []
                pos: 15463
                length: 12
              pos: 14311
              length: 1168
          children: []
          pos: 14236
          length: 1243
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visit
              children: []
              pos: 15940
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 15946
                length: 15
              pos: 15928
              length: 10111
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType childType;
                children: []
                pos: 15990
                length: 17
              - type: local_variable_declaration
                fields:
                  text: JSType leftType, rightType;
                children: []
                pos: 16012
                length: 27
              - type: local_variable_declaration
                fields:
                  text: Node left, right;
                children: []
                pos: 16044
                length: 17
              - type: local_variable_declaration
                fields:
                  text: boolean typeable = true;
                children: []
                pos: 16132
                length: 24
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 16170
                        length: 11
                    children: []
                    pos: 16169
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.NAME:
                                typeable = visitName(t, n, parent);
                                break;

                              case Token.LP:
                                // If this is under a FUNCTION node, it is a parameter list and can be
                                // ignored here.
                                if (parent.getType() != Token.FUNCTION) {
                                  ensureTyped(t, n, getJSType(n.getFirstChild()));
                                } else {
                                  typeable = false;
                                }
                                break;

                              case Token.COMMA:
                                ensureTyped(t, n, getJSType(n.getLastChild()));
                                break;

                              case Token.TRUE:
                              case Token.FALSE:
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.THIS:
                                ensureTyped(t, n, t.getScope().getTypeOfThis());
                                break;

                              case Token.REF_SPECIAL:
                                ensureTyped(t, n);
                                break;

                              case Token.GET_REF:
                                ensureTyped(t, n, getJSType(n.getFirstChild()));
                                break;

                              case Token.NULL:
                                ensureTyped(t, n, NULL_TYPE);
                                break;

                              case Token.NUMBER:
                                if (n.getParent().getType() != Token.OBJECTLIT) {
                                  ensureTyped(t, n, NUMBER_TYPE);
                                } else {
                                  typeable = false;
                                }
                                break;

                              case Token.ARRAYLIT:
                                ensureTyped(t, n, ARRAY_TYPE);
                                break;

                              case Token.STRING:
                                if (n.getParent().getType() != Token.OBJECTLIT) {
                                  ensureTyped(t, n, STRING_TYPE);
                                } else {
                                  typeable = false;
                                }
                                break;

                              case Token.REGEXP:
                                ensureTyped(t, n, REGEXP_TYPE);
                                break;

                              case Token.GETPROP:
                                visitGetProp(t, n, parent);
                                typeable = !(parent.getType() == Token.ASSIGN &&
                                             parent.getFirstChild() == n);
                                break;

                              case Token.GETELEM:
                                visitGetElem(t, n);
                                // The type of GETELEM is always unknown, so no point counting that.
                                // If that unknown leaks elsewhere (say by an assignment to another
                                // variable), then it will be counted.
                                typeable = false;
                                break;

                              case Token.VAR:
                                visitVar(t, n);
                                typeable = false;
                                break;

                              case Token.NEW:
                                visitNew(t, n);
                                typeable = true;
                                break;

                              case Token.CALL:
                                visitCall(t, n);
                                typeable = !NodeUtil.isExpressionNode(parent);
                                break;

                              case Token.RETURN:
                                visitReturn(t, n);
                                typeable = false;
                                break;

                              case Token.DEC:
                              case Token.INC:
                                left = n.getFirstChild();
                                validator.expectNumber(
                                    t, left, getJSType(left), "increment/decrement");
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.NOT:
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.VOID:
                                ensureTyped(t, n, VOID_TYPE);
                                break;

                              case Token.TYPEOF:
                                ensureTyped(t, n, STRING_TYPE);
                                break;

                              case Token.BITNOT:
                                childType = getJSType(n.getFirstChild());
                                if (!childType.matchesInt32Context()) {
                                  report(t, n, BIT_OPERATION, NodeUtil.opToStr(n.getType()),
                                      childType.toString());
                                }
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.POS:
                              case Token.NEG:
                                left = n.getFirstChild();
                                validator.expectNumber(t, left, getJSType(left), "sign operator");
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.EQ:
                              case Token.NE: {
                                leftType = getJSType(n.getFirstChild());
                                rightType = getJSType(n.getLastChild());

                                JSType leftTypeRestricted = leftType.restrictByNotNullOrUndefined();
                                JSType rightTypeRestricted = rightType.restrictByNotNullOrUndefined();
                                TernaryValue result =
                                    leftTypeRestricted.testForEquality(rightTypeRestricted);
                                if (result != TernaryValue.UNKNOWN) {
                                  if (n.getType() == Token.NE) {
                                    result = result.not();
                                  }
                                  report(t, n, DETERMINISTIC_TEST, leftType.toString(),
                                      rightType.toString(), result.toString());
                                }
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;
                              }

                              case Token.SHEQ:
                              case Token.SHNE: {
                                leftType = getJSType(n.getFirstChild());
                                rightType = getJSType(n.getLastChild());

                                JSType leftTypeRestricted = leftType.restrictByNotNullOrUndefined();
                                JSType rightTypeRestricted = rightType.restrictByNotNullOrUndefined();
                                if (!leftTypeRestricted.canTestForShallowEqualityWith(
                                        rightTypeRestricted)) {
                                  report(t, n, DETERMINISTIC_TEST_NO_RESULT, leftType.toString(),
                                      rightType.toString());
                                }
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;
                              }

                              case Token.LT:
                              case Token.LE:
                              case Token.GT:
                              case Token.GE:
                                leftType = getJSType(n.getFirstChild());
                                rightType = getJSType(n.getLastChild());
                                if (rightType.isNumber()) {
                                  validator.expectNumber(
                                      t, n, leftType, "left side of numeric comparison");
                                } else if (leftType.isNumber()) {
                                  validator.expectNumber(
                                      t, n, rightType, "right side of numeric comparison");
                                } else if (leftType.matchesNumberContext() &&
                                           rightType.matchesNumberContext()) {
                                  // OK.
                                } else {
                                  // Whether the comparison is numeric will be determined at runtime
                                  // each time the expression is evaluated. Regardless, both operands
                                  // should match a string context.
                                  String message = "left side of comparison";
                                  validator.expectString(t, n, leftType, message);
                                  validator.expectNotVoid(
                                      t, n, leftType, message, getNativeType(STRING_TYPE));
                                  message = "right side of comparison";
                                  validator.expectString(t, n, rightType, message);
                                  validator.expectNotVoid(
                                      t, n, rightType, message, getNativeType(STRING_TYPE));
                                }
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.IN:
                                left = n.getFirstChild();
                                right = n.getLastChild();
                                leftType = getJSType(left);
                                rightType = getJSType(right);
                                validator.expectObject(t, n, rightType, "'in' requires an object");
                                validator.expectString(t, left, leftType, "left side of 'in'");
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.INSTANCEOF:
                                left = n.getFirstChild();
                                right = n.getLastChild();
                                leftType = getJSType(left);
                                rightType = getJSType(right).restrictByNotNullOrUndefined();

                                validator.expectAnyObject(
                                    t, left, leftType, "deterministic instanceof yields false");
                                validator.expectActualObject(
                                    t, right, rightType, "instanceof requires an object");
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.ASSIGN:
                                visitAssign(t, n);
                                typeable = false;
                                break;

                              case Token.ASSIGN_LSH:
                              case Token.ASSIGN_RSH:
                              case Token.ASSIGN_URSH:
                              case Token.ASSIGN_DIV:
                              case Token.ASSIGN_MOD:
                              case Token.ASSIGN_BITOR:
                              case Token.ASSIGN_BITXOR:
                              case Token.ASSIGN_BITAND:
                              case Token.ASSIGN_SUB:
                              case Token.ASSIGN_ADD:
                              case Token.ASSIGN_MUL:
                              case Token.LSH:
                              case Token.RSH:
                              case Token.URSH:
                              case Token.DIV:
                              case Token.MOD:
                              case Token.BITOR:
                              case Token.BITXOR:
                              case Token.BITAND:
                              case Token.SUB:
                              case Token.ADD:
                              case Token.MUL:
                                visitBinaryOperator(n.getType(), t, n);
                                break;

                              case Token.DELPROP:
                                if (!isReference(n.getFirstChild())) {
                                  report(t, n, BAD_DELETE);
                                }
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.CASE:
                                JSType switchType = getJSType(parent.getFirstChild());
                                JSType caseType = getJSType(n.getFirstChild());
                                validator.expectSwitchMatchesCase(t, n, switchType, caseType);
                                typeable = false;
                                break;

                              case Token.WITH: {
                                Node child = n.getFirstChild();
                                childType = getJSType(child);
                                validator.expectObject(
                                    t, child, childType, "with requires an object");
                                typeable = false;
                                break;
                              }

                              case Token.FUNCTION:
                                visitFunction(t, n);
                                break;

                              // These nodes have no interesting type behavior.
                              case Token.LABEL:
                              case Token.LABEL_NAME:
                              case Token.SWITCH:
                              case Token.BREAK:
                              case Token.CATCH:
                              case Token.TRY:
                              case Token.SCRIPT:
                              case Token.EXPR_RESULT:
                              case Token.BLOCK:
                              case Token.EMPTY:
                              case Token.DEFAULT:
                              case Token.CONTINUE:
                              case Token.DEBUGGER:
                              case Token.THROW:
                                typeable = false;
                                break;

                              // These nodes require data flow analysis.
                              case Token.DO:
                              case Token.FOR:
                              case Token.IF:
                              case Token.WHILE:
                                typeable = false;
                                break;

                              // These nodes are typed during the type inference.
                              case Token.AND:
                              case Token.HOOK:
                              case Token.OBJECTLIT:
                              case Token.OR:
                                if (n.getJSType() != null) { // If we didn't run type inference.
                                  ensureTyped(t, n);
                                } else {
                                  // If this is an enum, then give that type to the objectlit as well.
                                  if ((n.getType() == Token.OBJECTLIT)
                                      && (parent.getJSType() instanceof EnumType)) {
                                    ensureTyped(t, n, parent.getJSType());
                                  } else {
                                    ensureTyped(t, n);
                                  }
                                }
                                break;

                              default:
                                report(t, n, UNEXPECTED_TOKEN, Token.name(n.getType()));
                                ensureTyped(t, n);
                                break;
                            }
                    children: []
                    pos: 16183
                    length: 9630
                children: []
                pos: 16162
                length: 9651
              - type: expression_statement
                fields:
                  text: typeable = typeable && !inExterns;
                children: []
                pos: 25896
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: typeable
                        children: []
                        pos: 25940
                        length: 8
                    children: []
                    pos: 25939
                    length: 10
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: doPercentTypedAccounting(t, n);
                    children: []
                    pos: 25958
                    length: 31
                  pos: 25950
                  length: 45
                pos: 25936
                length: 59
              - type: expression_statement
                fields:
                  text: checkNoTypeCheckSection(n, false);
                children: []
                pos: 26001
                length: 34
              pos: 15984
              length: 10055
          children: []
          pos: 15928
          length: 10111
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: doPercentTypedAccounting
              children: []
              pos: 26162
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 26187
                length: 15
              pos: 26149
              length: 384
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 26218
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: type
                            children: []
                            pos: 26255
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 26263
                            length: 4
                        children: []
                        pos: 26255
                        length: 12
                    children: []
                    pos: 26254
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: nullCount++;
                    children: []
                    pos: 26277
                    length: 12
                  pos: 26269
                  length: 26
                pos: 26251
                length: 278
              pos: 26212
              length: 321
          children: []
          pos: 26149
          length: 384
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitAssign
              children: []
              pos: 26885
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 26897
                length: 15
              pos: 26872
              length: 3765
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSDocInfo info = assign.getJSDocInfo();
                children: []
                pos: 26933
                length: 39
              - type: local_variable_declaration
                fields:
                  text: Node lvalue = assign.getFirstChild();
                children: []
                pos: 26977
                length: 37
              - type: local_variable_declaration
                fields:
                  text: Node rvalue = assign.getLastChild();
                children: []
                pos: 27019
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: lvalue.getType()
                            children: []
                            pos: 27065
                            length: 16
                          right:
                            type: field_access
                            fields:
                              text: Token.GETPROP
                            children: []
                            pos: 27085
                            length: 13
                        children: []
                        pos: 27065
                        length: 33
                    children: []
                    pos: 27064
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Node object = lvalue.getFirstChild();
                    children: []
                    pos: 27108
                    length: 37
                  - type: local_variable_declaration
                    fields:
                      text: JSType objectJsType = getJSType(object);
                    children: []
                    pos: 27152
                    length: 40
                  - type: local_variable_declaration
                    fields:
                      text: String property = lvalue.getLastChild().getString();
                    children: []
                    pos: 27199
                    length: 52
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: object.getType()
                                children: []
                                pos: 27383
                                length: 16
                              right:
                                type: field_access
                                fields:
                                  text: Token.GETPROP
                                children: []
                                pos: 27403
                                length: 13
                            children: []
                            pos: 27383
                            length: 33
                        children: []
                        pos: 27382
                        length: 35
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType jsType = getJSType(object.getFirstChild());
                        children: []
                        pos: 27428
                        length: 50
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: jsType.isInterface()
                                    children: []
                                    pos: 27491
                                    length: 20
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: object.getLastChild().getString().equals("prototype")
                                    children: []
                                    pos: 27527
                                    length: 53
                                children: []
                                pos: 27491
                                length: 89
                            children: []
                            pos: 27490
                            length: 91
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: visitInterfaceGetprop(t, assign, object, property,
                                lvalue, rvalue);
                            children: []
                            pos: 27594
                            length: 67
                          pos: 27582
                          length: 89
                        pos: 27487
                        length: 184
                      pos: 27418
                      length: 261
                    pos: 27379
                    length: 300
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: info
                                    children: []
                                    pos: 27735
                                    length: 4
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 27743
                                    length: 4
                                children: []
                                pos: 27735
                                length: 12
                              right:
                                type: method_invocation
                                fields:
                                  text: info.hasType()
                                children: []
                                pos: 27751
                                length: 14
                            children: []
                            pos: 27735
                            length: 30
                        children: []
                        pos: 27734
                        length: 32
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            visitAnnotatedAssignGetprop(t, assign,
                                        info.getType().evaluate(t.getScope(), typeRegistry), object,
                                        property, rvalue);
                        children: []
                        pos: 27777
                        length: 142
                      - type: return_statement
                        fields:
                          text: return;
                        children: []
                        pos: 27928
                        length: 7
                      pos: 27767
                      length: 176
                    pos: 27731
                    length: 212
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: info
                                    children: []
                                    pos: 27999
                                    length: 4
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 28007
                                    length: 4
                                children: []
                                pos: 27999
                                length: 12
                              right:
                                type: method_invocation
                                fields:
                                  text: info.hasEnumParameterType()
                                children: []
                                pos: 28015
                                length: 27
                            children: []
                            pos: 27999
                            length: 43
                        children: []
                        pos: 27998
                        length: 45
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            checkEnumInitializer(
                                        t, rvalue, info.getEnumParameterType().evaluate(
                                            t.getScope(), typeRegistry));
                        children: []
                        pos: 28054
                        length: 128
                      - type: return_statement
                        fields:
                          text: return;
                        children: []
                        pos: 28191
                        length: 7
                      pos: 28044
                      length: 162
                    pos: 27995
                    length: 211
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: property.equals("prototype")
                            children: []
                            pos: 28251
                            length: 28
                        children: []
                        pos: 28250
                        length: 30
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: instanceof_expression
                                fields:
                                  text: objectJsType instanceof FunctionType
                                children: []
                                pos: 28295
                                length: 36
                            children: []
                            pos: 28294
                            length: 38
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: local_variable_declaration
                            fields:
                              text: FunctionType functionType = (FunctionType) objectJsType;
                            children: []
                            pos: 28345
                            length: 56
                          - type: if_statement
                            fields:
                              condition:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: method_invocation
                                    fields:
                                      text: functionType.isConstructor()
                                    children: []
                                    pos: 28416
                                    length: 28
                                children: []
                                pos: 28415
                                length: 30
                            children:
                            - type: block
                              fields: {}
                              children:
                              - type: local_variable_declaration
                                fields:
                                  text: JSType rvalueType = rvalue.getJSType();
                                children: []
                                pos: 28460
                                length: 39
                              - type: expression_statement
                                fields:
                                  text: |-
                                    validator.expectObject(t, rvalue, rvalueType,
                                                    OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
                                children: []
                                pos: 28512
                                length: 100
                              pos: 28446
                              length: 178
                            pos: 28412
                            length: 212
                          pos: 28333
                          length: 301
                        pos: 28291
                        length: 409
                      - type: return_statement
                        fields:
                          text: return;
                        children: []
                        pos: 28709
                        length: 7
                      pos: 28281
                      length: 443
                    pos: 28247
                    length: 477
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: object.getType()
                                children: []
                                pos: 28778
                                length: 16
                              right:
                                type: field_access
                                fields:
                                  text: Token.GETPROP
                                children: []
                                pos: 28798
                                length: 13
                            children: []
                            pos: 28778
                            length: 33
                        children: []
                        pos: 28777
                        length: 35
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: Node object2 = object.getFirstChild();
                        children: []
                        pos: 28823
                        length: 38
                      - type: local_variable_declaration
                        fields:
                          text: String property2 = NodeUtil.getStringValue(object.getLastChild());
                        children: []
                        pos: 28870
                        length: 66
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: method_invocation
                                fields:
                                  text: '"prototype".equals(property2)'
                                children: []
                                pos: 28950
                                length: 29
                            children: []
                            pos: 28949
                            length: 31
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: local_variable_declaration
                            fields:
                              text: JSType jsType = object2.getJSType();
                            children: []
                            pos: 28993
                            length: 36
                          - type: if_statement
                            fields:
                              condition:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: instanceof_expression
                                    fields:
                                      text: jsType instanceof FunctionType
                                    children: []
                                    pos: 29044
                                    length: 30
                                children: []
                                pos: 29043
                                length: 32
                            children:
                            - type: block
                              fields: {}
                              children:
                              - type: local_variable_declaration
                                fields:
                                  text: FunctionType functionType = (FunctionType)
                                    jsType;
                                children: []
                                pos: 29090
                                length: 50
                              - type: if_statement
                                fields:
                                  condition:
                                    type: parenthesized_expression
                                    fields:
                                      expression:
                                        type: or
                                        fields:
                                          left:
                                            type: method_invocation
                                            fields:
                                              text: functionType.isConstructor()
                                            children: []
                                            pos: 29157
                                            length: 28
                                          right:
                                            type: method_invocation
                                            fields:
                                              text: functionType.isInterface()
                                            children: []
                                            pos: 29189
                                            length: 26
                                        children: []
                                        pos: 29157
                                        length: 58
                                    children: []
                                    pos: 29156
                                    length: 60
                                children:
                                - type: block
                                  fields: {}
                                  children:
                                  - type: expression_statement
                                    fields:
                                      text: |-
                                        checkDeclaredPropertyInheritance(
                                                          t, assign, functionType, property, info, getJSType(rvalue));
                                    children: []
                                    pos: 29233
                                    length: 112
                                  pos: 29217
                                  length: 142
                                pos: 29153
                                length: 206
                              pos: 29076
                              length: 295
                            pos: 29040
                            length: 401
                          - type: return_statement
                            fields:
                              text: return;
                            children: []
                            pos: 29452
                            length: 7
                          pos: 28981
                          length: 488
                        pos: 28946
                        length: 523
                      pos: 28813
                      length: 664
                    pos: 28774
                    length: 703
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        ObjectType type = ObjectType.cast(
                                  objectJsType.restrictByNotNullOrUndefined());
                    children: []
                    pos: 29517
                    length: 90
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 29618
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 29626
                                length: 4
                            children: []
                            pos: 29618
                            length: 12
                        children: []
                        pos: 29617
                        length: 14
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: and
                                    fields:
                                      left:
                                        type: method_invocation
                                        fields:
                                          text: type.hasProperty(property)
                                        children: []
                                        pos: 29646
                                        length: 26
                                      right:
                                        type: unary_expression
                                        fields:
                                          text: "!type.isPropertyTypeInferred(property)"
                                        children: []
                                        pos: 29688
                                        length: 38
                                    children: []
                                    pos: 29646
                                    length: 80
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: "!propertyIsImplicitCast(type, property)"
                                    children: []
                                    pos: 29742
                                    length: 39
                                children: []
                                pos: 29646
                                length: 135
                            children: []
                            pos: 29645
                            length: 137
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: |-
                                validator.expectCanAssignToPropertyOf(
                                              t, assign, getJSType(rvalue),
                                              type.getPropertyType(property), object, property);
                            children: []
                            pos: 29795
                            length: 147
                          pos: 29783
                          length: 169
                        pos: 29642
                        length: 310
                      - type: return_statement
                        fields:
                          text: return;
                        children: []
                        pos: 29961
                        length: 7
                      pos: 29632
                      length: 344
                    pos: 29614
                    length: 362
                  pos: 27100
                  length: 2882
                pos: 27061
                length: 3226
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = getJSType(lvalue);
                children: []
                pos: 30318
                length: 36
              - type: local_variable_declaration
                fields:
                  text: Node rightChild = assign.getLastChild();
                children: []
                pos: 30359
                length: 40
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = getJSType(rightChild);
                children: []
                pos: 30404
                length: 41
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: |-
                            validator.expectCanAssignTo(
                                        t, assign, rightType, leftType, "assignment")
                        children: []
                        pos: 30454
                        length: 86
                    children: []
                    pos: 30453
                    length: 88
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, assign, rightType);
                    children: []
                    pos: 30550
                    length: 34
                  pos: 30542
                  length: 48
                pos: 30450
                length: 183
              pos: 26927
              length: 3710
          children: []
          pos: 26872
          length: 3765
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: propertyIsImplicitCast
              children: []
              pos: 30771
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: ObjectType type
                children: []
                pos: 30794
                length: 15
              pos: 30755
              length: 309
            body:
              type: block
              fields: {}
              children:
              - type: for_statement
                fields:
                  text: |-
                    for (; type != null; type = type.getImplicitPrototype()) {
                          JSDocInfo docInfo = type.getOwnPropertyJSDocInfo(prop);
                          if (docInfo != null && docInfo.isImplicitCast()) {
                            return true;
                          }
                        }
                children: []
                pos: 30830
                length: 212
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 31047
                length: 13
              pos: 30824
              length: 240
          children: []
          pos: 30755
          length: 309
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkDeclaredPropertyInheritance
              children: []
              pos: 31333
              length: 32
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 31373
                length: 15
              pos: 31320
              length: 3896
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: ctorType.hasUnknownSupertype()
                        children: []
                        pos: 31834
                        length: 30
                    children: []
                    pos: 31833
                    length: 32
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 31874
                    length: 7
                  pos: 31866
                  length: 21
                pos: 31830
                length: 57
              - type: local_variable_declaration
                fields:
                  text: FunctionType superClass = ctorType.getSuperClassConstructor();
                children: []
                pos: 31893
                length: 62
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean superClassHasProperty = superClass != null &&
                            superClass.getPrototype().hasProperty(propertyName);
                children: []
                pos: 31960
                length: 114
              - type: local_variable_declaration
                fields:
                  text: boolean declaredOverride = info != null && info.isOverride();
                children: []
                pos: 32079
                length: 61
              - type: local_variable_declaration
                fields:
                  text: boolean foundInterfaceProperty = false;
                children: []
                pos: 32146
                length: 39
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: ctorType.isConstructor()
                        children: []
                        pos: 32194
                        length: 24
                    children: []
                    pos: 32193
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: enhanced_for_statement
                    fields:
                      text: |-
                        for (JSType implementedInterface : ctorType.getImplementedInterfaces()) {
                                if (implementedInterface.isUnknownType()) {
                                  continue;
                                }
                                FunctionType interfaceType =
                                    implementedInterface.toObjectType().getConstructor();
                                boolean interfaceHasProperty =
                                    interfaceType.getPrototype().hasProperty(propertyName);
                                foundInterfaceProperty = foundInterfaceProperty || interfaceHasProperty;
                                if (reportMissingOverride.isOn() && !declaredOverride &&
                                    interfaceHasProperty) {
                                  // @override not present, but the property does override an interface
                                  // property
                                  compiler.report(t.makeError(n, reportMissingOverride,
                                      HIDDEN_INTERFACE_PROPERTY, propertyName,
                                      interfaceType.getTopMostDefiningType(propertyName).toString()));
                                }
                                if (!declaredOverride) {
                                  continue;
                                }
                                // @override is present and we have to check that it is ok
                                if (interfaceHasProperty) {
                                  JSType interfacePropType =
                                      interfaceType.getPrototype().getPropertyType(propertyName);
                                  if (!propertyType.canAssignTo(interfacePropType)) {
                                    compiler.report(t.makeError(n,
                                        HIDDEN_INTERFACE_PROPERTY_MISMATCH, propertyName,
                                        interfaceType.getTopMostDefiningType(propertyName).toString(),
                                        interfacePropType.toString(), propertyType.toString()));
                                  }
                                }
                              }
                    children: []
                    pos: 32228
                    length: 1487
                  pos: 32220
                  length: 1501
                pos: 32190
                length: 1531
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: unary_expression
                            fields:
                              text: "!declaredOverride"
                            children: []
                            pos: 33731
                            length: 17
                          right:
                            type: unary_expression
                            fields:
                              text: "!superClassHasProperty"
                            children: []
                            pos: 33752
                            length: 22
                        children: []
                        pos: 33731
                        length: 43
                    children: []
                    pos: 33730
                    length: 45
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 33844
                    length: 7
                  pos: 33776
                  length: 81
                pos: 33727
                length: 130
              - type: local_variable_declaration
                fields:
                  text: |-
                    JSType topInstanceType = superClassHasProperty ?
                            superClass.getTopMostDefiningType(propertyName) : null;
                children: []
                pos: 33863
                length: 112
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: reportMissingOverride.isOn()
                                    children: []
                                    pos: 33984
                                    length: 28
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: ctorType.isConstructor()
                                    children: []
                                    pos: 34016
                                    length: 24
                                children: []
                                pos: 33984
                                length: 56
                              right:
                                type: unary_expression
                                fields:
                                  text: "!declaredOverride"
                                children: []
                                pos: 34052
                                length: 17
                            children: []
                            pos: 33984
                            length: 85
                          right:
                            type: identifier
                            fields:
                              text: superClassHasProperty
                            children: []
                            pos: 34073
                            length: 21
                        children: []
                        pos: 33984
                        length: 110
                    children: []
                    pos: 33983
                    length: 112
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        compiler.report(t.makeError(n, reportMissingOverride,
                                  HIDDEN_SUPERCLASS_PROPERTY, propertyName,
                                  topInstanceType.toString()));
                    children: []
                    pos: 34198
                    length: 145
                  pos: 34096
                  length: 253
                pos: 33980
                length: 369
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!declaredOverride"
                        children: []
                        pos: 34358
                        length: 17
                    children: []
                    pos: 34357
                    length: 19
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 34424
                    length: 7
                  pos: 34377
                  length: 60
                pos: 34354
                length: 83
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: superClassHasProperty
                        children: []
                        pos: 34509
                        length: 21
                    children: []
                    pos: 34508
                    length: 23
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        JSType superClassPropType =
                                  superClass.getPrototype().getPropertyType(propertyName);
                    children: []
                    pos: 34586
                    length: 94
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: unary_expression
                            fields:
                              text: "!propertyType.canAssignTo(superClassPropType)"
                            children: []
                            pos: 34691
                            length: 45
                        children: []
                        pos: 34690
                        length: 47
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            compiler.report(
                                        t.makeError(n, HIDDEN_SUPERCLASS_PROPERTY_MISMATCH,
                                            propertyName, topInstanceType.toString(),
                                            superClassPropType.toString(), propertyType.toString()));
                        children: []
                        pos: 34748
                        length: 212
                      pos: 34738
                      length: 230
                    pos: 34687
                    length: 281
                  pos: 34532
                  length: 442
                pos: 34505
                length: 707
              pos: 31485
              length: 3731
          children: []
          pos: 31320
          length: 3896
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitInterfaceGetprop
              children: []
              pos: 35354
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 35376
                length: 15
              pos: 35341
              length: 1206
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType rvalueType = getJSType(rvalue);
                children: []
                pos: 35475
                length: 38
              - type: local_variable_declaration
                fields:
                  text: |-
                    String abstractMethodName =
                            compiler.getCodingConvention().getAbstractMethodName();
                children: []
                pos: 35712
                length: 91
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: unary_expression
                            fields:
                              text: "!rvalueType.isOrdinaryFunction()"
                            children: []
                            pos: 35812
                            length: 32
                          right:
                            type: unary_expression
                            fields:
                              text: |-
                                !(rvalue.isQualifiedName() &&
                                          rvalue.getQualifiedName().equals(abstractMethodName))
                            children: []
                            pos: 35856
                            length: 93
                        children: []
                        pos: 35812
                        length: 137
                    children: []
                    pos: 35811
                    length: 139
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        String abstractMethodMessage = (abstractMethodName != null)
                                 ? ", or " + abstractMethodName
                                 : "";
                    children: []
                    pos: 36034
                    length: 114
                  - type: expression_statement
                    fields:
                      text: |-
                        compiler.report(
                                  t.makeError(object, INVALID_INTERFACE_MEMBER_DECLARATION,
                                      abstractMethodMessage));
                    children: []
                    pos: 36155
                    length: 123
                  pos: 35951
                  length: 333
                pos: 35808
                length: 476
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: assign.getLastChild().getType()
                                children: []
                                pos: 36294
                                length: 31
                              right:
                                type: field_access
                                fields:
                                  text: Token.FUNCTION
                                children: []
                                pos: 36329
                                length: 14
                            children: []
                            pos: 36294
                            length: 49
                          right:
                            type: unary_expression
                            fields:
                              text: "!NodeUtil.isEmptyBlock(assign.getLastChild().getLastChild())"
                            children: []
                            pos: 36355
                            length: 60
                        children: []
                        pos: 36294
                        length: 121
                    children: []
                    pos: 36293
                    length: 123
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        compiler.report(
                                  t.makeError(object, INTERFACE_FUNCTION_NOT_EMPTY,
                                      abstractMethodName));
                    children: []
                    pos: 36425
                    length: 112
                  pos: 36417
                  length: 126
                pos: 36290
                length: 253
              pos: 35468
              length: 1079
          children: []
          pos: 35341
          length: 1206
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitAnnotatedAssignGetprop
              children: []
              pos: 36716
              length: 27
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 36744
                length: 15
              pos: 36703
              length: 297
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    validator.expectCanAssignToPropertyOf(t, assign, getJSType(rvalue), type,
                            object, property);
                children: []
                pos: 36896
                length: 100
              pos: 36836
              length: 164
          children: []
          pos: 36703
          length: 297
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitName
              children: []
              pos: 37329
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 37339
                length: 15
              pos: 37321
              length: 1088
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int parentNodeType = parent.getType();
                children: []
                pos: 37835
                length: 38
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: or
                                fields:
                                  left:
                                    type: equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: parentNodeType
                                        children: []
                                        pos: 37882
                                        length: 14
                                      right:
                                        type: field_access
                                        fields:
                                          text: Token.FUNCTION
                                        children: []
                                        pos: 37900
                                        length: 14
                                    children: []
                                    pos: 37882
                                    length: 32
                                  right:
                                    type: equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: parentNodeType
                                        children: []
                                        pos: 37926
                                        length: 14
                                      right:
                                        type: field_access
                                        fields:
                                          text: Token.CATCH
                                        children: []
                                        pos: 37944
                                        length: 11
                                    children: []
                                    pos: 37926
                                    length: 29
                                children: []
                                pos: 37882
                                length: 73
                              right:
                                type: equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: parentNodeType
                                    children: []
                                    pos: 37967
                                    length: 14
                                  right:
                                    type: field_access
                                    fields:
                                      text: Token.LP
                                    children: []
                                    pos: 37985
                                    length: 8
                                children: []
                                pos: 37967
                                length: 26
                            children: []
                            pos: 37882
                            length: 111
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: parentNodeType
                                children: []
                                pos: 38005
                                length: 14
                              right:
                                type: field_access
                                fields:
                                  text: Token.VAR
                                children: []
                                pos: 38023
                                length: 9
                            children: []
                            pos: 38005
                            length: 27
                        children: []
                        pos: 37882
                        length: 150
                    children: []
                    pos: 37881
                    length: 152
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return false;
                    children: []
                    pos: 38042
                    length: 13
                  pos: 38034
                  length: 27
                pos: 37878
                length: 183
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 38067
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: type
                            children: []
                            pos: 38104
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 38112
                            length: 4
                        children: []
                        pos: 38104
                        length: 12
                    children: []
                    pos: 38103
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: type = getNativeType(UNKNOWN_TYPE);
                    children: []
                    pos: 38126
                    length: 35
                  - type: local_variable_declaration
                    fields:
                      text: Var var = t.getScope().getVar(n.getString());
                    children: []
                    pos: 38168
                    length: 45
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: var
                                children: []
                                pos: 38224
                                length: 3
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 38231
                                length: 4
                            children: []
                            pos: 38224
                            length: 11
                        children: []
                        pos: 38223
                        length: 13
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType varType = var.getType();
                        children: []
                        pos: 38247
                        length: 31
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: varType
                                    children: []
                                    pos: 38291
                                    length: 7
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 38302
                                    length: 4
                                children: []
                                pos: 38291
                                length: 15
                            children: []
                            pos: 38290
                            length: 17
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: type = varType;
                            children: []
                            pos: 38320
                            length: 15
                          pos: 38308
                          length: 37
                        pos: 38287
                        length: 58
                      pos: 38237
                      length: 116
                    pos: 38220
                    length: 133
                  pos: 38118
                  length: 241
                pos: 38100
                length: 259
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n, type);
                children: []
                pos: 38364
                length: 24
              - type: return_statement
                fields:
                  text: return true;
                children: []
                pos: 38393
                length: 12
              pos: 37377
              length: 1032
          children: []
          pos: 37321
          length: 1088
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitGetProp
              children: []
              pos: 38700
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 38713
                length: 15
              pos: 38687
              length: 1044
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: n.getJSType()
                                children: []
                                pos: 38972
                                length: 13
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 38989
                                length: 4
                            children: []
                            pos: 38972
                            length: 21
                          right:
                            type: equals
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: parent.getType()
                                children: []
                                pos: 38997
                                length: 16
                              right:
                                type: field_access
                                fields:
                                  text: Token.ASSIGN
                                children: []
                                pos: 39017
                                length: 12
                            children: []
                            pos: 38997
                            length: 32
                        children: []
                        pos: 38972
                        length: 57
                    children: []
                    pos: 38971
                    length: 59
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 39039
                    length: 7
                  pos: 39031
                  length: 21
                pos: 38968
                length: 84
              - type: local_variable_declaration
                fields:
                  text: Node property = n.getLastChild();
                children: []
                pos: 39264
                length: 33
              - type: local_variable_declaration
                fields:
                  text: Node objNode = n.getFirstChild();
                children: []
                pos: 39302
                length: 33
              - type: local_variable_declaration
                fields:
                  text: JSType childType = getJSType(objNode);
                children: []
                pos: 39340
                length: 38
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: |-
                            !validator.expectNotVoid(t, n, childType,
                                        "undefined has no properties", getNativeType(OBJECT_TYPE))
                        children: []
                        pos: 39479
                        length: 112
                    children: []
                    pos: 39478
                    length: 114
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, n);
                    children: []
                    pos: 39601
                    length: 18
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 39626
                    length: 7
                  pos: 39593
                  length: 46
                pos: 39475
                length: 164
              - type: expression_statement
                fields:
                  text: checkPropertyAccess(childType, property.getString(), t, n);
                children: []
                pos: 39645
                length: 59
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n);
                children: []
                pos: 39709
                length: 18
              pos: 38751
              length: 980
          children: []
          pos: 38687
          length: 1044
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkPropertyAccess
              children: []
              pos: 39815
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType childType
                children: []
                pos: 39835
                length: 16
              pos: 39802
              length: 1024
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: ObjectType objectType = childType.dereference();
                children: []
                pos: 39907
                length: 48
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: objectType
                            children: []
                            pos: 39964
                            length: 10
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 39978
                            length: 4
                        children: []
                        pos: 39964
                        length: 18
                    children: []
                    pos: 39963
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType propType = getJSType(n);
                    children: []
                    pos: 39992
                    length: 31
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: or
                                    fields:
                                      left:
                                        type: unary_expression
                                        fields:
                                          text: "!objectType.hasProperty(propName)"
                                        children: []
                                        pos: 40035
                                        length: 33
                                      right:
                                        type: method_invocation
                                        fields:
                                          text: objectType.equals(typeRegistry.getNativeType(UNKNOWN_TYPE))
                                        children: []
                                        pos: 40083
                                        length: 59
                                    children: []
                                    pos: 40035
                                    length: 107
                                children: []
                                pos: 40034
                                length: 109
                              right:
                                type: method_invocation
                                fields:
                                  text: propType.equals(typeRegistry.getNativeType(UNKNOWN_TYPE))
                                children: []
                                pos: 40157
                                length: 57
                            children: []
                            pos: 40034
                            length: 180
                        children: []
                        pos: 40033
                        length: 182
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: instanceof_expression
                                fields:
                                  text: objectType instanceof EnumType
                                children: []
                                pos: 40230
                                length: 30
                            children: []
                            pos: 40229
                            length: 32
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: report(t, n, INEXISTENT_ENUM_ELEMENT, propName);
                            children: []
                            pos: 40274
                            length: 48
                          pos: 40262
                          length: 70
                        pos: 40226
                        length: 432
                      pos: 40216
                      length: 450
                    pos: 40030
                    length: 636
                  pos: 39984
                  length: 688
                pos: 39960
                length: 862
              pos: 39901
              length: 925
          children: []
          pos: 39802
          length: 1024
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isPropertyTest
              children: []
              pos: 41053
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getProp
                children: []
                pos: 41068
                length: 12
              pos: 41037
              length: 763
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node parent = getProp.getParent();
                children: []
                pos: 41088
                length: 34
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: parent.getType()
                        children: []
                        pos: 41135
                        length: 16
                    children: []
                    pos: 41134
                    length: 18
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.CALL:
                                return parent.getFirstChild() != getProp &&
                                    compiler.getCodingConvention().isPropertyTestFunction(parent);

                              case Token.IF:
                              case Token.WHILE:
                              case Token.DO:
                              case Token.FOR:
                                return NodeUtil.getConditionExpression(parent) == getProp;

                              case Token.INSTANCEOF:
                              case Token.TYPEOF:
                                return true;

                              case Token.AND:
                              case Token.HOOK:
                                return parent.getFirstChild() == getProp;

                              case Token.NOT:
                                return parent.getParent().getType() == Token.OR &&
                                    parent.getParent().getFirstChild() == parent;
                            }
                    children: []
                    pos: 41153
                    length: 625
                children: []
                pos: 41127
                length: 651
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 41783
                length: 13
              pos: 41082
              length: 718
          children: []
          pos: 41037
          length: 763
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitGetElem
              children: []
              pos: 42043
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 42056
                length: 15
              pos: 42030
              length: 222
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 42087
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 42122
                length: 30
              - type: expression_statement
                fields:
                  text: validator.expectIndexMatch(t, n, getJSType(left), getJSType(right));
                children: []
                pos: 42157
                length: 68
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n);
                children: []
                pos: 42230
                length: 18
              pos: 42081
              length: 171
          children: []
          pos: 42030
          length: 222
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitVar
              children: []
              pos: 42491
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 42500
                length: 15
              pos: 42478
              length: 1336
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: 'JSDocInfo varInfo = n.hasOneChild() ? n.getJSDocInfo() :
                    null;'
                children: []
                pos: 42693
                length: 62
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (Node name : n.children()) {
                          Node value = name.getFirstChild();
                          // A null var would indicate a bug in the scope creation logic.
                          Var var = t.getScope().getVar(name.getString());

                          if (value != null) {
                            JSType valueType = getJSType(value);
                            JSType nameType = var.getType();
                            nameType = (nameType == null) ? getNativeType(UNKNOWN_TYPE) : nameType;

                            JSDocInfo info = name.getJSDocInfo();
                            if (info == null) {
                              info = varInfo;
                            }
                            if (info != null && info.hasEnumParameterType()) {
                              // var.getType() can never be null, this would indicate a bug in the
                              // scope creation logic.
                              checkEnumInitializer(
                                  t, value,
                                  info.getEnumParameterType().evaluate(t.getScope(), typeRegistry));
                            } else if (var.isTypeInferred()) {
                              ensureTyped(t, name, valueType);
                            } else {
                              validator.expectCanAssignTo(
                                  t, value, valueType, nameType, "initializing variable");
                            }
                          }
                        }
                children: []
                pos: 42760
                length: 1050
              pos: 42525
              length: 1289
          children: []
          pos: 42478
          length: 1336
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitNew
              children: []
              pos: 43867
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 43876
                length: 15
              pos: 43854
              length: 863
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node constructor = n.getFirstChild();
                children: []
                pos: 43907
                length: 37
              - type: local_variable_declaration
                fields:
                  text: FunctionType type = getFunctionType(constructor);
                children: []
                pos: 43949
                length: 49
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 44007
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 44015
                                length: 4
                            children: []
                            pos: 44007
                            length: 12
                          right:
                            type: method_invocation
                            fields:
                              text: type.isConstructor()
                            children: []
                            pos: 44023
                            length: 20
                        children: []
                        pos: 44007
                        length: 36
                    children: []
                    pos: 44006
                    length: 38
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: visitParameterList(t, n, type);
                    children: []
                    pos: 44053
                    length: 31
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, n, type.getInstanceType());
                    children: []
                    pos: 44091
                    length: 42
                  pos: 44045
                  length: 94
                pos: 44003
                length: 710
              pos: 43901
              length: 816
          children: []
          pos: 43854
          length: 863
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitFunction
              children: []
              pos: 44975
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 44989
                length: 15
              pos: 44962
              length: 1567
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSDocInfo info = n.getJSDocInfo();
                children: []
                pos: 45020
                length: 34
              - type: local_variable_declaration
                fields:
                  text: FunctionType functionType = (FunctionType) n.getJSType();
                children: []
                pos: 45060
                length: 57
              - type: local_variable_declaration
                fields:
                  text: String functionPrivateName = n.getFirstChild().getString();
                children: []
                pos: 45122
                length: 59
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: functionType.isInterface()
                            children: []
                            pos: 45190
                            length: 26
                          right:
                            type: method_invocation
                            fields:
                              text: functionType.isConstructor()
                            children: []
                            pos: 45220
                            length: 28
                        children: []
                        pos: 45190
                        length: 58
                    children: []
                    pos: 45189
                    length: 60
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        FunctionType baseConstructor = functionType.
                                  getPrototype().getImplicitPrototype().getConstructor();
                    children: []
                    pos: 45258
                    length: 110
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: not_equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: baseConstructor
                                        children: []
                                        pos: 45379
                                        length: 15
                                      right:
                                        type: null_literal
                                        fields: {}
                                        children: []
                                        pos: 45398
                                        length: 4
                                    children: []
                                    pos: 45379
                                    length: 23
                                  right:
                                    type: not_equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: baseConstructor
                                        children: []
                                        pos: 45416
                                        length: 15
                                      right:
                                        type: method_invocation
                                        fields:
                                          text: getNativeType(OBJECT_FUNCTION_TYPE)
                                        children: []
                                        pos: 45435
                                        length: 35
                                    children: []
                                    pos: 45416
                                    length: 54
                                children: []
                                pos: 45379
                                length: 91
                              right:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: or
                                    fields:
                                      left:
                                        type: and
                                        fields:
                                          left:
                                            type: method_invocation
                                            fields:
                                              text: baseConstructor.isConstructor()
                                            children: []
                                            pos: 45485
                                            length: 31
                                          right:
                                            type: method_invocation
                                            fields:
                                              text: functionType.isInterface()
                                            children: []
                                            pos: 45520
                                            length: 26
                                        children: []
                                        pos: 45485
                                        length: 61
                                      right:
                                        type: and
                                        fields:
                                          left:
                                            type: method_invocation
                                            fields:
                                              text: baseConstructor.isInterface()
                                            children: []
                                            pos: 45561
                                            length: 29
                                          right:
                                            type: method_invocation
                                            fields:
                                              text: functionType.isConstructor()
                                            children: []
                                            pos: 45594
                                            length: 28
                                        children: []
                                        pos: 45561
                                        length: 61
                                    children: []
                                    pos: 45485
                                    length: 137
                                children: []
                                pos: 45484
                                length: 139
                            children: []
                            pos: 45379
                            length: 244
                        children: []
                        pos: 45378
                        length: 246
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            compiler.report(
                                        t.makeError(n, CONFLICTING_EXTENDED_TYPE, functionPrivateName));
                        children: []
                        pos: 45635
                        length: 93
                      pos: 45625
                      length: 111
                    pos: 45375
                    length: 361
                  - type: enhanced_for_statement
                    fields:
                      text: |-
                        for (JSType baseInterface : functionType.getImplementedInterfaces()) {
                                boolean badImplementedType = false;
                                ObjectType baseInterfaceObj = ObjectType.cast(baseInterface);
                                if (baseInterfaceObj != null) {
                                  FunctionType interfaceConstructor =
                                      baseInterfaceObj.getConstructor();
                                  if (interfaceConstructor != null &&
                                      !interfaceConstructor.isInterface()) {
                                    badImplementedType = true;
                                  }
                                } else {
                                  badImplementedType = true;
                                }
                                if (badImplementedType) {
                                  report(t, n, BAD_IMPLEMENTED_TYPE, functionPrivateName);
                                }
                              }
                    children: []
                    pos: 45744
                    length: 652
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: functionType.isConstructor()
                            children: []
                            pos: 46407
                            length: 28
                        children: []
                        pos: 46406
                        length: 30
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: validator.expectAllInterfacePropertiesImplemented(functionType);
                        children: []
                        pos: 46447
                        length: 64
                      pos: 46437
                      length: 82
                    pos: 46403
                    length: 116
                  pos: 45250
                  length: 1275
                pos: 45186
                length: 1339
              pos: 45014
              length: 1515
          children: []
          pos: 44962
          length: 1567
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitCall
              children: []
              pos: 46769
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 46779
                length: 15
              pos: 46756
              length: 1120
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node child = n.getFirstChild();
                children: []
                pos: 46810
                length: 31
              - type: local_variable_declaration
                fields:
                  text: JSType childType = getJSType(child).restrictByNotNullOrUndefined();
                children: []
                pos: 46846
                length: 67
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!childType.canBeCalled()"
                        children: []
                        pos: 46923
                        length: 24
                    children: []
                    pos: 46922
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: report(t, n, NOT_CALLABLE, childType.toString());
                    children: []
                    pos: 46957
                    length: 49
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, n);
                    children: []
                    pos: 47013
                    length: 18
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 47038
                    length: 7
                  pos: 46949
                  length: 102
                pos: 46919
                length: 132
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: childType instanceof FunctionType
                        children: []
                        pos: 47186
                        length: 33
                    children: []
                    pos: 47185
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType functionType = (FunctionType) childType;
                    children: []
                    pos: 47229
                    length: 53
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: functionType.isConstructor()
                                children: []
                                pos: 47360
                                length: 28
                              right:
                                type: unary_expression
                                fields:
                                  text: "!functionType.isNativeObjectType()"
                                children: []
                                pos: 47402
                                length: 34
                            children: []
                            pos: 47360
                            length: 76
                        children: []
                        pos: 47359
                        length: 78
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: report(t, n, CONSTRUCTOR_NOT_CALLABLE, childType.toString());
                        children: []
                        pos: 47448
                        length: 61
                      pos: 47438
                      length: 79
                    pos: 47356
                    length: 161
                  - type: expression_statement
                    fields:
                      text: visitParameterList(t, n, functionType);
                    children: []
                    pos: 47525
                    length: 39
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, n, functionType.getReturnType());
                    children: []
                    pos: 47571
                    length: 48
                  pos: 47221
                  length: 404
                pos: 47182
                length: 481
              pos: 46804
              length: 1072
          children: []
          pos: 46756
          length: 1120
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitParameterList
              children: []
              pos: 47957
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 47976
                length: 15
              pos: 47944
              length: 1386
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Iterator<Node> arguments = call.children().iterator();
                children: []
                pos: 48043
                length: 54
              - type: expression_statement
                fields:
                  text: arguments.next();
                children: []
                pos: 48102
                length: 17
              - type: local_variable_declaration
                fields:
                  text: Iterator<Node> parameters = functionType.getParameters().iterator();
                children: []
                pos: 48151
                length: 68
              - type: local_variable_declaration
                fields:
                  text: int ordinal = 0;
                children: []
                pos: 48224
                length: 16
              - type: local_variable_declaration
                fields:
                  text: Node parameter = null;
                children: []
                pos: 48245
                length: 22
              - type: local_variable_declaration
                fields:
                  text: Node argument = null;
                children: []
                pos: 48272
                length: 21
              - type: while_statement
                fields:
                  text: |-
                    while (arguments.hasNext() &&
                               (parameters.hasNext() ||
                                parameter != null && parameter.isVarArgs())) {
                          // If there are no parameters left in the list, then the while loop
                          // above implies that this must be a var_args function.
                          if (parameters.hasNext()) {
                            parameter = parameters.next();
                          }
                          argument = arguments.next();
                          ordinal++;

                          validator.expectArgumentMatchesParameter(t, argument,
                              getJSType(argument), getJSType(parameter), call, ordinal);
                        }
                children: []
                pos: 48298
                length: 529
              - type: local_variable_declaration
                fields:
                  text: int numArgs = call.getChildCount() - 1;
                children: []
                pos: 48833
                length: 39
              - type: local_variable_declaration
                fields:
                  text: int minArgs = functionType.getMinArguments();
                children: []
                pos: 48877
                length: 45
              - type: local_variable_declaration
                fields:
                  text: int maxArgs = functionType.getMaxArguments();
                children: []
                pos: 48927
                length: 45
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: greater_than
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: minArgs
                                children: []
                                pos: 48981
                                length: 7
                              right:
                                type: identifier
                                fields:
                                  text: numArgs
                                children: []
                                pos: 48991
                                length: 7
                            children: []
                            pos: 48981
                            length: 17
                          right:
                            type: less_than
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: maxArgs
                                children: []
                                pos: 49002
                                length: 7
                              right:
                                type: identifier
                                fields:
                                  text: numArgs
                                children: []
                                pos: 49012
                                length: 7
                            children: []
                            pos: 49002
                            length: 17
                        children: []
                        pos: 48981
                        length: 38
                    children: []
                    pos: 48980
                    length: 40
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        report(t, call, WRONG_ARGUMENT_COUNT,
                                      validator.getReadableJSTypeName(call.getFirstChild(), false),
                                      String.valueOf(numArgs), String.valueOf(minArgs),
                                      maxArgs != Integer.MAX_VALUE ?
                                      " and no more than " + maxArgs + " argument(s)" : "");
                    children: []
                    pos: 49029
                    length: 291
                  pos: 49021
                  length: 305
                pos: 48977
                length: 349
              pos: 48037
              length: 1293
          children: []
          pos: 47944
          length: 1386
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitReturn
              children: []
              pos: 49572
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 49584
                length: 15
              pos: 49559
              length: 1070
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node function = t.getEnclosingFunction();
                children: []
                pos: 49615
                length: 41
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: function
                            children: []
                            pos: 49760
                            length: 8
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 49772
                            length: 4
                        children: []
                        pos: 49760
                        length: 16
                    children: []
                    pos: 49759
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 49786
                    length: 7
                  pos: 49778
                  length: 21
                pos: 49756
                length: 43
              - type: local_variable_declaration
                fields:
                  text: JSType jsType = getJSType(function);
                children: []
                pos: 49804
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: jsType instanceof FunctionType
                        children: []
                        pos: 49850
                        length: 30
                    children: []
                    pos: 49849
                    length: 32
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType functionType = (FunctionType) jsType;
                    children: []
                    pos: 49890
                    length: 50
                  - type: local_variable_declaration
                    fields:
                      text: JSType returnType = functionType.getReturnType();
                    children: []
                    pos: 49948
                    length: 49
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: returnType
                                children: []
                                pos: 50109
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 50123
                                length: 4
                            children: []
                            pos: 50109
                            length: 18
                        children: []
                        pos: 50108
                        length: 20
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: returnType = getNativeType(VOID_TYPE);
                        children: []
                        pos: 50139
                        length: 38
                      pos: 50129
                      length: 56
                    pos: 50105
                    length: 80
                  - type: local_variable_declaration
                    fields:
                      text: Node valueNode = n.getFirstChild();
                    children: []
                    pos: 50237
                    length: 35
                  - type: local_variable_declaration
                    fields:
                      text: JSType actualReturnType;
                    children: []
                    pos: 50279
                    length: 24
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: valueNode
                                children: []
                                pos: 50314
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 50327
                                length: 4
                            children: []
                            pos: 50314
                            length: 17
                        children: []
                        pos: 50313
                        length: 19
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: actualReturnType = getNativeType(VOID_TYPE);
                        children: []
                        pos: 50343
                        length: 44
                      - type: expression_statement
                        fields:
                          text: valueNode = n;
                        children: []
                        pos: 50396
                        length: 14
                      pos: 50333
                      length: 85
                    pos: 50310
                    length: 172
                  - type: expression_statement
                    fields:
                      text: |-
                        validator.expectCanAssignTo(t, valueNode, actualReturnType, returnType,
                                  "inconsistent return type");
                    children: []
                    pos: 50509
                    length: 110
                  pos: 49882
                  length: 743
                pos: 49846
                length: 779
              pos: 49609
              length: 1020
          children: []
          pos: 49559
          length: 1070
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitBinaryOperator
              children: []
              pos: 51037
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int op
                children: []
                pos: 51057
                length: 6
              pos: 51024
              length: 1688
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 51096
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = getJSType(left);
                children: []
                pos: 51131
                length: 34
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 51170
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = getJSType(right);
                children: []
                pos: 51205
                length: 36
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: op
                        children: []
                        pos: 51254
                        length: 2
                    children: []
                    pos: 51253
                    length: 4
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.ASSIGN_LSH:
                              case Token.ASSIGN_RSH:
                              case Token.LSH:
                              case Token.RSH:
                              case Token.ASSIGN_URSH:
                              case Token.URSH:
                                if (!leftType.matchesInt32Context()) {
                                  report(t, left, BIT_OPERATION,
                                           NodeUtil.opToStr(n.getType()), leftType.toString());
                                }
                                if (!rightType.matchesUint32Context()) {
                                  report(t, right, BIT_OPERATION,
                                           NodeUtil.opToStr(n.getType()), rightType.toString());
                                }
                                break;

                              case Token.ASSIGN_DIV:
                              case Token.ASSIGN_MOD:
                              case Token.ASSIGN_MUL:
                              case Token.ASSIGN_SUB:
                              case Token.DIV:
                              case Token.MOD:
                              case Token.MUL:
                              case Token.SUB:
                                validator.expectNumber(t, left, leftType, "left operand");
                                validator.expectNumber(t, right, rightType, "right operand");
                                break;

                              case Token.ASSIGN_BITAND:
                              case Token.ASSIGN_BITXOR:
                              case Token.ASSIGN_BITOR:
                              case Token.BITAND:
                              case Token.BITXOR:
                              case Token.BITOR:
                                validator.expectBitwiseable(t, left, leftType,
                                    "bad left operand to bitwise operator");
                                validator.expectBitwiseable(t, right, rightType,
                                    "bad right operand to bitwise operator");
                                break;

                              case Token.ASSIGN_ADD:
                              case Token.ADD:
                                break;

                              default:
                                report(t, n, UNEXPECTED_TOKEN, Node.tokenToName(op));
                            }
                    children: []
                    pos: 51258
                    length: 1427
                children: []
                pos: 51246
                length: 1439
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n);
                children: []
                pos: 52690
                length: 18
              pos: 51090
              length: 1622
          children: []
          pos: 51024
          length: 1688
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkEnumInitializer
              children: []
              pos: 53392
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 53420
                length: 15
              pos: 53379
              length: 1449
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: value.getType()
                            children: []
                            pos: 53481
                            length: 15
                          right:
                            type: field_access
                            fields:
                              text: Token.OBJECTLIT
                            children: []
                            pos: 53500
                            length: 15
                        children: []
                        pos: 53481
                        length: 34
                    children: []
                    pos: 53480
                    length: 36
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: value = value.getFirstChild();
                    children: []
                    pos: 53604
                    length: 30
                  - type: expression_statement
                    fields:
                      text: 'value = (value == null) ? null : value.getNext();'
                    children: []
                    pos: 53641
                    length: 49
                  - type: while_statement
                    fields:
                      text: |-
                        while (value != null) {
                                // the value's type must be assignable to the enum's primitive type
                                validator.expectCanAssignTo(t, value, getJSType(value), primitiveType,
                                    "element type must match enum's type");

                                // advancing twice
                                value = value.getNext();
                                value = (value == null) ? null : value.getNext();
                              }
                    children: []
                    pos: 53697
                    length: 357
                  pos: 53517
                  length: 543
                pos: 53477
                length: 1347
              pos: 53471
              length: 1357
          children: []
          pos: 53379
          length: 1449
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isReference
              children: []
              pos: 55120
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 55132
                length: 6
              pos: 55097
              length: 216
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 55154
                        length: 11
                    children: []
                    pos: 55153
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.GETELEM:
                              case Token.GETPROP:
                              case Token.NAME:
                                return true;

                              default:
                                return false;
                            }
                    children: []
                    pos: 55167
                    length: 141
                children: []
                pos: 55146
                length: 162
              pos: 55140
              length: 173
          children: []
          pos: 55097
          length: 216
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getJSType
              children: []
              pos: 55438
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 55448
                length: 6
              pos: 55423
              length: 461
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType jsType = n.getJSType();
                children: []
                pos: 55462
                length: 30
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: jsType
                            children: []
                            pos: 55501
                            length: 6
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 55511
                            length: 4
                        children: []
                        pos: 55501
                        length: 14
                    children: []
                    pos: 55500
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return getNativeType(UNKNOWN_TYPE);
                    children: []
                    pos: 55805
                    length: 35
                  pos: 55517
                  length: 329
                pos: 55497
                length: 383
              pos: 55456
              length: 428
          children: []
          pos: 55423
          length: 461
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getFunctionType
              children: []
              pos: 56011
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 56027
                length: 6
              pos: 55990
              length: 335
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType type = getJSType(n).restrictByNotNullOrUndefined();
                children: []
                pos: 56041
                length: 58
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: type.isUnknownType()
                        children: []
                        pos: 56108
                        length: 20
                    children: []
                    pos: 56107
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return typeRegistry.getNativeFunctionType(U2U_CONSTRUCTOR_TYPE);
                    children: []
                    pos: 56138
                    length: 64
                  pos: 56130
                  length: 78
                pos: 56104
                length: 217
              pos: 56035
              length: 290
          children: []
          pos: 55990
          length: 335
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensureTyped
              children: []
              pos: 56777
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 56789
                length: 15
              pos: 56764
              length: 107
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n, getNativeType(UNKNOWN_TYPE));
                children: []
                pos: 56820
                length: 47
              pos: 56814
              length: 57
          children: []
          pos: 56764
          length: 107
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensureTyped
              children: []
              pos: 56888
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 56900
                length: 15
              pos: 56875
              length: 118
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n, getNativeType(type));
                children: []
                pos: 56950
                length: 39
              pos: 56944
              length: 49
          children: []
          pos: 56875
          length: 118
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensureTyped
              children: []
              pos: 57822
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 57834
                length: 15
              pos: 57809
              length: 854
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    Preconditions.checkState(n.getType() != Token.FUNCTION ||
                                type instanceof FunctionType ||
                                type.isUnknownType());
                children: []
                pos: 57936
                length: 136
              - type: local_variable_declaration
                fields:
                  text: JSDocInfo info = n.getJSDocInfo();
                children: []
                pos: 58077
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: info
                            children: []
                            pos: 58120
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 58128
                            length: 4
                        children: []
                        pos: 58120
                        length: 12
                    children: []
                    pos: 58119
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: info.hasType()
                            children: []
                            pos: 58146
                            length: 14
                        children: []
                        pos: 58145
                        length: 16
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType infoType = info.getType().evaluate(t.getScope(),
                            typeRegistry);
                        children: []
                        pos: 58172
                        length: 70
                      - type: expression_statement
                        fields:
                          text: validator.expectCanCast(t, n, infoType, type);
                        children: []
                        pos: 58251
                        length: 46
                      - type: expression_statement
                        fields:
                          text: type = infoType;
                        children: []
                        pos: 58306
                        length: 16
                      pos: 58162
                      length: 168
                    pos: 58142
                    length: 188
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: info.isImplicitCast()
                                children: []
                                pos: 58342
                                length: 21
                              right:
                                type: unary_expression
                                fields:
                                  text: "!inExterns"
                                children: []
                                pos: 58367
                                length: 10
                            children: []
                            pos: 58342
                            length: 35
                        children: []
                        pos: 58341
                        length: 37
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: |-
                            String propName = n.getType() == Token.GETPROP ?
                                        n.getLastChild().getString() : "(missing)";
                        children: []
                        pos: 58389
                        length: 104
                      - type: expression_statement
                        fields:
                          text: |-
                            compiler.report(
                                        t.makeError(n, ILLEGAL_IMPLICIT_CAST, propName));
                        children: []
                        pos: 58502
                        length: 78
                      pos: 58379
                      length: 209
                    pos: 58338
                    length: 250
                  pos: 58134
                  length: 460
                pos: 58116
                length: 478
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: n.getJSType()
                            children: []
                            pos: 58604
                            length: 13
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 58621
                            length: 4
                        children: []
                        pos: 58604
                        length: 21
                    children: []
                    pos: 58603
                    length: 23
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: n.setJSType(type);
                    children: []
                    pos: 58635
                    length: 18
                  pos: 58627
                  length: 32
                pos: 58600
                length: 59
              pos: 57872
              length: 791
          children: []
          pos: 57809
          length: 854
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getTypedPercent
              children: []
              pos: 58794
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 58787
              length: 187
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int total = nullCount + unknownCount + typedCount;
                children: []
                pos: 58818
                length: 50
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: total
                            children: []
                            pos: 58877
                            length: 5
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 58886
                            length: 1
                        children: []
                        pos: 58877
                        length: 10
                    children: []
                    pos: 58876
                    length: 12
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return 0.0;
                    children: []
                    pos: 58897
                    length: 11
                  pos: 58889
                  length: 25
                pos: 58873
                length: 97
              pos: 58812
              length: 162
          children: []
          pos: 58787
          length: 187
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getNativeType
              children: []
              pos: 58993
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSTypeNative typeId
                children: []
                pos: 59007
                length: 19
              pos: 58978
              length: 102
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return typeRegistry.getNativeType(typeId);
                children: []
                pos: 59034
                length: 42
              pos: 59028
              length: 52
          children: []
          pos: 58978
          length: 102
        pos: 2307
        length: 56775
    children: []
    pos: 2307
    length: 56775
  pos: 0
  length: 59083
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: TypeCheck
        children: []
        pos: 2320
        length: 9
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNEXPECTED_TOKEN = DiagnosticType.error(
                    "JSC_INTERNAL_ERROR_UNEXPECTED_TOKEN",
                    "Internal Error: Don't know how to handle {0}");
          children: []
          pos: 2414
          length: 168
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType BAD_DELETE =
                    // TODO(user): make this an error
                    DiagnosticType.warning(
                        "JSC_BAD_DELETE_OPERAND",
                        "delete operator needs a reference operand");
          children: []
          pos: 2614
          length: 202
        - type: field_declaration
          fields:
            text: |-
              protected static final String OVERRIDING_PROTOTYPE_WITH_NON_OBJECT =
                    "overriding prototype with non-object";
          children: []
          pos: 2851
          length: 114
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType DETERMINISTIC_TEST =
                    DiagnosticType.warning(
                        "JSC_DETERMINISTIC_TEST",
                        "condition always evaluates to {2}\n" +
                        "left : {0}\n" +
                        "right: {1}");
          children: []
          pos: 3099
          length: 216
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType DETERMINISTIC_TEST_NO_RESULT =
                    DiagnosticType.warning(
                        "JSC_DETERMINISTIC_TEST_NO_RESULT",
                        "condition always evaluates to the same value\n" +
                        "left : {0}\n" +
                        "right: {1}");
          children: []
          pos: 3319
          length: 247
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INEXISTENT_ENUM_ELEMENT =
                    DiagnosticType.warning(
                        "JSC_INEXISTENT_ENUM_ELEMENT",
                        "element {0} does not exist on this enum");
          children: []
          pos: 3570
          length: 178
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INEXISTENT_PROPERTY =
                    DiagnosticType.disabled(
                        "JSC_INEXISTENT_PROPERTY",
                        "Property {0} never defined on {1}");
          children: []
          pos: 3845
          length: 165
        - type: field_declaration
          fields:
            text: |-
              protected static final DiagnosticType NOT_A_CONSTRUCTOR =
                    DiagnosticType.warning(
                        "JSC_NOT_A_CONSTRUCTOR",
                        "cannot instantiate non-constructor");
          children: []
          pos: 4014
          length: 171
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType BIT_OPERATION =
                    DiagnosticType.warning(
                        "JSC_BAD_TYPE_FOR_BIT_OPERATION",
                        "operator {0} cannot be applied to {1}");
          children: []
          pos: 4189
          length: 169
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType NOT_CALLABLE =
                    DiagnosticType.warning(
                        "JSC_NOT_FUNCTION_TYPE",
                        "{0} expressions are not callable");
          children: []
          pos: 4362
          length: 154
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType CONSTRUCTOR_NOT_CALLABLE =
                    DiagnosticType.warning(
                        "JSC_CONSTRUCTOR_NOT_CALLABLE",
                        "Constructor {0} should be called with the \"new\" keyword");
          children: []
          pos: 4520
          length: 198
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType FUNCTION_MASKS_VARIABLE =
                    DiagnosticType.warning(
                        "JSC_FUNCTION_MASKS_VARIABLE",
                        "function {0} masks variable (IE bug)");
          children: []
          pos: 4722
          length: 175
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType MULTIPLE_VAR_DEF = DiagnosticType.warning(
                    "JSC_MULTIPLE_VAR_DEF",
                    "declaration of multiple variables with shared type information");
          children: []
          pos: 4901
          length: 173
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ENUM_DUP = DiagnosticType.error("JSC_ENUM_DUP",
                    "enum element {0} already defined");
          children: []
          pos: 5078
          length: 118
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ENUM_NOT_CONSTANT =
                    DiagnosticType.warning("JSC_ENUM_NOT_CONSTANT",
                        "enum key {0} must be a syntactic constant");
          children: []
          pos: 5200
          length: 157
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INVALID_INTERFACE_MEMBER_DECLARATION =
                    DiagnosticType.warning(
                        "JSC_INVALID_INTERFACE_MEMBER_DECLARATION",
                        "interface members can only be empty property declarations,"
                        + " empty functions{0}");
          children: []
          pos: 5361
          length: 257
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INTERFACE_FUNCTION_NOT_EMPTY =
                    DiagnosticType.warning(
                        "JSC_INTERFACE_FUNCTION_NOT_EMPTY",
                        "interface member functions must have an empty body");
          children: []
          pos: 5622
          length: 199
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType CONFLICTING_EXTENDED_TYPE =
                    DiagnosticType.warning(
                        "JSC_CONFLICTING_EXTENDED_TYPE",
                        "{0} cannot extend this type; " +
                        "a constructor can only extend objects " +
                        "and an interface can only extend interfaces");
          children: []
          pos: 5825
          length: 283
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType BAD_IMPLEMENTED_TYPE =
                    DiagnosticType.warning(
                        "JSC_IMPLEMENTS_NON_INTERFACE",
                        "can only implement interfaces");
          children: []
          pos: 6112
          length: 166
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType HIDDEN_SUPERCLASS_PROPERTY =
                    DiagnosticType.warning(
                        "JSC_HIDDEN_SUPERCLASS_PROPERTY",
                        "property {0} already defined on superclass {1}; " +
                        "use @override to override it");
          children: []
          pos: 6282
          length: 236
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType HIDDEN_INTERFACE_PROPERTY =
                    DiagnosticType.warning(
                        "JSC_HIDDEN_INTERFACE_PROPERTY",
                        "property {0} already defined on interface {1}; " +
                        "use @override to override it");
          children: []
          pos: 6522
          length: 233
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType HIDDEN_SUPERCLASS_PROPERTY_MISMATCH =
                    DiagnosticType.warning("JSC_HIDDEN_SUPERCLASS_PROPERTY_MISMATCH",
                        "mismatch of the {0} property type and the type " +
                        "of the property it overrides from superclass {1}\n" +
                        "original: {2}\n" +
                        "override: {3}");
          children: []
          pos: 6759
          length: 322
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType HIDDEN_INTERFACE_PROPERTY_MISMATCH =
                    DiagnosticType.warning(
                        "JSC_HIDDEN_INTERFACE_PROPERTY_MISMATCH",
                        "mismatch of the {0} property type and the type " +
                        "of the property it overrides from interface {1}\n" +
                        "original: {2}\n" +
                        "override: {3}");
          children: []
          pos: 7085
          length: 330
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNKNOWN_OVERRIDE =
                    DiagnosticType.warning(
                        "JSC_UNKNOWN_OVERRIDE",
                        "property {0} not defined on any superclass of {1}");
          children: []
          pos: 7419
          length: 174
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType INTERFACE_METHOD_OVERRIDE =
                    DiagnosticType.warning(
                        "JSC_INTERFACE_METHOD_OVERRIDE",
                        "property {0} is already defined by the {1} extended interface");
          children: []
          pos: 7597
          length: 204
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNKNOWN_EXPR_TYPE =
                    DiagnosticType.warning("JSC_UNKNOWN_EXPR_TYPE",
                        "could not determine the type of this expression");
          children: []
          pos: 7805
          length: 163
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType UNRESOLVED_TYPE =
                    DiagnosticType.warning("JSC_UNRESOLVED_TYPE",
                        "could not resolve the name {0} to a type");
          children: []
          pos: 7972
          length: 152
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType WRONG_ARGUMENT_COUNT =
                    DiagnosticType.warning(
                        "JSC_WRONG_ARGUMENT_COUNT",
                        "Function {0}: called with {1} argument(s). " +
                        "Function requires at least {2} argument(s){3}.");
          children: []
          pos: 8128
          length: 237
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType ILLEGAL_IMPLICIT_CAST =
                    DiagnosticType.warning(
                        "JSC_ILLEGAL_IMPLICIT_CAST",
                        "Illegal annotation on {0}. @implicitCast may only be used in " +
                        "externs.");
          children: []
          pos: 8369
          length: 219
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticGroup ALL_DIAGNOSTICS = new DiagnosticGroup(
                    DETERMINISTIC_TEST,
                    DETERMINISTIC_TEST_NO_RESULT,
                    INEXISTENT_ENUM_ELEMENT,
                    INEXISTENT_PROPERTY,
                    NOT_A_CONSTRUCTOR,
                    BIT_OPERATION,
                    NOT_CALLABLE,
                    CONSTRUCTOR_NOT_CALLABLE,
                    FUNCTION_MASKS_VARIABLE,
                    MULTIPLE_VAR_DEF,
                    ENUM_DUP,
                    ENUM_NOT_CONSTANT,
                    INVALID_INTERFACE_MEMBER_DECLARATION,
                    INTERFACE_FUNCTION_NOT_EMPTY,
                    CONFLICTING_EXTENDED_TYPE,
                    BAD_IMPLEMENTED_TYPE,
                    HIDDEN_SUPERCLASS_PROPERTY,
                    HIDDEN_INTERFACE_PROPERTY,
                    HIDDEN_SUPERCLASS_PROPERTY_MISMATCH,
                    HIDDEN_INTERFACE_PROPERTY_MISMATCH,
                    UNKNOWN_OVERRIDE,
                    INTERFACE_METHOD_OVERRIDE,
                    UNKNOWN_EXPR_TYPE,
                    UNRESOLVED_TYPE,
                    WRONG_ARGUMENT_COUNT,
                    ILLEGAL_IMPLICIT_CAST);
          children: []
          pos: 8592
          length: 837
        - type: field_declaration
          fields:
            text: private final AbstractCompiler compiler;
          children: []
          pos: 9433
          length: 40
        - type: field_declaration
          fields:
            text: private final TypeValidator validator;
          children: []
          pos: 9476
          length: 38
        - type: field_declaration
          fields:
            text: private final ReverseAbstractInterpreter reverseInterpreter;
          children: []
          pos: 9518
          length: 60
        - type: field_declaration
          fields:
            text: private final JSTypeRegistry typeRegistry;
          children: []
          pos: 9582
          length: 42
        - type: field_declaration
          fields:
            text: private Scope topScope;
          children: []
          pos: 9627
          length: 23
        - type: field_declaration
          fields:
            text: private ScopeCreator scopeCreator;
          children: []
          pos: 9654
          length: 34
        - type: field_declaration
          fields:
            text: private final CheckLevel reportMissingOverride;
          children: []
          pos: 9692
          length: 47
        - type: field_declaration
          fields:
            text: private final CheckLevel reportUnknownTypes;
          children: []
          pos: 9742
          length: 44
        - type: field_declaration
          fields:
            text: private boolean reportMissingProperties = true;
          children: []
          pos: 9886
          length: 47
        - type: field_declaration
          fields:
            text: private InferJSDocInfo inferJSDocInfo = null;
          children: []
          pos: 9937
          length: 45
        - type: field_declaration
          fields:
            text: private int typedCount = 0;
          children: []
          pos: 10063
          length: 27
        - type: field_declaration
          fields:
            text: private int nullCount = 0;
          children: []
          pos: 10093
          length: 26
        - type: field_declaration
          fields:
            text: private int unknownCount = 0;
          children: []
          pos: 10122
          length: 29
        - type: field_declaration
          fields:
            text: private boolean inExterns;
          children: []
          pos: 10154
          length: 26
        - type: field_declaration
          fields:
            text: private int noTypeCheckSection = 0;
          children: []
          pos: 10271
          length: 35
        - type: constructor_declaration
          fields:
            text: |-
              public TypeCheck(AbstractCompiler compiler,
                    ReverseAbstractInterpreter reverseInterpreter,
                    JSTypeRegistry typeRegistry,
                    Scope topScope,
                    ScopeCreator scopeCreator,
                    CheckLevel reportMissingOverride,
                    CheckLevel reportUnknownTypes) {
                  this.compiler = compiler;
                  this.validator = compiler.getTypeValidator();
                  this.reverseInterpreter = reverseInterpreter;
                  this.typeRegistry = typeRegistry;
                  this.topScope = topScope;
                  this.scopeCreator = scopeCreator;
                  this.reportMissingOverride = reportMissingOverride;
                  this.reportUnknownTypes = reportUnknownTypes;
                  this.inferJSDocInfo = new InferJSDocInfo(compiler);
                }
          children: []
          pos: 10310
          length: 667
        - type: constructor_declaration
          fields:
            text: |-
              public TypeCheck(AbstractCompiler compiler,
                    ReverseAbstractInterpreter reverseInterpreter,
                    JSTypeRegistry typeRegistry,
                    CheckLevel reportMissingOverride,
                    CheckLevel reportUnknownTypes) {
                  this(compiler, reverseInterpreter, typeRegistry, null, null,
                      reportMissingOverride, reportUnknownTypes);
                }
          children: []
          pos: 10981
          length: 331
        - type: constructor_declaration
          fields:
            text: |-
              TypeCheck(AbstractCompiler compiler,
                    ReverseAbstractInterpreter reverseInterpreter,
                    JSTypeRegistry typeRegistry) {
                  this(compiler, reverseInterpreter, typeRegistry, null, null,
                       CheckLevel.WARNING, CheckLevel.OFF);
                }
          children: []
          pos: 11316
          length: 241
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: reportMissingProperties
              children: []
              pos: 11648
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: boolean report
                children: []
                pos: 11672
                length: 14
              pos: 11638
              length: 110
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: reportMissingProperties = report;
                children: []
                pos: 11694
                length: 33
              - type: return_statement
                fields:
                  text: return this;
                children: []
                pos: 11732
                length: 12
              pos: 11688
              length: 60
          children: []
          pos: 11638
          length: 110
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: process
              children: []
              pos: 12013
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node externsRoot
                children: []
                pos: 12021
                length: 16
              pos: 12001
              length: 435
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(scopeCreator);
                children: []
                pos: 12058
                length: 41
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(topScope);
                children: []
                pos: 12104
                length: 37
              - type: local_variable_declaration
                fields:
                  text: Node externsAndJs = jsRoot.getParent();
                children: []
                pos: 12147
                length: 39
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(externsAndJs != null);
                children: []
                pos: 12191
                length: 47
              - type: expression_statement
                fields:
                  text: |-
                    Preconditions.checkState(
                            externsRoot == null || externsAndJs.hasChild(externsRoot));
                children: []
                pos: 12243
                length: 93
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: externsRoot
                            children: []
                            pos: 12346
                            length: 11
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 12361
                            length: 4
                        children: []
                        pos: 12346
                        length: 19
                    children: []
                    pos: 12345
                    length: 21
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: check(externsRoot, true);
                    children: []
                    pos: 12375
                    length: 25
                  pos: 12367
                  length: 39
                pos: 12342
                length: 64
              - type: expression_statement
                fields:
                  text: check(jsRoot, false);
                children: []
                pos: 12411
                length: 21
              pos: 12052
              length: 384
          children: []
          pos: 12001
          length: 435
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: processForTesting
              children: []
              pos: 12511
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node externsRoot
                children: []
                pos: 12529
                length: 16
              pos: 12498
              length: 639
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(scopeCreator == null);
                children: []
                pos: 12566
                length: 47
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(topScope == null);
                children: []
                pos: 12618
                length: 43
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(jsRoot.getParent() != null);
                children: []
                pos: 12667
                length: 53
              - type: local_variable_declaration
                fields:
                  text: Node externsAndJsRoot = jsRoot.getParent();
                children: []
                pos: 12725
                length: 43
              - type: expression_statement
                fields:
                  text: scopeCreator = new MemoizedScopeCreator(new TypedScopeCreator(compiler));
                children: []
                pos: 12774
                length: 73
              - type: expression_statement
                fields:
                  text: topScope = scopeCreator.createScope(externsAndJsRoot, null);
                children: []
                pos: 12852
                length: 60
              - type: local_variable_declaration
                fields:
                  text: |-
                    TypeInferencePass inference = new TypeInferencePass(compiler,
                            reverseInterpreter, topScope, scopeCreator);
                children: []
                pos: 12918
                length: 114
              - type: expression_statement
                fields:
                  text: inference.process(externsRoot, jsRoot);
                children: []
                pos: 13038
                length: 39
              - type: expression_statement
                fields:
                  text: process(externsRoot, jsRoot);
                children: []
                pos: 13082
                length: 29
              - type: return_statement
                fields:
                  text: return topScope;
                children: []
                pos: 13117
                length: 16
              pos: 12560
              length: 577
          children: []
          pos: 12498
          length: 639
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: check
              children: []
              pos: 13154
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node node
                children: []
                pos: 13160
                length: 9
              pos: 13142
              length: 349
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(node);
                children: []
                pos: 13194
                length: 33
              - type: local_variable_declaration
                fields:
                  text: NodeTraversal t = new NodeTraversal(compiler, this, scopeCreator);
                children: []
                pos: 13233
                length: 66
              - type: expression_statement
                fields:
                  text: inExterns = externs;
                children: []
                pos: 13304
                length: 20
              - type: expression_statement
                fields:
                  text: t.traverseWithScope(node, topScope);
                children: []
                pos: 13329
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: externs
                        children: []
                        pos: 13374
                        length: 7
                    children: []
                    pos: 13373
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: inferJSDocInfo.process(node, null);
                    children: []
                    pos: 13391
                    length: 35
                  pos: 13383
                  length: 49
                pos: 13370
                length: 117
              pos: 13188
              length: 303
          children: []
          pos: 13142
          length: 349
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkNoTypeCheckSection
              children: []
              pos: 13509
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 13533
                length: 6
              pos: 13496
              length: 537
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 13577
                        length: 11
                    children: []
                    pos: 13576
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.SCRIPT:
                              case Token.BLOCK:
                              case Token.VAR:
                              case Token.FUNCTION:
                              case Token.ASSIGN:
                                JSDocInfo info = n.getJSDocInfo();
                                if (info != null && info.isNoTypeCheck()) {
                                  if (enterSection) {
                                    noTypeCheckSection++;
                                  } else {
                                    noTypeCheckSection--;
                                  }
                                }
                                validator.setShouldReport(noTypeCheckSection == 0);
                                break;
                            }
                    children: []
                    pos: 13590
                    length: 439
                children: []
                pos: 13569
                length: 460
              pos: 13563
              length: 470
          children: []
          pos: 13496
          length: 537
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: report
              children: []
              pos: 14050
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 14057
                length: 15
              pos: 14037
              length: 195
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: noTypeCheckSection
                            children: []
                            pos: 14150
                            length: 18
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 14172
                            length: 1
                        children: []
                        pos: 14150
                        length: 23
                    children: []
                    pos: 14149
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: t.report(n, diagnosticType, arguments);
                    children: []
                    pos: 14183
                    length: 39
                  pos: 14175
                  length: 53
                pos: 14146
                length: 82
              pos: 14140
              length: 92
          children: []
          pos: 14037
          length: 195
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: shouldTraverse
              children: []
              pos: 14251
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 14273
                length: 15
              pos: 14236
              length: 1243
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: checkNoTypeCheckSection(n, true);
                children: []
                pos: 14317
                length: 33
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 14363
                        length: 11
                    children: []
                    pos: 14362
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.FUNCTION:
                                // normal type checking
                                final TypeCheck outerThis = this;
                                final Scope outerScope = t.getScope();
                                final FunctionType functionType = (FunctionType) n.getJSType();
                                final String functionPrivateName = n.getFirstChild().getString();
                                if (functionPrivateName != null && functionPrivateName.length() > 0 &&
                                    outerScope.isDeclared(functionPrivateName, false) &&
                                    // Ideally, we would want to check whether the type in the scope
                                    // differs from the type being defined, but then the extern
                                    // redeclarations of built-in types generates spurious warnings.
                                    !(outerScope.getVar(
                                        functionPrivateName).getType() instanceof FunctionType)) {
                                  report(t, n, FUNCTION_MASKS_VARIABLE, functionPrivateName);
                                }

                                // TODO(user): Only traverse the function's body. The function's
                                // name and arguments are traversed by the scope creator, and ideally
                                // should not be traversed by the type checker.
                                break;
                            }
                    children: []
                    pos: 14376
                    length: 1082
                children: []
                pos: 14355
                length: 1103
              - type: return_statement
                fields:
                  text: return true;
                children: []
                pos: 15463
                length: 12
              pos: 14311
              length: 1168
          children: []
          pos: 14236
          length: 1243
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visit
              children: []
              pos: 15940
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 15946
                length: 15
              pos: 15928
              length: 10111
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType childType;
                children: []
                pos: 15990
                length: 17
              - type: local_variable_declaration
                fields:
                  text: JSType leftType, rightType;
                children: []
                pos: 16012
                length: 27
              - type: local_variable_declaration
                fields:
                  text: Node left, right;
                children: []
                pos: 16044
                length: 17
              - type: local_variable_declaration
                fields:
                  text: boolean typeable = true;
                children: []
                pos: 16132
                length: 24
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 16170
                        length: 11
                    children: []
                    pos: 16169
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.NAME:
                                typeable = visitName(t, n, parent);
                                break;

                              case Token.LP:
                                // If this is under a FUNCTION node, it is a parameter list and can be
                                // ignored here.
                                if (parent.getType() != Token.FUNCTION) {
                                  ensureTyped(t, n, getJSType(n.getFirstChild()));
                                } else {
                                  typeable = false;
                                }
                                break;

                              case Token.COMMA:
                                ensureTyped(t, n, getJSType(n.getLastChild()));
                                break;

                              case Token.TRUE:
                              case Token.FALSE:
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.THIS:
                                ensureTyped(t, n, t.getScope().getTypeOfThis());
                                break;

                              case Token.REF_SPECIAL:
                                ensureTyped(t, n);
                                break;

                              case Token.GET_REF:
                                ensureTyped(t, n, getJSType(n.getFirstChild()));
                                break;

                              case Token.NULL:
                                ensureTyped(t, n, NULL_TYPE);
                                break;

                              case Token.NUMBER:
                                if (n.getParent().getType() != Token.OBJECTLIT) {
                                  ensureTyped(t, n, NUMBER_TYPE);
                                } else {
                                  typeable = false;
                                }
                                break;

                              case Token.ARRAYLIT:
                                ensureTyped(t, n, ARRAY_TYPE);
                                break;

                              case Token.STRING:
                                if (n.getParent().getType() != Token.OBJECTLIT) {
                                  ensureTyped(t, n, STRING_TYPE);
                                } else {
                                  typeable = false;
                                }
                                break;

                              case Token.REGEXP:
                                ensureTyped(t, n, REGEXP_TYPE);
                                break;

                              case Token.GETPROP:
                                visitGetProp(t, n, parent);
                                typeable = !(parent.getType() == Token.ASSIGN &&
                                             parent.getFirstChild() == n);
                                break;

                              case Token.GETELEM:
                                visitGetElem(t, n);
                                // The type of GETELEM is always unknown, so no point counting that.
                                // If that unknown leaks elsewhere (say by an assignment to another
                                // variable), then it will be counted.
                                typeable = false;
                                break;

                              case Token.VAR:
                                visitVar(t, n);
                                typeable = false;
                                break;

                              case Token.NEW:
                                visitNew(t, n);
                                typeable = true;
                                break;

                              case Token.CALL:
                                visitCall(t, n);
                                typeable = !NodeUtil.isExpressionNode(parent);
                                break;

                              case Token.RETURN:
                                visitReturn(t, n);
                                typeable = false;
                                break;

                              case Token.DEC:
                              case Token.INC:
                                left = n.getFirstChild();
                                validator.expectNumber(
                                    t, left, getJSType(left), "increment/decrement");
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.NOT:
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.VOID:
                                ensureTyped(t, n, VOID_TYPE);
                                break;

                              case Token.TYPEOF:
                                ensureTyped(t, n, STRING_TYPE);
                                break;

                              case Token.BITNOT:
                                childType = getJSType(n.getFirstChild());
                                if (!childType.matchesInt32Context()) {
                                  report(t, n, BIT_OPERATION, NodeUtil.opToStr(n.getType()),
                                      childType.toString());
                                }
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.POS:
                              case Token.NEG:
                                left = n.getFirstChild();
                                validator.expectNumber(t, left, getJSType(left), "sign operator");
                                ensureTyped(t, n, NUMBER_TYPE);
                                break;

                              case Token.EQ:
                              case Token.NE: {
                                leftType = getJSType(n.getFirstChild());
                                rightType = getJSType(n.getLastChild());

                                JSType leftTypeRestricted = leftType.restrictByNotNullOrUndefined();
                                JSType rightTypeRestricted = rightType.restrictByNotNullOrUndefined();
                                TernaryValue result =
                                    leftTypeRestricted.testForEquality(rightTypeRestricted);
                                if (result != TernaryValue.UNKNOWN) {
                                  if (n.getType() == Token.NE) {
                                    result = result.not();
                                  }
                                  report(t, n, DETERMINISTIC_TEST, leftType.toString(),
                                      rightType.toString(), result.toString());
                                }
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;
                              }

                              case Token.SHEQ:
                              case Token.SHNE: {
                                leftType = getJSType(n.getFirstChild());
                                rightType = getJSType(n.getLastChild());

                                JSType leftTypeRestricted = leftType.restrictByNotNullOrUndefined();
                                JSType rightTypeRestricted = rightType.restrictByNotNullOrUndefined();
                                if (!leftTypeRestricted.canTestForShallowEqualityWith(
                                        rightTypeRestricted)) {
                                  report(t, n, DETERMINISTIC_TEST_NO_RESULT, leftType.toString(),
                                      rightType.toString());
                                }
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;
                              }

                              case Token.LT:
                              case Token.LE:
                              case Token.GT:
                              case Token.GE:
                                leftType = getJSType(n.getFirstChild());
                                rightType = getJSType(n.getLastChild());
                                if (rightType.isNumber()) {
                                  validator.expectNumber(
                                      t, n, leftType, "left side of numeric comparison");
                                } else if (leftType.isNumber()) {
                                  validator.expectNumber(
                                      t, n, rightType, "right side of numeric comparison");
                                } else if (leftType.matchesNumberContext() &&
                                           rightType.matchesNumberContext()) {
                                  // OK.
                                } else {
                                  // Whether the comparison is numeric will be determined at runtime
                                  // each time the expression is evaluated. Regardless, both operands
                                  // should match a string context.
                                  String message = "left side of comparison";
                                  validator.expectString(t, n, leftType, message);
                                  validator.expectNotVoid(
                                      t, n, leftType, message, getNativeType(STRING_TYPE));
                                  message = "right side of comparison";
                                  validator.expectString(t, n, rightType, message);
                                  validator.expectNotVoid(
                                      t, n, rightType, message, getNativeType(STRING_TYPE));
                                }
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.IN:
                                left = n.getFirstChild();
                                right = n.getLastChild();
                                leftType = getJSType(left);
                                rightType = getJSType(right);
                                validator.expectObject(t, n, rightType, "'in' requires an object");
                                validator.expectString(t, left, leftType, "left side of 'in'");
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.INSTANCEOF:
                                left = n.getFirstChild();
                                right = n.getLastChild();
                                leftType = getJSType(left);
                                rightType = getJSType(right).restrictByNotNullOrUndefined();

                                validator.expectAnyObject(
                                    t, left, leftType, "deterministic instanceof yields false");
                                validator.expectActualObject(
                                    t, right, rightType, "instanceof requires an object");
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.ASSIGN:
                                visitAssign(t, n);
                                typeable = false;
                                break;

                              case Token.ASSIGN_LSH:
                              case Token.ASSIGN_RSH:
                              case Token.ASSIGN_URSH:
                              case Token.ASSIGN_DIV:
                              case Token.ASSIGN_MOD:
                              case Token.ASSIGN_BITOR:
                              case Token.ASSIGN_BITXOR:
                              case Token.ASSIGN_BITAND:
                              case Token.ASSIGN_SUB:
                              case Token.ASSIGN_ADD:
                              case Token.ASSIGN_MUL:
                              case Token.LSH:
                              case Token.RSH:
                              case Token.URSH:
                              case Token.DIV:
                              case Token.MOD:
                              case Token.BITOR:
                              case Token.BITXOR:
                              case Token.BITAND:
                              case Token.SUB:
                              case Token.ADD:
                              case Token.MUL:
                                visitBinaryOperator(n.getType(), t, n);
                                break;

                              case Token.DELPROP:
                                if (!isReference(n.getFirstChild())) {
                                  report(t, n, BAD_DELETE);
                                }
                                ensureTyped(t, n, BOOLEAN_TYPE);
                                break;

                              case Token.CASE:
                                JSType switchType = getJSType(parent.getFirstChild());
                                JSType caseType = getJSType(n.getFirstChild());
                                validator.expectSwitchMatchesCase(t, n, switchType, caseType);
                                typeable = false;
                                break;

                              case Token.WITH: {
                                Node child = n.getFirstChild();
                                childType = getJSType(child);
                                validator.expectObject(
                                    t, child, childType, "with requires an object");
                                typeable = false;
                                break;
                              }

                              case Token.FUNCTION:
                                visitFunction(t, n);
                                break;

                              // These nodes have no interesting type behavior.
                              case Token.LABEL:
                              case Token.LABEL_NAME:
                              case Token.SWITCH:
                              case Token.BREAK:
                              case Token.CATCH:
                              case Token.TRY:
                              case Token.SCRIPT:
                              case Token.EXPR_RESULT:
                              case Token.BLOCK:
                              case Token.EMPTY:
                              case Token.DEFAULT:
                              case Token.CONTINUE:
                              case Token.DEBUGGER:
                              case Token.THROW:
                                typeable = false;
                                break;

                              // These nodes require data flow analysis.
                              case Token.DO:
                              case Token.FOR:
                              case Token.IF:
                              case Token.WHILE:
                                typeable = false;
                                break;

                              // These nodes are typed during the type inference.
                              case Token.AND:
                              case Token.HOOK:
                              case Token.OBJECTLIT:
                              case Token.OR:
                                if (n.getJSType() != null) { // If we didn't run type inference.
                                  ensureTyped(t, n);
                                } else {
                                  // If this is an enum, then give that type to the objectlit as well.
                                  if ((n.getType() == Token.OBJECTLIT)
                                      && (parent.getJSType() instanceof EnumType)) {
                                    ensureTyped(t, n, parent.getJSType());
                                  } else {
                                    ensureTyped(t, n);
                                  }
                                }
                                break;

                              default:
                                report(t, n, UNEXPECTED_TOKEN, Token.name(n.getType()));
                                ensureTyped(t, n);
                                break;
                            }
                    children: []
                    pos: 16183
                    length: 9630
                children: []
                pos: 16162
                length: 9651
              - type: expression_statement
                fields:
                  text: typeable = typeable && !inExterns;
                children: []
                pos: 25896
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: typeable
                        children: []
                        pos: 25940
                        length: 8
                    children: []
                    pos: 25939
                    length: 10
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: doPercentTypedAccounting(t, n);
                    children: []
                    pos: 25958
                    length: 31
                  pos: 25950
                  length: 45
                pos: 25936
                length: 59
              - type: expression_statement
                fields:
                  text: checkNoTypeCheckSection(n, false);
                children: []
                pos: 26001
                length: 34
              pos: 15984
              length: 10055
          children: []
          pos: 15928
          length: 10111
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: doPercentTypedAccounting
              children: []
              pos: 26162
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 26187
                length: 15
              pos: 26149
              length: 384
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 26218
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: type
                            children: []
                            pos: 26255
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 26263
                            length: 4
                        children: []
                        pos: 26255
                        length: 12
                    children: []
                    pos: 26254
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: nullCount++;
                    children: []
                    pos: 26277
                    length: 12
                  pos: 26269
                  length: 26
                pos: 26251
                length: 278
              pos: 26212
              length: 321
          children: []
          pos: 26149
          length: 384
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitAssign
              children: []
              pos: 26885
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 26897
                length: 15
              pos: 26872
              length: 3765
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSDocInfo info = assign.getJSDocInfo();
                children: []
                pos: 26933
                length: 39
              - type: local_variable_declaration
                fields:
                  text: Node lvalue = assign.getFirstChild();
                children: []
                pos: 26977
                length: 37
              - type: local_variable_declaration
                fields:
                  text: Node rvalue = assign.getLastChild();
                children: []
                pos: 27019
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: lvalue.getType()
                            children: []
                            pos: 27065
                            length: 16
                          right:
                            type: field_access
                            fields:
                              text: Token.GETPROP
                            children: []
                            pos: 27085
                            length: 13
                        children: []
                        pos: 27065
                        length: 33
                    children: []
                    pos: 27064
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Node object = lvalue.getFirstChild();
                    children: []
                    pos: 27108
                    length: 37
                  - type: local_variable_declaration
                    fields:
                      text: JSType objectJsType = getJSType(object);
                    children: []
                    pos: 27152
                    length: 40
                  - type: local_variable_declaration
                    fields:
                      text: String property = lvalue.getLastChild().getString();
                    children: []
                    pos: 27199
                    length: 52
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: object.getType()
                                children: []
                                pos: 27383
                                length: 16
                              right:
                                type: field_access
                                fields:
                                  text: Token.GETPROP
                                children: []
                                pos: 27403
                                length: 13
                            children: []
                            pos: 27383
                            length: 33
                        children: []
                        pos: 27382
                        length: 35
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType jsType = getJSType(object.getFirstChild());
                        children: []
                        pos: 27428
                        length: 50
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: jsType.isInterface()
                                    children: []
                                    pos: 27491
                                    length: 20
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: object.getLastChild().getString().equals("prototype")
                                    children: []
                                    pos: 27527
                                    length: 53
                                children: []
                                pos: 27491
                                length: 89
                            children: []
                            pos: 27490
                            length: 91
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: visitInterfaceGetprop(t, assign, object, property,
                                lvalue, rvalue);
                            children: []
                            pos: 27594
                            length: 67
                          pos: 27582
                          length: 89
                        pos: 27487
                        length: 184
                      pos: 27418
                      length: 261
                    pos: 27379
                    length: 300
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: info
                                    children: []
                                    pos: 27735
                                    length: 4
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 27743
                                    length: 4
                                children: []
                                pos: 27735
                                length: 12
                              right:
                                type: method_invocation
                                fields:
                                  text: info.hasType()
                                children: []
                                pos: 27751
                                length: 14
                            children: []
                            pos: 27735
                            length: 30
                        children: []
                        pos: 27734
                        length: 32
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            visitAnnotatedAssignGetprop(t, assign,
                                        info.getType().evaluate(t.getScope(), typeRegistry), object,
                                        property, rvalue);
                        children: []
                        pos: 27777
                        length: 142
                      - type: return_statement
                        fields:
                          text: return;
                        children: []
                        pos: 27928
                        length: 7
                      pos: 27767
                      length: 176
                    pos: 27731
                    length: 212
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: info
                                    children: []
                                    pos: 27999
                                    length: 4
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 28007
                                    length: 4
                                children: []
                                pos: 27999
                                length: 12
                              right:
                                type: method_invocation
                                fields:
                                  text: info.hasEnumParameterType()
                                children: []
                                pos: 28015
                                length: 27
                            children: []
                            pos: 27999
                            length: 43
                        children: []
                        pos: 27998
                        length: 45
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            checkEnumInitializer(
                                        t, rvalue, info.getEnumParameterType().evaluate(
                                            t.getScope(), typeRegistry));
                        children: []
                        pos: 28054
                        length: 128
                      - type: return_statement
                        fields:
                          text: return;
                        children: []
                        pos: 28191
                        length: 7
                      pos: 28044
                      length: 162
                    pos: 27995
                    length: 211
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: property.equals("prototype")
                            children: []
                            pos: 28251
                            length: 28
                        children: []
                        pos: 28250
                        length: 30
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: instanceof_expression
                                fields:
                                  text: objectJsType instanceof FunctionType
                                children: []
                                pos: 28295
                                length: 36
                            children: []
                            pos: 28294
                            length: 38
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: local_variable_declaration
                            fields:
                              text: FunctionType functionType = (FunctionType) objectJsType;
                            children: []
                            pos: 28345
                            length: 56
                          - type: if_statement
                            fields:
                              condition:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: method_invocation
                                    fields:
                                      text: functionType.isConstructor()
                                    children: []
                                    pos: 28416
                                    length: 28
                                children: []
                                pos: 28415
                                length: 30
                            children:
                            - type: block
                              fields: {}
                              children:
                              - type: local_variable_declaration
                                fields:
                                  text: JSType rvalueType = rvalue.getJSType();
                                children: []
                                pos: 28460
                                length: 39
                              - type: expression_statement
                                fields:
                                  text: |-
                                    validator.expectObject(t, rvalue, rvalueType,
                                                    OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
                                children: []
                                pos: 28512
                                length: 100
                              pos: 28446
                              length: 178
                            pos: 28412
                            length: 212
                          pos: 28333
                          length: 301
                        pos: 28291
                        length: 409
                      - type: return_statement
                        fields:
                          text: return;
                        children: []
                        pos: 28709
                        length: 7
                      pos: 28281
                      length: 443
                    pos: 28247
                    length: 477
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: object.getType()
                                children: []
                                pos: 28778
                                length: 16
                              right:
                                type: field_access
                                fields:
                                  text: Token.GETPROP
                                children: []
                                pos: 28798
                                length: 13
                            children: []
                            pos: 28778
                            length: 33
                        children: []
                        pos: 28777
                        length: 35
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: Node object2 = object.getFirstChild();
                        children: []
                        pos: 28823
                        length: 38
                      - type: local_variable_declaration
                        fields:
                          text: String property2 = NodeUtil.getStringValue(object.getLastChild());
                        children: []
                        pos: 28870
                        length: 66
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: method_invocation
                                fields:
                                  text: '"prototype".equals(property2)'
                                children: []
                                pos: 28950
                                length: 29
                            children: []
                            pos: 28949
                            length: 31
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: local_variable_declaration
                            fields:
                              text: JSType jsType = object2.getJSType();
                            children: []
                            pos: 28993
                            length: 36
                          - type: if_statement
                            fields:
                              condition:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: instanceof_expression
                                    fields:
                                      text: jsType instanceof FunctionType
                                    children: []
                                    pos: 29044
                                    length: 30
                                children: []
                                pos: 29043
                                length: 32
                            children:
                            - type: block
                              fields: {}
                              children:
                              - type: local_variable_declaration
                                fields:
                                  text: FunctionType functionType = (FunctionType)
                                    jsType;
                                children: []
                                pos: 29090
                                length: 50
                              - type: if_statement
                                fields:
                                  condition:
                                    type: parenthesized_expression
                                    fields:
                                      expression:
                                        type: or
                                        fields:
                                          left:
                                            type: method_invocation
                                            fields:
                                              text: functionType.isConstructor()
                                            children: []
                                            pos: 29157
                                            length: 28
                                          right:
                                            type: method_invocation
                                            fields:
                                              text: functionType.isInterface()
                                            children: []
                                            pos: 29189
                                            length: 26
                                        children: []
                                        pos: 29157
                                        length: 58
                                    children: []
                                    pos: 29156
                                    length: 60
                                children:
                                - type: block
                                  fields: {}
                                  children:
                                  - type: expression_statement
                                    fields:
                                      text: |-
                                        checkDeclaredPropertyInheritance(
                                                          t, assign, functionType, property, info, getJSType(rvalue));
                                    children: []
                                    pos: 29233
                                    length: 112
                                  pos: 29217
                                  length: 142
                                pos: 29153
                                length: 206
                              pos: 29076
                              length: 295
                            pos: 29040
                            length: 401
                          - type: return_statement
                            fields:
                              text: return;
                            children: []
                            pos: 29452
                            length: 7
                          pos: 28981
                          length: 488
                        pos: 28946
                        length: 523
                      pos: 28813
                      length: 664
                    pos: 28774
                    length: 703
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        ObjectType type = ObjectType.cast(
                                  objectJsType.restrictByNotNullOrUndefined());
                    children: []
                    pos: 29517
                    length: 90
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 29618
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 29626
                                length: 4
                            children: []
                            pos: 29618
                            length: 12
                        children: []
                        pos: 29617
                        length: 14
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: and
                                    fields:
                                      left:
                                        type: method_invocation
                                        fields:
                                          text: type.hasProperty(property)
                                        children: []
                                        pos: 29646
                                        length: 26
                                      right:
                                        type: unary_expression
                                        fields:
                                          text: "!type.isPropertyTypeInferred(property)"
                                        children: []
                                        pos: 29688
                                        length: 38
                                    children: []
                                    pos: 29646
                                    length: 80
                                  right:
                                    type: unary_expression
                                    fields:
                                      text: "!propertyIsImplicitCast(type, property)"
                                    children: []
                                    pos: 29742
                                    length: 39
                                children: []
                                pos: 29646
                                length: 135
                            children: []
                            pos: 29645
                            length: 137
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: |-
                                validator.expectCanAssignToPropertyOf(
                                              t, assign, getJSType(rvalue),
                                              type.getPropertyType(property), object, property);
                            children: []
                            pos: 29795
                            length: 147
                          pos: 29783
                          length: 169
                        pos: 29642
                        length: 310
                      - type: return_statement
                        fields:
                          text: return;
                        children: []
                        pos: 29961
                        length: 7
                      pos: 29632
                      length: 344
                    pos: 29614
                    length: 362
                  pos: 27100
                  length: 2882
                pos: 27061
                length: 3226
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = getJSType(lvalue);
                children: []
                pos: 30318
                length: 36
              - type: local_variable_declaration
                fields:
                  text: Node rightChild = assign.getLastChild();
                children: []
                pos: 30359
                length: 40
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = getJSType(rightChild);
                children: []
                pos: 30404
                length: 41
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: |-
                            validator.expectCanAssignTo(
                                        t, assign, rightType, leftType, "assignment")
                        children: []
                        pos: 30454
                        length: 86
                    children: []
                    pos: 30453
                    length: 88
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, assign, rightType);
                    children: []
                    pos: 30550
                    length: 34
                  pos: 30542
                  length: 48
                pos: 30450
                length: 183
              pos: 26927
              length: 3710
          children: []
          pos: 26872
          length: 3765
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: propertyIsImplicitCast
              children: []
              pos: 30771
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: ObjectType type
                children: []
                pos: 30794
                length: 15
              pos: 30755
              length: 309
            body:
              type: block
              fields: {}
              children:
              - type: for_statement
                fields:
                  text: |-
                    for (; type != null; type = type.getImplicitPrototype()) {
                          JSDocInfo docInfo = type.getOwnPropertyJSDocInfo(prop);
                          if (docInfo != null && docInfo.isImplicitCast()) {
                            return true;
                          }
                        }
                children: []
                pos: 30830
                length: 212
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 31047
                length: 13
              pos: 30824
              length: 240
          children: []
          pos: 30755
          length: 309
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkDeclaredPropertyInheritance
              children: []
              pos: 31333
              length: 32
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 31373
                length: 15
              pos: 31320
              length: 3896
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: ctorType.hasUnknownSupertype()
                        children: []
                        pos: 31834
                        length: 30
                    children: []
                    pos: 31833
                    length: 32
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 31874
                    length: 7
                  pos: 31866
                  length: 21
                pos: 31830
                length: 57
              - type: local_variable_declaration
                fields:
                  text: FunctionType superClass = ctorType.getSuperClassConstructor();
                children: []
                pos: 31893
                length: 62
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean superClassHasProperty = superClass != null &&
                            superClass.getPrototype().hasProperty(propertyName);
                children: []
                pos: 31960
                length: 114
              - type: local_variable_declaration
                fields:
                  text: boolean declaredOverride = info != null && info.isOverride();
                children: []
                pos: 32079
                length: 61
              - type: local_variable_declaration
                fields:
                  text: boolean foundInterfaceProperty = false;
                children: []
                pos: 32146
                length: 39
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: ctorType.isConstructor()
                        children: []
                        pos: 32194
                        length: 24
                    children: []
                    pos: 32193
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: enhanced_for_statement
                    fields:
                      text: |-
                        for (JSType implementedInterface : ctorType.getImplementedInterfaces()) {
                                if (implementedInterface.isUnknownType()) {
                                  continue;
                                }
                                FunctionType interfaceType =
                                    implementedInterface.toObjectType().getConstructor();
                                boolean interfaceHasProperty =
                                    interfaceType.getPrototype().hasProperty(propertyName);
                                foundInterfaceProperty = foundInterfaceProperty || interfaceHasProperty;
                                if (reportMissingOverride.isOn() && !declaredOverride &&
                                    interfaceHasProperty) {
                                  // @override not present, but the property does override an interface
                                  // property
                                  compiler.report(t.makeError(n, reportMissingOverride,
                                      HIDDEN_INTERFACE_PROPERTY, propertyName,
                                      interfaceType.getTopMostDefiningType(propertyName).toString()));
                                }
                                if (!declaredOverride) {
                                  continue;
                                }
                                // @override is present and we have to check that it is ok
                                if (interfaceHasProperty) {
                                  JSType interfacePropType =
                                      interfaceType.getPrototype().getPropertyType(propertyName);
                                  if (!propertyType.canAssignTo(interfacePropType)) {
                                    compiler.report(t.makeError(n,
                                        HIDDEN_INTERFACE_PROPERTY_MISMATCH, propertyName,
                                        interfaceType.getTopMostDefiningType(propertyName).toString(),
                                        interfacePropType.toString(), propertyType.toString()));
                                  }
                                }
                              }
                    children: []
                    pos: 32228
                    length: 1487
                  pos: 32220
                  length: 1501
                pos: 32190
                length: 1531
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: unary_expression
                            fields:
                              text: "!declaredOverride"
                            children: []
                            pos: 33731
                            length: 17
                          right:
                            type: unary_expression
                            fields:
                              text: "!superClassHasProperty"
                            children: []
                            pos: 33752
                            length: 22
                        children: []
                        pos: 33731
                        length: 43
                    children: []
                    pos: 33730
                    length: 45
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 33844
                    length: 7
                  pos: 33776
                  length: 81
                pos: 33727
                length: 130
              - type: local_variable_declaration
                fields:
                  text: |-
                    JSType topInstanceType = superClassHasProperty ?
                            superClass.getTopMostDefiningType(propertyName) : null;
                children: []
                pos: 33863
                length: 112
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: reportMissingOverride.isOn()
                                    children: []
                                    pos: 33984
                                    length: 28
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: ctorType.isConstructor()
                                    children: []
                                    pos: 34016
                                    length: 24
                                children: []
                                pos: 33984
                                length: 56
                              right:
                                type: unary_expression
                                fields:
                                  text: "!declaredOverride"
                                children: []
                                pos: 34052
                                length: 17
                            children: []
                            pos: 33984
                            length: 85
                          right:
                            type: identifier
                            fields:
                              text: superClassHasProperty
                            children: []
                            pos: 34073
                            length: 21
                        children: []
                        pos: 33984
                        length: 110
                    children: []
                    pos: 33983
                    length: 112
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        compiler.report(t.makeError(n, reportMissingOverride,
                                  HIDDEN_SUPERCLASS_PROPERTY, propertyName,
                                  topInstanceType.toString()));
                    children: []
                    pos: 34198
                    length: 145
                  pos: 34096
                  length: 253
                pos: 33980
                length: 369
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!declaredOverride"
                        children: []
                        pos: 34358
                        length: 17
                    children: []
                    pos: 34357
                    length: 19
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 34424
                    length: 7
                  pos: 34377
                  length: 60
                pos: 34354
                length: 83
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: superClassHasProperty
                        children: []
                        pos: 34509
                        length: 21
                    children: []
                    pos: 34508
                    length: 23
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        JSType superClassPropType =
                                  superClass.getPrototype().getPropertyType(propertyName);
                    children: []
                    pos: 34586
                    length: 94
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: unary_expression
                            fields:
                              text: "!propertyType.canAssignTo(superClassPropType)"
                            children: []
                            pos: 34691
                            length: 45
                        children: []
                        pos: 34690
                        length: 47
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            compiler.report(
                                        t.makeError(n, HIDDEN_SUPERCLASS_PROPERTY_MISMATCH,
                                            propertyName, topInstanceType.toString(),
                                            superClassPropType.toString(), propertyType.toString()));
                        children: []
                        pos: 34748
                        length: 212
                      pos: 34738
                      length: 230
                    pos: 34687
                    length: 281
                  pos: 34532
                  length: 442
                pos: 34505
                length: 707
              pos: 31485
              length: 3731
          children: []
          pos: 31320
          length: 3896
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitInterfaceGetprop
              children: []
              pos: 35354
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 35376
                length: 15
              pos: 35341
              length: 1206
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType rvalueType = getJSType(rvalue);
                children: []
                pos: 35475
                length: 38
              - type: local_variable_declaration
                fields:
                  text: |-
                    String abstractMethodName =
                            compiler.getCodingConvention().getAbstractMethodName();
                children: []
                pos: 35712
                length: 91
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: unary_expression
                            fields:
                              text: "!rvalueType.isOrdinaryFunction()"
                            children: []
                            pos: 35812
                            length: 32
                          right:
                            type: unary_expression
                            fields:
                              text: |-
                                !(rvalue.isQualifiedName() &&
                                          rvalue.getQualifiedName().equals(abstractMethodName))
                            children: []
                            pos: 35856
                            length: 93
                        children: []
                        pos: 35812
                        length: 137
                    children: []
                    pos: 35811
                    length: 139
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        String abstractMethodMessage = (abstractMethodName != null)
                                 ? ", or " + abstractMethodName
                                 : "";
                    children: []
                    pos: 36034
                    length: 114
                  - type: expression_statement
                    fields:
                      text: |-
                        compiler.report(
                                  t.makeError(object, INVALID_INTERFACE_MEMBER_DECLARATION,
                                      abstractMethodMessage));
                    children: []
                    pos: 36155
                    length: 123
                  pos: 35951
                  length: 333
                pos: 35808
                length: 476
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: assign.getLastChild().getType()
                                children: []
                                pos: 36294
                                length: 31
                              right:
                                type: field_access
                                fields:
                                  text: Token.FUNCTION
                                children: []
                                pos: 36329
                                length: 14
                            children: []
                            pos: 36294
                            length: 49
                          right:
                            type: unary_expression
                            fields:
                              text: "!NodeUtil.isEmptyBlock(assign.getLastChild().getLastChild())"
                            children: []
                            pos: 36355
                            length: 60
                        children: []
                        pos: 36294
                        length: 121
                    children: []
                    pos: 36293
                    length: 123
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        compiler.report(
                                  t.makeError(object, INTERFACE_FUNCTION_NOT_EMPTY,
                                      abstractMethodName));
                    children: []
                    pos: 36425
                    length: 112
                  pos: 36417
                  length: 126
                pos: 36290
                length: 253
              pos: 35468
              length: 1079
          children: []
          pos: 35341
          length: 1206
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitAnnotatedAssignGetprop
              children: []
              pos: 36716
              length: 27
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 36744
                length: 15
              pos: 36703
              length: 297
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    validator.expectCanAssignToPropertyOf(t, assign, getJSType(rvalue), type,
                            object, property);
                children: []
                pos: 36896
                length: 100
              pos: 36836
              length: 164
          children: []
          pos: 36703
          length: 297
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitName
              children: []
              pos: 37329
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 37339
                length: 15
              pos: 37321
              length: 1088
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int parentNodeType = parent.getType();
                children: []
                pos: 37835
                length: 38
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: or
                                fields:
                                  left:
                                    type: equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: parentNodeType
                                        children: []
                                        pos: 37882
                                        length: 14
                                      right:
                                        type: field_access
                                        fields:
                                          text: Token.FUNCTION
                                        children: []
                                        pos: 37900
                                        length: 14
                                    children: []
                                    pos: 37882
                                    length: 32
                                  right:
                                    type: equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: parentNodeType
                                        children: []
                                        pos: 37926
                                        length: 14
                                      right:
                                        type: field_access
                                        fields:
                                          text: Token.CATCH
                                        children: []
                                        pos: 37944
                                        length: 11
                                    children: []
                                    pos: 37926
                                    length: 29
                                children: []
                                pos: 37882
                                length: 73
                              right:
                                type: equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: parentNodeType
                                    children: []
                                    pos: 37967
                                    length: 14
                                  right:
                                    type: field_access
                                    fields:
                                      text: Token.LP
                                    children: []
                                    pos: 37985
                                    length: 8
                                children: []
                                pos: 37967
                                length: 26
                            children: []
                            pos: 37882
                            length: 111
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: parentNodeType
                                children: []
                                pos: 38005
                                length: 14
                              right:
                                type: field_access
                                fields:
                                  text: Token.VAR
                                children: []
                                pos: 38023
                                length: 9
                            children: []
                            pos: 38005
                            length: 27
                        children: []
                        pos: 37882
                        length: 150
                    children: []
                    pos: 37881
                    length: 152
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return false;
                    children: []
                    pos: 38042
                    length: 13
                  pos: 38034
                  length: 27
                pos: 37878
                length: 183
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 38067
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: type
                            children: []
                            pos: 38104
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 38112
                            length: 4
                        children: []
                        pos: 38104
                        length: 12
                    children: []
                    pos: 38103
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: type = getNativeType(UNKNOWN_TYPE);
                    children: []
                    pos: 38126
                    length: 35
                  - type: local_variable_declaration
                    fields:
                      text: Var var = t.getScope().getVar(n.getString());
                    children: []
                    pos: 38168
                    length: 45
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: var
                                children: []
                                pos: 38224
                                length: 3
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 38231
                                length: 4
                            children: []
                            pos: 38224
                            length: 11
                        children: []
                        pos: 38223
                        length: 13
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType varType = var.getType();
                        children: []
                        pos: 38247
                        length: 31
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: varType
                                    children: []
                                    pos: 38291
                                    length: 7
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 38302
                                    length: 4
                                children: []
                                pos: 38291
                                length: 15
                            children: []
                            pos: 38290
                            length: 17
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: type = varType;
                            children: []
                            pos: 38320
                            length: 15
                          pos: 38308
                          length: 37
                        pos: 38287
                        length: 58
                      pos: 38237
                      length: 116
                    pos: 38220
                    length: 133
                  pos: 38118
                  length: 241
                pos: 38100
                length: 259
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n, type);
                children: []
                pos: 38364
                length: 24
              - type: return_statement
                fields:
                  text: return true;
                children: []
                pos: 38393
                length: 12
              pos: 37377
              length: 1032
          children: []
          pos: 37321
          length: 1088
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitGetProp
              children: []
              pos: 38700
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 38713
                length: 15
              pos: 38687
              length: 1044
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: n.getJSType()
                                children: []
                                pos: 38972
                                length: 13
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 38989
                                length: 4
                            children: []
                            pos: 38972
                            length: 21
                          right:
                            type: equals
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: parent.getType()
                                children: []
                                pos: 38997
                                length: 16
                              right:
                                type: field_access
                                fields:
                                  text: Token.ASSIGN
                                children: []
                                pos: 39017
                                length: 12
                            children: []
                            pos: 38997
                            length: 32
                        children: []
                        pos: 38972
                        length: 57
                    children: []
                    pos: 38971
                    length: 59
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 39039
                    length: 7
                  pos: 39031
                  length: 21
                pos: 38968
                length: 84
              - type: local_variable_declaration
                fields:
                  text: Node property = n.getLastChild();
                children: []
                pos: 39264
                length: 33
              - type: local_variable_declaration
                fields:
                  text: Node objNode = n.getFirstChild();
                children: []
                pos: 39302
                length: 33
              - type: local_variable_declaration
                fields:
                  text: JSType childType = getJSType(objNode);
                children: []
                pos: 39340
                length: 38
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: |-
                            !validator.expectNotVoid(t, n, childType,
                                        "undefined has no properties", getNativeType(OBJECT_TYPE))
                        children: []
                        pos: 39479
                        length: 112
                    children: []
                    pos: 39478
                    length: 114
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, n);
                    children: []
                    pos: 39601
                    length: 18
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 39626
                    length: 7
                  pos: 39593
                  length: 46
                pos: 39475
                length: 164
              - type: expression_statement
                fields:
                  text: checkPropertyAccess(childType, property.getString(), t, n);
                children: []
                pos: 39645
                length: 59
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n);
                children: []
                pos: 39709
                length: 18
              pos: 38751
              length: 980
          children: []
          pos: 38687
          length: 1044
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkPropertyAccess
              children: []
              pos: 39815
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType childType
                children: []
                pos: 39835
                length: 16
              pos: 39802
              length: 1024
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: ObjectType objectType = childType.dereference();
                children: []
                pos: 39907
                length: 48
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: objectType
                            children: []
                            pos: 39964
                            length: 10
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 39978
                            length: 4
                        children: []
                        pos: 39964
                        length: 18
                    children: []
                    pos: 39963
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType propType = getJSType(n);
                    children: []
                    pos: 39992
                    length: 31
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: or
                                    fields:
                                      left:
                                        type: unary_expression
                                        fields:
                                          text: "!objectType.hasProperty(propName)"
                                        children: []
                                        pos: 40035
                                        length: 33
                                      right:
                                        type: method_invocation
                                        fields:
                                          text: objectType.equals(typeRegistry.getNativeType(UNKNOWN_TYPE))
                                        children: []
                                        pos: 40083
                                        length: 59
                                    children: []
                                    pos: 40035
                                    length: 107
                                children: []
                                pos: 40034
                                length: 109
                              right:
                                type: method_invocation
                                fields:
                                  text: propType.equals(typeRegistry.getNativeType(UNKNOWN_TYPE))
                                children: []
                                pos: 40157
                                length: 57
                            children: []
                            pos: 40034
                            length: 180
                        children: []
                        pos: 40033
                        length: 182
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: instanceof_expression
                                fields:
                                  text: objectType instanceof EnumType
                                children: []
                                pos: 40230
                                length: 30
                            children: []
                            pos: 40229
                            length: 32
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: report(t, n, INEXISTENT_ENUM_ELEMENT, propName);
                            children: []
                            pos: 40274
                            length: 48
                          pos: 40262
                          length: 70
                        pos: 40226
                        length: 432
                      pos: 40216
                      length: 450
                    pos: 40030
                    length: 636
                  pos: 39984
                  length: 688
                pos: 39960
                length: 862
              pos: 39901
              length: 925
          children: []
          pos: 39802
          length: 1024
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isPropertyTest
              children: []
              pos: 41053
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getProp
                children: []
                pos: 41068
                length: 12
              pos: 41037
              length: 763
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node parent = getProp.getParent();
                children: []
                pos: 41088
                length: 34
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: parent.getType()
                        children: []
                        pos: 41135
                        length: 16
                    children: []
                    pos: 41134
                    length: 18
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.CALL:
                                return parent.getFirstChild() != getProp &&
                                    compiler.getCodingConvention().isPropertyTestFunction(parent);

                              case Token.IF:
                              case Token.WHILE:
                              case Token.DO:
                              case Token.FOR:
                                return NodeUtil.getConditionExpression(parent) == getProp;

                              case Token.INSTANCEOF:
                              case Token.TYPEOF:
                                return true;

                              case Token.AND:
                              case Token.HOOK:
                                return parent.getFirstChild() == getProp;

                              case Token.NOT:
                                return parent.getParent().getType() == Token.OR &&
                                    parent.getParent().getFirstChild() == parent;
                            }
                    children: []
                    pos: 41153
                    length: 625
                children: []
                pos: 41127
                length: 651
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 41783
                length: 13
              pos: 41082
              length: 718
          children: []
          pos: 41037
          length: 763
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitGetElem
              children: []
              pos: 42043
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 42056
                length: 15
              pos: 42030
              length: 222
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 42087
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 42122
                length: 30
              - type: expression_statement
                fields:
                  text: validator.expectIndexMatch(t, n, getJSType(left), getJSType(right));
                children: []
                pos: 42157
                length: 68
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n);
                children: []
                pos: 42230
                length: 18
              pos: 42081
              length: 171
          children: []
          pos: 42030
          length: 222
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitVar
              children: []
              pos: 42491
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 42500
                length: 15
              pos: 42478
              length: 1336
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: 'JSDocInfo varInfo = n.hasOneChild() ? n.getJSDocInfo() :
                    null;'
                children: []
                pos: 42693
                length: 62
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (Node name : n.children()) {
                          Node value = name.getFirstChild();
                          // A null var would indicate a bug in the scope creation logic.
                          Var var = t.getScope().getVar(name.getString());

                          if (value != null) {
                            JSType valueType = getJSType(value);
                            JSType nameType = var.getType();
                            nameType = (nameType == null) ? getNativeType(UNKNOWN_TYPE) : nameType;

                            JSDocInfo info = name.getJSDocInfo();
                            if (info == null) {
                              info = varInfo;
                            }
                            if (info != null && info.hasEnumParameterType()) {
                              // var.getType() can never be null, this would indicate a bug in the
                              // scope creation logic.
                              checkEnumInitializer(
                                  t, value,
                                  info.getEnumParameterType().evaluate(t.getScope(), typeRegistry));
                            } else if (var.isTypeInferred()) {
                              ensureTyped(t, name, valueType);
                            } else {
                              validator.expectCanAssignTo(
                                  t, value, valueType, nameType, "initializing variable");
                            }
                          }
                        }
                children: []
                pos: 42760
                length: 1050
              pos: 42525
              length: 1289
          children: []
          pos: 42478
          length: 1336
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitNew
              children: []
              pos: 43867
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 43876
                length: 15
              pos: 43854
              length: 863
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node constructor = n.getFirstChild();
                children: []
                pos: 43907
                length: 37
              - type: local_variable_declaration
                fields:
                  text: FunctionType type = getFunctionType(constructor);
                children: []
                pos: 43949
                length: 49
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 44007
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 44015
                                length: 4
                            children: []
                            pos: 44007
                            length: 12
                          right:
                            type: method_invocation
                            fields:
                              text: type.isConstructor()
                            children: []
                            pos: 44023
                            length: 20
                        children: []
                        pos: 44007
                        length: 36
                    children: []
                    pos: 44006
                    length: 38
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: visitParameterList(t, n, type);
                    children: []
                    pos: 44053
                    length: 31
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, n, type.getInstanceType());
                    children: []
                    pos: 44091
                    length: 42
                  pos: 44045
                  length: 94
                pos: 44003
                length: 710
              pos: 43901
              length: 816
          children: []
          pos: 43854
          length: 863
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitFunction
              children: []
              pos: 44975
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 44989
                length: 15
              pos: 44962
              length: 1567
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSDocInfo info = n.getJSDocInfo();
                children: []
                pos: 45020
                length: 34
              - type: local_variable_declaration
                fields:
                  text: FunctionType functionType = (FunctionType) n.getJSType();
                children: []
                pos: 45060
                length: 57
              - type: local_variable_declaration
                fields:
                  text: String functionPrivateName = n.getFirstChild().getString();
                children: []
                pos: 45122
                length: 59
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: functionType.isInterface()
                            children: []
                            pos: 45190
                            length: 26
                          right:
                            type: method_invocation
                            fields:
                              text: functionType.isConstructor()
                            children: []
                            pos: 45220
                            length: 28
                        children: []
                        pos: 45190
                        length: 58
                    children: []
                    pos: 45189
                    length: 60
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: |-
                        FunctionType baseConstructor = functionType.
                                  getPrototype().getImplicitPrototype().getConstructor();
                    children: []
                    pos: 45258
                    length: 110
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: and
                                fields:
                                  left:
                                    type: not_equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: baseConstructor
                                        children: []
                                        pos: 45379
                                        length: 15
                                      right:
                                        type: null_literal
                                        fields: {}
                                        children: []
                                        pos: 45398
                                        length: 4
                                    children: []
                                    pos: 45379
                                    length: 23
                                  right:
                                    type: not_equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: baseConstructor
                                        children: []
                                        pos: 45416
                                        length: 15
                                      right:
                                        type: method_invocation
                                        fields:
                                          text: getNativeType(OBJECT_FUNCTION_TYPE)
                                        children: []
                                        pos: 45435
                                        length: 35
                                    children: []
                                    pos: 45416
                                    length: 54
                                children: []
                                pos: 45379
                                length: 91
                              right:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: or
                                    fields:
                                      left:
                                        type: and
                                        fields:
                                          left:
                                            type: method_invocation
                                            fields:
                                              text: baseConstructor.isConstructor()
                                            children: []
                                            pos: 45485
                                            length: 31
                                          right:
                                            type: method_invocation
                                            fields:
                                              text: functionType.isInterface()
                                            children: []
                                            pos: 45520
                                            length: 26
                                        children: []
                                        pos: 45485
                                        length: 61
                                      right:
                                        type: and
                                        fields:
                                          left:
                                            type: method_invocation
                                            fields:
                                              text: baseConstructor.isInterface()
                                            children: []
                                            pos: 45561
                                            length: 29
                                          right:
                                            type: method_invocation
                                            fields:
                                              text: functionType.isConstructor()
                                            children: []
                                            pos: 45594
                                            length: 28
                                        children: []
                                        pos: 45561
                                        length: 61
                                    children: []
                                    pos: 45485
                                    length: 137
                                children: []
                                pos: 45484
                                length: 139
                            children: []
                            pos: 45379
                            length: 244
                        children: []
                        pos: 45378
                        length: 246
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: |-
                            compiler.report(
                                        t.makeError(n, CONFLICTING_EXTENDED_TYPE, functionPrivateName));
                        children: []
                        pos: 45635
                        length: 93
                      pos: 45625
                      length: 111
                    pos: 45375
                    length: 361
                  - type: enhanced_for_statement
                    fields:
                      text: |-
                        for (JSType baseInterface : functionType.getImplementedInterfaces()) {
                                boolean badImplementedType = false;
                                ObjectType baseInterfaceObj = ObjectType.cast(baseInterface);
                                if (baseInterfaceObj != null) {
                                  FunctionType interfaceConstructor =
                                      baseInterfaceObj.getConstructor();
                                  if (interfaceConstructor != null &&
                                      !interfaceConstructor.isInterface()) {
                                    badImplementedType = true;
                                  }
                                } else {
                                  badImplementedType = true;
                                }
                                if (badImplementedType) {
                                  report(t, n, BAD_IMPLEMENTED_TYPE, functionPrivateName);
                                }
                              }
                    children: []
                    pos: 45744
                    length: 652
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: functionType.isConstructor()
                            children: []
                            pos: 46407
                            length: 28
                        children: []
                        pos: 46406
                        length: 30
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: validator.expectAllInterfacePropertiesImplemented(functionType);
                        children: []
                        pos: 46447
                        length: 64
                      pos: 46437
                      length: 82
                    pos: 46403
                    length: 116
                  pos: 45250
                  length: 1275
                pos: 45186
                length: 1339
              pos: 45014
              length: 1515
          children: []
          pos: 44962
          length: 1567
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitCall
              children: []
              pos: 46769
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 46779
                length: 15
              pos: 46756
              length: 1120
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node child = n.getFirstChild();
                children: []
                pos: 46810
                length: 31
              - type: local_variable_declaration
                fields:
                  text: JSType childType = getJSType(child).restrictByNotNullOrUndefined();
                children: []
                pos: 46846
                length: 67
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!childType.canBeCalled()"
                        children: []
                        pos: 46923
                        length: 24
                    children: []
                    pos: 46922
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: report(t, n, NOT_CALLABLE, childType.toString());
                    children: []
                    pos: 46957
                    length: 49
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, n);
                    children: []
                    pos: 47013
                    length: 18
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 47038
                    length: 7
                  pos: 46949
                  length: 102
                pos: 46919
                length: 132
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: childType instanceof FunctionType
                        children: []
                        pos: 47186
                        length: 33
                    children: []
                    pos: 47185
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType functionType = (FunctionType) childType;
                    children: []
                    pos: 47229
                    length: 53
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: functionType.isConstructor()
                                children: []
                                pos: 47360
                                length: 28
                              right:
                                type: unary_expression
                                fields:
                                  text: "!functionType.isNativeObjectType()"
                                children: []
                                pos: 47402
                                length: 34
                            children: []
                            pos: 47360
                            length: 76
                        children: []
                        pos: 47359
                        length: 78
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: report(t, n, CONSTRUCTOR_NOT_CALLABLE, childType.toString());
                        children: []
                        pos: 47448
                        length: 61
                      pos: 47438
                      length: 79
                    pos: 47356
                    length: 161
                  - type: expression_statement
                    fields:
                      text: visitParameterList(t, n, functionType);
                    children: []
                    pos: 47525
                    length: 39
                  - type: expression_statement
                    fields:
                      text: ensureTyped(t, n, functionType.getReturnType());
                    children: []
                    pos: 47571
                    length: 48
                  pos: 47221
                  length: 404
                pos: 47182
                length: 481
              pos: 46804
              length: 1072
          children: []
          pos: 46756
          length: 1120
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitParameterList
              children: []
              pos: 47957
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 47976
                length: 15
              pos: 47944
              length: 1284
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Iterator<Node> arguments = call.children().iterator();
                children: []
                pos: 48043
                length: 54
              - type: expression_statement
                fields:
                  text: arguments.next();
                children: []
                pos: 48102
                length: 17
              - type: local_variable_declaration
                fields:
                  text: Iterator<Node> parameters = functionType.getParameters().iterator();
                children: []
                pos: 48151
                length: 68
              - type: local_variable_declaration
                fields:
                  text: int ordinal = 0;
                children: []
                pos: 48224
                length: 16
              - type: local_variable_declaration
                fields:
                  text: Node parameter = null;
                children: []
                pos: 48245
                length: 22
              - type: local_variable_declaration
                fields:
                  text: Node argument = null;
                children: []
                pos: 48272
                length: 21
              - type: while_statement
                fields:
                  text: |-
                    while (arguments.hasNext() &&
                               parameters.hasNext()) {
                          // If there are no parameters left in the list, then the while loop
                          // above implies that this must be a var_args function.
                            parameter = parameters.next();
                          argument = arguments.next();
                          ordinal++;

                          validator.expectArgumentMatchesParameter(t, argument,
                              getJSType(argument), getJSType(parameter), call, ordinal);
                        }
                children: []
                pos: 48298
                length: 427
              - type: local_variable_declaration
                fields:
                  text: int numArgs = call.getChildCount() - 1;
                children: []
                pos: 48731
                length: 39
              - type: local_variable_declaration
                fields:
                  text: int minArgs = functionType.getMinArguments();
                children: []
                pos: 48775
                length: 45
              - type: local_variable_declaration
                fields:
                  text: int maxArgs = functionType.getMaxArguments();
                children: []
                pos: 48825
                length: 45
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: greater_than
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: minArgs
                                children: []
                                pos: 48879
                                length: 7
                              right:
                                type: identifier
                                fields:
                                  text: numArgs
                                children: []
                                pos: 48889
                                length: 7
                            children: []
                            pos: 48879
                            length: 17
                          right:
                            type: less_than
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: maxArgs
                                children: []
                                pos: 48900
                                length: 7
                              right:
                                type: identifier
                                fields:
                                  text: numArgs
                                children: []
                                pos: 48910
                                length: 7
                            children: []
                            pos: 48900
                            length: 17
                        children: []
                        pos: 48879
                        length: 38
                    children: []
                    pos: 48878
                    length: 40
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        report(t, call, WRONG_ARGUMENT_COUNT,
                                      validator.getReadableJSTypeName(call.getFirstChild(), false),
                                      String.valueOf(numArgs), String.valueOf(minArgs),
                                      maxArgs != Integer.MAX_VALUE ?
                                      " and no more than " + maxArgs + " argument(s)" : "");
                    children: []
                    pos: 48927
                    length: 291
                  pos: 48919
                  length: 305
                pos: 48875
                length: 349
              pos: 48037
              length: 1191
          children: []
          pos: 47944
          length: 1284
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitReturn
              children: []
              pos: 49470
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 49482
                length: 15
              pos: 49457
              length: 1070
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node function = t.getEnclosingFunction();
                children: []
                pos: 49513
                length: 41
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: function
                            children: []
                            pos: 49658
                            length: 8
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 49670
                            length: 4
                        children: []
                        pos: 49658
                        length: 16
                    children: []
                    pos: 49657
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 49684
                    length: 7
                  pos: 49676
                  length: 21
                pos: 49654
                length: 43
              - type: local_variable_declaration
                fields:
                  text: JSType jsType = getJSType(function);
                children: []
                pos: 49702
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: jsType instanceof FunctionType
                        children: []
                        pos: 49748
                        length: 30
                    children: []
                    pos: 49747
                    length: 32
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType functionType = (FunctionType) jsType;
                    children: []
                    pos: 49788
                    length: 50
                  - type: local_variable_declaration
                    fields:
                      text: JSType returnType = functionType.getReturnType();
                    children: []
                    pos: 49846
                    length: 49
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: returnType
                                children: []
                                pos: 50007
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 50021
                                length: 4
                            children: []
                            pos: 50007
                            length: 18
                        children: []
                        pos: 50006
                        length: 20
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: returnType = getNativeType(VOID_TYPE);
                        children: []
                        pos: 50037
                        length: 38
                      pos: 50027
                      length: 56
                    pos: 50003
                    length: 80
                  - type: local_variable_declaration
                    fields:
                      text: Node valueNode = n.getFirstChild();
                    children: []
                    pos: 50135
                    length: 35
                  - type: local_variable_declaration
                    fields:
                      text: JSType actualReturnType;
                    children: []
                    pos: 50177
                    length: 24
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: valueNode
                                children: []
                                pos: 50212
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 50225
                                length: 4
                            children: []
                            pos: 50212
                            length: 17
                        children: []
                        pos: 50211
                        length: 19
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: actualReturnType = getNativeType(VOID_TYPE);
                        children: []
                        pos: 50241
                        length: 44
                      - type: expression_statement
                        fields:
                          text: valueNode = n;
                        children: []
                        pos: 50294
                        length: 14
                      pos: 50231
                      length: 85
                    pos: 50208
                    length: 172
                  - type: expression_statement
                    fields:
                      text: |-
                        validator.expectCanAssignTo(t, valueNode, actualReturnType, returnType,
                                  "inconsistent return type");
                    children: []
                    pos: 50407
                    length: 110
                  pos: 49780
                  length: 743
                pos: 49744
                length: 779
              pos: 49507
              length: 1020
          children: []
          pos: 49457
          length: 1070
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: visitBinaryOperator
              children: []
              pos: 50935
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int op
                children: []
                pos: 50955
                length: 6
              pos: 50922
              length: 1688
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 50994
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = getJSType(left);
                children: []
                pos: 51029
                length: 34
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 51068
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = getJSType(right);
                children: []
                pos: 51103
                length: 36
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: op
                        children: []
                        pos: 51152
                        length: 2
                    children: []
                    pos: 51151
                    length: 4
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.ASSIGN_LSH:
                              case Token.ASSIGN_RSH:
                              case Token.LSH:
                              case Token.RSH:
                              case Token.ASSIGN_URSH:
                              case Token.URSH:
                                if (!leftType.matchesInt32Context()) {
                                  report(t, left, BIT_OPERATION,
                                           NodeUtil.opToStr(n.getType()), leftType.toString());
                                }
                                if (!rightType.matchesUint32Context()) {
                                  report(t, right, BIT_OPERATION,
                                           NodeUtil.opToStr(n.getType()), rightType.toString());
                                }
                                break;

                              case Token.ASSIGN_DIV:
                              case Token.ASSIGN_MOD:
                              case Token.ASSIGN_MUL:
                              case Token.ASSIGN_SUB:
                              case Token.DIV:
                              case Token.MOD:
                              case Token.MUL:
                              case Token.SUB:
                                validator.expectNumber(t, left, leftType, "left operand");
                                validator.expectNumber(t, right, rightType, "right operand");
                                break;

                              case Token.ASSIGN_BITAND:
                              case Token.ASSIGN_BITXOR:
                              case Token.ASSIGN_BITOR:
                              case Token.BITAND:
                              case Token.BITXOR:
                              case Token.BITOR:
                                validator.expectBitwiseable(t, left, leftType,
                                    "bad left operand to bitwise operator");
                                validator.expectBitwiseable(t, right, rightType,
                                    "bad right operand to bitwise operator");
                                break;

                              case Token.ASSIGN_ADD:
                              case Token.ADD:
                                break;

                              default:
                                report(t, n, UNEXPECTED_TOKEN, Node.tokenToName(op));
                            }
                    children: []
                    pos: 51156
                    length: 1427
                children: []
                pos: 51144
                length: 1439
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n);
                children: []
                pos: 52588
                length: 18
              pos: 50988
              length: 1622
          children: []
          pos: 50922
          length: 1688
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkEnumInitializer
              children: []
              pos: 53290
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 53318
                length: 15
              pos: 53277
              length: 1449
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: value.getType()
                            children: []
                            pos: 53379
                            length: 15
                          right:
                            type: field_access
                            fields:
                              text: Token.OBJECTLIT
                            children: []
                            pos: 53398
                            length: 15
                        children: []
                        pos: 53379
                        length: 34
                    children: []
                    pos: 53378
                    length: 36
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: value = value.getFirstChild();
                    children: []
                    pos: 53502
                    length: 30
                  - type: expression_statement
                    fields:
                      text: 'value = (value == null) ? null : value.getNext();'
                    children: []
                    pos: 53539
                    length: 49
                  - type: while_statement
                    fields:
                      text: |-
                        while (value != null) {
                                // the value's type must be assignable to the enum's primitive type
                                validator.expectCanAssignTo(t, value, getJSType(value), primitiveType,
                                    "element type must match enum's type");

                                // advancing twice
                                value = value.getNext();
                                value = (value == null) ? null : value.getNext();
                              }
                    children: []
                    pos: 53595
                    length: 357
                  pos: 53415
                  length: 543
                pos: 53375
                length: 1347
              pos: 53369
              length: 1357
          children: []
          pos: 53277
          length: 1449
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isReference
              children: []
              pos: 55018
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 55030
                length: 6
              pos: 54995
              length: 216
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 55052
                        length: 11
                    children: []
                    pos: 55051
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.GETELEM:
                              case Token.GETPROP:
                              case Token.NAME:
                                return true;

                              default:
                                return false;
                            }
                    children: []
                    pos: 55065
                    length: 141
                children: []
                pos: 55044
                length: 162
              pos: 55038
              length: 173
          children: []
          pos: 54995
          length: 216
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getJSType
              children: []
              pos: 55336
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 55346
                length: 6
              pos: 55321
              length: 461
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType jsType = n.getJSType();
                children: []
                pos: 55360
                length: 30
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: jsType
                            children: []
                            pos: 55399
                            length: 6
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 55409
                            length: 4
                        children: []
                        pos: 55399
                        length: 14
                    children: []
                    pos: 55398
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return getNativeType(UNKNOWN_TYPE);
                    children: []
                    pos: 55703
                    length: 35
                  pos: 55415
                  length: 329
                pos: 55395
                length: 383
              pos: 55354
              length: 428
          children: []
          pos: 55321
          length: 461
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getFunctionType
              children: []
              pos: 55909
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 55925
                length: 6
              pos: 55888
              length: 335
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType type = getJSType(n).restrictByNotNullOrUndefined();
                children: []
                pos: 55939
                length: 58
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: type.isUnknownType()
                        children: []
                        pos: 56006
                        length: 20
                    children: []
                    pos: 56005
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return typeRegistry.getNativeFunctionType(U2U_CONSTRUCTOR_TYPE);
                    children: []
                    pos: 56036
                    length: 64
                  pos: 56028
                  length: 78
                pos: 56002
                length: 217
              pos: 55933
              length: 290
          children: []
          pos: 55888
          length: 335
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensureTyped
              children: []
              pos: 56675
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 56687
                length: 15
              pos: 56662
              length: 107
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n, getNativeType(UNKNOWN_TYPE));
                children: []
                pos: 56718
                length: 47
              pos: 56712
              length: 57
          children: []
          pos: 56662
          length: 107
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensureTyped
              children: []
              pos: 56786
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 56798
                length: 15
              pos: 56773
              length: 118
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: ensureTyped(t, n, getNativeType(type));
                children: []
                pos: 56848
                length: 39
              pos: 56842
              length: 49
          children: []
          pos: 56773
          length: 118
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensureTyped
              children: []
              pos: 57720
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NodeTraversal t
                children: []
                pos: 57732
                length: 15
              pos: 57707
              length: 854
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    Preconditions.checkState(n.getType() != Token.FUNCTION ||
                                type instanceof FunctionType ||
                                type.isUnknownType());
                children: []
                pos: 57834
                length: 136
              - type: local_variable_declaration
                fields:
                  text: JSDocInfo info = n.getJSDocInfo();
                children: []
                pos: 57975
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: info
                            children: []
                            pos: 58018
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 58026
                            length: 4
                        children: []
                        pos: 58018
                        length: 12
                    children: []
                    pos: 58017
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: info.hasType()
                            children: []
                            pos: 58044
                            length: 14
                        children: []
                        pos: 58043
                        length: 16
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType infoType = info.getType().evaluate(t.getScope(),
                            typeRegistry);
                        children: []
                        pos: 58070
                        length: 70
                      - type: expression_statement
                        fields:
                          text: validator.expectCanCast(t, n, infoType, type);
                        children: []
                        pos: 58149
                        length: 46
                      - type: expression_statement
                        fields:
                          text: type = infoType;
                        children: []
                        pos: 58204
                        length: 16
                      pos: 58060
                      length: 168
                    pos: 58040
                    length: 188
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: info.isImplicitCast()
                                children: []
                                pos: 58240
                                length: 21
                              right:
                                type: unary_expression
                                fields:
                                  text: "!inExterns"
                                children: []
                                pos: 58265
                                length: 10
                            children: []
                            pos: 58240
                            length: 35
                        children: []
                        pos: 58239
                        length: 37
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: |-
                            String propName = n.getType() == Token.GETPROP ?
                                        n.getLastChild().getString() : "(missing)";
                        children: []
                        pos: 58287
                        length: 104
                      - type: expression_statement
                        fields:
                          text: |-
                            compiler.report(
                                        t.makeError(n, ILLEGAL_IMPLICIT_CAST, propName));
                        children: []
                        pos: 58400
                        length: 78
                      pos: 58277
                      length: 209
                    pos: 58236
                    length: 250
                  pos: 58032
                  length: 460
                pos: 58014
                length: 478
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: n.getJSType()
                            children: []
                            pos: 58502
                            length: 13
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 58519
                            length: 4
                        children: []
                        pos: 58502
                        length: 21
                    children: []
                    pos: 58501
                    length: 23
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: n.setJSType(type);
                    children: []
                    pos: 58533
                    length: 18
                  pos: 58525
                  length: 32
                pos: 58498
                length: 59
              pos: 57770
              length: 791
          children: []
          pos: 57707
          length: 854
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getTypedPercent
              children: []
              pos: 58692
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 58685
              length: 187
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int total = nullCount + unknownCount + typedCount;
                children: []
                pos: 58716
                length: 50
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: total
                            children: []
                            pos: 58775
                            length: 5
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 58784
                            length: 1
                        children: []
                        pos: 58775
                        length: 10
                    children: []
                    pos: 58774
                    length: 12
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return 0.0;
                    children: []
                    pos: 58795
                    length: 11
                  pos: 58787
                  length: 25
                pos: 58771
                length: 97
              pos: 58710
              length: 162
          children: []
          pos: 58685
          length: 187
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getNativeType
              children: []
              pos: 58891
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSTypeNative typeId
                children: []
                pos: 58905
                length: 19
              pos: 58876
              length: 102
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return typeRegistry.getNativeType(typeId);
                children: []
                pos: 58932
                length: 42
              pos: 58926
              length: 52
          children: []
          pos: 58876
          length: 102
        pos: 2307
        length: 56673
    children: []
    pos: 2307
    length: 56673
  pos: 0
  length: 58981
text_diff: "--- before\n+++ after\n@@ -1406,13 +1406,10 @@\n     Node parameter =
  null;\n     Node argument = null;\n     while (arguments.hasNext() &&\n-           (parameters.hasNext()
  ||\n-            parameter != null && parameter.isVarArgs())) {\n+           parameters.hasNext())
  {\n       // If there are no parameters left in the list, then the while loop\n
  \      // above implies that this must be a var_args function.\n-      if (parameters.hasNext())
  {\n         parameter = parameters.next();\n-      }\n       argument = arguments.next();\n
  \      ordinal++;\n \n"
tree_diff: |+
  New cluster:
  UPDATE from while (arguments.hasNext() &&
             (parameters.hasNext() ||
              parameter != null && parameter.isVarArgs())) {
        // If there are no parameters left in the list, then the while loop
        // above implies that this must be a var_args function.
        if (parameters.hasNext()) {
          parameter = parameters.next();
        }
        argument = arguments.next();
        ordinal++;

        validator.expectArgumentMatchesParameter(t, argument,
            getJSType(argument), getJSType(parameter), call, ordinal);
      } to while (arguments.hasNext() &&
             parameters.hasNext()) {
        // If there are no parameters left in the list, then the while loop
        // above implies that this must be a var_args function.
          parameter = parameters.next();
        argument = arguments.next();
        ordinal++;

        validator.expectArgumentMatchesParameter(t, argument,
            getJSType(argument), getJSType(parameter), call, ordinal);
      }
  ------------
  ===
  update-node
  ---
  while_statement: while (arguments.hasNext() &&
             (parameters.hasNext() ||
              parameter != null && parameter.isVarArgs())) {
        // If there are no parameters left in the list, then the while loop
        // above implies that this must be a var_args function.
        if (parameters.hasNext()) {
          parameter = parameters.next();
        }
        argument = arguments.next();
        ordinal++;

        validator.expectArgumentMatchesParameter(t, argument,
            getJSType(argument), getJSType(parameter), call, ordinal);
      } [48298,48827]
  replace while (arguments.hasNext() &&
             (parameters.hasNext() ||
              parameter != null && parameter.isVarArgs())) {
        // If there are no parameters left in the list, then the while loop
        // above implies that this must be a var_args function.
        if (parameters.hasNext()) {
          parameter = parameters.next();
        }
        argument = arguments.next();
        ordinal++;

        validator.expectArgumentMatchesParameter(t, argument,
            getJSType(argument), getJSType(parameter), call, ordinal);
      } by while (arguments.hasNext() &&
             parameters.hasNext()) {
        // If there are no parameters left in the list, then the while loop
        // above implies that this must be a var_args function.
          parameter = parameters.next();
        argument = arguments.next();
        ordinal++;

        validator.expectArgumentMatchesParameter(t, argument,
            getJSType(argument), getJSType(parameter), call, ordinal);
      }

...
