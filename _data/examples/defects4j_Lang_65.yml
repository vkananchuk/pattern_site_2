---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: DateUtils
        children: []
        pos: 1302
        length: 9
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone("GMT");
          children: []
          pos: 1393
          length: 73
        - type: field_declaration
          fields:
            text: public static final long MILLIS_PER_SECOND = 1000;
          children: []
          pos: 1557
          length: 50
        - type: field_declaration
          fields:
            text: public static final long MILLIS_PER_MINUTE = 60 * MILLIS_PER_SECOND;
          children: []
          pos: 1698
          length: 68
        - type: field_declaration
          fields:
            text: public static final long MILLIS_PER_HOUR = 60 * MILLIS_PER_MINUTE;
          children: []
          pos: 1855
          length: 66
        - type: field_declaration
          fields:
            text: public static final long MILLIS_PER_DAY = 24 * MILLIS_PER_HOUR;
          children: []
          pos: 2009
          length: 63
        - type: field_declaration
          fields:
            text: public final static int SEMI_MONTH = 1001;
          children: []
          pos: 2207
          length: 42
        - type: field_declaration
          fields:
            text: "private static final int[][] fields = {\n            {Calendar.MILLISECOND},\n
              \           {Calendar.SECOND},\n            {Calendar.MINUTE},\n            {Calendar.HOUR_OF_DAY,
              Calendar.HOUR},\n            {Calendar.DATE, Calendar.DAY_OF_MONTH,
              Calendar.AM_PM \n                /* Calendar.DAY_OF_YEAR, Calendar.DAY_OF_WEEK,
              Calendar.DAY_OF_WEEK_IN_MONTH */\n            },\n            {Calendar.MONTH,
              DateUtils.SEMI_MONTH},\n            {Calendar.YEAR},\n            {Calendar.ERA}};"
          children: []
          pos: 2255
          length: 476
        - type: field_declaration
          fields:
            text: public final static int RANGE_WEEK_SUNDAY = 1;
          children: []
          pos: 2794
          length: 46
        - type: field_declaration
          fields:
            text: public final static int RANGE_WEEK_MONDAY = 2;
          children: []
          pos: 2903
          length: 46
        - type: field_declaration
          fields:
            text: public final static int RANGE_WEEK_RELATIVE = 3;
          children: []
          pos: 3021
          length: 48
        - type: field_declaration
          fields:
            text: public final static int RANGE_WEEK_CENTER = 4;
          children: []
          pos: 3145
          length: 46
        - type: field_declaration
          fields:
            text: public final static int RANGE_MONTH_SUNDAY = 5;
          children: []
          pos: 3264
          length: 47
        - type: field_declaration
          fields:
            text: public final static int RANGE_MONTH_MONDAY = 6;
          children: []
          pos: 3384
          length: 47
        - type: constructor_declaration
          fields:
            text: |-
              public DateUtils() {
                      super();
                  }
          children: []
          pos: 3754
          length: 43
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isSameDay
              children: []
              pos: 4422
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date date1
                children: []
                pos: 4432
                length: 10
              pos: 4400
              length: 388
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: date1
                                children: []
                                pos: 4470
                                length: 5
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 4479
                                length: 4
                            children: []
                            pos: 4470
                            length: 13
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: date2
                                children: []
                                pos: 4487
                                length: 5
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 4496
                                length: 4
                            children: []
                            pos: 4487
                            length: 13
                        children: []
                        pos: 4470
                        length: 30
                    children: []
                    pos: 4469
                    length: 32
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 4516
                    length: 64
                  pos: 4502
                  length: 88
                pos: 4466
                length: 124
              - type: local_variable_declaration
                fields:
                  text: Calendar cal1 = Calendar.getInstance();
                children: []
                pos: 4599
                length: 39
              - type: expression_statement
                fields:
                  text: cal1.setTime(date1);
                children: []
                pos: 4647
                length: 20
              - type: local_variable_declaration
                fields:
                  text: Calendar cal2 = Calendar.getInstance();
                children: []
                pos: 4676
                length: 39
              - type: expression_statement
                fields:
                  text: cal2.setTime(date2);
                children: []
                pos: 4724
                length: 20
              - type: return_statement
                fields:
                  text: return isSameDay(cal1, cal2);
                children: []
                pos: 4753
                length: 29
              pos: 4456
              length: 332
          children: []
          pos: 4400
          length: 388
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isSameDay
              children: []
              pos: 5349
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Calendar cal1
                children: []
                pos: 5359
                length: 13
              pos: 5327
              length: 421
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: cal1
                                children: []
                                pos: 5403
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 5411
                                length: 4
                            children: []
                            pos: 5403
                            length: 12
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: cal2
                                children: []
                                pos: 5419
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 5427
                                length: 4
                            children: []
                            pos: 5419
                            length: 12
                        children: []
                        pos: 5403
                        length: 28
                    children: []
                    pos: 5402
                    length: 30
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 5447
                    length: 64
                  pos: 5433
                  length: 88
                pos: 5399
                length: 122
              - type: return_statement
                fields:
                  text: |-
                    return (cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&
                                    cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&
                                    cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR));
                children: []
                pos: 5530
                length: 212
              pos: 5389
              length: 359
          children: []
          pos: 5327
          length: 421
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isSameInstant
              children: []
              pos: 6323
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date date1
                children: []
                pos: 6337
                length: 10
              pos: 6301
              length: 251
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: date1
                                children: []
                                pos: 6375
                                length: 5
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 6384
                                length: 4
                            children: []
                            pos: 6375
                            length: 13
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: date2
                                children: []
                                pos: 6392
                                length: 5
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 6401
                                length: 4
                            children: []
                            pos: 6392
                            length: 13
                        children: []
                        pos: 6375
                        length: 30
                    children: []
                    pos: 6374
                    length: 32
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 6421
                    length: 64
                  pos: 6407
                  length: 88
                pos: 6371
                length: 124
              - type: return_statement
                fields:
                  text: return date1.getTime() == date2.getTime();
                children: []
                pos: 6504
                length: 42
              pos: 6361
              length: 191
          children: []
          pos: 6301
          length: 251
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isSameInstant
              children: []
              pos: 7059
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Calendar cal1
                children: []
                pos: 7073
                length: 13
              pos: 7037
              length: 273
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: cal1
                                children: []
                                pos: 7117
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 7125
                                length: 4
                            children: []
                            pos: 7117
                            length: 12
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: cal2
                                children: []
                                pos: 7133
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 7141
                                length: 4
                            children: []
                            pos: 7133
                            length: 12
                        children: []
                        pos: 7117
                        length: 28
                    children: []
                    pos: 7116
                    length: 30
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 7161
                    length: 64
                  pos: 7147
                  length: 88
                pos: 7113
                length: 122
              - type: return_statement
                fields:
                  text: return cal1.getTime().getTime() == cal2.getTime().getTime();
                children: []
                pos: 7244
                length: 60
              pos: 7103
              length: 207
          children: []
          pos: 7037
          length: 273
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isSameLocalTime
              children: []
              pos: 7959
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Calendar cal1
                children: []
                pos: 7975
                length: 13
              pos: 7937
              length: 783
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: cal1
                                children: []
                                pos: 8019
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 8027
                                length: 4
                            children: []
                            pos: 8019
                            length: 12
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: cal2
                                children: []
                                pos: 8035
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 8043
                                length: 4
                            children: []
                            pos: 8035
                            length: 12
                        children: []
                        pos: 8019
                        length: 28
                    children: []
                    pos: 8018
                    length: 30
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 8063
                    length: 64
                  pos: 8049
                  length: 88
                pos: 8015
                length: 122
              - type: return_statement
                fields:
                  text: |-
                    return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&
                                    cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) &&
                                    cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) &&
                                    cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) &&
                                    cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) &&
                                    cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&
                                    cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&
                                    cal1.getClass() == cal2.getClass());
                children: []
                pos: 8146
                length: 568
              pos: 8005
              length: 715
          children: []
          pos: 7937
          length: 783
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: parseDate
              children: []
              pos: 9483
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: String str
                children: []
                pos: 9493
                length: 10
              pos: 9464
              length: 849
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: str
                                children: []
                                pos: 9565
                                length: 3
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 9572
                                length: 4
                            children: []
                            pos: 9565
                            length: 11
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: parsePatterns
                                children: []
                                pos: 9580
                                length: 13
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 9597
                                length: 4
                            children: []
                            pos: 9580
                            length: 21
                        children: []
                        pos: 9565
                        length: 36
                    children: []
                    pos: 9564
                    length: 38
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("Date and Patterns
                        must not be null");
                    children: []
                    pos: 9617
                    length: 73
                  pos: 9603
                  length: 97
                pos: 9561
                length: 139
              - type: local_variable_declaration
                fields:
                  text: SimpleDateFormat parser = null;
                children: []
                pos: 9718
                length: 31
              - type: local_variable_declaration
                fields:
                  text: ParsePosition pos = new ParsePosition(0);
                children: []
                pos: 9758
                length: 41
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < parsePatterns.length; i++) {
                                if (i == 0) {
                                    parser = new SimpleDateFormat(parsePatterns[0]);
                                } else {
                                    parser.applyPattern(parsePatterns[i]);
                                }
                                pos.setIndex(0);
                                Date date = parser.parse(str, pos);
                                if (date != null && pos.getIndex() == str.length()) {
                                    return date;
                                }
                            }
                children: []
                pos: 9808
                length: 425
              - type: throw_statement
                fields:
                  text: 'throw new ParseException("Unable to parse the date: " + str,
                    -1);'
                children: []
                pos: 10242
                length: 65
              pos: 9551
              length: 762
          children: []
          pos: 9464
          length: 849
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: addYears
              children: []
              pos: 10762
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date date
                children: []
                pos: 10771
                length: 9
              pos: 10743
              length: 107
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return add(date, Calendar.YEAR, amount);
                children: []
                pos: 10804
                length: 40
              pos: 10794
              length: 56
          children: []
          pos: 10743
          length: 107
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: addMonths
              children: []
              pos: 11300
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date date
                children: []
                pos: 11310
                length: 9
              pos: 11281
              length: 109
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return add(date, Calendar.MONTH, amount);
                children: []
                pos: 11343
                length: 41
              pos: 11333
              length: 57
          children: []
          pos: 11281
          length: 109
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: addWeeks
              children: []
              pos: 11839
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date date
                children: []
                pos: 11848
                length: 9
              pos: 11820
              length: 115
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return add(date, Calendar.WEEK_OF_YEAR, amount);
                children: []
                pos: 11881
                length: 48
              pos: 11871
              length: 64
          children: []
          pos: 11820
          length: 115
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: addDays
              children: []
              pos: 12383
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date date
                children: []
                pos: 12391
                length: 9
              pos: 12364
              length: 114
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return add(date, Calendar.DAY_OF_MONTH, amount);
                children: []
                pos: 12424
                length: 48
              pos: 12414
              length: 64
          children: []
          pos: 12364
          length: 114
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: addHours
              children: []
              pos: 12927
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date date
                children: []
                pos: 12936
                length: 9
              pos: 12908
              length: 114
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return add(date, Calendar.HOUR_OF_DAY, amount);
                children: []
                pos: 12969
                length: 47
              pos: 12959
              length: 63
          children: []
          pos: 12908
          length: 114
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: addMinutes
              children: []
              pos: 13473
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date date
                children: []
                pos: 13484
                length: 9
              pos: 13454
              length: 111
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return add(date, Calendar.MINUTE, amount);
                children: []
                pos: 13517
                length: 42
              pos: 13507
              length: 58
          children: []
          pos: 13454
          length: 111
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: addSeconds
              children: []
              pos: 14016
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date date
                children: []
                pos: 14027
                length: 9
              pos: 13997
              length: 111
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return add(date, Calendar.SECOND, amount);
                children: []
                pos: 14060
                length: 42
              pos: 14050
              length: 58
          children: []
          pos: 13997
          length: 111
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: addMilliseconds
              children: []
              pos: 14564
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date date
                children: []
                pos: 14580
                length: 9
              pos: 14545
              length: 121
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return add(date, Calendar.MILLISECOND, amount);
                children: []
                pos: 14613
                length: 47
              pos: 14603
              length: 63
          children: []
          pos: 14545
          length: 121
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: add
              children: []
              pos: 15155
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date date
                children: []
                pos: 15159
                length: 9
              pos: 15136
              length: 323
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: date
                            children: []
                            pos: 15215
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 15223
                            length: 4
                        children: []
                        pos: 15215
                        length: 12
                    children: []
                    pos: 15214
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 15243
                    length: 64
                  pos: 15229
                  length: 88
                pos: 15211
                length: 106
              - type: local_variable_declaration
                fields:
                  text: Calendar c = Calendar.getInstance();
                children: []
                pos: 15326
                length: 36
              - type: expression_statement
                fields:
                  text: c.setTime(date);
                children: []
                pos: 15371
                length: 16
              - type: expression_statement
                fields:
                  text: c.add(calendarField, amount);
                children: []
                pos: 15396
                length: 29
              - type: return_statement
                fields:
                  text: return c.getTime();
                children: []
                pos: 15434
                length: 19
              pos: 15201
              length: 258
          children: []
          pos: 15136
          length: 323
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: round
              children: []
              pos: 16856
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date date
                children: []
                pos: 16862
                length: 9
              pos: 16837
              length: 311
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: date
                            children: []
                            pos: 16898
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 16906
                            length: 4
                        children: []
                        pos: 16898
                        length: 12
                    children: []
                    pos: 16897
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 16926
                    length: 64
                  pos: 16912
                  length: 88
                pos: 16894
                length: 106
              - type: local_variable_declaration
                fields:
                  text: Calendar gval = Calendar.getInstance();
                children: []
                pos: 17009
                length: 39
              - type: expression_statement
                fields:
                  text: gval.setTime(date);
                children: []
                pos: 17057
                length: 19
              - type: expression_statement
                fields:
                  text: modify(gval, field, true);
                children: []
                pos: 17085
                length: 26
              - type: return_statement
                fields:
                  text: return gval.getTime();
                children: []
                pos: 17120
                length: 22
              pos: 16884
              length: 264
          children: []
          pos: 16837
          length: 311
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: round
              children: []
              pos: 18492
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Calendar date
                children: []
                pos: 18498
                length: 13
              pos: 18469
              length: 291
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: date
                            children: []
                            pos: 18538
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 18546
                            length: 4
                        children: []
                        pos: 18538
                        length: 12
                    children: []
                    pos: 18537
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 18566
                    length: 64
                  pos: 18552
                  length: 88
                pos: 18534
                length: 106
              - type: local_variable_declaration
                fields:
                  text: Calendar rounded = (Calendar) date.clone();
                children: []
                pos: 18649
                length: 43
              - type: expression_statement
                fields:
                  text: modify(rounded, field, true);
                children: []
                pos: 18701
                length: 29
              - type: return_statement
                fields:
                  text: return rounded;
                children: []
                pos: 18739
                length: 15
              pos: 18524
              length: 236
          children: []
          pos: 18469
          length: 291
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: round
              children: []
              pos: 20217
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Object date
                children: []
                pos: 20223
                length: 11
              pos: 20198
              length: 456
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: date
                            children: []
                            pos: 20261
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 20269
                            length: 4
                        children: []
                        pos: 20261
                        length: 12
                    children: []
                    pos: 20260
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 20289
                    length: 64
                  pos: 20275
                  length: 88
                pos: 20257
                length: 106
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: date instanceof Date
                        children: []
                        pos: 20376
                        length: 20
                    children: []
                    pos: 20375
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return round((Date) date, field);
                    children: []
                    pos: 20412
                    length: 33
                  pos: 20398
                  length: 57
                pos: 20372
                length: 276
              pos: 20247
              length: 407
          children: []
          pos: 20198
          length: 456
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: truncate
              children: []
              pos: 21435
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date date
                children: []
                pos: 21444
                length: 9
              pos: 21416
              length: 315
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: date
                            children: []
                            pos: 21480
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 21488
                            length: 4
                        children: []
                        pos: 21480
                        length: 12
                    children: []
                    pos: 21479
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 21508
                    length: 64
                  pos: 21494
                  length: 88
                pos: 21476
                length: 106
              - type: local_variable_declaration
                fields:
                  text: Calendar gval = Calendar.getInstance();
                children: []
                pos: 21591
                length: 39
              - type: expression_statement
                fields:
                  text: gval.setTime(date);
                children: []
                pos: 21639
                length: 19
              - type: expression_statement
                fields:
                  text: modify(gval, field, false);
                children: []
                pos: 21667
                length: 27
              - type: return_statement
                fields:
                  text: return gval.getTime();
                children: []
                pos: 21703
                length: 22
              pos: 21466
              length: 265
          children: []
          pos: 21416
          length: 315
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: truncate
              children: []
              pos: 22459
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Calendar date
                children: []
                pos: 22468
                length: 13
              pos: 22436
              length: 301
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: date
                            children: []
                            pos: 22508
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 22516
                            length: 4
                        children: []
                        pos: 22508
                        length: 12
                    children: []
                    pos: 22507
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 22536
                    length: 64
                  pos: 22522
                  length: 88
                pos: 22504
                length: 106
              - type: local_variable_declaration
                fields:
                  text: Calendar truncated = (Calendar) date.clone();
                children: []
                pos: 22619
                length: 45
              - type: expression_statement
                fields:
                  text: modify(truncated, field, false);
                children: []
                pos: 22673
                length: 32
              - type: return_statement
                fields:
                  text: return truncated;
                children: []
                pos: 22714
                length: 17
              pos: 22494
              length: 243
          children: []
          pos: 22436
          length: 301
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: truncate
              children: []
              pos: 23620
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Object date
                children: []
                pos: 23629
                length: 11
              pos: 23601
              length: 468
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: date
                            children: []
                            pos: 23667
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 23675
                            length: 4
                        children: []
                        pos: 23667
                        length: 12
                    children: []
                    pos: 23666
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 23695
                    length: 64
                  pos: 23681
                  length: 88
                pos: 23663
                length: 106
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: date instanceof Date
                        children: []
                        pos: 23782
                        length: 20
                    children: []
                    pos: 23781
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return truncate((Date) date, field);
                    children: []
                    pos: 23818
                    length: 36
                  pos: 23804
                  length: 60
                pos: 23778
                length: 285
              pos: 23653
              length: 416
          children: []
          pos: 23601
          length: 468
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: modify
              children: []
              pos: 24433
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Calendar val
                children: []
                pos: 24440
                length: 12
              pos: 24413
              length: 5230
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: greater_than
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: val.get(Calendar.YEAR)
                            children: []
                            pos: 24494
                            length: 22
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '280000000'
                            children: []
                            pos: 24519
                            length: 9
                        children: []
                        pos: 24494
                        length: 34
                    children: []
                    pos: 24493
                    length: 36
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new ArithmeticException("Calendar value too large
                        for accurate calculations");
                    children: []
                    pos: 24544
                    length: 84
                  pos: 24530
                  length: 108
                pos: 24490
                length: 148
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: field
                            children: []
                            pos: 24660
                            length: 5
                          right:
                            type: field_access
                            fields:
                              text: Calendar.MILLISECOND
                            children: []
                            pos: 24669
                            length: 20
                        children: []
                        pos: 24660
                        length: 29
                    children: []
                    pos: 24659
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 24705
                    length: 7
                  pos: 24691
                  length: 31
                pos: 24656
                length: 66
              - type: local_variable_declaration
                fields:
                  text: Date date = val.getTime();
                children: []
                pos: 25005
                length: 26
              - type: local_variable_declaration
                fields:
                  text: long time = date.getTime();
                children: []
                pos: 25040
                length: 27
              - type: local_variable_declaration
                fields:
                  text: boolean done = false;
                children: []
                pos: 25076
                length: 21
              - type: local_variable_declaration
                fields:
                  text: int millisecs = val.get(Calendar.MILLISECOND);
                children: []
                pos: 25140
                length: 46
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: unary_expression
                            fields:
                              text: "!round"
                            children: []
                            pos: 25199
                            length: 6
                          right:
                            type: less_than
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: millisecs
                                children: []
                                pos: 25209
                                length: 9
                              right:
                                type: decimal_integer_literal
                                fields:
                                  text: '500'
                                children: []
                                pos: 25221
                                length: 3
                            children: []
                            pos: 25209
                            length: 15
                        children: []
                        pos: 25199
                        length: 25
                    children: []
                    pos: 25198
                    length: 27
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: time = time - millisecs;
                    children: []
                    pos: 25240
                    length: 24
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: field
                                children: []
                                pos: 25281
                                length: 5
                              right:
                                type: field_access
                                fields:
                                  text: Calendar.SECOND
                                children: []
                                pos: 25290
                                length: 15
                            children: []
                            pos: 25281
                            length: 24
                        children: []
                        pos: 25280
                        length: 26
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: done = true;
                        children: []
                        pos: 25325
                        length: 12
                      pos: 25307
                      length: 44
                    pos: 25277
                    length: 74
                  pos: 25226
                  length: 135
                pos: 25195
                length: 166
              - type: local_variable_declaration
                fields:
                  text: int seconds = val.get(Calendar.SECOND);
                children: []
                pos: 25399
                length: 39
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: unary_expression
                            fields:
                              text: "!done"
                            children: []
                            pos: 25451
                            length: 5
                          right:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: or
                                fields:
                                  left:
                                    type: unary_expression
                                    fields:
                                      text: "!round"
                                    children: []
                                    pos: 25461
                                    length: 6
                                  right:
                                    type: less_than
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: seconds
                                        children: []
                                        pos: 25471
                                        length: 7
                                      right:
                                        type: decimal_integer_literal
                                        fields:
                                          text: '30'
                                        children: []
                                        pos: 25481
                                        length: 2
                                    children: []
                                    pos: 25471
                                    length: 12
                                children: []
                                pos: 25461
                                length: 22
                            children: []
                            pos: 25460
                            length: 24
                        children: []
                        pos: 25451
                        length: 33
                    children: []
                    pos: 25450
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: time = time - (seconds * 1000L);
                    children: []
                    pos: 25500
                    length: 32
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: field
                                children: []
                                pos: 25549
                                length: 5
                              right:
                                type: field_access
                                fields:
                                  text: Calendar.MINUTE
                                children: []
                                pos: 25558
                                length: 15
                            children: []
                            pos: 25549
                            length: 24
                        children: []
                        pos: 25548
                        length: 26
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: done = true;
                        children: []
                        pos: 25593
                        length: 12
                      pos: 25575
                      length: 44
                    pos: 25545
                    length: 74
                  pos: 25486
                  length: 143
                pos: 25447
                length: 182
              - type: local_variable_declaration
                fields:
                  text: int minutes = val.get(Calendar.MINUTE);
                children: []
                pos: 25667
                length: 39
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: unary_expression
                            fields:
                              text: "!done"
                            children: []
                            pos: 25719
                            length: 5
                          right:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: or
                                fields:
                                  left:
                                    type: unary_expression
                                    fields:
                                      text: "!round"
                                    children: []
                                    pos: 25729
                                    length: 6
                                  right:
                                    type: less_than
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: minutes
                                        children: []
                                        pos: 25739
                                        length: 7
                                      right:
                                        type: decimal_integer_literal
                                        fields:
                                          text: '30'
                                        children: []
                                        pos: 25749
                                        length: 2
                                    children: []
                                    pos: 25739
                                    length: 12
                                children: []
                                pos: 25729
                                length: 22
                            children: []
                            pos: 25728
                            length: 24
                        children: []
                        pos: 25719
                        length: 33
                    children: []
                    pos: 25718
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: time = time - (minutes * 60000L);
                    children: []
                    pos: 25768
                    length: 33
                  pos: 25754
                  length: 57
                pos: 25715
                length: 96
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: date.getTime()
                            children: []
                            pos: 25847
                            length: 14
                          right:
                            type: identifier
                            fields:
                              text: time
                            children: []
                            pos: 25865
                            length: 4
                        children: []
                        pos: 25847
                        length: 22
                    children: []
                    pos: 25846
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: date.setTime(time);
                    children: []
                    pos: 25885
                    length: 19
                  - type: expression_statement
                    fields:
                      text: val.setTime(date);
                    children: []
                    pos: 25917
                    length: 18
                  pos: 25871
                  length: 74
                pos: 25843
                length: 102
              - type: local_variable_declaration
                fields:
                  text: boolean roundUp = false;
                children: []
                pos: 26045
                length: 24
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < fields.length; i++) {
                                for (int j = 0; j < fields[i].length; j++) {
                                    if (fields[i][j] == field) {
                                        //This is our field... we stop looping
                                        if (round && roundUp) {
                                            if (field == DateUtils.SEMI_MONTH) {
                                                //This is a special case that's hard to generalize
                                                //If the date is 1, we round up to 16, otherwise
                                                //  we subtract 15 days and add 1 month
                                                if (val.get(Calendar.DATE) == 1) {
                                                    val.add(Calendar.DATE, 15);
                                                } else {
                                                    val.add(Calendar.DATE, -15);
                                                    val.add(Calendar.MONTH, 1);
                                                }
                                            } else {
                                                //We need at add one to this field since the
                                                //  last number causes us to round up
                                                val.add(fields[i][0], 1);
                                            }
                                        }
                                        return;
                                    }
                                }
                                //We have various fields that are not easy roundings
                                int offset = 0;
                                boolean offsetSet = false;
                                //These are special types of fields that require different rounding rules
                                switch (field) {
                                    case DateUtils.SEMI_MONTH:
                                        if (fields[i][0] == Calendar.DATE) {
                                            //If we're going to drop the DATE field's value,
                                            //  we want to do this our own way.
                                            //We need to subtrace 1 since the date has a minimum of 1
                                            offset = val.get(Calendar.DATE) - 1;
                                            //If we're above 15 days adjustment, that means we're in the
                                            //  bottom half of the month and should stay accordingly.
                                            if (offset >= 15) {
                                                offset -= 15;
                                            }
                                            //Record whether we're in the top or bottom half of that range
                                            roundUp = offset > 7;
                                            offsetSet = true;
                                        }
                                        break;
                                    case Calendar.AM_PM:
                                        if (fields[i][0] == Calendar.HOUR_OF_DAY) {
                                            //If we're going to drop the HOUR field's value,
                                            //  we want to do this our own way.
                                            offset = val.get(Calendar.HOUR_OF_DAY);
                                            if (offset >= 12) {
                                                offset -= 12;
                                            }
                                            roundUp = offset > 6;
                                            offsetSet = true;
                                        }
                                        break;
                                }
                                if (!offsetSet) {
                                    int min = val.getActualMinimum(fields[i][0]);
                                    int max = val.getActualMaximum(fields[i][0]);
                                    //Calculate the offset from the minimum allowed value
                                    offset = val.get(fields[i][0]) - min;
                                    //Set roundUp if this is more than half way between the minimum and maximum
                                    roundUp = offset > ((max - min) / 2);
                                }
                                //We need to remove this field
                                if (offset != 0) {
                                    val.set(fields[i][0], val.get(fields[i][0]) - offset);
                                }
                            }
                children: []
                pos: 26078
                length: 3470
              - type: throw_statement
                fields:
                  text: throw new IllegalArgumentException("The field " + field +
                    " is not supported");
                children: []
                pos: 29557
                length: 79
              pos: 24480
              length: 5163
          children: []
          pos: 24413
          length: 5230
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: iterator
              children: []
              pos: 30963
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date focus
                children: []
                pos: 30972
                length: 10
              pos: 30940
              length: 303
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: focus
                            children: []
                            pos: 31014
                            length: 5
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 31023
                            length: 4
                        children: []
                        pos: 31014
                        length: 13
                    children: []
                    pos: 31013
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 31043
                    length: 64
                  pos: 31029
                  length: 88
                pos: 31010
                length: 107
              - type: local_variable_declaration
                fields:
                  text: Calendar gval = Calendar.getInstance();
                children: []
                pos: 31126
                length: 39
              - type: expression_statement
                fields:
                  text: gval.setTime(focus);
                children: []
                pos: 31174
                length: 20
              - type: return_statement
                fields:
                  text: return iterator(gval, rangeStyle);
                children: []
                pos: 31203
                length: 34
              pos: 31000
              length: 243
          children: []
          pos: 30940
          length: 303
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: iterator
              children: []
              pos: 32434
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Calendar focus
                children: []
                pos: 32443
                length: 14
              pos: 32411
              length: 2864
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: focus
                            children: []
                            pos: 32489
                            length: 5
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 32498
                            length: 4
                        children: []
                        pos: 32489
                        length: 13
                    children: []
                    pos: 32488
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 32518
                    length: 64
                  pos: 32504
                  length: 88
                pos: 32485
                length: 107
              - type: local_variable_declaration
                fields:
                  text: Calendar start = null;
                children: []
                pos: 32601
                length: 22
              - type: local_variable_declaration
                fields:
                  text: Calendar end = null;
                children: []
                pos: 32632
                length: 20
              - type: local_variable_declaration
                fields:
                  text: int startCutoff = Calendar.SUNDAY;
                children: []
                pos: 32661
                length: 34
              - type: local_variable_declaration
                fields:
                  text: int endCutoff = Calendar.SATURDAY;
                children: []
                pos: 32704
                length: 34
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: rangeStyle
                        children: []
                        pos: 32755
                        length: 10
                    children: []
                    pos: 32754
                    length: 12
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                                    case RANGE_MONTH_SUNDAY:
                                    case RANGE_MONTH_MONDAY:
                                        //Set start to the first of the month
                                        start = truncate(focus, Calendar.MONTH);
                                        //Set end to the last of the month
                                        end = (Calendar) start.clone();
                                        end.add(Calendar.MONTH, 1);
                                        end.add(Calendar.DATE, -1);
                                        //Loop start back to the previous sunday or monday
                                        if (rangeStyle == RANGE_MONTH_MONDAY) {
                                            startCutoff = Calendar.MONDAY;
                                            endCutoff = Calendar.SUNDAY;
                                        }
                                        break;
                                    case RANGE_WEEK_SUNDAY:
                                    case RANGE_WEEK_MONDAY:
                                    case RANGE_WEEK_RELATIVE:
                                    case RANGE_WEEK_CENTER:
                                        //Set start and end to the current date
                                        start = truncate(focus, Calendar.DATE);
                                        end = truncate(focus, Calendar.DATE);
                                        switch (rangeStyle) {
                                            case RANGE_WEEK_SUNDAY:
                                                //already set by default
                                                break;
                                            case RANGE_WEEK_MONDAY:
                                                startCutoff = Calendar.MONDAY;
                                                endCutoff = Calendar.SUNDAY;
                                                break;
                                            case RANGE_WEEK_RELATIVE:
                                                startCutoff = focus.get(Calendar.DAY_OF_WEEK);
                                                endCutoff = startCutoff - 1;
                                                break;
                                            case RANGE_WEEK_CENTER:
                                                startCutoff = focus.get(Calendar.DAY_OF_WEEK) - 3;
                                                endCutoff = focus.get(Calendar.DAY_OF_WEEK) + 3;
                                                break;
                                        }
                                        break;
                                    default:
                                        throw new IllegalArgumentException("The range style " + rangeStyle + " is not valid.");
                                }
                    children: []
                    pos: 32767
                    length: 1894
                children: []
                pos: 32747
                length: 1914
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: startCutoff
                            children: []
                            pos: 34674
                            length: 11
                          right:
                            type: field_access
                            fields:
                              text: Calendar.SUNDAY
                            children: []
                            pos: 34688
                            length: 15
                        children: []
                        pos: 34674
                        length: 29
                    children: []
                    pos: 34673
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: startCutoff += 7;
                    children: []
                    pos: 34719
                    length: 17
                  pos: 34705
                  length: 41
                pos: 34670
                length: 76
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: greater_than
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: startCutoff
                            children: []
                            pos: 34759
                            length: 11
                          right:
                            type: field_access
                            fields:
                              text: Calendar.SATURDAY
                            children: []
                            pos: 34773
                            length: 17
                        children: []
                        pos: 34759
                        length: 31
                    children: []
                    pos: 34758
                    length: 33
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: startCutoff -= 7;
                    children: []
                    pos: 34806
                    length: 17
                  pos: 34792
                  length: 41
                pos: 34755
                length: 78
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: endCutoff
                            children: []
                            pos: 34846
                            length: 9
                          right:
                            type: field_access
                            fields:
                              text: Calendar.SUNDAY
                            children: []
                            pos: 34858
                            length: 15
                        children: []
                        pos: 34846
                        length: 27
                    children: []
                    pos: 34845
                    length: 29
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: endCutoff += 7;
                    children: []
                    pos: 34889
                    length: 15
                  pos: 34875
                  length: 39
                pos: 34842
                length: 72
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: greater_than
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: endCutoff
                            children: []
                            pos: 34927
                            length: 9
                          right:
                            type: field_access
                            fields:
                              text: Calendar.SATURDAY
                            children: []
                            pos: 34939
                            length: 17
                        children: []
                        pos: 34927
                        length: 29
                    children: []
                    pos: 34926
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: endCutoff -= 7;
                    children: []
                    pos: 34972
                    length: 15
                  pos: 34958
                  length: 39
                pos: 34923
                length: 74
              - type: while_statement
                fields:
                  text: |-
                    while (start.get(Calendar.DAY_OF_WEEK) != startCutoff) {
                                start.add(Calendar.DATE, -1);
                            }
                children: []
                pos: 35006
                length: 108
              - type: while_statement
                fields:
                  text: |-
                    while (end.get(Calendar.DAY_OF_WEEK) != endCutoff) {
                                end.add(Calendar.DATE, 1);
                            }
                children: []
                pos: 35123
                length: 101
              - type: return_statement
                fields:
                  text: return new DateIterator(start, end);
                children: []
                pos: 35233
                length: 36
              pos: 32475
              length: 2800
          children: []
          pos: 32411
          length: 2864
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: iterator
              children: []
              pos: 36235
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Object focus
                children: []
                pos: 36244
                length: 12
              pos: 36212
              length: 492
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: focus
                            children: []
                            pos: 36288
                            length: 5
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 36297
                            length: 4
                        children: []
                        pos: 36288
                        length: 13
                    children: []
                    pos: 36287
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 36317
                    length: 64
                  pos: 36303
                  length: 88
                pos: 36284
                length: 107
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: focus instanceof Date
                        children: []
                        pos: 36404
                        length: 21
                    children: []
                    pos: 36403
                    length: 23
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return iterator((Date) focus, rangeStyle);
                    children: []
                    pos: 36441
                    length: 42
                  pos: 36427
                  length: 66
                pos: 36400
                length: 298
              pos: 36274
              length: 430
          children: []
          pos: 36212
          length: 492
        - type: class_declaration
          fields:
            name:
              type: identifier
              fields:
                text: DateIterator
              children: []
              pos: 36768
              length: 12
            body:
              type: class_body
              fields: {}
              children:
              - type: field_declaration
                fields:
                  text: private final Calendar endFinal;
                children: []
                pos: 36811
                length: 32
              - type: field_declaration
                fields:
                  text: private final Calendar spot;
                children: []
                pos: 36852
                length: 28
              - type: constructor_declaration
                fields:
                  text: |-
                    DateIterator(Calendar startFinal, Calendar endFinal) {
                                super();
                                this.endFinal = endFinal;
                                spot = startFinal;
                                spot.add(Calendar.DATE, -1);
                            }
                children: []
                pos: 37113
                length: 195
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: hasNext
                    children: []
                    pos: 37509
                    length: 7
                  parameters:
                    type: method_parameters
                    fields: {}
                    children: []
                    pos: 37494
                    length: 78
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: return_statement
                      fields:
                        text: return spot.before(endFinal);
                      children: []
                      pos: 37533
                      length: 29
                    pos: 37519
                    length: 53
                children: []
                pos: 37494
                length: 78
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: next
                    children: []
                    pos: 37737
                    length: 4
                  parameters:
                    type: method_parameters
                    fields: {}
                    children: []
                    pos: 37723
                    length: 212
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: method_invocation
                              fields:
                                text: spot.equals(endFinal)
                              children: []
                              pos: 37762
                              length: 21
                          children: []
                          pos: 37761
                          length: 23
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: throw_statement
                          fields:
                            text: throw new NoSuchElementException();
                          children: []
                          pos: 37803
                          length: 35
                        pos: 37785
                        length: 67
                      pos: 37758
                      length: 94
                    - type: expression_statement
                      fields:
                        text: spot.add(Calendar.DATE, 1);
                      children: []
                      pos: 37865
                      length: 27
                    - type: return_statement
                      fields:
                        text: return spot.clone();
                      children: []
                      pos: 37905
                      length: 20
                    pos: 37744
                    length: 191
                children: []
                pos: 37723
                length: 212
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: remove
                    children: []
                    pos: 38142
                    length: 6
                  parameters:
                    type: method_parameters
                    fields: {}
                    children: []
                    pos: 38130
                    length: 87
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: throw_statement
                      fields:
                        text: throw new UnsupportedOperationException();
                      children: []
                      pos: 38165
                      length: 42
                    pos: 38151
                    length: 66
                children: []
                pos: 38130
                length: 87
              pos: 36755
              length: 1468
          children: []
          pos: 36755
          length: 1468
        - type: field_declaration
          fields:
            text: public static final int MILLIS_IN_SECOND = 1000;
          children: []
          pos: 38538
          length: 48
        - type: field_declaration
          fields:
            text: public static final int MILLIS_IN_MINUTE = 60 * 1000;
          children: []
          pos: 38751
          length: 53
        - type: field_declaration
          fields:
            text: public static final int MILLIS_IN_HOUR = 60 * 60 * 1000;
          children: []
          pos: 38965
          length: 56
        - type: field_declaration
          fields:
            text: public static final int MILLIS_IN_DAY = 24 * 60 * 60 * 1000;
          children: []
          pos: 39180
          length: 60
        pos: 1289
        length: 37958
    children: []
    pos: 1289
    length: 37958
  pos: 0
  length: 39248
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: DateUtils
        children: []
        pos: 1302
        length: 9
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: public static final TimeZone UTC_TIME_ZONE = TimeZone.getTimeZone("GMT");
          children: []
          pos: 1393
          length: 73
        - type: field_declaration
          fields:
            text: public static final long MILLIS_PER_SECOND = 1000;
          children: []
          pos: 1557
          length: 50
        - type: field_declaration
          fields:
            text: public static final long MILLIS_PER_MINUTE = 60 * MILLIS_PER_SECOND;
          children: []
          pos: 1698
          length: 68
        - type: field_declaration
          fields:
            text: public static final long MILLIS_PER_HOUR = 60 * MILLIS_PER_MINUTE;
          children: []
          pos: 1855
          length: 66
        - type: field_declaration
          fields:
            text: public static final long MILLIS_PER_DAY = 24 * MILLIS_PER_HOUR;
          children: []
          pos: 2009
          length: 63
        - type: field_declaration
          fields:
            text: public final static int SEMI_MONTH = 1001;
          children: []
          pos: 2207
          length: 42
        - type: field_declaration
          fields:
            text: "private static final int[][] fields = {\n            {Calendar.MILLISECOND},\n
              \           {Calendar.SECOND},\n            {Calendar.MINUTE},\n            {Calendar.HOUR_OF_DAY,
              Calendar.HOUR},\n            {Calendar.DATE, Calendar.DAY_OF_MONTH,
              Calendar.AM_PM \n                /* Calendar.DAY_OF_YEAR, Calendar.DAY_OF_WEEK,
              Calendar.DAY_OF_WEEK_IN_MONTH */\n            },\n            {Calendar.MONTH,
              DateUtils.SEMI_MONTH},\n            {Calendar.YEAR},\n            {Calendar.ERA}};"
          children: []
          pos: 2255
          length: 476
        - type: field_declaration
          fields:
            text: public final static int RANGE_WEEK_SUNDAY = 1;
          children: []
          pos: 2794
          length: 46
        - type: field_declaration
          fields:
            text: public final static int RANGE_WEEK_MONDAY = 2;
          children: []
          pos: 2903
          length: 46
        - type: field_declaration
          fields:
            text: public final static int RANGE_WEEK_RELATIVE = 3;
          children: []
          pos: 3021
          length: 48
        - type: field_declaration
          fields:
            text: public final static int RANGE_WEEK_CENTER = 4;
          children: []
          pos: 3145
          length: 46
        - type: field_declaration
          fields:
            text: public final static int RANGE_MONTH_SUNDAY = 5;
          children: []
          pos: 3264
          length: 47
        - type: field_declaration
          fields:
            text: public final static int RANGE_MONTH_MONDAY = 6;
          children: []
          pos: 3384
          length: 47
        - type: constructor_declaration
          fields:
            text: |-
              public DateUtils() {
                      super();
                  }
          children: []
          pos: 3754
          length: 43
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isSameDay
              children: []
              pos: 4422
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date date1
                children: []
                pos: 4432
                length: 10
              pos: 4400
              length: 388
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: date1
                                children: []
                                pos: 4470
                                length: 5
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 4479
                                length: 4
                            children: []
                            pos: 4470
                            length: 13
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: date2
                                children: []
                                pos: 4487
                                length: 5
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 4496
                                length: 4
                            children: []
                            pos: 4487
                            length: 13
                        children: []
                        pos: 4470
                        length: 30
                    children: []
                    pos: 4469
                    length: 32
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 4516
                    length: 64
                  pos: 4502
                  length: 88
                pos: 4466
                length: 124
              - type: local_variable_declaration
                fields:
                  text: Calendar cal1 = Calendar.getInstance();
                children: []
                pos: 4599
                length: 39
              - type: expression_statement
                fields:
                  text: cal1.setTime(date1);
                children: []
                pos: 4647
                length: 20
              - type: local_variable_declaration
                fields:
                  text: Calendar cal2 = Calendar.getInstance();
                children: []
                pos: 4676
                length: 39
              - type: expression_statement
                fields:
                  text: cal2.setTime(date2);
                children: []
                pos: 4724
                length: 20
              - type: return_statement
                fields:
                  text: return isSameDay(cal1, cal2);
                children: []
                pos: 4753
                length: 29
              pos: 4456
              length: 332
          children: []
          pos: 4400
          length: 388
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isSameDay
              children: []
              pos: 5349
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Calendar cal1
                children: []
                pos: 5359
                length: 13
              pos: 5327
              length: 421
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: cal1
                                children: []
                                pos: 5403
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 5411
                                length: 4
                            children: []
                            pos: 5403
                            length: 12
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: cal2
                                children: []
                                pos: 5419
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 5427
                                length: 4
                            children: []
                            pos: 5419
                            length: 12
                        children: []
                        pos: 5403
                        length: 28
                    children: []
                    pos: 5402
                    length: 30
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 5447
                    length: 64
                  pos: 5433
                  length: 88
                pos: 5399
                length: 122
              - type: return_statement
                fields:
                  text: |-
                    return (cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&
                                    cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&
                                    cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR));
                children: []
                pos: 5530
                length: 212
              pos: 5389
              length: 359
          children: []
          pos: 5327
          length: 421
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isSameInstant
              children: []
              pos: 6323
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date date1
                children: []
                pos: 6337
                length: 10
              pos: 6301
              length: 251
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: date1
                                children: []
                                pos: 6375
                                length: 5
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 6384
                                length: 4
                            children: []
                            pos: 6375
                            length: 13
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: date2
                                children: []
                                pos: 6392
                                length: 5
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 6401
                                length: 4
                            children: []
                            pos: 6392
                            length: 13
                        children: []
                        pos: 6375
                        length: 30
                    children: []
                    pos: 6374
                    length: 32
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 6421
                    length: 64
                  pos: 6407
                  length: 88
                pos: 6371
                length: 124
              - type: return_statement
                fields:
                  text: return date1.getTime() == date2.getTime();
                children: []
                pos: 6504
                length: 42
              pos: 6361
              length: 191
          children: []
          pos: 6301
          length: 251
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isSameInstant
              children: []
              pos: 7059
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Calendar cal1
                children: []
                pos: 7073
                length: 13
              pos: 7037
              length: 273
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: cal1
                                children: []
                                pos: 7117
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 7125
                                length: 4
                            children: []
                            pos: 7117
                            length: 12
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: cal2
                                children: []
                                pos: 7133
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 7141
                                length: 4
                            children: []
                            pos: 7133
                            length: 12
                        children: []
                        pos: 7117
                        length: 28
                    children: []
                    pos: 7116
                    length: 30
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 7161
                    length: 64
                  pos: 7147
                  length: 88
                pos: 7113
                length: 122
              - type: return_statement
                fields:
                  text: return cal1.getTime().getTime() == cal2.getTime().getTime();
                children: []
                pos: 7244
                length: 60
              pos: 7103
              length: 207
          children: []
          pos: 7037
          length: 273
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isSameLocalTime
              children: []
              pos: 7959
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Calendar cal1
                children: []
                pos: 7975
                length: 13
              pos: 7937
              length: 783
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: cal1
                                children: []
                                pos: 8019
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 8027
                                length: 4
                            children: []
                            pos: 8019
                            length: 12
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: cal2
                                children: []
                                pos: 8035
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 8043
                                length: 4
                            children: []
                            pos: 8035
                            length: 12
                        children: []
                        pos: 8019
                        length: 28
                    children: []
                    pos: 8018
                    length: 30
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 8063
                    length: 64
                  pos: 8049
                  length: 88
                pos: 8015
                length: 122
              - type: return_statement
                fields:
                  text: |-
                    return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&
                                    cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) &&
                                    cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) &&
                                    cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) &&
                                    cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) &&
                                    cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&
                                    cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&
                                    cal1.getClass() == cal2.getClass());
                children: []
                pos: 8146
                length: 568
              pos: 8005
              length: 715
          children: []
          pos: 7937
          length: 783
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: parseDate
              children: []
              pos: 9483
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: String str
                children: []
                pos: 9493
                length: 10
              pos: 9464
              length: 849
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: str
                                children: []
                                pos: 9565
                                length: 3
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 9572
                                length: 4
                            children: []
                            pos: 9565
                            length: 11
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: parsePatterns
                                children: []
                                pos: 9580
                                length: 13
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 9597
                                length: 4
                            children: []
                            pos: 9580
                            length: 21
                        children: []
                        pos: 9565
                        length: 36
                    children: []
                    pos: 9564
                    length: 38
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("Date and Patterns
                        must not be null");
                    children: []
                    pos: 9617
                    length: 73
                  pos: 9603
                  length: 97
                pos: 9561
                length: 139
              - type: local_variable_declaration
                fields:
                  text: SimpleDateFormat parser = null;
                children: []
                pos: 9718
                length: 31
              - type: local_variable_declaration
                fields:
                  text: ParsePosition pos = new ParsePosition(0);
                children: []
                pos: 9758
                length: 41
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < parsePatterns.length; i++) {
                                if (i == 0) {
                                    parser = new SimpleDateFormat(parsePatterns[0]);
                                } else {
                                    parser.applyPattern(parsePatterns[i]);
                                }
                                pos.setIndex(0);
                                Date date = parser.parse(str, pos);
                                if (date != null && pos.getIndex() == str.length()) {
                                    return date;
                                }
                            }
                children: []
                pos: 9808
                length: 425
              - type: throw_statement
                fields:
                  text: 'throw new ParseException("Unable to parse the date: " + str,
                    -1);'
                children: []
                pos: 10242
                length: 65
              pos: 9551
              length: 762
          children: []
          pos: 9464
          length: 849
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: addYears
              children: []
              pos: 10762
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date date
                children: []
                pos: 10771
                length: 9
              pos: 10743
              length: 107
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return add(date, Calendar.YEAR, amount);
                children: []
                pos: 10804
                length: 40
              pos: 10794
              length: 56
          children: []
          pos: 10743
          length: 107
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: addMonths
              children: []
              pos: 11300
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date date
                children: []
                pos: 11310
                length: 9
              pos: 11281
              length: 109
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return add(date, Calendar.MONTH, amount);
                children: []
                pos: 11343
                length: 41
              pos: 11333
              length: 57
          children: []
          pos: 11281
          length: 109
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: addWeeks
              children: []
              pos: 11839
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date date
                children: []
                pos: 11848
                length: 9
              pos: 11820
              length: 115
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return add(date, Calendar.WEEK_OF_YEAR, amount);
                children: []
                pos: 11881
                length: 48
              pos: 11871
              length: 64
          children: []
          pos: 11820
          length: 115
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: addDays
              children: []
              pos: 12383
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date date
                children: []
                pos: 12391
                length: 9
              pos: 12364
              length: 114
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return add(date, Calendar.DAY_OF_MONTH, amount);
                children: []
                pos: 12424
                length: 48
              pos: 12414
              length: 64
          children: []
          pos: 12364
          length: 114
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: addHours
              children: []
              pos: 12927
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date date
                children: []
                pos: 12936
                length: 9
              pos: 12908
              length: 114
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return add(date, Calendar.HOUR_OF_DAY, amount);
                children: []
                pos: 12969
                length: 47
              pos: 12959
              length: 63
          children: []
          pos: 12908
          length: 114
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: addMinutes
              children: []
              pos: 13473
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date date
                children: []
                pos: 13484
                length: 9
              pos: 13454
              length: 111
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return add(date, Calendar.MINUTE, amount);
                children: []
                pos: 13517
                length: 42
              pos: 13507
              length: 58
          children: []
          pos: 13454
          length: 111
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: addSeconds
              children: []
              pos: 14016
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date date
                children: []
                pos: 14027
                length: 9
              pos: 13997
              length: 111
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return add(date, Calendar.SECOND, amount);
                children: []
                pos: 14060
                length: 42
              pos: 14050
              length: 58
          children: []
          pos: 13997
          length: 111
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: addMilliseconds
              children: []
              pos: 14564
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date date
                children: []
                pos: 14580
                length: 9
              pos: 14545
              length: 121
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return add(date, Calendar.MILLISECOND, amount);
                children: []
                pos: 14613
                length: 47
              pos: 14603
              length: 63
          children: []
          pos: 14545
          length: 121
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: add
              children: []
              pos: 15155
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date date
                children: []
                pos: 15159
                length: 9
              pos: 15136
              length: 323
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: date
                            children: []
                            pos: 15215
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 15223
                            length: 4
                        children: []
                        pos: 15215
                        length: 12
                    children: []
                    pos: 15214
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 15243
                    length: 64
                  pos: 15229
                  length: 88
                pos: 15211
                length: 106
              - type: local_variable_declaration
                fields:
                  text: Calendar c = Calendar.getInstance();
                children: []
                pos: 15326
                length: 36
              - type: expression_statement
                fields:
                  text: c.setTime(date);
                children: []
                pos: 15371
                length: 16
              - type: expression_statement
                fields:
                  text: c.add(calendarField, amount);
                children: []
                pos: 15396
                length: 29
              - type: return_statement
                fields:
                  text: return c.getTime();
                children: []
                pos: 15434
                length: 19
              pos: 15201
              length: 258
          children: []
          pos: 15136
          length: 323
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: round
              children: []
              pos: 16856
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date date
                children: []
                pos: 16862
                length: 9
              pos: 16837
              length: 311
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: date
                            children: []
                            pos: 16898
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 16906
                            length: 4
                        children: []
                        pos: 16898
                        length: 12
                    children: []
                    pos: 16897
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 16926
                    length: 64
                  pos: 16912
                  length: 88
                pos: 16894
                length: 106
              - type: local_variable_declaration
                fields:
                  text: Calendar gval = Calendar.getInstance();
                children: []
                pos: 17009
                length: 39
              - type: expression_statement
                fields:
                  text: gval.setTime(date);
                children: []
                pos: 17057
                length: 19
              - type: expression_statement
                fields:
                  text: modify(gval, field, true);
                children: []
                pos: 17085
                length: 26
              - type: return_statement
                fields:
                  text: return gval.getTime();
                children: []
                pos: 17120
                length: 22
              pos: 16884
              length: 264
          children: []
          pos: 16837
          length: 311
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: round
              children: []
              pos: 18492
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Calendar date
                children: []
                pos: 18498
                length: 13
              pos: 18469
              length: 291
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: date
                            children: []
                            pos: 18538
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 18546
                            length: 4
                        children: []
                        pos: 18538
                        length: 12
                    children: []
                    pos: 18537
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 18566
                    length: 64
                  pos: 18552
                  length: 88
                pos: 18534
                length: 106
              - type: local_variable_declaration
                fields:
                  text: Calendar rounded = (Calendar) date.clone();
                children: []
                pos: 18649
                length: 43
              - type: expression_statement
                fields:
                  text: modify(rounded, field, true);
                children: []
                pos: 18701
                length: 29
              - type: return_statement
                fields:
                  text: return rounded;
                children: []
                pos: 18739
                length: 15
              pos: 18524
              length: 236
          children: []
          pos: 18469
          length: 291
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: round
              children: []
              pos: 20217
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Object date
                children: []
                pos: 20223
                length: 11
              pos: 20198
              length: 456
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: date
                            children: []
                            pos: 20261
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 20269
                            length: 4
                        children: []
                        pos: 20261
                        length: 12
                    children: []
                    pos: 20260
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 20289
                    length: 64
                  pos: 20275
                  length: 88
                pos: 20257
                length: 106
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: date instanceof Date
                        children: []
                        pos: 20376
                        length: 20
                    children: []
                    pos: 20375
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return round((Date) date, field);
                    children: []
                    pos: 20412
                    length: 33
                  pos: 20398
                  length: 57
                pos: 20372
                length: 276
              pos: 20247
              length: 407
          children: []
          pos: 20198
          length: 456
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: truncate
              children: []
              pos: 21435
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date date
                children: []
                pos: 21444
                length: 9
              pos: 21416
              length: 315
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: date
                            children: []
                            pos: 21480
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 21488
                            length: 4
                        children: []
                        pos: 21480
                        length: 12
                    children: []
                    pos: 21479
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 21508
                    length: 64
                  pos: 21494
                  length: 88
                pos: 21476
                length: 106
              - type: local_variable_declaration
                fields:
                  text: Calendar gval = Calendar.getInstance();
                children: []
                pos: 21591
                length: 39
              - type: expression_statement
                fields:
                  text: gval.setTime(date);
                children: []
                pos: 21639
                length: 19
              - type: expression_statement
                fields:
                  text: modify(gval, field, false);
                children: []
                pos: 21667
                length: 27
              - type: return_statement
                fields:
                  text: return gval.getTime();
                children: []
                pos: 21703
                length: 22
              pos: 21466
              length: 265
          children: []
          pos: 21416
          length: 315
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: truncate
              children: []
              pos: 22459
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Calendar date
                children: []
                pos: 22468
                length: 13
              pos: 22436
              length: 301
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: date
                            children: []
                            pos: 22508
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 22516
                            length: 4
                        children: []
                        pos: 22508
                        length: 12
                    children: []
                    pos: 22507
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 22536
                    length: 64
                  pos: 22522
                  length: 88
                pos: 22504
                length: 106
              - type: local_variable_declaration
                fields:
                  text: Calendar truncated = (Calendar) date.clone();
                children: []
                pos: 22619
                length: 45
              - type: expression_statement
                fields:
                  text: modify(truncated, field, false);
                children: []
                pos: 22673
                length: 32
              - type: return_statement
                fields:
                  text: return truncated;
                children: []
                pos: 22714
                length: 17
              pos: 22494
              length: 243
          children: []
          pos: 22436
          length: 301
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: truncate
              children: []
              pos: 23620
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Object date
                children: []
                pos: 23629
                length: 11
              pos: 23601
              length: 468
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: date
                            children: []
                            pos: 23667
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 23675
                            length: 4
                        children: []
                        pos: 23667
                        length: 12
                    children: []
                    pos: 23666
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 23695
                    length: 64
                  pos: 23681
                  length: 88
                pos: 23663
                length: 106
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: date instanceof Date
                        children: []
                        pos: 23782
                        length: 20
                    children: []
                    pos: 23781
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return truncate((Date) date, field);
                    children: []
                    pos: 23818
                    length: 36
                  pos: 23804
                  length: 60
                pos: 23778
                length: 285
              pos: 23653
              length: 416
          children: []
          pos: 23601
          length: 468
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: modify
              children: []
              pos: 24433
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Calendar val
                children: []
                pos: 24440
                length: 12
              pos: 24413
              length: 4276
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: greater_than
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: val.get(Calendar.YEAR)
                            children: []
                            pos: 24494
                            length: 22
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '280000000'
                            children: []
                            pos: 24519
                            length: 9
                        children: []
                        pos: 24494
                        length: 34
                    children: []
                    pos: 24493
                    length: 36
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new ArithmeticException("Calendar value too large
                        for accurate calculations");
                    children: []
                    pos: 24544
                    length: 84
                  pos: 24530
                  length: 108
                pos: 24490
                length: 148
              - type: local_variable_declaration
                fields:
                  text: boolean roundUp = false;
                children: []
                pos: 25136
                length: 24
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < fields.length; i++) {
                                for (int j = 0; j < fields[i].length; j++) {
                                    if (fields[i][j] == field) {
                                        //This is our field... we stop looping
                                        if (round && roundUp) {
                                            if (field == DateUtils.SEMI_MONTH) {
                                                //This is a special case that's hard to generalize
                                                //If the date is 1, we round up to 16, otherwise
                                                //  we subtract 15 days and add 1 month
                                                if (val.get(Calendar.DATE) == 1) {
                                                    val.add(Calendar.DATE, 15);
                                                } else {
                                                    val.add(Calendar.DATE, -15);
                                                    val.add(Calendar.MONTH, 1);
                                                }
                                            } else {
                                                //We need at add one to this field since the
                                                //  last number causes us to round up
                                                val.add(fields[i][0], 1);
                                            }
                                        }
                                        return;
                                    }
                                }
                                //We have various fields that are not easy roundings
                                int offset = 0;
                                boolean offsetSet = false;
                                //These are special types of fields that require different rounding rules
                                switch (field) {
                                    case DateUtils.SEMI_MONTH:
                                        if (fields[i][0] == Calendar.DATE) {
                                            //If we're going to drop the DATE field's value,
                                            //  we want to do this our own way.
                                            //We need to subtrace 1 since the date has a minimum of 1
                                            offset = val.get(Calendar.DATE) - 1;
                                            //If we're above 15 days adjustment, that means we're in the
                                            //  bottom half of the month and should stay accordingly.
                                            if (offset >= 15) {
                                                offset -= 15;
                                            }
                                            //Record whether we're in the top or bottom half of that range
                                            roundUp = offset > 7;
                                            offsetSet = true;
                                        }
                                        break;
                                    case Calendar.AM_PM:
                                        if (fields[i][0] == Calendar.HOUR_OF_DAY) {
                                            //If we're going to drop the HOUR field's value,
                                            //  we want to do this our own way.
                                            offset = val.get(Calendar.HOUR_OF_DAY);
                                            if (offset >= 12) {
                                                offset -= 12;
                                            }
                                            roundUp = offset > 6;
                                            offsetSet = true;
                                        }
                                        break;
                                }
                                if (!offsetSet) {
                                    int min = val.getActualMinimum(fields[i][0]);
                                    int max = val.getActualMaximum(fields[i][0]);
                                    //Calculate the offset from the minimum allowed value
                                    offset = val.get(fields[i][0]) - min;
                                    //Set roundUp if this is more than half way between the minimum and maximum
                                    roundUp = offset > ((max - min) / 2);
                                }
                                //We need to remove this field
                                    val.set(fields[i][0], val.get(fields[i][0]) - offset);
                            }
                children: []
                pos: 25169
                length: 3425
              - type: throw_statement
                fields:
                  text: throw new IllegalArgumentException("The field " + field +
                    " is not supported");
                children: []
                pos: 28603
                length: 79
              pos: 24480
              length: 4209
          children: []
          pos: 24413
          length: 4276
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: iterator
              children: []
              pos: 30009
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Date focus
                children: []
                pos: 30018
                length: 10
              pos: 29986
              length: 303
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: focus
                            children: []
                            pos: 30060
                            length: 5
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 30069
                            length: 4
                        children: []
                        pos: 30060
                        length: 13
                    children: []
                    pos: 30059
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 30089
                    length: 64
                  pos: 30075
                  length: 88
                pos: 30056
                length: 107
              - type: local_variable_declaration
                fields:
                  text: Calendar gval = Calendar.getInstance();
                children: []
                pos: 30172
                length: 39
              - type: expression_statement
                fields:
                  text: gval.setTime(focus);
                children: []
                pos: 30220
                length: 20
              - type: return_statement
                fields:
                  text: return iterator(gval, rangeStyle);
                children: []
                pos: 30249
                length: 34
              pos: 30046
              length: 243
          children: []
          pos: 29986
          length: 303
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: iterator
              children: []
              pos: 31480
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Calendar focus
                children: []
                pos: 31489
                length: 14
              pos: 31457
              length: 2864
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: focus
                            children: []
                            pos: 31535
                            length: 5
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 31544
                            length: 4
                        children: []
                        pos: 31535
                        length: 13
                    children: []
                    pos: 31534
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 31564
                    length: 64
                  pos: 31550
                  length: 88
                pos: 31531
                length: 107
              - type: local_variable_declaration
                fields:
                  text: Calendar start = null;
                children: []
                pos: 31647
                length: 22
              - type: local_variable_declaration
                fields:
                  text: Calendar end = null;
                children: []
                pos: 31678
                length: 20
              - type: local_variable_declaration
                fields:
                  text: int startCutoff = Calendar.SUNDAY;
                children: []
                pos: 31707
                length: 34
              - type: local_variable_declaration
                fields:
                  text: int endCutoff = Calendar.SATURDAY;
                children: []
                pos: 31750
                length: 34
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: rangeStyle
                        children: []
                        pos: 31801
                        length: 10
                    children: []
                    pos: 31800
                    length: 12
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                                    case RANGE_MONTH_SUNDAY:
                                    case RANGE_MONTH_MONDAY:
                                        //Set start to the first of the month
                                        start = truncate(focus, Calendar.MONTH);
                                        //Set end to the last of the month
                                        end = (Calendar) start.clone();
                                        end.add(Calendar.MONTH, 1);
                                        end.add(Calendar.DATE, -1);
                                        //Loop start back to the previous sunday or monday
                                        if (rangeStyle == RANGE_MONTH_MONDAY) {
                                            startCutoff = Calendar.MONDAY;
                                            endCutoff = Calendar.SUNDAY;
                                        }
                                        break;
                                    case RANGE_WEEK_SUNDAY:
                                    case RANGE_WEEK_MONDAY:
                                    case RANGE_WEEK_RELATIVE:
                                    case RANGE_WEEK_CENTER:
                                        //Set start and end to the current date
                                        start = truncate(focus, Calendar.DATE);
                                        end = truncate(focus, Calendar.DATE);
                                        switch (rangeStyle) {
                                            case RANGE_WEEK_SUNDAY:
                                                //already set by default
                                                break;
                                            case RANGE_WEEK_MONDAY:
                                                startCutoff = Calendar.MONDAY;
                                                endCutoff = Calendar.SUNDAY;
                                                break;
                                            case RANGE_WEEK_RELATIVE:
                                                startCutoff = focus.get(Calendar.DAY_OF_WEEK);
                                                endCutoff = startCutoff - 1;
                                                break;
                                            case RANGE_WEEK_CENTER:
                                                startCutoff = focus.get(Calendar.DAY_OF_WEEK) - 3;
                                                endCutoff = focus.get(Calendar.DAY_OF_WEEK) + 3;
                                                break;
                                        }
                                        break;
                                    default:
                                        throw new IllegalArgumentException("The range style " + rangeStyle + " is not valid.");
                                }
                    children: []
                    pos: 31813
                    length: 1894
                children: []
                pos: 31793
                length: 1914
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: startCutoff
                            children: []
                            pos: 33720
                            length: 11
                          right:
                            type: field_access
                            fields:
                              text: Calendar.SUNDAY
                            children: []
                            pos: 33734
                            length: 15
                        children: []
                        pos: 33720
                        length: 29
                    children: []
                    pos: 33719
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: startCutoff += 7;
                    children: []
                    pos: 33765
                    length: 17
                  pos: 33751
                  length: 41
                pos: 33716
                length: 76
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: greater_than
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: startCutoff
                            children: []
                            pos: 33805
                            length: 11
                          right:
                            type: field_access
                            fields:
                              text: Calendar.SATURDAY
                            children: []
                            pos: 33819
                            length: 17
                        children: []
                        pos: 33805
                        length: 31
                    children: []
                    pos: 33804
                    length: 33
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: startCutoff -= 7;
                    children: []
                    pos: 33852
                    length: 17
                  pos: 33838
                  length: 41
                pos: 33801
                length: 78
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: endCutoff
                            children: []
                            pos: 33892
                            length: 9
                          right:
                            type: field_access
                            fields:
                              text: Calendar.SUNDAY
                            children: []
                            pos: 33904
                            length: 15
                        children: []
                        pos: 33892
                        length: 27
                    children: []
                    pos: 33891
                    length: 29
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: endCutoff += 7;
                    children: []
                    pos: 33935
                    length: 15
                  pos: 33921
                  length: 39
                pos: 33888
                length: 72
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: greater_than
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: endCutoff
                            children: []
                            pos: 33973
                            length: 9
                          right:
                            type: field_access
                            fields:
                              text: Calendar.SATURDAY
                            children: []
                            pos: 33985
                            length: 17
                        children: []
                        pos: 33973
                        length: 29
                    children: []
                    pos: 33972
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: endCutoff -= 7;
                    children: []
                    pos: 34018
                    length: 15
                  pos: 34004
                  length: 39
                pos: 33969
                length: 74
              - type: while_statement
                fields:
                  text: |-
                    while (start.get(Calendar.DAY_OF_WEEK) != startCutoff) {
                                start.add(Calendar.DATE, -1);
                            }
                children: []
                pos: 34052
                length: 108
              - type: while_statement
                fields:
                  text: |-
                    while (end.get(Calendar.DAY_OF_WEEK) != endCutoff) {
                                end.add(Calendar.DATE, 1);
                            }
                children: []
                pos: 34169
                length: 101
              - type: return_statement
                fields:
                  text: return new DateIterator(start, end);
                children: []
                pos: 34279
                length: 36
              pos: 31521
              length: 2800
          children: []
          pos: 31457
          length: 2864
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: iterator
              children: []
              pos: 35281
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Object focus
                children: []
                pos: 35290
                length: 12
              pos: 35258
              length: 492
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: focus
                            children: []
                            pos: 35334
                            length: 5
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 35343
                            length: 4
                        children: []
                        pos: 35334
                        length: 13
                    children: []
                    pos: 35333
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("The date must not
                        be null");
                    children: []
                    pos: 35363
                    length: 64
                  pos: 35349
                  length: 88
                pos: 35330
                length: 107
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: focus instanceof Date
                        children: []
                        pos: 35450
                        length: 21
                    children: []
                    pos: 35449
                    length: 23
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return iterator((Date) focus, rangeStyle);
                    children: []
                    pos: 35487
                    length: 42
                  pos: 35473
                  length: 66
                pos: 35446
                length: 298
              pos: 35320
              length: 430
          children: []
          pos: 35258
          length: 492
        - type: class_declaration
          fields:
            name:
              type: identifier
              fields:
                text: DateIterator
              children: []
              pos: 35814
              length: 12
            body:
              type: class_body
              fields: {}
              children:
              - type: field_declaration
                fields:
                  text: private final Calendar endFinal;
                children: []
                pos: 35857
                length: 32
              - type: field_declaration
                fields:
                  text: private final Calendar spot;
                children: []
                pos: 35898
                length: 28
              - type: constructor_declaration
                fields:
                  text: |-
                    DateIterator(Calendar startFinal, Calendar endFinal) {
                                super();
                                this.endFinal = endFinal;
                                spot = startFinal;
                                spot.add(Calendar.DATE, -1);
                            }
                children: []
                pos: 36159
                length: 195
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: hasNext
                    children: []
                    pos: 36555
                    length: 7
                  parameters:
                    type: method_parameters
                    fields: {}
                    children: []
                    pos: 36540
                    length: 78
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: return_statement
                      fields:
                        text: return spot.before(endFinal);
                      children: []
                      pos: 36579
                      length: 29
                    pos: 36565
                    length: 53
                children: []
                pos: 36540
                length: 78
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: next
                    children: []
                    pos: 36783
                    length: 4
                  parameters:
                    type: method_parameters
                    fields: {}
                    children: []
                    pos: 36769
                    length: 212
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: method_invocation
                              fields:
                                text: spot.equals(endFinal)
                              children: []
                              pos: 36808
                              length: 21
                          children: []
                          pos: 36807
                          length: 23
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: throw_statement
                          fields:
                            text: throw new NoSuchElementException();
                          children: []
                          pos: 36849
                          length: 35
                        pos: 36831
                        length: 67
                      pos: 36804
                      length: 94
                    - type: expression_statement
                      fields:
                        text: spot.add(Calendar.DATE, 1);
                      children: []
                      pos: 36911
                      length: 27
                    - type: return_statement
                      fields:
                        text: return spot.clone();
                      children: []
                      pos: 36951
                      length: 20
                    pos: 36790
                    length: 191
                children: []
                pos: 36769
                length: 212
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: remove
                    children: []
                    pos: 37188
                    length: 6
                  parameters:
                    type: method_parameters
                    fields: {}
                    children: []
                    pos: 37176
                    length: 87
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: throw_statement
                      fields:
                        text: throw new UnsupportedOperationException();
                      children: []
                      pos: 37211
                      length: 42
                    pos: 37197
                    length: 66
                children: []
                pos: 37176
                length: 87
              pos: 35801
              length: 1468
          children: []
          pos: 35801
          length: 1468
        - type: field_declaration
          fields:
            text: public static final int MILLIS_IN_SECOND = 1000;
          children: []
          pos: 37584
          length: 48
        - type: field_declaration
          fields:
            text: public static final int MILLIS_IN_MINUTE = 60 * 1000;
          children: []
          pos: 37797
          length: 53
        - type: field_declaration
          fields:
            text: public static final int MILLIS_IN_HOUR = 60 * 60 * 1000;
          children: []
          pos: 38011
          length: 56
        - type: field_declaration
          fields:
            text: public static final int MILLIS_IN_DAY = 24 * 60 * 60 * 1000;
          children: []
          pos: 38226
          length: 60
        pos: 1289
        length: 37004
    children: []
    pos: 1289
    length: 37004
  pos: 0
  length: 38294
text_diff: "--- before\n+++ after\n@@ -621,9 +621,6 @@\n             throw new ArithmeticException(\"Calendar
  value too large for accurate calculations\");\n         }\n         \n-        if
  (field == Calendar.MILLISECOND) {\n-            return;\n-        }\n \n         //
  ----------------- Fix for LANG-59 ---------------------- START ---------------\n
  \        // see http://issues.apache.org/jira/browse/LANG-59\n@@ -631,39 +628,14
  @@\n         // Manually truncate milliseconds, seconds and minutes, rather than
  using\n         // Calendar methods.\n \n-        Date date = val.getTime();\n-
  \       long time = date.getTime();\n-        boolean done = false;\n \n         //
  truncate milliseconds\n-        int millisecs = val.get(Calendar.MILLISECOND);\n-
  \       if (!round || millisecs < 500) {\n-            time = time - millisecs;\n-
  \           if (field == Calendar.SECOND) {\n-                done = true;\n-            }\n-
  \       }\n \n         // truncate seconds\n-        int seconds = val.get(Calendar.SECOND);\n-
  \       if (!done && (!round || seconds < 30)) {\n-            time = time - (seconds
  * 1000L);\n-            if (field == Calendar.MINUTE) {\n-                done =
  true;\n-            }\n-        }\n \n         // truncate minutes\n-        int
  minutes = val.get(Calendar.MINUTE);\n-        if (!done && (!round || minutes <
  30)) {\n-            time = time - (minutes * 60000L);\n-        }\n \n         //
  reset time\n-        if (date.getTime() != time) {\n-            date.setTime(time);\n-
  \           val.setTime(date);\n-        }\n         // ----------------- Fix for
  LANG-59 ----------------------- END ----------------\n \n         boolean roundUp
  = false;\n@@ -734,9 +706,7 @@\n                 roundUp = offset > ((max - min)
  / 2);\n             }\n             //We need to remove this field\n-            if
  (offset != 0) {\n                 val.set(fields[i][0], val.get(fields[i][0]) -
  offset);\n-            }\n         }\n         throw new IllegalArgumentException(\"The
  field \" + field + \" is not supported\");\n \n"
tree_diff: |+
  New cluster:
  UPDATE from for (int i = 0; i < fields.length; i++) {
              for (int j = 0; j < fields[i].length; j++) {
                  if (fields[i][j] == field) {
                      //This is our field... we stop looping
                      if (round && roundUp) {
                          if (field == DateUtils.SEMI_MONTH) {
                              //This is a special case that's hard to generalize
                              //If the date is 1, we round up to 16, otherwise
                              //  we subtract 15 days and add 1 month
                              if (val.get(Calendar.DATE) == 1) {
                                  val.add(Calendar.DATE, 15);
                              } else {
                                  val.add(Calendar.DATE, -15);
                                  val.add(Calendar.MONTH, 1);
                              }
                          } else {
                              //We need at add one to this field since the
                              //  last number causes us to round up
                              val.add(fields[i][0], 1);
                          }
                      }
                      return;
                  }
              }
              //We have various fields that are not easy roundings
              int offset = 0;
              boolean offsetSet = false;
              //These are special types of fields that require different rounding rules
              switch (field) {
                  case DateUtils.SEMI_MONTH:
                      if (fields[i][0] == Calendar.DATE) {
                          //If we're going to drop the DATE field's value,
                          //  we want to do this our own way.
                          //We need to subtrace 1 since the date has a minimum of 1
                          offset = val.get(Calendar.DATE) - 1;
                          //If we're above 15 days adjustment, that means we're in the
                          //  bottom half of the month and should stay accordingly.
                          if (offset >= 15) {
                              offset -= 15;
                          }
                          //Record whether we're in the top or bottom half of that range
                          roundUp = offset > 7;
                          offsetSet = true;
                      }
                      break;
                  case Calendar.AM_PM:
                      if (fields[i][0] == Calendar.HOUR_OF_DAY) {
                          //If we're going to drop the HOUR field's value,
                          //  we want to do this our own way.
                          offset = val.get(Calendar.HOUR_OF_DAY);
                          if (offset >= 12) {
                              offset -= 12;
                          }
                          roundUp = offset > 6;
                          offsetSet = true;
                      }
                      break;
              }
              if (!offsetSet) {
                  int min = val.getActualMinimum(fields[i][0]);
                  int max = val.getActualMaximum(fields[i][0]);
                  //Calculate the offset from the minimum allowed value
                  offset = val.get(fields[i][0]) - min;
                  //Set roundUp if this is more than half way between the minimum and maximum
                  roundUp = offset > ((max - min) / 2);
              }
              //We need to remove this field
              if (offset != 0) {
                  val.set(fields[i][0], val.get(fields[i][0]) - offset);
              }
          } to for (int i = 0; i < fields.length; i++) {
              for (int j = 0; j < fields[i].length; j++) {
                  if (fields[i][j] == field) {
                      //This is our field... we stop looping
                      if (round && roundUp) {
                          if (field == DateUtils.SEMI_MONTH) {
                              //This is a special case that's hard to generalize
                              //If the date is 1, we round up to 16, otherwise
                              //  we subtract 15 days and add 1 month
                              if (val.get(Calendar.DATE) == 1) {
                                  val.add(Calendar.DATE, 15);
                              } else {
                                  val.add(Calendar.DATE, -15);
                                  val.add(Calendar.MONTH, 1);
                              }
                          } else {
                              //We need at add one to this field since the
                              //  last number causes us to round up
                              val.add(fields[i][0], 1);
                          }
                      }
                      return;
                  }
              }
              //We have various fields that are not easy roundings
              int offset = 0;
              boolean offsetSet = false;
              //These are special types of fields that require different rounding rules
              switch (field) {
                  case DateUtils.SEMI_MONTH:
                      if (fields[i][0] == Calendar.DATE) {
                          //If we're going to drop the DATE field's value,
                          //  we want to do this our own way.
                          //We need to subtrace 1 since the date has a minimum of 1
                          offset = val.get(Calendar.DATE) - 1;
                          //If we're above 15 days adjustment, that means we're in the
                          //  bottom half of the month and should stay accordingly.
                          if (offset >= 15) {
                              offset -= 15;
                          }
                          //Record whether we're in the top or bottom half of that range
                          roundUp = offset > 7;
                          offsetSet = true;
                      }
                      break;
                  case Calendar.AM_PM:
                      if (fields[i][0] == Calendar.HOUR_OF_DAY) {
                          //If we're going to drop the HOUR field's value,
                          //  we want to do this our own way.
                          offset = val.get(Calendar.HOUR_OF_DAY);
                          if (offset >= 12) {
                              offset -= 12;
                          }
                          roundUp = offset > 6;
                          offsetSet = true;
                      }
                      break;
              }
              if (!offsetSet) {
                  int min = val.getActualMinimum(fields[i][0]);
                  int max = val.getActualMaximum(fields[i][0]);
                  //Calculate the offset from the minimum allowed value
                  offset = val.get(fields[i][0]) - min;
                  //Set roundUp if this is more than half way between the minimum and maximum
                  roundUp = offset > ((max - min) / 2);
              }
              //We need to remove this field
                  val.set(fields[i][0], val.get(fields[i][0]) - offset);
          }
  ------------
  ===
  update-node
  ---
  for_statement: for (int i = 0; i < fields.length; i++) {
              for (int j = 0; j < fields[i].length; j++) {
                  if (fields[i][j] == field) {
                      //This is our field... we stop looping
                      if (round && roundUp) {
                          if (field == DateUtils.SEMI_MONTH) {
                              //This is a special case that's hard to generalize
                              //If the date is 1, we round up to 16, otherwise
                              //  we subtract 15 days and add 1 month
                              if (val.get(Calendar.DATE) == 1) {
                                  val.add(Calendar.DATE, 15);
                              } else {
                                  val.add(Calendar.DATE, -15);
                                  val.add(Calendar.MONTH, 1);
                              }
                          } else {
                              //We need at add one to this field since the
                              //  last number causes us to round up
                              val.add(fields[i][0], 1);
                          }
                      }
                      return;
                  }
              }
              //We have various fields that are not easy roundings
              int offset = 0;
              boolean offsetSet = false;
              //These are special types of fields that require different rounding rules
              switch (field) {
                  case DateUtils.SEMI_MONTH:
                      if (fields[i][0] == Calendar.DATE) {
                          //If we're going to drop the DATE field's value,
                          //  we want to do this our own way.
                          //We need to subtrace 1 since the date has a minimum of 1
                          offset = val.get(Calendar.DATE) - 1;
                          //If we're above 15 days adjustment, that means we're in the
                          //  bottom half of the month and should stay accordingly.
                          if (offset >= 15) {
                              offset -= 15;
                          }
                          //Record whether we're in the top or bottom half of that range
                          roundUp = offset > 7;
                          offsetSet = true;
                      }
                      break;
                  case Calendar.AM_PM:
                      if (fields[i][0] == Calendar.HOUR_OF_DAY) {
                          //If we're going to drop the HOUR field's value,
                          //  we want to do this our own way.
                          offset = val.get(Calendar.HOUR_OF_DAY);
                          if (offset >= 12) {
                              offset -= 12;
                          }
                          roundUp = offset > 6;
                          offsetSet = true;
                      }
                      break;
              }
              if (!offsetSet) {
                  int min = val.getActualMinimum(fields[i][0]);
                  int max = val.getActualMaximum(fields[i][0]);
                  //Calculate the offset from the minimum allowed value
                  offset = val.get(fields[i][0]) - min;
                  //Set roundUp if this is more than half way between the minimum and maximum
                  roundUp = offset > ((max - min) / 2);
              }
              //We need to remove this field
              if (offset != 0) {
                  val.set(fields[i][0], val.get(fields[i][0]) - offset);
              }
          } [26078,29548]
  replace for (int i = 0; i < fields.length; i++) {
              for (int j = 0; j < fields[i].length; j++) {
                  if (fields[i][j] == field) {
                      //This is our field... we stop looping
                      if (round && roundUp) {
                          if (field == DateUtils.SEMI_MONTH) {
                              //This is a special case that's hard to generalize
                              //If the date is 1, we round up to 16, otherwise
                              //  we subtract 15 days and add 1 month
                              if (val.get(Calendar.DATE) == 1) {
                                  val.add(Calendar.DATE, 15);
                              } else {
                                  val.add(Calendar.DATE, -15);
                                  val.add(Calendar.MONTH, 1);
                              }
                          } else {
                              //We need at add one to this field since the
                              //  last number causes us to round up
                              val.add(fields[i][0], 1);
                          }
                      }
                      return;
                  }
              }
              //We have various fields that are not easy roundings
              int offset = 0;
              boolean offsetSet = false;
              //These are special types of fields that require different rounding rules
              switch (field) {
                  case DateUtils.SEMI_MONTH:
                      if (fields[i][0] == Calendar.DATE) {
                          //If we're going to drop the DATE field's value,
                          //  we want to do this our own way.
                          //We need to subtrace 1 since the date has a minimum of 1
                          offset = val.get(Calendar.DATE) - 1;
                          //If we're above 15 days adjustment, that means we're in the
                          //  bottom half of the month and should stay accordingly.
                          if (offset >= 15) {
                              offset -= 15;
                          }
                          //Record whether we're in the top or bottom half of that range
                          roundUp = offset > 7;
                          offsetSet = true;
                      }
                      break;
                  case Calendar.AM_PM:
                      if (fields[i][0] == Calendar.HOUR_OF_DAY) {
                          //If we're going to drop the HOUR field's value,
                          //  we want to do this our own way.
                          offset = val.get(Calendar.HOUR_OF_DAY);
                          if (offset >= 12) {
                              offset -= 12;
                          }
                          roundUp = offset > 6;
                          offsetSet = true;
                      }
                      break;
              }
              if (!offsetSet) {
                  int min = val.getActualMinimum(fields[i][0]);
                  int max = val.getActualMaximum(fields[i][0]);
                  //Calculate the offset from the minimum allowed value
                  offset = val.get(fields[i][0]) - min;
                  //Set roundUp if this is more than half way between the minimum and maximum
                  roundUp = offset > ((max - min) / 2);
              }
              //We need to remove this field
              if (offset != 0) {
                  val.set(fields[i][0], val.get(fields[i][0]) - offset);
              }
          } by for (int i = 0; i < fields.length; i++) {
              for (int j = 0; j < fields[i].length; j++) {
                  if (fields[i][j] == field) {
                      //This is our field... we stop looping
                      if (round && roundUp) {
                          if (field == DateUtils.SEMI_MONTH) {
                              //This is a special case that's hard to generalize
                              //If the date is 1, we round up to 16, otherwise
                              //  we subtract 15 days and add 1 month
                              if (val.get(Calendar.DATE) == 1) {
                                  val.add(Calendar.DATE, 15);
                              } else {
                                  val.add(Calendar.DATE, -15);
                                  val.add(Calendar.MONTH, 1);
                              }
                          } else {
                              //We need at add one to this field since the
                              //  last number causes us to round up
                              val.add(fields[i][0], 1);
                          }
                      }
                      return;
                  }
              }
              //We have various fields that are not easy roundings
              int offset = 0;
              boolean offsetSet = false;
              //These are special types of fields that require different rounding rules
              switch (field) {
                  case DateUtils.SEMI_MONTH:
                      if (fields[i][0] == Calendar.DATE) {
                          //If we're going to drop the DATE field's value,
                          //  we want to do this our own way.
                          //We need to subtrace 1 since the date has a minimum of 1
                          offset = val.get(Calendar.DATE) - 1;
                          //If we're above 15 days adjustment, that means we're in the
                          //  bottom half of the month and should stay accordingly.
                          if (offset >= 15) {
                              offset -= 15;
                          }
                          //Record whether we're in the top or bottom half of that range
                          roundUp = offset > 7;
                          offsetSet = true;
                      }
                      break;
                  case Calendar.AM_PM:
                      if (fields[i][0] == Calendar.HOUR_OF_DAY) {
                          //If we're going to drop the HOUR field's value,
                          //  we want to do this our own way.
                          offset = val.get(Calendar.HOUR_OF_DAY);
                          if (offset >= 12) {
                              offset -= 12;
                          }
                          roundUp = offset > 6;
                          offsetSet = true;
                      }
                      break;
              }
              if (!offsetSet) {
                  int min = val.getActualMinimum(fields[i][0]);
                  int max = val.getActualMaximum(fields[i][0]);
                  //Calculate the offset from the minimum allowed value
                  offset = val.get(fields[i][0]) - min;
                  //Set roundUp if this is more than half way between the minimum and maximum
                  roundUp = offset > ((max - min) / 2);
              }
              //We need to remove this field
                  val.set(fields[i][0], val.get(fields[i][0]) - offset);
          }

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  if_statement [24656,24722]
      parenthesized_expression [24659,24690]
          equals [24660,24689]
              identifier: field [24660,24665]
              field_access: Calendar.MILLISECOND [24669,24689]
      block [24691,24722]
          return_statement: return; [24705,24712]

  New cluster:
  ===
  delete-node
  ---
  local_variable_declaration: Date date = val.getTime(); [25005,25031]
  ===
  ------------
  ===
  delete-node
  ---
  local_variable_declaration: Date date = val.getTime(); [25005,25031]
  ===

  New cluster:
  ===
  delete-node
  ---
  local_variable_declaration: long time = date.getTime(); [25040,25067]
  ===
  ------------
  ===
  delete-node
  ---
  local_variable_declaration: long time = date.getTime(); [25040,25067]
  ===

  New cluster:
  ===
  delete-node
  ---
  local_variable_declaration: boolean done = false; [25076,25097]
  ===
  ------------
  ===
  delete-node
  ---
  local_variable_declaration: boolean done = false; [25076,25097]
  ===

  New cluster:
  ===
  delete-node
  ---
  local_variable_declaration: int millisecs = val.get(Calendar.MILLISECOND); [25140,25186]
  ===
  ------------
  ===
  delete-node
  ---
  local_variable_declaration: int millisecs = val.get(Calendar.MILLISECOND); [25140,25186]
  ===

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  if_statement [25195,25361]
      parenthesized_expression [25198,25225]
          or [25199,25224]
              unary_expression: !round [25199,25205]
              less_than [25209,25224]
                  identifier: millisecs [25209,25218]
                  decimal_integer_literal: 500 [25221,25224]
      block [25226,25361]
          expression_statement: time = time - millisecs; [25240,25264]
          if_statement [25277,25351]
              parenthesized_expression [25280,25306]
                  equals [25281,25305]
                      identifier: field [25281,25286]
                      field_access: Calendar.SECOND [25290,25305]
              block [25307,25351]
                  expression_statement: done = true; [25325,25337]

  New cluster:
  ===
  delete-node
  ---
  local_variable_declaration: int seconds = val.get(Calendar.SECOND); [25399,25438]
  ===
  ------------
  ===
  delete-node
  ---
  local_variable_declaration: int seconds = val.get(Calendar.SECOND); [25399,25438]
  ===

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  if_statement [25447,25629]
      parenthesized_expression [25450,25485]
          and [25451,25484]
              unary_expression: !done [25451,25456]
              parenthesized_expression [25460,25484]
                  or [25461,25483]
                      unary_expression: !round [25461,25467]
                      less_than [25471,25483]
                          identifier: seconds [25471,25478]
                          decimal_integer_literal: 30 [25481,25483]
      block [25486,25629]
          expression_statement: time = time - (seconds * 1000L); [25500,25532]
          if_statement [25545,25619]
              parenthesized_expression [25548,25574]
                  equals [25549,25573]
                      identifier: field [25549,25554]
                      field_access: Calendar.MINUTE [25558,25573]
              block [25575,25619]
                  expression_statement: done = true; [25593,25605]

  New cluster:
  ===
  delete-node
  ---
  local_variable_declaration: int minutes = val.get(Calendar.MINUTE); [25667,25706]
  ===
  ------------
  ===
  delete-node
  ---
  local_variable_declaration: int minutes = val.get(Calendar.MINUTE); [25667,25706]
  ===

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  if_statement [25715,25811]
      parenthesized_expression [25718,25753]
          and [25719,25752]
              unary_expression: !done [25719,25724]
              parenthesized_expression [25728,25752]
                  or [25729,25751]
                      unary_expression: !round [25729,25735]
                      less_than [25739,25751]
                          identifier: minutes [25739,25746]
                          decimal_integer_literal: 30 [25749,25751]
      block [25754,25811]
          expression_statement: time = time - (minutes * 60000L); [25768,25801]

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  if_statement [25843,25945]
      parenthesized_expression [25846,25870]
          not_equals [25847,25869]
              method_invocation: date.getTime() [25847,25861]
              identifier: time [25865,25869]
      block [25871,25945]
          expression_statement: date.setTime(time); [25885,25904]
          expression_statement: val.setTime(date); [25917,25935]

...
