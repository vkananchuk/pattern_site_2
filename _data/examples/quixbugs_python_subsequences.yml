---
language: python
before_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: subsequences
        children: []
        pos: 4
        length: 12
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: a
          children: []
          pos: 17
          length: 1
        pos: 0
        length: 218
      body:
        type: block
        fields: {}
        children:
        - type: if_statement
          fields:
            condition:
              type: equals
              fields:
                left:
                  type: identifier
                  fields:
                    text: k
                  children: []
                  pos: 34
                  length: 1
                right:
                  type: integer
                  fields:
                    text: '0'
                  children: []
                  pos: 39
                  length: 1
              children: []
              pos: 34
              length: 6
          children:
          - type: block
            fields: {}
            children:
            - type: return_statement
              fields:
                text: return []
              children: []
              pos: 50
              length: 9
            pos: 50
            length: 9
          pos: 31
          length: 28
        - type: expression_statement
          fields:
            text: ret = []
          children: []
          pos: 65
          length: 8
        - type: for_statement
          fields:
            text: |-
              for i in range(a, b + 1 - k):
                      ret.extend(
                          [i] + rest for rest in subsequences(i + 1, b, k - 1)
                      )
          children: []
          pos: 78
          length: 124
        - type: return_statement
          fields:
            text: return ret
          children: []
          pos: 208
          length: 10
        pos: 31
        length: 187
    children: []
    pos: 0
    length: 218
  pos: 0
  length: 219
after_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: subsequences
        children: []
        pos: 4
        length: 12
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: a
          children: []
          pos: 17
          length: 1
        pos: 0
        length: 220
      body:
        type: block
        fields: {}
        children:
        - type: if_statement
          fields:
            condition:
              type: equals
              fields:
                left:
                  type: identifier
                  fields:
                    text: k
                  children: []
                  pos: 34
                  length: 1
                right:
                  type: integer
                  fields:
                    text: '0'
                  children: []
                  pos: 39
                  length: 1
              children: []
              pos: 34
              length: 6
          children:
          - type: block
            fields: {}
            children:
            - type: return_statement
              fields:
                text: return [[]]
              children: []
              pos: 50
              length: 11
            pos: 50
            length: 11
          pos: 31
          length: 30
        - type: expression_statement
          fields:
            text: ret = []
          children: []
          pos: 67
          length: 8
        - type: for_statement
          fields:
            text: |-
              for i in range(a, b + 1 - k):
                      ret.extend(
                          [i] + rest for rest in subsequences(i + 1, b, k - 1)
                      )
          children: []
          pos: 80
          length: 124
        - type: return_statement
          fields:
            text: return ret
          children: []
          pos: 210
          length: 10
        pos: 31
        length: 189
    children: []
    pos: 0
    length: 220
  pos: 0
  length: 222
text_diff: "--- before\n+++ after\n@@ -1,6 +1,6 @@\n def subsequences(a, b, k):\n
  \    if k == 0:\n-        return []\n+        return [[]]\n \n     ret = []\n     for
  i in range(a, b + 1 - k):\n@@ -9,3 +9,4 @@\n         )\n \n     return ret\n+\n"
tree_diff: |+
  New cluster:
  UPDATE from return [] to return [[]]
  ------------
  ===
  update-node
  ---
  return_statement: return [] [50,59]
  replace return [] by return [[]]

...
