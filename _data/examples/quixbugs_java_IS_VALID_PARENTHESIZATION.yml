---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: IS_VALID_PARENTHESIZATION
        children: []
        pos: 190
        length: 25
      body:
        type: class_body
        fields: {}
        children:
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: is_valid_parenthesization
              children: []
              pos: 244
              length: 25
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: String parens
                children: []
                pos: 270
                length: 13
              pos: 222
              length: 395
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int depth = 0;
                children: []
                pos: 295
                length: 14
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < parens.length(); i++) {
                                Character paren = parens.charAt(i);
                                if (paren.equals('(')) {
                                    depth++;
                                } else {
                                    depth--;
                                    if (depth < 0) { return false; }
                                }
                            }
                children: []
                pos: 318
                length: 272
              - type: return_statement
                fields:
                  text: return true;
                children: []
                pos: 599
                length: 12
              pos: 285
              length: 332
          children: []
          pos: 222
          length: 395
        pos: 177
        length: 442
    children: []
    pos: 177
    length: 442
  pos: 0
  length: 620
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: IS_VALID_PARENTHESIZATION
        children: []
        pos: 199
        length: 25
      body:
        type: class_body
        fields: {}
        children:
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: is_valid_parenthesization
              children: []
              pos: 253
              length: 25
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: String parens
                children: []
                pos: 279
                length: 13
              pos: 231
              length: 399
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int depth = 0;
                children: []
                pos: 304
                length: 14
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < parens.length(); i++) {
                                Character paren = parens.charAt(i);
                                if (paren.equals('(')) {
                                    depth++;
                                } else {
                                    depth--;
                                    if (depth < 0) { return false; }
                                }
                            }
                children: []
                pos: 327
                length: 272
              - type: return_statement
                fields:
                  text: return depth==0;
                children: []
                pos: 608
                length: 16
              pos: 294
              length: 336
          children: []
          pos: 231
          length: 399
        pos: 186
        length: 446
    children: []
    pos: 186
    length: 446
  pos: 0
  length: 633
text_diff: |
  --- before
  +++ after
  @@ -1,5 +1,6 @@
  -package java_programs;
  +package correct_java_programs;
   import java.util.*;
  +
   /*
    * To change this template, choose Tools | Templates
    * and open the template in the editor.
  @@ -21,6 +22,6 @@
                   if (depth < 0) { return false; }
               }
           }
  -        return true;
  +        return depth==0;
       }
   }
tree_diff: |+
  New cluster:
  UPDATE from return true; to return depth==0;
  ------------
  ===
  update-node
  ---
  return_statement: return true; [599,611]
  replace return true; by return depth==0;

...
