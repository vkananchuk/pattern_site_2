---
language: java
text_diff: "--- before\n+++ after\n@@ -16,12 +16,10 @@\n  */\n package org.apache.commons.jxpath.ri.axes;\n
  \n-import org.apache.commons.jxpath.ri.Compiler;\n import org.apache.commons.jxpath.ri.EvalContext;\n
  import org.apache.commons.jxpath.ri.QName;\n import org.apache.commons.jxpath.ri.compiler.NodeNameTest;\n
  import org.apache.commons.jxpath.ri.compiler.NodeTest;\n-import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;\n
  import org.apache.commons.jxpath.ri.model.NodeIterator;\n import org.apache.commons.jxpath.ri.model.NodePointer;\n
  \n@@ -32,7 +30,6 @@\n  * @version $Revision$ $Date$\n  */\n public class AttributeContext
  extends EvalContext {\n-    private static final NodeNameTest WILDCARD_TEST = new
  NodeNameTest(new QName(null, \"*\"));\n \n     private NodeTest nodeTest;\n     private
  boolean setStarted = false;\n@@ -75,20 +72,12 @@\n         super.setPosition(getCurrentPosition()
  + 1);\n         if (!setStarted) {\n             setStarted = true;\n-            NodeNameTest
  nodeNameTest = null;\n-            if (nodeTest instanceof NodeTypeTest) {\n-                if
  (((NodeTypeTest) nodeTest).getNodeType() == Compiler.NODE_TYPE_NODE) {\n-                    nodeNameTest
  = WILDCARD_TEST;\n-                }\n-            }\n-            else if (nodeTest
  instanceof NodeNameTest) {\n-                nodeNameTest = (NodeNameTest) nodeTest;\n-
  \           }\n-            if (nodeNameTest == null) {\n+            if (!(nodeTest
  instanceof NodeNameTest)) {\n                 return false;\n             }\n-            iterator
  = parentContext.getCurrentNodePointer().attributeIterator(\n-                    nodeNameTest.getNodeName());\n+
  \           QName name = ((NodeNameTest) nodeTest).getNodeName();\n+            iterator
  =\n+                parentContext.getCurrentNodePointer().attributeIterator(name);\n
  \        }\n         if (iterator == null) {\n             return false;\n@@ -99,4
  +88,4 @@\n         currentNodePointer = iterator.getNodePointer();\n         return
  true;\n     }\n-}\n\\ No newline at end of file\n+}\n"
tree_diff: |+
  New cluster:
  MOVE from block [2588,3240]
  ------------
  ===
  move-tree
  ---
  local_variable_declaration: NodeNameTest nodeNameTest = null; [2633,2666]
  to
  block [2588,3240]
  at 3

  New cluster:
  UPDATE from NodeNameTest nodeNameTest = null; to QName name = ((NodeNameTest) nodeTest).getNodeName();
  ------------
  ===
  update-node
  ---
  local_variable_declaration: NodeNameTest nodeNameTest = null; [2633,2666]
  replace NodeNameTest nodeNameTest = null; by QName name = ((NodeNameTest) nodeTest).getNodeName();

  New cluster:
  UPDATE from iterator = parentContext.getCurrentNodePointer().attributeIterator(
                      nodeNameTest.getNodeName()); to iterator =
                  parentContext.getCurrentNodePointer().attributeIterator(name);
  ------------
  ===
  update-node
  ---
  expression_statement: iterator = parentContext.getCurrentNodePointer().attributeIterator(
                      nodeNameTest.getNodeName()); [3114,3230]
  replace iterator = parentContext.getCurrentNodePointer().attributeIterator(
                      nodeNameTest.getNodeName()); by iterator =
                  parentContext.getCurrentNodePointer().attributeIterator(name);

  New cluster:
  ===
  insert-node
  ---
  unary_expression: !(nodeTest instanceof NodeNameTest) [2438,2473]
  to
  parenthesized_expression [3033,3055]
  at 0
  ------------
  ===
  insert-node
  ---
  unary_expression: !(nodeTest instanceof NodeNameTest) [2438,2473]
  to
  parenthesized_expression [3033,3055]
  at 0

  New cluster:
  ===
  delete-node
  ---
  field_declaration: private static final NodeNameTest WILDCARD_TEST = new NodeNameTest(new QName(null, "*")); [1444,1533]
  ===
  ------------
  ===
  delete-node
  ---
  field_declaration: private static final NodeNameTest WILDCARD_TEST = new NodeNameTest(new QName(null, "*")); [1444,1533]
  ===

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  if_statement [2679,3017]
      parenthesized_expression [2682,2716]
          instanceof_expression: nodeTest instanceof NodeTypeTest [2683,2715]
      block [2717,2890]
          if_statement [2735,2876]
              parenthesized_expression [2738,2806]
                  equals [2739,2805]
                      method_invocation: ((NodeTypeTest) nodeTest).getNodeType() [2739,2778]
                      field_access: Compiler.NODE_TYPE_NODE [2782,2805]
              block [2807,2876]
                  expression_statement: nodeNameTest = WILDCARD_TEST; [2829,2858]

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  equals [3034,3054]
      identifier: nodeNameTest [3034,3046]
      null_literal [3050,3054]

...
