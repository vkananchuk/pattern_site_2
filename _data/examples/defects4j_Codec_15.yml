---
language: java
text_diff: |
  --- before
  +++ after
  @@ -185,14 +185,13 @@
           final char mappedChar = this.map(str.charAt(index));
           // HW rule check
           if (index > 1 && mappedChar != '0') {
  -            for (int i=index-1 ; i>=0 ; i--) {
  -                final char prevChar = str.charAt(i);
  -                if (this.map(prevChar)==mappedChar) {
  +            final char hwChar = str.charAt(index - 1);
  +            if ('H' == hwChar || 'W' == hwChar) {
  +                final char preHWChar = str.charAt(index - 2);
  +                final char firstCode = this.map(preHWChar);
  +                if (firstCode == mappedChar || 'H' == preHWChar || 'W' == preHWChar) {
                       return 0;
                   }
  -                if ('H'!=prevChar && 'W'!=prevChar) {
  -                    break;
  -                }
               }
           }
           return mappedChar;
tree_diff: |+
  New cluster:
  ===
  insert-node
  ---
  local_variable_declaration: final char hwChar = str.charAt(index - 1); [7391,7433]
  to
  block [7377,7703]
  at 0
  ------------
  ===
  insert-node
  ---
  local_variable_declaration: final char hwChar = str.charAt(index - 1); [7391,7433]
  to
  block [7377,7703]
  at 0

  New cluster:
  Unknown cluster type
  ------------
  ===
  insert-tree
  ---
  if_statement [7446,7754]
      parenthesized_expression [7449,7481]
          or [7450,7480]
              equals [7450,7463]
                  character_literal: 'H' [7450,7453]
                  identifier: hwChar [7457,7463]
              equals [7467,7480]
                  character_literal: 'W' [7467,7470]
                  identifier: hwChar [7474,7480]
      block [7482,7754]
          local_variable_declaration: final char preHWChar = str.charAt(index - 2); [7500,7545]
          local_variable_declaration: final char firstCode = this.map(preHWChar); [7562,7605]
          if_statement [7622,7740]
              parenthesized_expression [7625,7690]
                  or [7626,7689]
                      or [7626,7669]
                          equals [7626,7649]
                              identifier: firstCode [7626,7635]
                              identifier: mappedChar [7639,7649]
                          equals [7653,7669]
                              character_literal: 'H' [7653,7656]
                              identifier: preHWChar [7660,7669]
                      equals [7673,7689]
                          character_literal: 'W' [7673,7676]
                          identifier: preHWChar [7680,7689]
              block [7691,7740]
                  return_statement: return 0; [7713,7722]
  to
  block [7377,7703]
  at 1

  New cluster:
  ===
  delete-node
  ---
  for_statement: for (int i=index-1 ; i>=0 ; i--) {
                  final char prevChar = str.charAt(i);
                  if (this.map(prevChar)==mappedChar) {
                      return 0;
                  }
                  if ('H'!=prevChar && 'W'!=prevChar) {
                      break;
                  }
              } [7391,7693]
  ===
  ------------
  ===
  delete-node
  ---
  for_statement: for (int i=index-1 ; i>=0 ; i--) {
                  final char prevChar = str.charAt(i);
                  if (this.map(prevChar)==mappedChar) {
                      return 0;
                  }
                  if ('H'!=prevChar && 'W'!=prevChar) {
                      break;
                  }
              } [7391,7693]
  ===

...
