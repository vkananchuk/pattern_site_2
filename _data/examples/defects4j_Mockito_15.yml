---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: FinalMockCandidateFilter
        children: []
        pos: 653
        length: 24
      body:
        type: class_body
        fields: {}
        children:
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: filterCandidate
              children: []
              pos: 739
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final Collection<Object> mocks
                children: []
                pos: 755
                length: 30
              pos: 716
              length: 958
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: mocks.size()
                            children: []
                            pos: 848
                            length: 12
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '1'
                            children: []
                            pos: 864
                            length: 1
                        children: []
                        pos: 848
                        length: 17
                    children: []
                    pos: 847
                    length: 19
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: final Object matchingMock = mocks.iterator().next();
                    children: []
                    pos: 882
                    length: 52
                  - type: return_statement
                    fields:
                      text: "return new OngoingInjecter() {\r\n                public
                        boolean thenInject() {\r\n                    try {\r\n                        if
                        (!new BeanPropertySetter(fieldInstance, field).set(matchingMock))
                        {\r\n                            new FieldSetter(fieldInstance,
                        field).set(matchingMock);\r\n                        }\r\n
                        \                   } catch (Exception e) {\r\n                        throw
                        new MockitoException(\"Problems injecting dependency in \"
                        + field.getName(), e);\r\n                    }\r\n                    return
                        true;\r\n                }\r\n            };"
                    children: []
                    pos: 950
                    length: 561
                  pos: 867
                  length: 655
                pos: 845
                length: 677
              - type: return_statement
                fields:
                  text: "return new OngoingInjecter() {\r\n            public boolean
                    thenInject() {\r\n                return false;\r\n            }\r\n
                    \       };"
                children: []
                pos: 1534
                length: 131
              pos: 834
              length: 840
          children: []
          pos: 716
          length: 958
        pos: 640
        length: 1037
    children: []
    pos: 640
    length: 1037
  pos: 0
  length: 1679
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: FinalMockCandidateFilter
        children: []
        pos: 588
        length: 24
      body:
        type: class_body
        fields: {}
        children:
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: filterCandidate
              children: []
              pos: 674
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final Collection<Object> mocks
                children: []
                pos: 690
                length: 30
              pos: 651
              length: 835
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: mocks.size()
                            children: []
                            pos: 783
                            length: 12
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '1'
                            children: []
                            pos: 799
                            length: 1
                        children: []
                        pos: 783
                        length: 17
                    children: []
                    pos: 782
                    length: 19
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: final Object matchingMock = mocks.iterator().next();
                    children: []
                    pos: 817
                    length: 52
                  - type: return_statement
                    fields:
                      text: "return new OngoingInjecter() {\r\n                public
                        boolean thenInject() {\r\n                    try {\r\n                            new
                        FieldSetter(fieldInstance, field).set(matchingMock);\r\n                    }
                        catch (Exception e) {\r\n                        throw new
                        MockitoException(\"Problems injecting dependency in \" + field.getName(),
                        e);\r\n                    }\r\n                    return
                        true;\r\n                }\r\n            };"
                    children: []
                    pos: 885
                    length: 438
                  pos: 802
                  length: 532
                pos: 780
                length: 554
              - type: return_statement
                fields:
                  text: "return new OngoingInjecter() {\r\n            public boolean
                    thenInject() {\r\n                return false;\r\n            }\r\n
                    \       };"
                children: []
                pos: 1346
                length: 131
              pos: 769
              length: 717
          children: []
          pos: 651
          length: 835
        pos: 575
        length: 914
    children: []
    pos: 575
    length: 914
  pos: 0
  length: 1491
text_diff: "--- before\n+++ after\n@@ -1,7 +1,6 @@\n package org.mockito.internal.configuration.injection;\r\n
  \r\n import org.mockito.exceptions.base.MockitoException;\r\n-import org.mockito.internal.util.reflection.BeanPropertySetter;\r\n
  import org.mockito.internal.util.reflection.FieldSetter;\r\n \r\n import java.lang.reflect.Field;\r\n@@
  -23,9 +22,7 @@\n             return new OngoingInjecter() {\r\n                 public
  boolean thenInject() {\r\n                     try {\r\n-                        if
  (!new BeanPropertySetter(fieldInstance, field).set(matchingMock)) {\r\n                             new
  FieldSetter(fieldInstance, field).set(matchingMock);\r\n-                        }\r\n
  \                    } catch (Exception e) {\r\n                         throw new
  MockitoException(\"Problems injecting dependency in \" + field.getName(), e);\r\n
  \                    }\r\n"
tree_diff: "New cluster:\nUPDATE from return new OngoingInjecter() {\r\n                public
  boolean thenInject() {\r\n                    try {\r\n                        if
  (!new BeanPropertySetter(fieldInstance, field).set(matchingMock)) {\r\n                            new
  FieldSetter(fieldInstance, field).set(matchingMock);\r\n                        }\r\n
  \                   } catch (Exception e) {\r\n                        throw new
  MockitoException(\"Problems injecting dependency in \" + field.getName(), e);\r\n
  \                   }\r\n                    return true;\r\n                }\r\n
  \           }; to return new OngoingInjecter() {\r\n                public boolean
  thenInject() {\r\n                    try {\r\n                            new FieldSetter(fieldInstance,
  field).set(matchingMock);\r\n                    } catch (Exception e) {\r\n                        throw
  new MockitoException(\"Problems injecting dependency in \" + field.getName(), e);\r\n
  \                   }\r\n                    return true;\r\n                }\r\n
  \           };\n------------\n===\nupdate-node\n---\nreturn_statement: return new
  OngoingInjecter() {\r\n                public boolean thenInject() {\r\n                    try
  {\r\n                        if (!new BeanPropertySetter(fieldInstance, field).set(matchingMock))
  {\r\n                            new FieldSetter(fieldInstance, field).set(matchingMock);\r\n
  \                       }\r\n                    } catch (Exception e) {\r\n                        throw
  new MockitoException(\"Problems injecting dependency in \" + field.getName(), e);\r\n
  \                   }\r\n                    return true;\r\n                }\r\n
  \           }; [950,1511]\nreplace return new OngoingInjecter() {\r\n                public
  boolean thenInject() {\r\n                    try {\r\n                        if
  (!new BeanPropertySetter(fieldInstance, field).set(matchingMock)) {\r\n                            new
  FieldSetter(fieldInstance, field).set(matchingMock);\r\n                        }\r\n
  \                   } catch (Exception e) {\r\n                        throw new
  MockitoException(\"Problems injecting dependency in \" + field.getName(), e);\r\n
  \                   }\r\n                    return true;\r\n                }\r\n
  \           }; by return new OngoingInjecter() {\r\n                public boolean
  thenInject() {\r\n                    try {\r\n                            new FieldSetter(fieldInstance,
  field).set(matchingMock);\r\n                    } catch (Exception e) {\r\n                        throw
  new MockitoException(\"Problems injecting dependency in \" + field.getName(), e);\r\n
  \                   }\r\n                    return true;\r\n                }\r\n
  \           };\n\n"
