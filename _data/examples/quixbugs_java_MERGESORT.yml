---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: MERGESORT
        children: []
        pos: 191
        length: 9
      body:
        type: class_body
        fields: {}
        children:
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: merge
              children: []
              pos: 240
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: ArrayList<Integer> left
                children: []
                pos: 246
                length: 23
              pos: 207
              length: 898
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: ArrayList<Integer> result = new ArrayList<Integer>(100);
                children: []
                pos: 584
                length: 56
              - type: local_variable_declaration
                fields:
                  text: int i = 0;
                children: []
                pos: 649
                length: 10
              - type: local_variable_declaration
                fields:
                  text: int j = 0;
                children: []
                pos: 668
                length: 10
              - type: while_statement
                fields:
                  text: |-
                    while (i < left.size() && j < right.size()) {
                                if (left.get(i) <= right.get(j)) {
                                    result.add(left.get(i));
                                    i++;
                                } else {
                                    result.add(right.get(j));
                                    j++;
                                }
                            }
                children: []
                pos: 688
                length: 262
              - type: expression_statement
                fields:
                  text: 'result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j,
                    right.size()) : left.subList(i, left.size()));'
                children: []
                pos: 959
                length: 117
              - type: return_statement
                fields:
                  text: return result;
                children: []
                pos: 1085
                length: 14
              pos: 297
              length: 808
          children: []
          pos: 207
          length: 898
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: mergesort
              children: []
              pos: 1144
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: ArrayList<Integer> arr
                children: []
                pos: 1154
                length: 22
              pos: 1111
              length: 580
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: arr.size()
                            children: []
                            pos: 1192
                            length: 10
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 1206
                            length: 1
                        children: []
                        pos: 1192
                        length: 15
                    children: []
                    pos: 1191
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return arr;
                    children: []
                    pos: 1250
                    length: 11
                  pos: 1209
                  length: 62
                pos: 1188
                length: 497
              pos: 1178
              length: 513
          children: []
          pos: 1111
          length: 580
        pos: 178
        length: 1515
    children: []
    pos: 178
    length: 1515
  pos: 0
  length: 1694
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: MERGESORT
        children: []
        pos: 199
        length: 9
      body:
        type: class_body
        fields: {}
        children:
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: merge
              children: []
              pos: 248
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: ArrayList<Integer> left
                children: []
                pos: 254
                length: 23
              pos: 215
              length: 898
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: ArrayList<Integer> result = new ArrayList<Integer>(100);
                children: []
                pos: 592
                length: 56
              - type: local_variable_declaration
                fields:
                  text: int i = 0;
                children: []
                pos: 657
                length: 10
              - type: local_variable_declaration
                fields:
                  text: int j = 0;
                children: []
                pos: 676
                length: 10
              - type: while_statement
                fields:
                  text: |-
                    while (i < left.size() && j < right.size()) {
                                if (left.get(i) <= right.get(j)) {
                                    result.add(left.get(i));
                                    i++;
                                } else {
                                    result.add(right.get(j));
                                    j++;
                                }
                            }
                children: []
                pos: 696
                length: 262
              - type: expression_statement
                fields:
                  text: 'result.addAll(left.subList(i,left.size()).isEmpty() ? right.subList(j,
                    right.size()) : left.subList(i, left.size()));'
                children: []
                pos: 967
                length: 117
              - type: return_statement
                fields:
                  text: return result;
                children: []
                pos: 1093
                length: 14
              pos: 305
              length: 808
          children: []
          pos: 215
          length: 898
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: mergesort
              children: []
              pos: 1152
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: ArrayList<Integer> arr
                children: []
                pos: 1162
                length: 22
              pos: 1119
              length: 580
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_or_equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: arr.size()
                            children: []
                            pos: 1200
                            length: 10
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '1'
                            children: []
                            pos: 1214
                            length: 1
                        children: []
                        pos: 1200
                        length: 15
                    children: []
                    pos: 1199
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return arr;
                    children: []
                    pos: 1258
                    length: 11
                  pos: 1217
                  length: 62
                pos: 1196
                length: 497
              pos: 1186
              length: 513
          children: []
          pos: 1119
          length: 580
        pos: 186
        length: 1515
    children: []
    pos: 186
    length: 1515
  pos: 0
  length: 1702
text_diff: "--- before\n+++ after\n@@ -1,4 +1,4 @@\n-package java_programs;\n+package
  correct_java_programs;\n import java.util.*;\n \n /*\n@@ -35,7 +35,7 @@\n     }\n
  \n     public static ArrayList<Integer> mergesort(ArrayList<Integer> arr) {\n-        if
  (arr.size() == 0) { // <= 1 in correct version\n+        if (arr.size() <= 1) {
  // <= 1 in correct version\n             return arr;\n         } else {\n             int
  middle = arr.size() / 2;\n"
tree_diff: |+
  New cluster:
  Unknown cluster type
  ------------
  ===
  insert-tree
  ---
  less_or_equals [1200,1215]
      method_invocation: arr.size() [1200,1210]
      decimal_integer_literal: 1 [1214,1215]
  to
  parenthesized_expression [1191,1208]
  at 0

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  equals [1192,1207]
      method_invocation: arr.size() [1192,1202]
      decimal_integer_literal: 0 [1206,1207]

...
