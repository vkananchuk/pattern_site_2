---
language: python
before_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: possible_change
        children: []
        pos: 4
        length: 15
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: coins
          children: []
          pos: 20
          length: 5
        pos: 0
        length: 211
      body:
        type: block
        fields: {}
        children:
        - type: if_statement
          fields:
            condition:
              type: equals
              fields:
                left:
                  type: identifier
                  fields:
                    text: total
                  children: []
                  pos: 42
                  length: 5
                right:
                  type: integer
                  fields:
                    text: '0'
                  children: []
                  pos: 51
                  length: 1
              children: []
              pos: 42
              length: 10
          children:
          - type: block
            fields: {}
            children:
            - type: return_statement
              fields:
                text: return 1
              children: []
              pos: 62
              length: 8
            pos: 62
            length: 8
          pos: 39
          length: 31
        - type: if_statement
          fields:
            condition:
              type: less_than
              fields:
                left:
                  type: identifier
                  fields:
                    text: total
                  children: []
                  pos: 78
                  length: 5
                right:
                  type: integer
                  fields:
                    text: '0'
                  children: []
                  pos: 86
                  length: 1
              children: []
              pos: 78
              length: 9
          children:
          - type: block
            fields: {}
            children:
            - type: return_statement
              fields:
                text: return 0
              children: []
              pos: 97
              length: 8
            pos: 97
            length: 8
          pos: 75
          length: 30
        - type: expression_statement
          fields:
            text: first, *rest = coins
          children: []
          pos: 111
          length: 20
        - type: return_statement
          fields:
            text: return possible_change(coins, total - first) + possible_change(rest,
              total)
          children: []
          pos: 136
          length: 75
        pos: 39
        length: 172
    children: []
    pos: 0
    length: 211
  pos: 0
  length: 212
after_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: possible_change
        children: []
        pos: 4
        length: 15
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: coins
          children: []
          pos: 20
          length: 5
        pos: 0
        length: 224
      body:
        type: block
        fields: {}
        children:
        - type: if_statement
          fields:
            condition:
              type: equals
              fields:
                left:
                  type: identifier
                  fields:
                    text: total
                  children: []
                  pos: 42
                  length: 5
                right:
                  type: integer
                  fields:
                    text: '0'
                  children: []
                  pos: 51
                  length: 1
              children: []
              pos: 42
              length: 10
          children:
          - type: block
            fields: {}
            children:
            - type: return_statement
              fields:
                text: return 1
              children: []
              pos: 62
              length: 8
            pos: 62
            length: 8
          pos: 39
          length: 31
        - type: if_statement
          fields:
            condition:
              type: or
              fields:
                left:
                  type: less_than
                  fields:
                    left:
                      type: identifier
                      fields:
                        text: total
                      children: []
                      pos: 78
                      length: 5
                    right:
                      type: integer
                      fields:
                        text: '0'
                      children: []
                      pos: 86
                      length: 1
                  children: []
                  pos: 78
                  length: 9
                right:
                  type: not
                  fields:
                    argument:
                      type: identifier
                      fields:
                        text: coins
                      children: []
                      pos: 95
                      length: 5
                  children: []
                  pos: 91
                  length: 9
              children: []
              pos: 78
              length: 22
          children:
          - type: block
            fields: {}
            children:
            - type: return_statement
              fields:
                text: return 0
              children: []
              pos: 110
              length: 8
            pos: 110
            length: 8
          pos: 75
          length: 43
        - type: expression_statement
          fields:
            text: first, *rest = coins
          children: []
          pos: 124
          length: 20
        - type: return_statement
          fields:
            text: return possible_change(coins, total - first) + possible_change(rest,
              total)
          children: []
          pos: 149
          length: 75
        pos: 39
        length: 185
    children: []
    pos: 0
    length: 224
  pos: 0
  length: 225
text_diff: "--- before\n+++ after\n@@ -1,7 +1,7 @@\n def possible_change(coins, total):\n
  \    if total == 0:\n         return 1\n-    if total < 0:\n+    if total < 0 or
  not coins:\n         return 0\n \n     first, *rest = coins\n"
tree_diff: |+
  New cluster:
  ===
  insert-node
  ---
  or [78,100]
  to
  if_statement [75,105]
  at 0
  ------------
  ===
  insert-node
  ---
  or [78,100]
  to
  if_statement [75,105]
  at 0

  New cluster:
  MOVE from or [78,100]
  ------------
  ===
  move-tree
  ---
  less_than [78,87]
      identifier: total [78,83]
      integer: 0 [86,87]
  to
  or [78,100]
  at 0

  New cluster:
  Unknown cluster type
  ------------
  ===
  insert-tree
  ---
  not [91,100]
      identifier: coins [95,100]
  to
  or [78,100]
  at 1

...
