---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: SimplexTableau
        children: []
        pos: 2404
        length: 14
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private static final String NEGATIVE_VAR_COLUMN_LABEL = "x-";
          children: []
          pos: 2493
          length: 61
        - type: field_declaration
          fields:
            text: private static final int DEFAULT_ULPS = 10;
          children: []
          pos: 2646
          length: 43
        - type: field_declaration
          fields:
            text: private static final long serialVersionUID = -1369660067587938365L;
          children: []
          pos: 2739
          length: 67
        - type: field_declaration
          fields:
            text: private final LinearObjectiveFunction f;
          children: []
          pos: 2850
          length: 40
        - type: field_declaration
          fields:
            text: private final List<LinearConstraint> constraints;
          children: []
          pos: 2927
          length: 49
        - type: field_declaration
          fields:
            text: private final boolean restrictToNonNegative;
          children: []
          pos: 3051
          length: 44
        - type: field_declaration
          fields:
            text: private final List<String> columnLabels = new ArrayList<String>();
          children: []
          pos: 3149
          length: 66
        - type: field_declaration
          fields:
            text: private transient RealMatrix tableau;
          children: []
          pos: 3248
          length: 37
        - type: field_declaration
          fields:
            text: private final int numDecisionVariables;
          children: []
          pos: 3332
          length: 39
        - type: field_declaration
          fields:
            text: private final int numSlackVariables;
          children: []
          pos: 3415
          length: 36
        - type: field_declaration
          fields:
            text: private int numArtificialVariables;
          children: []
          pos: 3500
          length: 35
        - type: field_declaration
          fields:
            text: private final double epsilon;
          children: []
          pos: 3608
          length: 29
        - type: field_declaration
          fields:
            text: private final int maxUlps;
          children: []
          pos: 3711
          length: 26
        - type: constructor_declaration
          fields:
            text: |-
              SimplexTableau(final LinearObjectiveFunction f,
                                 final Collection<LinearConstraint> constraints,
                                 final GoalType goalType, final boolean restrictToNonNegative,
                                 final double epsilon) {
                      this(f, constraints, goalType, restrictToNonNegative, epsilon, DEFAULT_ULPS);
                  }
          children: []
          pos: 4180
          length: 330
        - type: constructor_declaration
          fields:
            text: |-
              SimplexTableau(final LinearObjectiveFunction f,
                                 final Collection<LinearConstraint> constraints,
                                 final GoalType goalType, final boolean restrictToNonNegative,
                                 final double epsilon,
                                 final int maxUlps) {
                      this.f                      = f;
                      this.constraints            = normalizeConstraints(constraints);
                      this.restrictToNonNegative  = restrictToNonNegative;
                      this.epsilon                = epsilon;
                      this.maxUlps                = maxUlps;
                      this.numDecisionVariables   = f.getCoefficients().getDimension() +
                                                    (restrictToNonNegative ? 0 : 1);
                      this.numSlackVariables      = getConstraintTypeCounts(Relationship.LEQ) +
                                                    getConstraintTypeCounts(Relationship.GEQ);
                      this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ) +
                                                    getConstraintTypeCounts(Relationship.GEQ);
                      this.tableau = createTableau(goalType == GoalType.MAXIMIZE);
                      initializeColumnLabels();
                  }
          children: []
          pos: 5031
          length: 1125
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: initializeColumnLabels
              children: []
              pos: 6239
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6224
              length: 604
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: getNumObjectiveFunctions()
                            children: []
                            pos: 6276
                            length: 26
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '2'
                            children: []
                            pos: 6306
                            length: 1
                        children: []
                        pos: 6276
                        length: 31
                    children: []
                    pos: 6275
                    length: 33
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: columnLabels.add("W");
                    children: []
                    pos: 6319
                    length: 22
                  pos: 6309
                  length: 40
                pos: 6272
                length: 77
              - type: expression_statement
                fields:
                  text: columnLabels.add("Z");
                children: []
                pos: 6356
                length: 22
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < getOriginalNumDecisionVariables(); i++) {
                            columnLabels.add("x" + i);
                          }
                children: []
                pos: 6385
                length: 104
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!restrictToNonNegative"
                        children: []
                        pos: 6500
                        length: 22
                    children: []
                    pos: 6499
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);
                    children: []
                    pos: 6534
                    length: 44
                  pos: 6524
                  length: 62
                pos: 6496
                length: 90
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < getNumSlackVariables(); i++) {
                            columnLabels.add("s" + i);
                          }
                children: []
                pos: 6593
                length: 93
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < getNumArtificialVariables(); i++) {
                            columnLabels.add("a" + i);
                          }
                children: []
                pos: 6693
                length: 98
              - type: expression_statement
                fields:
                  text: columnLabels.add("RHS");
                children: []
                pos: 6798
                length: 24
              pos: 6264
              length: 564
          children: []
          pos: 6224
          length: 604
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createTableau
              children: []
              pos: 7014
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final boolean maximize
                children: []
                pos: 7028
                length: 22
              pos: 6993
              length: 2771
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: |-
                    int width = numDecisionVariables + numSlackVariables +
                            numArtificialVariables + getNumObjectiveFunctions() + 1;
                children: []
                pos: 7110
                length: 119
              - type: local_variable_declaration
                fields:
                  text: int height = constraints.size() + getNumObjectiveFunctions();
                children: []
                pos: 7256
                length: 61
              - type: local_variable_declaration
                fields:
                  text: Array2DRowRealMatrix matrix = new Array2DRowRealMatrix(height,
                    width);
                children: []
                pos: 7326
                length: 70
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: getNumObjectiveFunctions()
                            children: []
                            pos: 7460
                            length: 26
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '2'
                            children: []
                            pos: 7490
                            length: 1
                        children: []
                        pos: 7460
                        length: 31
                    children: []
                    pos: 7459
                    length: 33
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: matrix.setEntry(0, 0, -1);
                    children: []
                    pos: 7507
                    length: 26
                  pos: 7493
                  length: 50
                pos: 7456
                length: 87
              - type: local_variable_declaration
                fields:
                  text: 'int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;'
                children: []
                pos: 7552
                length: 55
              - type: expression_statement
                fields:
                  text: 'matrix.setEntry(zIndex, zIndex, maximize ? 1 : -1);'
                children: []
                pos: 7616
                length: 51
              - type: local_variable_declaration
                fields:
                  text: |-
                    RealVector objectiveCoefficients =
                                maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
                children: []
                pos: 7676
                length: 116
              - type: expression_statement
                fields:
                  text: copyArray(objectiveCoefficients.toArray(), matrix.getDataRef()[zIndex]);
                children: []
                pos: 7801
                length: 72
              - type: expression_statement
                fields:
                  text: |-
                    matrix.setEntry(zIndex, width - 1,
                                maximize ? f.getConstantTerm() : -1 * f.getConstantTerm());
                children: []
                pos: 7882
                length: 106
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!restrictToNonNegative"
                        children: []
                        pos: 8002
                        length: 22
                    children: []
                    pos: 8001
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        matrix.setEntry(zIndex, getSlackVariableOffset() - 1,
                                        getInvertedCoefficientSum(objectiveCoefficients));
                    children: []
                    pos: 8040
                    length: 120
                  pos: 8026
                  length: 144
                pos: 7998
                length: 172
              - type: local_variable_declaration
                fields:
                  text: int slackVar = 0;
                children: []
                pos: 8222
                length: 17
              - type: local_variable_declaration
                fields:
                  text: int artificialVar = 0;
                children: []
                pos: 8248
                length: 22
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < constraints.size(); i++) {
                                LinearConstraint constraint = constraints.get(i);
                                int row = getNumObjectiveFunctions() + i;

                                // decision variable coefficients
                                copyArray(constraint.getCoefficients().toArray(), matrix.getDataRef()[row]);

                                // x-
                                if (!restrictToNonNegative) {
                                    matrix.setEntry(row, getSlackVariableOffset() - 1,
                                        getInvertedCoefficientSum(constraint.getCoefficients()));
                                }

                                // RHS
                                matrix.setEntry(row, width - 1, constraint.getValue());

                                // slack variables
                                if (constraint.getRelationship() == Relationship.LEQ) {
                                    matrix.setEntry(row, getSlackVariableOffset() + slackVar++, 1);  // slack
                                } else if (constraint.getRelationship() == Relationship.GEQ) {
                                    matrix.setEntry(row, getSlackVariableOffset() + slackVar++, -1); // excess
                                }

                                // artificial variables
                                if ((constraint.getRelationship() == Relationship.EQ) ||
                                        (constraint.getRelationship() == Relationship.GEQ)) {
                                    matrix.setEntry(0, getArtificialVariableOffset() + artificialVar, 1);
                                    matrix.setEntry(row, getArtificialVariableOffset() + artificialVar++, 1);
                                    matrix.setRowVector(0, matrix.getRowVector(0).subtract(matrix.getRowVector(row)));
                                }
                            }
                children: []
                pos: 8279
                length: 1455
              - type: return_statement
                fields:
                  text: return matrix;
                children: []
                pos: 9744
                length: 14
              pos: 7052
              length: 2712
          children: []
          pos: 6993
          length: 2771
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: normalizeConstraints
              children: []
              pos: 10016
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Collection<LinearConstraint> originalConstraints
                children: []
                pos: 10037
                length: 48
              pos: 9986
              length: 341
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: List<LinearConstraint> normalized = new ArrayList<LinearConstraint>();
                children: []
                pos: 10097
                length: 70
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (LinearConstraint constraint : originalConstraints) {
                                normalized.add(normalize(constraint));
                            }
                children: []
                pos: 10176
                length: 118
              - type: return_statement
                fields:
                  text: return normalized;
                children: []
                pos: 10303
                length: 18
              pos: 10087
              length: 240
          children: []
          pos: 9986
          length: 341
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: normalize
              children: []
              pos: 10530
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final LinearConstraint constraint
                children: []
                pos: 10540
                length: 33
              pos: 10505
              length: 532
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: constraint.getValue()
                            children: []
                            pos: 10589
                            length: 21
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 10613
                            length: 1
                        children: []
                        pos: 10589
                        length: 25
                    children: []
                    pos: 10588
                    length: 27
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: |-
                        return new LinearConstraint(constraint.getCoefficients().mapMultiply(-1),
                                                                constraint.getRelationship().oppositeRelationship(),
                                                                -1 * constraint.getValue());
                    children: []
                    pos: 10630
                    length: 235
                  pos: 10616
                  length: 259
                pos: 10585
                length: 290
              - type: return_statement
                fields:
                  text: |-
                    return new LinearConstraint(constraint.getCoefficients(),
                                                        constraint.getRelationship(), constraint.getValue());
                children: []
                pos: 10884
                length: 147
              pos: 10575
              length: 462
          children: []
          pos: 10505
          length: 532
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getNumObjectiveFunctions
              children: []
              pos: 11187
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 11167
              length: 110
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: 'return this.numArtificialVariables > 0 ? 2 : 1;'
                children: []
                pos: 11224
                length: 47
              pos: 11214
              length: 63
          children: []
          pos: 11167
          length: 110
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getConstraintTypeCounts
              children: []
              pos: 11505
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final Relationship relationship
                children: []
                pos: 11529
                length: 31
              pos: 11493
              length: 298
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int count = 0;
                children: []
                pos: 11572
                length: 14
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (final LinearConstraint constraint : constraints) {
                                if (constraint.getRelationship() == relationship) {
                                    ++count;
                                }
                            }
                children: []
                pos: 11595
                length: 168
              - type: return_statement
                fields:
                  text: return count;
                children: []
                pos: 11772
                length: 13
              pos: 11562
              length: 229
          children: []
          pos: 11493
          length: 298
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getInvertedCoefficientSum
              children: []
              pos: 12032
              length: 25
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final RealVector coefficients
                children: []
                pos: 12058
                length: 29
              pos: 12008
              length: 234
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: double sum = 0;
                children: []
                pos: 12099
                length: 15
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (double coefficient : coefficients.toArray()) {
                                sum -= coefficient;
                            }
                children: []
                pos: 12123
                length: 93
              - type: return_statement
                fields:
                  text: return sum;
                children: []
                pos: 12225
                length: 11
              pos: 12089
              length: 153
          children: []
          pos: 12008
          length: 234
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getBasicRow
              children: []
              pos: 12465
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final int col
                children: []
                pos: 12477
                length: 13
              pos: 12447
              length: 414
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Integer row = null;
                children: []
                pos: 12502
                length: 19
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < getHeight(); i++) {
                                final double entry = getEntry(i, col);
                                if (Precision.equals(entry, 1d, maxUlps) && (row == null)) {
                                    row = i;
                                } else if (!Precision.equals(entry, 0d, maxUlps)) {
                                    return null;
                                }
                            }
                children: []
                pos: 12530
                length: 305
              - type: return_statement
                fields:
                  text: return row;
                children: []
                pos: 12844
                length: 11
              pos: 12492
              length: 369
          children: []
          pos: 12447
          length: 414
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: dropPhase1Objective
              children: []
              pos: 13050
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 13035
              length: 1389
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: getNumObjectiveFunctions()
                            children: []
                            pos: 13086
                            length: 26
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '1'
                            children: []
                            pos: 13116
                            length: 1
                        children: []
                        pos: 13086
                        length: 31
                    children: []
                    pos: 13085
                    length: 33
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 13133
                    length: 7
                  pos: 13119
                  length: 31
                pos: 13082
                length: 68
              - type: local_variable_declaration
                fields:
                  text: List<Integer> columnsToDrop = new ArrayList<Integer>();
                children: []
                pos: 13160
                length: 55
              - type: expression_statement
                fields:
                  text: columnsToDrop.add(0);
                children: []
                pos: 13224
                length: 21
              - type: for_statement
                fields:
                  text: |-
                    for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
                                final double entry = tableau.getEntry(0, i);
                                if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
                                    columnsToDrop.add(i);
                                }
                            }
                children: []
                pos: 13305
                length: 264
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < getNumArtificialVariables(); i++) {
                              int col = i + getArtificialVariableOffset();
                              if (getBasicRow(col) == null) {
                                columnsToDrop.add(col);
                              }
                            }
                children: []
                pos: 13621
                length: 210
              - type: local_variable_declaration
                fields:
                  text: double[][] matrix = new double[getHeight() - 1][getWidth()
                    - columnsToDrop.size()];
                children: []
                pos: 13841
                length: 83
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 1; i < getHeight(); i++) {
                              int col = 0;
                              for (int j = 0; j < getWidth(); j++) {
                                if (!columnsToDrop.contains(j)) {
                                  matrix[i - 1][col++] = tableau.getEntry(i, j);
                                }
                              }
                            }
                children: []
                pos: 13933
                length: 254
              - type: for_statement
                fields:
                  text: |-
                    for (int i = columnsToDrop.size() - 1; i >= 0; i--) {
                              columnLabels.remove((int) columnsToDrop.get(i));
                            }
                children: []
                pos: 14197
                length: 122
              - type: expression_statement
                fields:
                  text: this.tableau = new Array2DRowRealMatrix(matrix);
                children: []
                pos: 14329
                length: 48
              - type: expression_statement
                fields:
                  text: this.numArtificialVariables = 0;
                children: []
                pos: 14386
                length: 32
              pos: 13072
              length: 1352
          children: []
          pos: 13035
          length: 1389
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: copyArray
              children: []
              pos: 14535
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final double[] src
                children: []
                pos: 14545
                length: 18
              pos: 14522
              length: 151
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: System.arraycopy(src, 0, dest, getNumObjectiveFunctions(),
                    src.length);
                children: []
                pos: 14596
                length: 71
              pos: 14586
              length: 87
          children: []
          pos: 14522
          length: 151
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isOptimal
              children: []
              pos: 14811
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 14803
              length: 298
            body:
              type: block
              fields: {}
              children:
              - type: for_statement
                fields:
                  text: |-
                    for (int i = getNumObjectiveFunctions(); i < getWidth() - 1; i++) {
                                final double entry = tableau.getEntry(0, i);
                                if (Precision.compareTo(entry, 0d, epsilon) < 0) {
                                    return false;
                                }
                            }
                children: []
                pos: 14833
                length: 241
              - type: return_statement
                fields:
                  text: return true;
                children: []
                pos: 15083
                length: 12
              pos: 14823
              length: 278
          children: []
          pos: 14803
          length: 298
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getSolution
              children: []
              pos: 15224
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 15195
              length: 1636
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int negativeVarColumn = columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);
                children: []
                pos: 15246
                length: 72
              - type: local_variable_declaration
                fields:
                  text: 'Integer negativeVarBasicRow = negativeVarColumn > 0 ? getBasicRow(negativeVarColumn)
                    : null;'
                children: []
                pos: 15325
                length: 92
              - type: local_variable_declaration
                fields:
                  text: 'double mostNegative = negativeVarBasicRow == null ? 0 : getEntry(negativeVarBasicRow,
                    getRhsOffset());'
                children: []
                pos: 15424
                length: 102
              - type: local_variable_declaration
                fields:
                  text: Set<Integer> basicRows = new HashSet<Integer>();
                children: []
                pos: 15534
                length: 48
              - type: local_variable_declaration
                fields:
                  text: double[] coefficients = new double[getOriginalNumDecisionVariables()];
                children: []
                pos: 15589
                length: 70
              - type: for_statement
                fields:
                  text: "for (int i = 0; i < coefficients.length; i++) {\n          int
                    colIndex = columnLabels.indexOf(\"x\" + i);\n          if (colIndex
                    < 0) {\n            coefficients[i] = 0;\n            continue;\n
                    \         }\n          Integer basicRow = getBasicRow(colIndex);\n
                    \         if (basicRow != null && basicRow == 0) {\n              //
                    if the basic row is found to be the objective function row\n              //
                    set the coefficient to 0 -> this case handles unconstrained \n
                    \             // variables that are still part of the objective
                    function\n              coefficients[i] = 0;\n          } else
                    if (basicRows.contains(basicRow)) {\n              // if multiple
                    variables can take a given value\n              // then we choose
                    the first and set the rest equal to 0\n              coefficients[i]
                    = 0 - (restrictToNonNegative ? 0 : mostNegative);\n          }
                    else {\n              basicRows.add(basicRow);\n              coefficients[i]
                    =\n                  (basicRow == null ? 0 : getEntry(basicRow,
                    getRhsOffset())) -\n                  (restrictToNonNegative ?
                    0 : mostNegative);\n          }\n      }"
                children: []
                pos: 15666
                length: 1082
              - type: return_statement
                fields:
                  text: return new RealPointValuePair(coefficients, f.getValue(coefficients));
                children: []
                pos: 16755
                length: 70
              pos: 15238
              length: 1593
          children: []
          pos: 15195
          length: 1636
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: divideRow
              children: []
              pos: 17159
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final int dividendRow
                children: []
                pos: 17169
                length: 21
              pos: 17144
              length: 224
            body:
              type: block
              fields: {}
              children:
              - type: for_statement
                fields:
                  text: |-
                    for (int j = 0; j < getWidth(); j++) {
                                tableau.setEntry(dividendRow, j, tableau.getEntry(dividendRow, j) / divisor);
                            }
                children: []
                pos: 17224
                length: 138
              pos: 17214
              length: 154
          children: []
          pos: 17144
          length: 224
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: subtractRow
              children: []
              pos: 17728
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final int minuendRow
                children: []
                pos: 17740
                length: 20
              pos: 17713
              length: 292
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    tableau.setRowVector(minuendRow, tableau.getRowVector(minuendRow)
                                .subtract(tableau.getRowVector(subtrahendRow).mapMultiply(multiple)));
                children: []
                pos: 17851
                length: 148
              pos: 17841
              length: 164
          children: []
          pos: 17713
          length: 292
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getWidth
              children: []
              pos: 18120
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 18100
              length: 83
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return tableau.getColumnDimension();
                children: []
                pos: 18141
                length: 36
              pos: 18131
              length: 52
          children: []
          pos: 18100
          length: 83
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getHeight
              children: []
              pos: 18300
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 18280
              length: 81
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return tableau.getRowDimension();
                children: []
                pos: 18322
                length: 33
              pos: 18312
              length: 49
          children: []
          pos: 18280
          length: 81
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getEntry
              children: []
              pos: 18535
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final int row
                children: []
                pos: 18544
                length: 13
              pos: 18512
              length: 118
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return tableau.getEntry(row, column);
                children: []
                pos: 18587
                length: 37
              pos: 18577
              length: 53
          children: []
          pos: 18512
          length: 118
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: setEntry
              children: []
              pos: 18798
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final int row
                children: []
                pos: 18807
                length: 13
              pos: 18777
              length: 170
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: tableau.setEntry(row, column, value);
                children: []
                pos: 18904
                length: 37
              pos: 18894
              length: 53
          children: []
          pos: 18777
          length: 170
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getSlackVariableOffset
              children: []
              pos: 19090
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 19070
              length: 118
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return getNumObjectiveFunctions() + numDecisionVariables;
                children: []
                pos: 19125
                length: 57
              pos: 19115
              length: 73
          children: []
          pos: 19070
          length: 118
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getArtificialVariableOffset
              children: []
              pos: 19341
              length: 27
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 19321
              length: 143
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return getNumObjectiveFunctions() + numDecisionVariables +
                    numSlackVariables;
                children: []
                pos: 19381
                length: 77
              pos: 19371
              length: 93
          children: []
          pos: 19321
          length: 143
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getRhsOffset
              children: []
              pos: 19597
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 19577
              length: 73
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return getWidth() - 1;
                children: []
                pos: 19622
                length: 22
              pos: 19612
              length: 38
          children: []
          pos: 19577
          length: 73
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getNumDecisionVariables
              children: []
              pos: 20031
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 20011
              length: 90
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return numDecisionVariables;
                children: []
                pos: 20067
                length: 28
              pos: 20057
              length: 44
          children: []
          pos: 20011
          length: 90
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getOriginalNumDecisionVariables
              children: []
              pos: 20289
              length: 31
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 20269
              length: 112
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return f.getCoefficients().getDimension();
                children: []
                pos: 20333
                length: 42
              pos: 20323
              length: 58
          children: []
          pos: 20269
          length: 112
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getNumSlackVariables
              children: []
              pos: 20506
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 20486
              length: 84
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return numSlackVariables;
                children: []
                pos: 20539
                length: 25
              pos: 20529
              length: 41
          children: []
          pos: 20486
          length: 84
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getNumArtificialVariables
              children: []
              pos: 20705
              length: 25
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 20685
              length: 94
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return numArtificialVariables;
                children: []
                pos: 20743
                length: 30
              pos: 20733
              length: 46
          children: []
          pos: 20685
          length: 94
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getData
              children: []
              pos: 20885
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 20858
              length: 78
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return tableau.getData();
                children: []
                pos: 20905
                length: 25
              pos: 20895
              length: 41
          children: []
          pos: 20858
          length: 78
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: equals
              children: []
              pos: 20996
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Object other
                children: []
                pos: 21003
                length: 12
              pos: 20967
              length: 793
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: this
                            fields: {}
                            children: []
                            pos: 21030
                            length: 4
                          right:
                            type: identifier
                            fields:
                              text: other
                            children: []
                            pos: 21038
                            length: 5
                        children: []
                        pos: 21030
                        length: 13
                    children: []
                    pos: 21029
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return true;
                    children: []
                    pos: 21055
                    length: 12
                  pos: 21045
                  length: 30
                pos: 21026
                length: 49
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: other instanceof SimplexTableau
                        children: []
                        pos: 21087
                        length: 31
                    children: []
                    pos: 21086
                    length: 33
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: SimplexTableau rhs = (SimplexTableau) other;
                    children: []
                    pos: 21132
                    length: 44
                  - type: return_statement
                    fields:
                      text: |-
                        return (restrictToNonNegative  == rhs.restrictToNonNegative) &&
                                         (numDecisionVariables   == rhs.numDecisionVariables) &&
                                         (numSlackVariables      == rhs.numSlackVariables) &&
                                         (numArtificialVariables == rhs.numArtificialVariables) &&
                                         (epsilon                == rhs.epsilon) &&
                                         (maxUlps                == rhs.maxUlps) &&
                                         f.equals(rhs.f) &&
                                         constraints.equals(rhs.constraints) &&
                                         tableau.equals(rhs.tableau);
                    children: []
                    pos: 21187
                    length: 539
                  pos: 21120
                  length: 614
                pos: 21083
                length: 651
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 21741
                length: 13
              pos: 21017
              length: 743
          children: []
          pos: 20967
          length: 793
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: hashCode
              children: []
              pos: 21816
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 21791
              length: 405
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return Boolean.valueOf(restrictToNonNegative).hashCode() ^
                                   numDecisionVariables ^
                                   numSlackVariables ^
                                   numArtificialVariables ^
                                   Double.valueOf(epsilon).hashCode() ^
                                   maxUlps ^
                                   f.hashCode() ^
                                   constraints.hashCode() ^
                                   tableau.hashCode();
                children: []
                pos: 21837
                length: 353
              pos: 21827
              length: 369
          children: []
          pos: 21791
          length: 405
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: writeObject
              children: []
              pos: 22376
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: ObjectOutputStream oos
                children: []
                pos: 22388
                length: 22
              pos: 22363
              length: 172
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: oos.defaultWriteObject();
                children: []
                pos: 22449
                length: 25
              - type: expression_statement
                fields:
                  text: MatrixUtils.serializeRealMatrix(tableau, oos);
                children: []
                pos: 22483
                length: 46
              pos: 22439
              length: 96
          children: []
          pos: 22363
          length: 172
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: readObject
              children: []
              pos: 22805
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: ObjectInputStream ois
                children: []
                pos: 22816
                length: 21
              pos: 22792
              length: 201
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: ois.defaultReadObject();
                children: []
                pos: 22898
                length: 24
              - type: expression_statement
                fields:
                  text: MatrixUtils.deserializeRealMatrix(this, "tableau", ois);
                children: []
                pos: 22931
                length: 56
              pos: 22888
              length: 105
          children: []
          pos: 22792
          length: 201
        pos: 2398
        length: 20597
    children: []
    pos: 2398
    length: 20597
  pos: 0
  length: 22996
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: SimplexTableau
        children: []
        pos: 2404
        length: 14
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private static final String NEGATIVE_VAR_COLUMN_LABEL = "x-";
          children: []
          pos: 2493
          length: 61
        - type: field_declaration
          fields:
            text: private static final int DEFAULT_ULPS = 10;
          children: []
          pos: 2646
          length: 43
        - type: field_declaration
          fields:
            text: private static final long serialVersionUID = -1369660067587938365L;
          children: []
          pos: 2739
          length: 67
        - type: field_declaration
          fields:
            text: private final LinearObjectiveFunction f;
          children: []
          pos: 2850
          length: 40
        - type: field_declaration
          fields:
            text: private final List<LinearConstraint> constraints;
          children: []
          pos: 2927
          length: 49
        - type: field_declaration
          fields:
            text: private final boolean restrictToNonNegative;
          children: []
          pos: 3051
          length: 44
        - type: field_declaration
          fields:
            text: private final List<String> columnLabels = new ArrayList<String>();
          children: []
          pos: 3149
          length: 66
        - type: field_declaration
          fields:
            text: private transient RealMatrix tableau;
          children: []
          pos: 3248
          length: 37
        - type: field_declaration
          fields:
            text: private final int numDecisionVariables;
          children: []
          pos: 3332
          length: 39
        - type: field_declaration
          fields:
            text: private final int numSlackVariables;
          children: []
          pos: 3415
          length: 36
        - type: field_declaration
          fields:
            text: private int numArtificialVariables;
          children: []
          pos: 3500
          length: 35
        - type: field_declaration
          fields:
            text: private final double epsilon;
          children: []
          pos: 3608
          length: 29
        - type: field_declaration
          fields:
            text: private final int maxUlps;
          children: []
          pos: 3711
          length: 26
        - type: constructor_declaration
          fields:
            text: |-
              SimplexTableau(final LinearObjectiveFunction f,
                                 final Collection<LinearConstraint> constraints,
                                 final GoalType goalType, final boolean restrictToNonNegative,
                                 final double epsilon) {
                      this(f, constraints, goalType, restrictToNonNegative, epsilon, DEFAULT_ULPS);
                  }
          children: []
          pos: 4180
          length: 330
        - type: constructor_declaration
          fields:
            text: |-
              SimplexTableau(final LinearObjectiveFunction f,
                                 final Collection<LinearConstraint> constraints,
                                 final GoalType goalType, final boolean restrictToNonNegative,
                                 final double epsilon,
                                 final int maxUlps) {
                      this.f                      = f;
                      this.constraints            = normalizeConstraints(constraints);
                      this.restrictToNonNegative  = restrictToNonNegative;
                      this.epsilon                = epsilon;
                      this.maxUlps                = maxUlps;
                      this.numDecisionVariables   = f.getCoefficients().getDimension() +
                                                    (restrictToNonNegative ? 0 : 1);
                      this.numSlackVariables      = getConstraintTypeCounts(Relationship.LEQ) +
                                                    getConstraintTypeCounts(Relationship.GEQ);
                      this.numArtificialVariables = getConstraintTypeCounts(Relationship.EQ) +
                                                    getConstraintTypeCounts(Relationship.GEQ);
                      this.tableau = createTableau(goalType == GoalType.MAXIMIZE);
                      initializeColumnLabels();
                  }
          children: []
          pos: 5031
          length: 1125
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: initializeColumnLabels
              children: []
              pos: 6239
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6224
              length: 604
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: getNumObjectiveFunctions()
                            children: []
                            pos: 6276
                            length: 26
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '2'
                            children: []
                            pos: 6306
                            length: 1
                        children: []
                        pos: 6276
                        length: 31
                    children: []
                    pos: 6275
                    length: 33
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: columnLabels.add("W");
                    children: []
                    pos: 6319
                    length: 22
                  pos: 6309
                  length: 40
                pos: 6272
                length: 77
              - type: expression_statement
                fields:
                  text: columnLabels.add("Z");
                children: []
                pos: 6356
                length: 22
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < getOriginalNumDecisionVariables(); i++) {
                            columnLabels.add("x" + i);
                          }
                children: []
                pos: 6385
                length: 104
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!restrictToNonNegative"
                        children: []
                        pos: 6500
                        length: 22
                    children: []
                    pos: 6499
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);
                    children: []
                    pos: 6534
                    length: 44
                  pos: 6524
                  length: 62
                pos: 6496
                length: 90
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < getNumSlackVariables(); i++) {
                            columnLabels.add("s" + i);
                          }
                children: []
                pos: 6593
                length: 93
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < getNumArtificialVariables(); i++) {
                            columnLabels.add("a" + i);
                          }
                children: []
                pos: 6693
                length: 98
              - type: expression_statement
                fields:
                  text: columnLabels.add("RHS");
                children: []
                pos: 6798
                length: 24
              pos: 6264
              length: 564
          children: []
          pos: 6224
          length: 604
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createTableau
              children: []
              pos: 7014
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final boolean maximize
                children: []
                pos: 7028
                length: 22
              pos: 6993
              length: 2771
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: |-
                    int width = numDecisionVariables + numSlackVariables +
                            numArtificialVariables + getNumObjectiveFunctions() + 1;
                children: []
                pos: 7110
                length: 119
              - type: local_variable_declaration
                fields:
                  text: int height = constraints.size() + getNumObjectiveFunctions();
                children: []
                pos: 7256
                length: 61
              - type: local_variable_declaration
                fields:
                  text: Array2DRowRealMatrix matrix = new Array2DRowRealMatrix(height,
                    width);
                children: []
                pos: 7326
                length: 70
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: getNumObjectiveFunctions()
                            children: []
                            pos: 7460
                            length: 26
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '2'
                            children: []
                            pos: 7490
                            length: 1
                        children: []
                        pos: 7460
                        length: 31
                    children: []
                    pos: 7459
                    length: 33
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: matrix.setEntry(0, 0, -1);
                    children: []
                    pos: 7507
                    length: 26
                  pos: 7493
                  length: 50
                pos: 7456
                length: 87
              - type: local_variable_declaration
                fields:
                  text: 'int zIndex = (getNumObjectiveFunctions() == 1) ? 0 : 1;'
                children: []
                pos: 7552
                length: 55
              - type: expression_statement
                fields:
                  text: 'matrix.setEntry(zIndex, zIndex, maximize ? 1 : -1);'
                children: []
                pos: 7616
                length: 51
              - type: local_variable_declaration
                fields:
                  text: |-
                    RealVector objectiveCoefficients =
                                maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
                children: []
                pos: 7676
                length: 116
              - type: expression_statement
                fields:
                  text: copyArray(objectiveCoefficients.toArray(), matrix.getDataRef()[zIndex]);
                children: []
                pos: 7801
                length: 72
              - type: expression_statement
                fields:
                  text: |-
                    matrix.setEntry(zIndex, width - 1,
                                maximize ? f.getConstantTerm() : -1 * f.getConstantTerm());
                children: []
                pos: 7882
                length: 106
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!restrictToNonNegative"
                        children: []
                        pos: 8002
                        length: 22
                    children: []
                    pos: 8001
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        matrix.setEntry(zIndex, getSlackVariableOffset() - 1,
                                        getInvertedCoefficientSum(objectiveCoefficients));
                    children: []
                    pos: 8040
                    length: 120
                  pos: 8026
                  length: 144
                pos: 7998
                length: 172
              - type: local_variable_declaration
                fields:
                  text: int slackVar = 0;
                children: []
                pos: 8222
                length: 17
              - type: local_variable_declaration
                fields:
                  text: int artificialVar = 0;
                children: []
                pos: 8248
                length: 22
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < constraints.size(); i++) {
                                LinearConstraint constraint = constraints.get(i);
                                int row = getNumObjectiveFunctions() + i;

                                // decision variable coefficients
                                copyArray(constraint.getCoefficients().toArray(), matrix.getDataRef()[row]);

                                // x-
                                if (!restrictToNonNegative) {
                                    matrix.setEntry(row, getSlackVariableOffset() - 1,
                                        getInvertedCoefficientSum(constraint.getCoefficients()));
                                }

                                // RHS
                                matrix.setEntry(row, width - 1, constraint.getValue());

                                // slack variables
                                if (constraint.getRelationship() == Relationship.LEQ) {
                                    matrix.setEntry(row, getSlackVariableOffset() + slackVar++, 1);  // slack
                                } else if (constraint.getRelationship() == Relationship.GEQ) {
                                    matrix.setEntry(row, getSlackVariableOffset() + slackVar++, -1); // excess
                                }

                                // artificial variables
                                if ((constraint.getRelationship() == Relationship.EQ) ||
                                        (constraint.getRelationship() == Relationship.GEQ)) {
                                    matrix.setEntry(0, getArtificialVariableOffset() + artificialVar, 1);
                                    matrix.setEntry(row, getArtificialVariableOffset() + artificialVar++, 1);
                                    matrix.setRowVector(0, matrix.getRowVector(0).subtract(matrix.getRowVector(row)));
                                }
                            }
                children: []
                pos: 8279
                length: 1455
              - type: return_statement
                fields:
                  text: return matrix;
                children: []
                pos: 9744
                length: 14
              pos: 7052
              length: 2712
          children: []
          pos: 6993
          length: 2771
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: normalizeConstraints
              children: []
              pos: 10016
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Collection<LinearConstraint> originalConstraints
                children: []
                pos: 10037
                length: 48
              pos: 9986
              length: 341
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: List<LinearConstraint> normalized = new ArrayList<LinearConstraint>();
                children: []
                pos: 10097
                length: 70
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (LinearConstraint constraint : originalConstraints) {
                                normalized.add(normalize(constraint));
                            }
                children: []
                pos: 10176
                length: 118
              - type: return_statement
                fields:
                  text: return normalized;
                children: []
                pos: 10303
                length: 18
              pos: 10087
              length: 240
          children: []
          pos: 9986
          length: 341
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: normalize
              children: []
              pos: 10530
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final LinearConstraint constraint
                children: []
                pos: 10540
                length: 33
              pos: 10505
              length: 532
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: constraint.getValue()
                            children: []
                            pos: 10589
                            length: 21
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 10613
                            length: 1
                        children: []
                        pos: 10589
                        length: 25
                    children: []
                    pos: 10588
                    length: 27
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: |-
                        return new LinearConstraint(constraint.getCoefficients().mapMultiply(-1),
                                                                constraint.getRelationship().oppositeRelationship(),
                                                                -1 * constraint.getValue());
                    children: []
                    pos: 10630
                    length: 235
                  pos: 10616
                  length: 259
                pos: 10585
                length: 290
              - type: return_statement
                fields:
                  text: |-
                    return new LinearConstraint(constraint.getCoefficients(),
                                                        constraint.getRelationship(), constraint.getValue());
                children: []
                pos: 10884
                length: 147
              pos: 10575
              length: 462
          children: []
          pos: 10505
          length: 532
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getNumObjectiveFunctions
              children: []
              pos: 11187
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 11167
              length: 110
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: 'return this.numArtificialVariables > 0 ? 2 : 1;'
                children: []
                pos: 11224
                length: 47
              pos: 11214
              length: 63
          children: []
          pos: 11167
          length: 110
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getConstraintTypeCounts
              children: []
              pos: 11505
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final Relationship relationship
                children: []
                pos: 11529
                length: 31
              pos: 11493
              length: 298
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int count = 0;
                children: []
                pos: 11572
                length: 14
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (final LinearConstraint constraint : constraints) {
                                if (constraint.getRelationship() == relationship) {
                                    ++count;
                                }
                            }
                children: []
                pos: 11595
                length: 168
              - type: return_statement
                fields:
                  text: return count;
                children: []
                pos: 11772
                length: 13
              pos: 11562
              length: 229
          children: []
          pos: 11493
          length: 298
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getInvertedCoefficientSum
              children: []
              pos: 12032
              length: 25
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final RealVector coefficients
                children: []
                pos: 12058
                length: 29
              pos: 12008
              length: 234
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: double sum = 0;
                children: []
                pos: 12099
                length: 15
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (double coefficient : coefficients.toArray()) {
                                sum -= coefficient;
                            }
                children: []
                pos: 12123
                length: 93
              - type: return_statement
                fields:
                  text: return sum;
                children: []
                pos: 12225
                length: 11
              pos: 12089
              length: 153
          children: []
          pos: 12008
          length: 234
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getBasicRow
              children: []
              pos: 12465
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final int col
                children: []
                pos: 12477
                length: 13
              pos: 12447
              length: 414
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Integer row = null;
                children: []
                pos: 12502
                length: 19
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < getHeight(); i++) {
                                final double entry = getEntry(i, col);
                                if (Precision.equals(entry, 1d, maxUlps) && (row == null)) {
                                    row = i;
                                } else if (!Precision.equals(entry, 0d, maxUlps)) {
                                    return null;
                                }
                            }
                children: []
                pos: 12530
                length: 305
              - type: return_statement
                fields:
                  text: return row;
                children: []
                pos: 12844
                length: 11
              pos: 12492
              length: 369
          children: []
          pos: 12447
          length: 414
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: dropPhase1Objective
              children: []
              pos: 13050
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 13035
              length: 1389
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: getNumObjectiveFunctions()
                            children: []
                            pos: 13086
                            length: 26
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '1'
                            children: []
                            pos: 13116
                            length: 1
                        children: []
                        pos: 13086
                        length: 31
                    children: []
                    pos: 13085
                    length: 33
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 13133
                    length: 7
                  pos: 13119
                  length: 31
                pos: 13082
                length: 68
              - type: local_variable_declaration
                fields:
                  text: List<Integer> columnsToDrop = new ArrayList<Integer>();
                children: []
                pos: 13160
                length: 55
              - type: expression_statement
                fields:
                  text: columnsToDrop.add(0);
                children: []
                pos: 13224
                length: 21
              - type: for_statement
                fields:
                  text: |-
                    for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
                                final double entry = tableau.getEntry(0, i);
                                if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
                                    columnsToDrop.add(i);
                                }
                            }
                children: []
                pos: 13305
                length: 264
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < getNumArtificialVariables(); i++) {
                              int col = i + getArtificialVariableOffset();
                              if (getBasicRow(col) == null) {
                                columnsToDrop.add(col);
                              }
                            }
                children: []
                pos: 13621
                length: 210
              - type: local_variable_declaration
                fields:
                  text: double[][] matrix = new double[getHeight() - 1][getWidth()
                    - columnsToDrop.size()];
                children: []
                pos: 13841
                length: 83
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 1; i < getHeight(); i++) {
                              int col = 0;
                              for (int j = 0; j < getWidth(); j++) {
                                if (!columnsToDrop.contains(j)) {
                                  matrix[i - 1][col++] = tableau.getEntry(i, j);
                                }
                              }
                            }
                children: []
                pos: 13933
                length: 254
              - type: for_statement
                fields:
                  text: |-
                    for (int i = columnsToDrop.size() - 1; i >= 0; i--) {
                              columnLabels.remove((int) columnsToDrop.get(i));
                            }
                children: []
                pos: 14197
                length: 122
              - type: expression_statement
                fields:
                  text: this.tableau = new Array2DRowRealMatrix(matrix);
                children: []
                pos: 14329
                length: 48
              - type: expression_statement
                fields:
                  text: this.numArtificialVariables = 0;
                children: []
                pos: 14386
                length: 32
              pos: 13072
              length: 1352
          children: []
          pos: 13035
          length: 1389
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: copyArray
              children: []
              pos: 14535
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final double[] src
                children: []
                pos: 14545
                length: 18
              pos: 14522
              length: 151
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: System.arraycopy(src, 0, dest, getNumObjectiveFunctions(),
                    src.length);
                children: []
                pos: 14596
                length: 71
              pos: 14586
              length: 87
          children: []
          pos: 14522
          length: 151
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isOptimal
              children: []
              pos: 14811
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 14803
              length: 298
            body:
              type: block
              fields: {}
              children:
              - type: for_statement
                fields:
                  text: |-
                    for (int i = getNumObjectiveFunctions(); i < getWidth() - 1; i++) {
                                final double entry = tableau.getEntry(0, i);
                                if (Precision.compareTo(entry, 0d, epsilon) < 0) {
                                    return false;
                                }
                            }
                children: []
                pos: 14833
                length: 241
              - type: return_statement
                fields:
                  text: return true;
                children: []
                pos: 15083
                length: 12
              pos: 14823
              length: 278
          children: []
          pos: 14803
          length: 298
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getSolution
              children: []
              pos: 15224
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 15195
              length: 1543
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int negativeVarColumn = columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);
                children: []
                pos: 15246
                length: 72
              - type: local_variable_declaration
                fields:
                  text: 'Integer negativeVarBasicRow = negativeVarColumn > 0 ? getBasicRow(negativeVarColumn)
                    : null;'
                children: []
                pos: 15325
                length: 92
              - type: local_variable_declaration
                fields:
                  text: 'double mostNegative = negativeVarBasicRow == null ? 0 : getEntry(negativeVarBasicRow,
                    getRhsOffset());'
                children: []
                pos: 15424
                length: 102
              - type: local_variable_declaration
                fields:
                  text: Set<Integer> basicRows = new HashSet<Integer>();
                children: []
                pos: 15534
                length: 48
              - type: local_variable_declaration
                fields:
                  text: double[] coefficients = new double[getOriginalNumDecisionVariables()];
                children: []
                pos: 15589
                length: 70
              - type: for_statement
                fields:
                  text: "for (int i = 0; i < coefficients.length; i++) {\n          int
                    colIndex = columnLabels.indexOf(\"x\" + i);\n          if (colIndex
                    < 0) {\n            coefficients[i] = 0;\n            continue;\n
                    \         }\n          Integer basicRow = getBasicRow(colIndex);\n
                    \             // if the basic row is found to be the objective
                    function row\n              // set the coefficient to 0 -> this
                    case handles unconstrained \n              // variables that are
                    still part of the objective function\n          if (basicRows.contains(basicRow))
                    {\n              // if multiple variables can take a given value\n
                    \             // then we choose the first and set the rest equal
                    to 0\n              coefficients[i] = 0 - (restrictToNonNegative
                    ? 0 : mostNegative);\n          } else {\n              basicRows.add(basicRow);\n
                    \             coefficients[i] =\n                  (basicRow ==
                    null ? 0 : getEntry(basicRow, getRhsOffset())) -\n                  (restrictToNonNegative
                    ? 0 : mostNegative);\n          }\n      }"
                children: []
                pos: 15666
                length: 989
              - type: return_statement
                fields:
                  text: return new RealPointValuePair(coefficients, f.getValue(coefficients));
                children: []
                pos: 16662
                length: 70
              pos: 15238
              length: 1500
          children: []
          pos: 15195
          length: 1543
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: divideRow
              children: []
              pos: 17066
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final int dividendRow
                children: []
                pos: 17076
                length: 21
              pos: 17051
              length: 224
            body:
              type: block
              fields: {}
              children:
              - type: for_statement
                fields:
                  text: |-
                    for (int j = 0; j < getWidth(); j++) {
                                tableau.setEntry(dividendRow, j, tableau.getEntry(dividendRow, j) / divisor);
                            }
                children: []
                pos: 17131
                length: 138
              pos: 17121
              length: 154
          children: []
          pos: 17051
          length: 224
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: subtractRow
              children: []
              pos: 17635
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final int minuendRow
                children: []
                pos: 17647
                length: 20
              pos: 17620
              length: 292
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    tableau.setRowVector(minuendRow, tableau.getRowVector(minuendRow)
                                .subtract(tableau.getRowVector(subtrahendRow).mapMultiply(multiple)));
                children: []
                pos: 17758
                length: 148
              pos: 17748
              length: 164
          children: []
          pos: 17620
          length: 292
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getWidth
              children: []
              pos: 18027
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 18007
              length: 83
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return tableau.getColumnDimension();
                children: []
                pos: 18048
                length: 36
              pos: 18038
              length: 52
          children: []
          pos: 18007
          length: 83
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getHeight
              children: []
              pos: 18207
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 18187
              length: 81
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return tableau.getRowDimension();
                children: []
                pos: 18229
                length: 33
              pos: 18219
              length: 49
          children: []
          pos: 18187
          length: 81
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getEntry
              children: []
              pos: 18442
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final int row
                children: []
                pos: 18451
                length: 13
              pos: 18419
              length: 118
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return tableau.getEntry(row, column);
                children: []
                pos: 18494
                length: 37
              pos: 18484
              length: 53
          children: []
          pos: 18419
          length: 118
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: setEntry
              children: []
              pos: 18705
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final int row
                children: []
                pos: 18714
                length: 13
              pos: 18684
              length: 170
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: tableau.setEntry(row, column, value);
                children: []
                pos: 18811
                length: 37
              pos: 18801
              length: 53
          children: []
          pos: 18684
          length: 170
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getSlackVariableOffset
              children: []
              pos: 18997
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 18977
              length: 118
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return getNumObjectiveFunctions() + numDecisionVariables;
                children: []
                pos: 19032
                length: 57
              pos: 19022
              length: 73
          children: []
          pos: 18977
          length: 118
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getArtificialVariableOffset
              children: []
              pos: 19248
              length: 27
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 19228
              length: 143
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return getNumObjectiveFunctions() + numDecisionVariables +
                    numSlackVariables;
                children: []
                pos: 19288
                length: 77
              pos: 19278
              length: 93
          children: []
          pos: 19228
          length: 143
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getRhsOffset
              children: []
              pos: 19504
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 19484
              length: 73
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return getWidth() - 1;
                children: []
                pos: 19529
                length: 22
              pos: 19519
              length: 38
          children: []
          pos: 19484
          length: 73
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getNumDecisionVariables
              children: []
              pos: 19938
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 19918
              length: 90
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return numDecisionVariables;
                children: []
                pos: 19974
                length: 28
              pos: 19964
              length: 44
          children: []
          pos: 19918
          length: 90
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getOriginalNumDecisionVariables
              children: []
              pos: 20196
              length: 31
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 20176
              length: 112
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return f.getCoefficients().getDimension();
                children: []
                pos: 20240
                length: 42
              pos: 20230
              length: 58
          children: []
          pos: 20176
          length: 112
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getNumSlackVariables
              children: []
              pos: 20413
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 20393
              length: 84
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return numSlackVariables;
                children: []
                pos: 20446
                length: 25
              pos: 20436
              length: 41
          children: []
          pos: 20393
          length: 84
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getNumArtificialVariables
              children: []
              pos: 20612
              length: 25
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 20592
              length: 94
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return numArtificialVariables;
                children: []
                pos: 20650
                length: 30
              pos: 20640
              length: 46
          children: []
          pos: 20592
          length: 94
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getData
              children: []
              pos: 20792
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 20765
              length: 78
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return tableau.getData();
                children: []
                pos: 20812
                length: 25
              pos: 20802
              length: 41
          children: []
          pos: 20765
          length: 78
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: equals
              children: []
              pos: 20903
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Object other
                children: []
                pos: 20910
                length: 12
              pos: 20874
              length: 793
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: this
                            fields: {}
                            children: []
                            pos: 20937
                            length: 4
                          right:
                            type: identifier
                            fields:
                              text: other
                            children: []
                            pos: 20945
                            length: 5
                        children: []
                        pos: 20937
                        length: 13
                    children: []
                    pos: 20936
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return true;
                    children: []
                    pos: 20962
                    length: 12
                  pos: 20952
                  length: 30
                pos: 20933
                length: 49
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: other instanceof SimplexTableau
                        children: []
                        pos: 20994
                        length: 31
                    children: []
                    pos: 20993
                    length: 33
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: SimplexTableau rhs = (SimplexTableau) other;
                    children: []
                    pos: 21039
                    length: 44
                  - type: return_statement
                    fields:
                      text: |-
                        return (restrictToNonNegative  == rhs.restrictToNonNegative) &&
                                         (numDecisionVariables   == rhs.numDecisionVariables) &&
                                         (numSlackVariables      == rhs.numSlackVariables) &&
                                         (numArtificialVariables == rhs.numArtificialVariables) &&
                                         (epsilon                == rhs.epsilon) &&
                                         (maxUlps                == rhs.maxUlps) &&
                                         f.equals(rhs.f) &&
                                         constraints.equals(rhs.constraints) &&
                                         tableau.equals(rhs.tableau);
                    children: []
                    pos: 21094
                    length: 539
                  pos: 21027
                  length: 614
                pos: 20990
                length: 651
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 21648
                length: 13
              pos: 20924
              length: 743
          children: []
          pos: 20874
          length: 793
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: hashCode
              children: []
              pos: 21723
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 21698
              length: 405
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return Boolean.valueOf(restrictToNonNegative).hashCode() ^
                                   numDecisionVariables ^
                                   numSlackVariables ^
                                   numArtificialVariables ^
                                   Double.valueOf(epsilon).hashCode() ^
                                   maxUlps ^
                                   f.hashCode() ^
                                   constraints.hashCode() ^
                                   tableau.hashCode();
                children: []
                pos: 21744
                length: 353
              pos: 21734
              length: 369
          children: []
          pos: 21698
          length: 405
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: writeObject
              children: []
              pos: 22283
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: ObjectOutputStream oos
                children: []
                pos: 22295
                length: 22
              pos: 22270
              length: 172
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: oos.defaultWriteObject();
                children: []
                pos: 22356
                length: 25
              - type: expression_statement
                fields:
                  text: MatrixUtils.serializeRealMatrix(tableau, oos);
                children: []
                pos: 22390
                length: 46
              pos: 22346
              length: 96
          children: []
          pos: 22270
          length: 172
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: readObject
              children: []
              pos: 22712
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: ObjectInputStream ois
                children: []
                pos: 22723
                length: 21
              pos: 22699
              length: 201
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: ois.defaultReadObject();
                children: []
                pos: 22805
                length: 24
              - type: expression_statement
                fields:
                  text: MatrixUtils.deserializeRealMatrix(this, "tableau", ois);
                children: []
                pos: 22838
                length: 56
              pos: 22795
              length: 105
          children: []
          pos: 22699
          length: 201
        pos: 2398
        length: 20504
    children: []
    pos: 2398
    length: 20504
  pos: 0
  length: 22903
text_diff: "--- before\n+++ after\n@@ -407,12 +407,10 @@\n             continue;\n
  \          }\n           Integer basicRow = getBasicRow(colIndex);\n-          if
  (basicRow != null && basicRow == 0) {\n               // if the basic row is found
  to be the objective function row\n               // set the coefficient to 0 ->
  this case handles unconstrained \n               // variables that are still part
  of the objective function\n-              coefficients[i] = 0;\n-          } else
  if (basicRows.contains(basicRow)) {\n+          if (basicRows.contains(basicRow))
  {\n               // if multiple variables can take a given value\n               //
  then we choose the first and set the rest equal to 0\n               coefficients[i]
  = 0 - (restrictToNonNegative ? 0 : mostNegative);\n"
tree_diff: "New cluster:\nUPDATE from for (int i = 0; i < coefficients.length; i++)
  {\n          int colIndex = columnLabels.indexOf(\"x\" + i);\n          if (colIndex
  < 0) {\n            coefficients[i] = 0;\n            continue;\n          }\n          Integer
  basicRow = getBasicRow(colIndex);\n          if (basicRow != null && basicRow ==
  0) {\n              // if the basic row is found to be the objective function row\n
  \             // set the coefficient to 0 -> this case handles unconstrained \n
  \             // variables that are still part of the objective function\n              coefficients[i]
  = 0;\n          } else if (basicRows.contains(basicRow)) {\n              // if
  multiple variables can take a given value\n              // then we choose the first
  and set the rest equal to 0\n              coefficients[i] = 0 - (restrictToNonNegative
  ? 0 : mostNegative);\n          } else {\n              basicRows.add(basicRow);\n
  \             coefficients[i] =\n                  (basicRow == null ? 0 : getEntry(basicRow,
  getRhsOffset())) -\n                  (restrictToNonNegative ? 0 : mostNegative);\n
  \         }\n      } to for (int i = 0; i < coefficients.length; i++) {\n          int
  colIndex = columnLabels.indexOf(\"x\" + i);\n          if (colIndex < 0) {\n            coefficients[i]
  = 0;\n            continue;\n          }\n          Integer basicRow = getBasicRow(colIndex);\n
  \             // if the basic row is found to be the objective function row\n              //
  set the coefficient to 0 -> this case handles unconstrained \n              // variables
  that are still part of the objective function\n          if (basicRows.contains(basicRow))
  {\n              // if multiple variables can take a given value\n              //
  then we choose the first and set the rest equal to 0\n              coefficients[i]
  = 0 - (restrictToNonNegative ? 0 : mostNegative);\n          } else {\n              basicRows.add(basicRow);\n
  \             coefficients[i] =\n                  (basicRow == null ? 0 : getEntry(basicRow,
  getRhsOffset())) -\n                  (restrictToNonNegative ? 0 : mostNegative);\n
  \         }\n      }\n------------\n===\nupdate-node\n---\nfor_statement: for (int
  i = 0; i < coefficients.length; i++) {\n          int colIndex = columnLabels.indexOf(\"x\"
  + i);\n          if (colIndex < 0) {\n            coefficients[i] = 0;\n            continue;\n
  \         }\n          Integer basicRow = getBasicRow(colIndex);\n          if (basicRow
  != null && basicRow == 0) {\n              // if the basic row is found to be the
  objective function row\n              // set the coefficient to 0 -> this case handles
  unconstrained \n              // variables that are still part of the objective
  function\n              coefficients[i] = 0;\n          } else if (basicRows.contains(basicRow))
  {\n              // if multiple variables can take a given value\n              //
  then we choose the first and set the rest equal to 0\n              coefficients[i]
  = 0 - (restrictToNonNegative ? 0 : mostNegative);\n          } else {\n              basicRows.add(basicRow);\n
  \             coefficients[i] =\n                  (basicRow == null ? 0 : getEntry(basicRow,
  getRhsOffset())) -\n                  (restrictToNonNegative ? 0 : mostNegative);\n
  \         }\n      } [15666,16748]\nreplace for (int i = 0; i < coefficients.length;
  i++) {\n          int colIndex = columnLabels.indexOf(\"x\" + i);\n          if
  (colIndex < 0) {\n            coefficients[i] = 0;\n            continue;\n          }\n
  \         Integer basicRow = getBasicRow(colIndex);\n          if (basicRow != null
  && basicRow == 0) {\n              // if the basic row is found to be the objective
  function row\n              // set the coefficient to 0 -> this case handles unconstrained
  \n              // variables that are still part of the objective function\n              coefficients[i]
  = 0;\n          } else if (basicRows.contains(basicRow)) {\n              // if
  multiple variables can take a given value\n              // then we choose the first
  and set the rest equal to 0\n              coefficients[i] = 0 - (restrictToNonNegative
  ? 0 : mostNegative);\n          } else {\n              basicRows.add(basicRow);\n
  \             coefficients[i] =\n                  (basicRow == null ? 0 : getEntry(basicRow,
  getRhsOffset())) -\n                  (restrictToNonNegative ? 0 : mostNegative);\n
  \         }\n      } by for (int i = 0; i < coefficients.length; i++) {\n          int
  colIndex = columnLabels.indexOf(\"x\" + i);\n          if (colIndex < 0) {\n            coefficients[i]
  = 0;\n            continue;\n          }\n          Integer basicRow = getBasicRow(colIndex);\n
  \             // if the basic row is found to be the objective function row\n              //
  set the coefficient to 0 -> this case handles unconstrained \n              // variables
  that are still part of the objective function\n          if (basicRows.contains(basicRow))
  {\n              // if multiple variables can take a given value\n              //
  then we choose the first and set the rest equal to 0\n              coefficients[i]
  = 0 - (restrictToNonNegative ? 0 : mostNegative);\n          } else {\n              basicRows.add(basicRow);\n
  \             coefficients[i] =\n                  (basicRow == null ? 0 : getEntry(basicRow,
  getRhsOffset())) -\n                  (restrictToNonNegative ? 0 : mostNegative);\n
  \         }\n      }\n\n"
