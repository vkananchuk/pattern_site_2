---
language: java
text_diff: "--- before\n+++ after\n@@ -125,7 +125,7 @@\n             // single hyphen\n
  \            else if (\"-\".equals(token))\n             {\n-                tokens.add(token);\n+
  \               processSingleHyphen(token);\n             }\n             else if
  (token.startsWith(\"-\"))\n             {\n@@ -210,6 +210,10 @@\n             tokens.add(value);\n
  \        }\n     }\n+    private void processSingleHyphen(String hyphen)\n+    {\n+
  \       tokens.add(hyphen);\n+    }\n \n     /**\n      * <p>If an {@link Option}
  exists for <code>token</code> then\n@@ -234,7 +238,6 @@\n         else if (stopAtNonOption)\n
  \        {\n             eatTheRest = true;\n-            tokens.add(token);\n         }\n
  \    }\n \n"
tree_diff: |+
  New cluster:
  ===
  insert-node
  ---
  method_declaration [3978,5780]
  to
  class_body [1169,10244]
  at 5
  ------------
  ===
  insert-node
  ---
  method_declaration [3978,5780]
  to
  class_body [1169,10244]
  at 5
  ===
  insert-node
  ---
  identifier: flatten [3997,4004]
  to
  method_declaration [3978,5780]
  at 0

  New cluster:
  Unknown cluster type
  ------------
  ===
  insert-tree
  ---
  method_declaration [7271,7358]
      identifier: processSingleHyphen [7284,7303]
      method_parameters [7271,7358]
          formal_parameter: String hyphen [7304,7317]
      block [7323,7358]
          expression_statement: tokens.add(hyphen); [7333,7352]
  to
  class_body [1169,10244]
  at 9

  New cluster:
  MOVE from method_declaration [3978,5780]
  ------------
  ===
  move-tree
  ---
  method_parameters [3978,5771]
      formal_parameter: Options options [4005,4020]
  to
  method_declaration [3978,5780]
  at 1

  New cluster:
  Unknown cluster type
  ------------
  ===
  insert-tree
  ---
  block [4071,5780]
      expression_statement: init(); [4081,4088]
      expression_statement: this.options = options; [4097,4120]
      local_variable_declaration: Iterator iter = Arrays.asList(arguments).iterator(); [4181,4233]
      while_statement: while (iter.hasNext())
          {
              // get the next command line token
              String token = (String) iter.next();

              // handle SPECIAL TOKEN
              if (token.startsWith("--"))
              {
                  if (token.indexOf('=') != -1)
                  {
                      tokens.add(token.substring(0, token.indexOf('=')));
                      tokens.add(token.substring(token.indexOf('=') + 1, token.length()));
                  }
                  else
                  {
                      tokens.add(token);
                  }
              }

              // single hyphen
              else if ("-".equals(token))
              {
                  processSingleHyphen(token);
              }
              else if (token.startsWith("-"))
              {
                  if (token.length() == 2)
                  {
                      processOptionToken(token, stopAtNonOption);
                  }
                  else if (options.hasOption(token))
                  {
                      tokens.add(token);
                  }
                  // requires bursting
                  else
                  {
                      burstToken(token, stopAtNonOption);
                  }
              }
              else if (stopAtNonOption)
              {
                  process(token);
              }
              else
              {
                  tokens.add(token);
              }

              gobble(iter);
          } [4286,5704]
      return_statement: return (String[]) tokens.toArray(new String[tokens.size()]); [5714,5774]
  to
  method_declaration [3978,5780]
  at 2

  New cluster:
  ===
  delete-node
  ---
  method_declaration [3978,5771]
  ===
  ------------
  ===
  delete-node
  ---
  method_declaration [3978,5771]
  ===
  ===
  delete-node
  ---
  identifier: flatten [3997,4004]
  ===

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  block [4071,5771]
      expression_statement: init(); [4081,4088]
      expression_statement: this.options = options; [4097,4120]
      local_variable_declaration: Iterator iter = Arrays.asList(arguments).iterator(); [4181,4233]
      while_statement: while (iter.hasNext())
          {
              // get the next command line token
              String token = (String) iter.next();

              // handle SPECIAL TOKEN
              if (token.startsWith("--"))
              {
                  if (token.indexOf('=') != -1)
                  {
                      tokens.add(token.substring(0, token.indexOf('=')));
                      tokens.add(token.substring(token.indexOf('=') + 1, token.length()));
                  }
                  else
                  {
                      tokens.add(token);
                  }
              }

              // single hyphen
              else if ("-".equals(token))
              {
                  tokens.add(token);
              }
              else if (token.startsWith("-"))
              {
                  if (token.length() == 2)
                  {
                      processOptionToken(token, stopAtNonOption);
                  }
                  else if (options.hasOption(token))
                  {
                      tokens.add(token);
                  }
                  // requires bursting
                  else
                  {
                      burstToken(token, stopAtNonOption);
                  }
              }
              else if (stopAtNonOption)
              {
                  process(token);
              }
              else
              {
                  tokens.add(token);
              }

              gobble(iter);
          } [4286,5695]
      return_statement: return (String[]) tokens.toArray(new String[tokens.size()]); [5705,5765]

...
