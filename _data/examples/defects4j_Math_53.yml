---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: Complex
        children: []
        pos: 1962
        length: 7
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: public static final Complex I = new Complex(0.0, 1.0);
          children: []
          pos: 2094
          length: 54
        - type: field_declaration
          fields:
            text: public static final Complex NaN = new Complex(Double.NaN, Double.NaN);
          children: []
          pos: 2245
          length: 70
        - type: field_declaration
          fields:
            text: public static final Complex INF = new Complex(Double.POSITIVE_INFINITY,
              Double.POSITIVE_INFINITY);
          children: []
          pos: 2415
          length: 98
        - type: field_declaration
          fields:
            text: public static final Complex ONE = new Complex(1.0, 0.0);
          children: []
          pos: 2573
          length: 56
        - type: field_declaration
          fields:
            text: public static final Complex ZERO = new Complex(0.0, 0.0);
          children: []
          pos: 2689
          length: 57
        - type: field_declaration
          fields:
            text: private static final long serialVersionUID = -6195664516687396620L;
          children: []
          pos: 2795
          length: 67
        - type: field_declaration
          fields:
            text: private final double imaginary;
          children: []
          pos: 2899
          length: 31
        - type: field_declaration
          fields:
            text: private final double real;
          children: []
          pos: 2962
          length: 26
        - type: field_declaration
          fields:
            text: private final transient boolean isNaN;
          children: []
          pos: 3057
          length: 38
        - type: field_declaration
          fields:
            text: private final transient boolean isInfinite;
          children: []
          pos: 3160
          length: 43
        - type: constructor_declaration
          fields:
            text: |-
              public Complex(double real, double imaginary) {
                      super();
                      this.real = real;
                      this.imaginary = imaginary;

                      isNaN = Double.isNaN(real) || Double.isNaN(imaginary);
                      isInfinite = !isNaN &&
                      (Double.isInfinite(real) || Double.isInfinite(imaginary));
                  }
          children: []
          pos: 3375
          length: 294
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: abs
              children: []
              pos: 4050
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 4036
              length: 666
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 4070
                        length: 5
                    children: []
                    pos: 4069
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Double.NaN;
                    children: []
                    pos: 4091
                    length: 18
                  pos: 4077
                  length: 42
                pos: 4066
                length: 53
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isInfinite()
                        children: []
                        pos: 4133
                        length: 12
                    children: []
                    pos: 4132
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Double.POSITIVE_INFINITY;
                    children: []
                    pos: 4161
                    length: 32
                  pos: 4147
                  length: 56
                pos: 4129
                length: 74
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(real)
                            children: []
                            pos: 4217
                            length: 18
                          right:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(imaginary)
                            children: []
                            pos: 4238
                            length: 23
                        children: []
                        pos: 4217
                        length: 44
                    children: []
                    pos: 4216
                    length: 46
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: imaginary
                                children: []
                                pos: 4281
                                length: 9
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 4294
                                length: 3
                            children: []
                            pos: 4281
                            length: 16
                        children: []
                        pos: 4280
                        length: 18
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return FastMath.abs(real);
                        children: []
                        pos: 4317
                        length: 26
                      pos: 4299
                      length: 58
                    pos: 4277
                    length: 80
                  - type: local_variable_declaration
                    fields:
                      text: double q = real / imaginary;
                    children: []
                    pos: 4370
                    length: 28
                  - type: return_statement
                    fields:
                      text: return FastMath.abs(imaginary) * FastMath.sqrt(1 + q *
                        q);
                    children: []
                    pos: 4411
                    length: 58
                  pos: 4263
                  length: 216
                pos: 4213
                length: 483
              pos: 4056
              length: 646
          children: []
          pos: 4036
          length: 666
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: add
              children: []
              pos: 5364
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex rhs
                children: []
                pos: 5368
                length: 11
              pos: 5349
              length: 277
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(rhs);
                children: []
                pos: 5428
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 5469
                            length: 5
                          right:
                            type: field_access
                            fields:
                              text: rhs.isNaN
                            children: []
                            pos: 5478
                            length: 9
                        children: []
                        pos: 5469
                        length: 18
                    children: []
                    pos: 5468
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 5503
                    length: 11
                  pos: 5489
                  length: 35
                pos: 5465
                length: 59
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real + rhs.getReal(),
                                imaginary + rhs.getImaginary());
                children: []
                pos: 5533
                length: 87
              pos: 5418
              length: 208
          children: []
          pos: 5349
          length: 277
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: conjugate
              children: []
              pos: 6243
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6228
              length: 137
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 6269
                        length: 5
                    children: []
                    pos: 6268
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 6290
                    length: 11
                  pos: 6276
                  length: 35
                pos: 6265
                length: 46
              - type: return_statement
                fields:
                  text: return createComplex(real, -imaginary);
                children: []
                pos: 6320
                length: 39
              pos: 6255
              length: 110
          children: []
          pos: 6228
          length: 137
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: divide
              children: []
              pos: 7952
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex rhs
                children: []
                pos: 7959
                length: 11
              pos: 7937
              length: 890
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(rhs);
                children: []
                pos: 8019
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 8060
                            length: 5
                          right:
                            type: field_access
                            fields:
                              text: rhs.isNaN
                            children: []
                            pos: 8069
                            length: 9
                        children: []
                        pos: 8060
                        length: 18
                    children: []
                    pos: 8059
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 8094
                    length: 11
                  pos: 8080
                  length: 35
                pos: 8056
                length: 59
              - type: local_variable_declaration
                fields:
                  text: double c = rhs.getReal();
                children: []
                pos: 8125
                length: 25
              - type: local_variable_declaration
                fields:
                  text: double d = rhs.getImaginary();
                children: []
                pos: 8159
                length: 30
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: c
                                children: []
                                pos: 8202
                                length: 1
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 8207
                                length: 3
                            children: []
                            pos: 8202
                            length: 8
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: d
                                children: []
                                pos: 8214
                                length: 1
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 8219
                                length: 3
                            children: []
                            pos: 8214
                            length: 8
                        children: []
                        pos: 8202
                        length: 20
                    children: []
                    pos: 8201
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 8238
                    length: 11
                  pos: 8224
                  length: 35
                pos: 8198
                length: 61
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: rhs.isInfinite()
                            children: []
                            pos: 8273
                            length: 16
                          right:
                            type: unary_expression
                            fields:
                              text: "!isInfinite()"
                            children: []
                            pos: 8293
                            length: 13
                        children: []
                        pos: 8273
                        length: 33
                    children: []
                    pos: 8272
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return ZERO;
                    children: []
                    pos: 8322
                    length: 12
                  pos: 8308
                  length: 36
                pos: 8269
                length: 75
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(c)
                            children: []
                            pos: 8358
                            length: 15
                          right:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(d)
                            children: []
                            pos: 8376
                            length: 15
                        children: []
                        pos: 8358
                        length: 33
                    children: []
                    pos: 8357
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: double q = c / d;
                    children: []
                    pos: 8407
                    length: 17
                  - type: local_variable_declaration
                    fields:
                      text: double denominator = c * q + d;
                    children: []
                    pos: 8437
                    length: 31
                  - type: return_statement
                    fields:
                      text: |-
                        return createComplex((real * q + imaginary) / denominator,
                                        (imaginary * q - real) / denominator);
                    children: []
                    pos: 8481
                    length: 113
                  pos: 8393
                  length: 211
                pos: 8354
                length: 467
              pos: 8009
              length: 818
          children: []
          pos: 7937
          length: 890
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: equals
              children: []
              pos: 9653
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Object other
                children: []
                pos: 9660
                length: 12
              pos: 9624
              length: 403
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: this
                            fields: {}
                            children: []
                            pos: 9688
                            length: 4
                          right:
                            type: identifier
                            fields:
                              text: other
                            children: []
                            pos: 9696
                            length: 5
                        children: []
                        pos: 9688
                        length: 13
                    children: []
                    pos: 9687
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return true;
                    children: []
                    pos: 9717
                    length: 12
                  pos: 9703
                  length: 36
                pos: 9684
                length: 55
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: other instanceof Complex
                        children: []
                        pos: 9752
                        length: 24
                    children: []
                    pos: 9751
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Complex rhs = (Complex)other;
                    children: []
                    pos: 9791
                    length: 29
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: field_access
                            fields:
                              text: rhs.isNaN
                            children: []
                            pos: 9837
                            length: 9
                        children: []
                        pos: 9836
                        length: 11
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return isNaN;
                        children: []
                        pos: 9866
                        length: 13
                      pos: 9848
                      length: 45
                    pos: 9833
                    length: 156
                  pos: 9777
                  length: 222
                pos: 9748
                length: 251
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 10008
                length: 13
              pos: 9674
              length: 353
          children: []
          pos: 9624
          length: 403
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: hashCode
              children: []
              pos: 10238
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 10213
              length: 185
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 10263
                        length: 5
                    children: []
                    pos: 10262
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return 7;
                    children: []
                    pos: 10284
                    length: 9
                  pos: 10270
                  length: 33
                pos: 10259
                length: 44
              - type: return_statement
                fields:
                  text: |-
                    return 37 * (17 * MathUtils.hash(imaginary) +
                                MathUtils.hash(real));
                children: []
                pos: 10312
                length: 80
              pos: 10249
              length: 149
          children: []
          pos: 10213
          length: 185
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getImaginary
              children: []
              pos: 10509
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 10495
              length: 62
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return imaginary;
                children: []
                pos: 10534
                length: 17
              pos: 10524
              length: 33
          children: []
          pos: 10495
          length: 62
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getReal
              children: []
              pos: 10658
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 10644
              length: 52
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return real;
                children: []
                pos: 10678
                length: 12
              pos: 10668
              length: 28
          children: []
          pos: 10644
          length: 52
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isNaN
              children: []
              pos: 10937
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 10922
              length: 52
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return isNaN;
                children: []
                pos: 10955
                length: 13
              pos: 10945
              length: 29
          children: []
          pos: 10922
          length: 52
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isInfinite
              children: []
              pos: 11390
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 11375
              length: 62
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return isInfinite;
                children: []
                pos: 11413
                length: 18
              pos: 11403
              length: 34
          children: []
          pos: 11375
          length: 62
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: multiply
              children: []
              pos: 12448
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex rhs
                children: []
                pos: 12457
                length: 11
              pos: 12433
              length: 585
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(rhs);
                children: []
                pos: 12517
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 12558
                            length: 5
                          right:
                            type: field_access
                            fields:
                              text: rhs.isNaN
                            children: []
                            pos: 12567
                            length: 9
                        children: []
                        pos: 12558
                        length: 18
                    children: []
                    pos: 12557
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 12592
                    length: 11
                  pos: 12578
                  length: 35
                pos: 12554
                length: 59
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: or
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: Double.isInfinite(real)
                                    children: []
                                    pos: 12626
                                    length: 23
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: Double.isInfinite(imaginary)
                                    children: []
                                    pos: 12653
                                    length: 28
                                children: []
                                pos: 12626
                                length: 55
                              right:
                                type: method_invocation
                                fields:
                                  text: Double.isInfinite(rhs.real)
                                children: []
                                pos: 12697
                                length: 27
                            children: []
                            pos: 12626
                            length: 98
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isInfinite(rhs.imaginary)
                            children: []
                            pos: 12727
                            length: 32
                        children: []
                        pos: 12626
                        length: 133
                    children: []
                    pos: 12625
                    length: 135
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return INF;
                    children: []
                    pos: 12855
                    length: 11
                  pos: 12761
                  length: 115
                pos: 12622
                length: 254
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real * rhs.real - imaginary * rhs.imaginary,
                                    real * rhs.imaginary + imaginary * rhs.real);
                children: []
                pos: 12885
                length: 127
              pos: 12507
              length: 511
          children: []
          pos: 12433
          length: 585
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: multiply
              children: []
              pos: 13939
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double rhs
                children: []
                pos: 13948
                length: 10
              pos: 13924
              length: 401
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 13974
                            length: 5
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isNaN(rhs)
                            children: []
                            pos: 13983
                            length: 17
                        children: []
                        pos: 13974
                        length: 26
                    children: []
                    pos: 13973
                    length: 28
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 14016
                    length: 11
                  pos: 14002
                  length: 35
                pos: 13970
                length: 67
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: Double.isInfinite(real)
                                children: []
                                pos: 14050
                                length: 23
                              right:
                                type: method_invocation
                                fields:
                                  text: Double.isInfinite(imaginary)
                                children: []
                                pos: 14077
                                length: 28
                            children: []
                            pos: 14050
                            length: 55
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isInfinite(rhs)
                            children: []
                            pos: 14121
                            length: 22
                        children: []
                        pos: 14050
                        length: 93
                    children: []
                    pos: 14049
                    length: 95
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return INF;
                    children: []
                    pos: 14239
                    length: 11
                  pos: 14145
                  length: 115
                pos: 14046
                length: 214
              - type: return_statement
                fields:
                  text: return createComplex(real * rhs, imaginary * rhs);
                children: []
                pos: 14269
                length: 50
              pos: 13960
              length: 365
          children: []
          pos: 13924
          length: 401
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: negate
              children: []
              pos: 14629
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 14614
              length: 136
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 14652
                        length: 5
                    children: []
                    pos: 14651
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 14673
                    length: 11
                  pos: 14659
                  length: 35
                pos: 14648
                length: 46
              - type: return_statement
                fields:
                  text: return createComplex(-real, -imaginary);
                children: []
                pos: 14704
                length: 40
              pos: 14638
              length: 112
          children: []
          pos: 14614
          length: 136
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: subtract
              children: []
              pos: 15440
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex rhs
                children: []
                pos: 15449
                length: 11
              pos: 15425
              length: 283
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(rhs);
                children: []
                pos: 15509
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 15550
                            length: 5
                          right:
                            type: field_access
                            fields:
                              text: rhs.isNaN
                            children: []
                            pos: 15559
                            length: 9
                        children: []
                        pos: 15550
                        length: 18
                    children: []
                    pos: 15549
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 15584
                    length: 11
                  pos: 15570
                  length: 35
                pos: 15546
                length: 59
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real - rhs.getReal(),
                                imaginary - rhs.getImaginary());
                children: []
                pos: 15615
                length: 87
              pos: 15499
              length: 209
          children: []
          pos: 15425
          length: 283
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: acos
              children: []
              pos: 16252
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 16237
              length: 195
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 16273
                        length: 5
                    children: []
                    pos: 16272
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 16294
                    length: 11
                  pos: 16280
                  length: 35
                pos: 16269
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return this.add(this.sqrt1z().multiply(Complex.I)).log()
                                  .multiply(Complex.I.negate());
                children: []
                pos: 16325
                length: 101
              pos: 16259
              length: 173
          children: []
          pos: 16237
          length: 195
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: asin
              children: []
              pos: 16969
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 16954
              length: 190
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 16990
                        length: 5
                    children: []
                    pos: 16989
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 17011
                    length: 11
                  pos: 16997
                  length: 35
                pos: 16986
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return sqrt1z().add(this.multiply(Complex.I)).log()
                                  .multiply(Complex.I.negate());
                children: []
                pos: 17042
                length: 96
              pos: 16976
              length: 168
          children: []
          pos: 16954
          length: 190
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: atan
              children: []
              pos: 17677
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 17662
              length: 225
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 17698
                        length: 5
                    children: []
                    pos: 17697
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 17719
                    length: 11
                  pos: 17705
                  length: 35
                pos: 17694
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return this.add(Complex.I).divide(Complex.I.subtract(this)).log()
                                .multiply(Complex.I.divide(createComplex(2.0, 0.0)));
                children: []
                pos: 17750
                length: 131
              pos: 17684
              length: 203
          children: []
          pos: 17662
          length: 225
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: cos
              children: []
              pos: 18950
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 18935
              length: 223
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 18970
                        length: 5
                    children: []
                    pos: 18969
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 18991
                    length: 11
                  pos: 18977
                  length: 35
                pos: 18966
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.cos(real) * MathUtils.cosh(imaginary),
                                -FastMath.sin(real) * MathUtils.sinh(imaginary));
                children: []
                pos: 19022
                length: 130
              pos: 18956
              length: 202
          children: []
          pos: 18935
          length: 223
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: cosh
              children: []
              pos: 20258
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 20243
              length: 223
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 20279
                        length: 5
                    children: []
                    pos: 20278
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 20300
                    length: 11
                  pos: 20286
                  length: 35
                pos: 20275
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(MathUtils.cosh(real) * FastMath.cos(imaginary),
                                MathUtils.sinh(real) * FastMath.sin(imaginary));
                children: []
                pos: 20331
                length: 129
              pos: 20265
              length: 201
          children: []
          pos: 20243
          length: 223
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: exp
              children: []
              pos: 21558
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 21543
              length: 230
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 21578
                        length: 5
                    children: []
                    pos: 21577
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 21599
                    length: 11
                  pos: 21585
                  length: 35
                pos: 21574
                length: 46
              - type: local_variable_declaration
                fields:
                  text: double expReal = FastMath.exp(real);
                children: []
                pos: 21630
                length: 36
              - type: return_statement
                fields:
                  text: return createComplex(expReal *  FastMath.cos(imaginary), expReal
                    * FastMath.sin(imaginary));
                children: []
                pos: 21675
                length: 92
              pos: 21564
              length: 209
          children: []
          pos: 21543
          length: 230
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: log
              children: []
              pos: 23052
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 23037
              length: 180
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 23072
                        length: 5
                    children: []
                    pos: 23071
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 23093
                    length: 11
                  pos: 23079
                  length: 35
                pos: 23068
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.log(abs()),
                                FastMath.atan2(imaginary, real));
                children: []
                pos: 23124
                length: 87
              pos: 23058
              length: 159
          children: []
          pos: 23037
          length: 180
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: pow
              children: []
              pos: 23928
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex x
                children: []
                pos: 23932
                length: 9
              pos: 23913
              length: 154
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(x);
                children: []
                pos: 23990
                length: 26
              - type: return_statement
                fields:
                  text: return this.log().multiply(x).exp();
                children: []
                pos: 24025
                length: 36
              pos: 23980
              length: 87
          children: []
          pos: 23913
          length: 154
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sin
              children: []
              pos: 25125
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 25110
              length: 222
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 25145
                        length: 5
                    children: []
                    pos: 25144
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 25166
                    length: 11
                  pos: 25152
                  length: 35
                pos: 25141
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.sin(real) * MathUtils.cosh(imaginary),
                                FastMath.cos(real) * MathUtils.sinh(imaginary));
                children: []
                pos: 25197
                length: 129
              pos: 25131
              length: 201
          children: []
          pos: 25110
          length: 222
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sinh
              children: []
              pos: 26428
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 26413
              length: 223
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 26449
                        length: 5
                    children: []
                    pos: 26448
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 26470
                    length: 11
                  pos: 26456
                  length: 35
                pos: 26445
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(MathUtils.sinh(real) * FastMath.cos(imaginary),
                                MathUtils.cosh(real) * FastMath.sin(imaginary));
                children: []
                pos: 26501
                length: 129
              pos: 26435
              length: 201
          children: []
          pos: 26413
          length: 223
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sqrt
              children: []
              pos: 28050
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 28035
              length: 494
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 28071
                        length: 5
                    children: []
                    pos: 28070
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 28092
                    length: 11
                  pos: 28078
                  length: 35
                pos: 28067
                length: 46
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: real
                                children: []
                                pos: 28127
                                length: 4
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 28135
                                length: 3
                            children: []
                            pos: 28127
                            length: 11
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: imaginary
                                children: []
                                pos: 28142
                                length: 9
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 28155
                                length: 3
                            children: []
                            pos: 28142
                            length: 16
                        children: []
                        pos: 28127
                        length: 31
                    children: []
                    pos: 28126
                    length: 33
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return createComplex(0.0, 0.0);
                    children: []
                    pos: 28174
                    length: 31
                  pos: 28160
                  length: 55
                pos: 28123
                length: 92
              - type: local_variable_declaration
                fields:
                  text: double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
                children: []
                pos: 28225
                length: 61
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: greater_or_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: real
                            children: []
                            pos: 28299
                            length: 4
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: '0.0'
                            children: []
                            pos: 28307
                            length: 3
                        children: []
                        pos: 28299
                        length: 11
                    children: []
                    pos: 28298
                    length: 13
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return createComplex(t, imaginary / (2.0 * t));
                    children: []
                    pos: 28326
                    length: 47
                  pos: 28312
                  length: 71
                pos: 28295
                length: 228
              pos: 28057
              length: 472
          children: []
          pos: 28035
          length: 494
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sqrt1z
              children: []
              pos: 29252
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 29237
              length: 108
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
                children: []
                pos: 29271
                length: 68
              pos: 29261
              length: 84
          children: []
          pos: 29237
          length: 108
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: tan
              children: []
              pos: 30494
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 30479
              length: 321
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 30514
                        length: 5
                    children: []
                    pos: 30513
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 30535
                    length: 11
                  pos: 30521
                  length: 35
                pos: 30510
                length: 46
              - type: local_variable_declaration
                fields:
                  text: double real2 = 2.0 * real;
                children: []
                pos: 30566
                length: 26
              - type: local_variable_declaration
                fields:
                  text: double imaginary2 = 2.0 * imaginary;
                children: []
                pos: 30601
                length: 36
              - type: local_variable_declaration
                fields:
                  text: double d = FastMath.cos(real2) + MathUtils.cosh(imaginary2);
                children: []
                pos: 30646
                length: 60
              - type: return_statement
                fields:
                  text: return createComplex(FastMath.sin(real2) / d, MathUtils.sinh(imaginary2)
                    / d);
                children: []
                pos: 30716
                length: 78
              pos: 30500
              length: 300
          children: []
          pos: 30479
          length: 321
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: tanh
              children: []
              pos: 31956
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 31941
              length: 322
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 31977
                        length: 5
                    children: []
                    pos: 31976
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 31998
                    length: 11
                  pos: 31984
                  length: 35
                pos: 31973
                length: 46
              - type: local_variable_declaration
                fields:
                  text: double real2 = 2.0 * real;
                children: []
                pos: 32029
                length: 26
              - type: local_variable_declaration
                fields:
                  text: double imaginary2 = 2.0 * imaginary;
                children: []
                pos: 32064
                length: 36
              - type: local_variable_declaration
                fields:
                  text: double d = MathUtils.cosh(real2) + FastMath.cos(imaginary2);
                children: []
                pos: 32109
                length: 60
              - type: return_statement
                fields:
                  text: return createComplex(MathUtils.sinh(real2) / d, FastMath.sin(imaginary2)
                    / d);
                children: []
                pos: 32179
                length: 78
              pos: 31963
              length: 300
          children: []
          pos: 31941
          length: 322
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getArgument
              children: []
              pos: 33109
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 33095
              length: 93
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return FastMath.atan2(getImaginary(), getReal());
                children: []
                pos: 33133
                length: 49
              pos: 33123
              length: 65
          children: []
          pos: 33095
          length: 93
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: nthRoot
              children: []
              pos: 34156
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int n
                children: []
                pos: 34164
                length: 5
              pos: 34135
              length: 1225
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_or_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: "n"
                            children: []
                            pos: 34218
                            length: 1
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 34223
                            length: 1
                        children: []
                        pos: 34218
                        length: 6
                    children: []
                    pos: 34217
                    length: 8
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: |-
                        throw MathRuntimeException.createIllegalArgumentException(
                                            LocalizedFormats.CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N,
                                            n);
                    children: []
                    pos: 34240
                    length: 159
                  pos: 34226
                  length: 183
                pos: 34214
                length: 195
              - type: local_variable_declaration
                fields:
                  text: List<Complex> result = new ArrayList<Complex>();
                children: []
                pos: 34419
                length: 48
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 34481
                        length: 5
                    children: []
                    pos: 34480
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: result.add(NaN);
                    children: []
                    pos: 34502
                    length: 16
                  - type: return_statement
                    fields:
                      text: return result;
                    children: []
                    pos: 34531
                    length: 14
                  pos: 34488
                  length: 67
                pos: 34477
                length: 78
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isInfinite()
                        children: []
                        pos: 34569
                        length: 12
                    children: []
                    pos: 34568
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: result.add(INF);
                    children: []
                    pos: 34597
                    length: 16
                  - type: return_statement
                    fields:
                      text: return result;
                    children: []
                    pos: 34626
                    length: 14
                  pos: 34583
                  length: 67
                pos: 34565
                length: 85
              - type: local_variable_declaration
                fields:
                  text: final double nthRootOfAbs = FastMath.pow(abs(), 1.0 / n);
                children: []
                pos: 34735
                length: 57
              - type: local_variable_declaration
                fields:
                  text: final double nthPhi = getArgument()/n;
                children: []
                pos: 34872
                length: 38
              - type: local_variable_declaration
                fields:
                  text: final double slice = 2 * FastMath.PI / n;
                children: []
                pos: 34919
                length: 41
              - type: local_variable_declaration
                fields:
                  text: double innerPart = nthPhi;
                children: []
                pos: 34969
                length: 26
              - type: for_statement
                fields:
                  text: |-
                    for (int k = 0; k < n ; k++) {
                                // inner part
                                final double realPart      = nthRootOfAbs *  FastMath.cos(innerPart);
                                final double imaginaryPart = nthRootOfAbs *  FastMath.sin(innerPart);
                                result.add(createComplex(realPart, imaginaryPart));
                                innerPart += slice;
                            }
                children: []
                pos: 35004
                length: 326
              - type: return_statement
                fields:
                  text: return result;
                children: []
                pos: 35340
                length: 14
              pos: 34203
              length: 1157
          children: []
          pos: 34135
          length: 1225
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createComplex
              children: []
              pos: 35621
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double realPart
                children: []
                pos: 35635
                length: 15
              pos: 35603
              length: 131
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return new Complex(realPart, imaginaryPart);
                children: []
                pos: 35684
                length: 44
              pos: 35674
              length: 60
          children: []
          pos: 35603
          length: 131
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: readResolve
              children: []
              pos: 36028
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 36005
              length: 91
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return createComplex(real, imaginary);
                children: []
                pos: 36052
                length: 38
              pos: 36042
              length: 54
          children: []
          pos: 36005
          length: 91
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getField
              children: []
              pos: 36147
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 36127
              length: 81
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return ComplexField.getInstance();
                children: []
                pos: 36168
                length: 34
              pos: 36158
              length: 50
          children: []
          pos: 36127
          length: 81
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: toString
              children: []
              pos: 36267
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 36239
              length: 98
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return "(" + real + ", " + imaginary + ")";
                children: []
                pos: 36288
                length: 43
              pos: 36278
              length: 59
          children: []
          pos: 36239
          length: 98
        pos: 1949
        length: 34390
    children: []
    pos: 1949
    length: 34390
  pos: 0
  length: 36340
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: Complex
        children: []
        pos: 1962
        length: 7
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: public static final Complex I = new Complex(0.0, 1.0);
          children: []
          pos: 2094
          length: 54
        - type: field_declaration
          fields:
            text: public static final Complex NaN = new Complex(Double.NaN, Double.NaN);
          children: []
          pos: 2245
          length: 70
        - type: field_declaration
          fields:
            text: public static final Complex INF = new Complex(Double.POSITIVE_INFINITY,
              Double.POSITIVE_INFINITY);
          children: []
          pos: 2415
          length: 98
        - type: field_declaration
          fields:
            text: public static final Complex ONE = new Complex(1.0, 0.0);
          children: []
          pos: 2573
          length: 56
        - type: field_declaration
          fields:
            text: public static final Complex ZERO = new Complex(0.0, 0.0);
          children: []
          pos: 2689
          length: 57
        - type: field_declaration
          fields:
            text: private static final long serialVersionUID = -6195664516687396620L;
          children: []
          pos: 2795
          length: 67
        - type: field_declaration
          fields:
            text: private final double imaginary;
          children: []
          pos: 2899
          length: 31
        - type: field_declaration
          fields:
            text: private final double real;
          children: []
          pos: 2962
          length: 26
        - type: field_declaration
          fields:
            text: private final transient boolean isNaN;
          children: []
          pos: 3057
          length: 38
        - type: field_declaration
          fields:
            text: private final transient boolean isInfinite;
          children: []
          pos: 3160
          length: 43
        - type: constructor_declaration
          fields:
            text: |-
              public Complex(double real, double imaginary) {
                      super();
                      this.real = real;
                      this.imaginary = imaginary;

                      isNaN = Double.isNaN(real) || Double.isNaN(imaginary);
                      isInfinite = !isNaN &&
                      (Double.isInfinite(real) || Double.isInfinite(imaginary));
                  }
          children: []
          pos: 3375
          length: 294
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: abs
              children: []
              pos: 4050
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 4036
              length: 666
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 4070
                        length: 5
                    children: []
                    pos: 4069
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Double.NaN;
                    children: []
                    pos: 4091
                    length: 18
                  pos: 4077
                  length: 42
                pos: 4066
                length: 53
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isInfinite()
                        children: []
                        pos: 4133
                        length: 12
                    children: []
                    pos: 4132
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Double.POSITIVE_INFINITY;
                    children: []
                    pos: 4161
                    length: 32
                  pos: 4147
                  length: 56
                pos: 4129
                length: 74
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(real)
                            children: []
                            pos: 4217
                            length: 18
                          right:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(imaginary)
                            children: []
                            pos: 4238
                            length: 23
                        children: []
                        pos: 4217
                        length: 44
                    children: []
                    pos: 4216
                    length: 46
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: imaginary
                                children: []
                                pos: 4281
                                length: 9
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 4294
                                length: 3
                            children: []
                            pos: 4281
                            length: 16
                        children: []
                        pos: 4280
                        length: 18
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return FastMath.abs(real);
                        children: []
                        pos: 4317
                        length: 26
                      pos: 4299
                      length: 58
                    pos: 4277
                    length: 80
                  - type: local_variable_declaration
                    fields:
                      text: double q = real / imaginary;
                    children: []
                    pos: 4370
                    length: 28
                  - type: return_statement
                    fields:
                      text: return FastMath.abs(imaginary) * FastMath.sqrt(1 + q *
                        q);
                    children: []
                    pos: 4411
                    length: 58
                  pos: 4263
                  length: 216
                pos: 4213
                length: 483
              pos: 4056
              length: 646
          children: []
          pos: 4036
          length: 666
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: add
              children: []
              pos: 5364
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex rhs
                children: []
                pos: 5368
                length: 11
              pos: 5349
              length: 209
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(rhs);
                children: []
                pos: 5428
                length: 28
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real + rhs.getReal(),
                                imaginary + rhs.getImaginary());
                children: []
                pos: 5465
                length: 87
              pos: 5418
              length: 140
          children: []
          pos: 5349
          length: 209
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: conjugate
              children: []
              pos: 6175
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6160
              length: 137
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 6201
                        length: 5
                    children: []
                    pos: 6200
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 6222
                    length: 11
                  pos: 6208
                  length: 35
                pos: 6197
                length: 46
              - type: return_statement
                fields:
                  text: return createComplex(real, -imaginary);
                children: []
                pos: 6252
                length: 39
              pos: 6187
              length: 110
          children: []
          pos: 6160
          length: 137
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: divide
              children: []
              pos: 7884
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex rhs
                children: []
                pos: 7891
                length: 11
              pos: 7869
              length: 890
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(rhs);
                children: []
                pos: 7951
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 7992
                            length: 5
                          right:
                            type: field_access
                            fields:
                              text: rhs.isNaN
                            children: []
                            pos: 8001
                            length: 9
                        children: []
                        pos: 7992
                        length: 18
                    children: []
                    pos: 7991
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 8026
                    length: 11
                  pos: 8012
                  length: 35
                pos: 7988
                length: 59
              - type: local_variable_declaration
                fields:
                  text: double c = rhs.getReal();
                children: []
                pos: 8057
                length: 25
              - type: local_variable_declaration
                fields:
                  text: double d = rhs.getImaginary();
                children: []
                pos: 8091
                length: 30
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: c
                                children: []
                                pos: 8134
                                length: 1
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 8139
                                length: 3
                            children: []
                            pos: 8134
                            length: 8
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: d
                                children: []
                                pos: 8146
                                length: 1
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 8151
                                length: 3
                            children: []
                            pos: 8146
                            length: 8
                        children: []
                        pos: 8134
                        length: 20
                    children: []
                    pos: 8133
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 8170
                    length: 11
                  pos: 8156
                  length: 35
                pos: 8130
                length: 61
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: rhs.isInfinite()
                            children: []
                            pos: 8205
                            length: 16
                          right:
                            type: unary_expression
                            fields:
                              text: "!isInfinite()"
                            children: []
                            pos: 8225
                            length: 13
                        children: []
                        pos: 8205
                        length: 33
                    children: []
                    pos: 8204
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return ZERO;
                    children: []
                    pos: 8254
                    length: 12
                  pos: 8240
                  length: 36
                pos: 8201
                length: 75
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(c)
                            children: []
                            pos: 8290
                            length: 15
                          right:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(d)
                            children: []
                            pos: 8308
                            length: 15
                        children: []
                        pos: 8290
                        length: 33
                    children: []
                    pos: 8289
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: double q = c / d;
                    children: []
                    pos: 8339
                    length: 17
                  - type: local_variable_declaration
                    fields:
                      text: double denominator = c * q + d;
                    children: []
                    pos: 8369
                    length: 31
                  - type: return_statement
                    fields:
                      text: |-
                        return createComplex((real * q + imaginary) / denominator,
                                        (imaginary * q - real) / denominator);
                    children: []
                    pos: 8413
                    length: 113
                  pos: 8325
                  length: 211
                pos: 8286
                length: 467
              pos: 7941
              length: 818
          children: []
          pos: 7869
          length: 890
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: equals
              children: []
              pos: 9585
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Object other
                children: []
                pos: 9592
                length: 12
              pos: 9556
              length: 403
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: this
                            fields: {}
                            children: []
                            pos: 9620
                            length: 4
                          right:
                            type: identifier
                            fields:
                              text: other
                            children: []
                            pos: 9628
                            length: 5
                        children: []
                        pos: 9620
                        length: 13
                    children: []
                    pos: 9619
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return true;
                    children: []
                    pos: 9649
                    length: 12
                  pos: 9635
                  length: 36
                pos: 9616
                length: 55
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: other instanceof Complex
                        children: []
                        pos: 9684
                        length: 24
                    children: []
                    pos: 9683
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Complex rhs = (Complex)other;
                    children: []
                    pos: 9723
                    length: 29
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: field_access
                            fields:
                              text: rhs.isNaN
                            children: []
                            pos: 9769
                            length: 9
                        children: []
                        pos: 9768
                        length: 11
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return isNaN;
                        children: []
                        pos: 9798
                        length: 13
                      pos: 9780
                      length: 45
                    pos: 9765
                    length: 156
                  pos: 9709
                  length: 222
                pos: 9680
                length: 251
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 9940
                length: 13
              pos: 9606
              length: 353
          children: []
          pos: 9556
          length: 403
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: hashCode
              children: []
              pos: 10170
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 10145
              length: 185
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 10195
                        length: 5
                    children: []
                    pos: 10194
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return 7;
                    children: []
                    pos: 10216
                    length: 9
                  pos: 10202
                  length: 33
                pos: 10191
                length: 44
              - type: return_statement
                fields:
                  text: |-
                    return 37 * (17 * MathUtils.hash(imaginary) +
                                MathUtils.hash(real));
                children: []
                pos: 10244
                length: 80
              pos: 10181
              length: 149
          children: []
          pos: 10145
          length: 185
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getImaginary
              children: []
              pos: 10441
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 10427
              length: 62
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return imaginary;
                children: []
                pos: 10466
                length: 17
              pos: 10456
              length: 33
          children: []
          pos: 10427
          length: 62
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getReal
              children: []
              pos: 10590
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 10576
              length: 52
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return real;
                children: []
                pos: 10610
                length: 12
              pos: 10600
              length: 28
          children: []
          pos: 10576
          length: 52
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isNaN
              children: []
              pos: 10869
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 10854
              length: 52
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return isNaN;
                children: []
                pos: 10887
                length: 13
              pos: 10877
              length: 29
          children: []
          pos: 10854
          length: 52
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isInfinite
              children: []
              pos: 11322
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 11307
              length: 62
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return isInfinite;
                children: []
                pos: 11345
                length: 18
              pos: 11335
              length: 34
          children: []
          pos: 11307
          length: 62
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: multiply
              children: []
              pos: 12380
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex rhs
                children: []
                pos: 12389
                length: 11
              pos: 12365
              length: 585
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(rhs);
                children: []
                pos: 12449
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 12490
                            length: 5
                          right:
                            type: field_access
                            fields:
                              text: rhs.isNaN
                            children: []
                            pos: 12499
                            length: 9
                        children: []
                        pos: 12490
                        length: 18
                    children: []
                    pos: 12489
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 12524
                    length: 11
                  pos: 12510
                  length: 35
                pos: 12486
                length: 59
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: or
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: Double.isInfinite(real)
                                    children: []
                                    pos: 12558
                                    length: 23
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: Double.isInfinite(imaginary)
                                    children: []
                                    pos: 12585
                                    length: 28
                                children: []
                                pos: 12558
                                length: 55
                              right:
                                type: method_invocation
                                fields:
                                  text: Double.isInfinite(rhs.real)
                                children: []
                                pos: 12629
                                length: 27
                            children: []
                            pos: 12558
                            length: 98
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isInfinite(rhs.imaginary)
                            children: []
                            pos: 12659
                            length: 32
                        children: []
                        pos: 12558
                        length: 133
                    children: []
                    pos: 12557
                    length: 135
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return INF;
                    children: []
                    pos: 12787
                    length: 11
                  pos: 12693
                  length: 115
                pos: 12554
                length: 254
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real * rhs.real - imaginary * rhs.imaginary,
                                    real * rhs.imaginary + imaginary * rhs.real);
                children: []
                pos: 12817
                length: 127
              pos: 12439
              length: 511
          children: []
          pos: 12365
          length: 585
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: multiply
              children: []
              pos: 13871
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double rhs
                children: []
                pos: 13880
                length: 10
              pos: 13856
              length: 401
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 13906
                            length: 5
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isNaN(rhs)
                            children: []
                            pos: 13915
                            length: 17
                        children: []
                        pos: 13906
                        length: 26
                    children: []
                    pos: 13905
                    length: 28
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 13948
                    length: 11
                  pos: 13934
                  length: 35
                pos: 13902
                length: 67
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: Double.isInfinite(real)
                                children: []
                                pos: 13982
                                length: 23
                              right:
                                type: method_invocation
                                fields:
                                  text: Double.isInfinite(imaginary)
                                children: []
                                pos: 14009
                                length: 28
                            children: []
                            pos: 13982
                            length: 55
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isInfinite(rhs)
                            children: []
                            pos: 14053
                            length: 22
                        children: []
                        pos: 13982
                        length: 93
                    children: []
                    pos: 13981
                    length: 95
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return INF;
                    children: []
                    pos: 14171
                    length: 11
                  pos: 14077
                  length: 115
                pos: 13978
                length: 214
              - type: return_statement
                fields:
                  text: return createComplex(real * rhs, imaginary * rhs);
                children: []
                pos: 14201
                length: 50
              pos: 13892
              length: 365
          children: []
          pos: 13856
          length: 401
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: negate
              children: []
              pos: 14561
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 14546
              length: 136
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 14584
                        length: 5
                    children: []
                    pos: 14583
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 14605
                    length: 11
                  pos: 14591
                  length: 35
                pos: 14580
                length: 46
              - type: return_statement
                fields:
                  text: return createComplex(-real, -imaginary);
                children: []
                pos: 14636
                length: 40
              pos: 14570
              length: 112
          children: []
          pos: 14546
          length: 136
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: subtract
              children: []
              pos: 15372
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex rhs
                children: []
                pos: 15381
                length: 11
              pos: 15357
              length: 283
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(rhs);
                children: []
                pos: 15441
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 15482
                            length: 5
                          right:
                            type: field_access
                            fields:
                              text: rhs.isNaN
                            children: []
                            pos: 15491
                            length: 9
                        children: []
                        pos: 15482
                        length: 18
                    children: []
                    pos: 15481
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 15516
                    length: 11
                  pos: 15502
                  length: 35
                pos: 15478
                length: 59
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real - rhs.getReal(),
                                imaginary - rhs.getImaginary());
                children: []
                pos: 15547
                length: 87
              pos: 15431
              length: 209
          children: []
          pos: 15357
          length: 283
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: acos
              children: []
              pos: 16184
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 16169
              length: 195
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 16205
                        length: 5
                    children: []
                    pos: 16204
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 16226
                    length: 11
                  pos: 16212
                  length: 35
                pos: 16201
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return this.add(this.sqrt1z().multiply(Complex.I)).log()
                                  .multiply(Complex.I.negate());
                children: []
                pos: 16257
                length: 101
              pos: 16191
              length: 173
          children: []
          pos: 16169
          length: 195
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: asin
              children: []
              pos: 16901
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 16886
              length: 190
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 16922
                        length: 5
                    children: []
                    pos: 16921
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 16943
                    length: 11
                  pos: 16929
                  length: 35
                pos: 16918
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return sqrt1z().add(this.multiply(Complex.I)).log()
                                  .multiply(Complex.I.negate());
                children: []
                pos: 16974
                length: 96
              pos: 16908
              length: 168
          children: []
          pos: 16886
          length: 190
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: atan
              children: []
              pos: 17609
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 17594
              length: 225
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 17630
                        length: 5
                    children: []
                    pos: 17629
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 17651
                    length: 11
                  pos: 17637
                  length: 35
                pos: 17626
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return this.add(Complex.I).divide(Complex.I.subtract(this)).log()
                                .multiply(Complex.I.divide(createComplex(2.0, 0.0)));
                children: []
                pos: 17682
                length: 131
              pos: 17616
              length: 203
          children: []
          pos: 17594
          length: 225
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: cos
              children: []
              pos: 18882
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 18867
              length: 223
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 18902
                        length: 5
                    children: []
                    pos: 18901
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 18923
                    length: 11
                  pos: 18909
                  length: 35
                pos: 18898
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.cos(real) * MathUtils.cosh(imaginary),
                                -FastMath.sin(real) * MathUtils.sinh(imaginary));
                children: []
                pos: 18954
                length: 130
              pos: 18888
              length: 202
          children: []
          pos: 18867
          length: 223
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: cosh
              children: []
              pos: 20190
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 20175
              length: 223
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 20211
                        length: 5
                    children: []
                    pos: 20210
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 20232
                    length: 11
                  pos: 20218
                  length: 35
                pos: 20207
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(MathUtils.cosh(real) * FastMath.cos(imaginary),
                                MathUtils.sinh(real) * FastMath.sin(imaginary));
                children: []
                pos: 20263
                length: 129
              pos: 20197
              length: 201
          children: []
          pos: 20175
          length: 223
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: exp
              children: []
              pos: 21490
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 21475
              length: 230
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 21510
                        length: 5
                    children: []
                    pos: 21509
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 21531
                    length: 11
                  pos: 21517
                  length: 35
                pos: 21506
                length: 46
              - type: local_variable_declaration
                fields:
                  text: double expReal = FastMath.exp(real);
                children: []
                pos: 21562
                length: 36
              - type: return_statement
                fields:
                  text: return createComplex(expReal *  FastMath.cos(imaginary), expReal
                    * FastMath.sin(imaginary));
                children: []
                pos: 21607
                length: 92
              pos: 21496
              length: 209
          children: []
          pos: 21475
          length: 230
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: log
              children: []
              pos: 22984
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 22969
              length: 180
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 23004
                        length: 5
                    children: []
                    pos: 23003
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 23025
                    length: 11
                  pos: 23011
                  length: 35
                pos: 23000
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.log(abs()),
                                FastMath.atan2(imaginary, real));
                children: []
                pos: 23056
                length: 87
              pos: 22990
              length: 159
          children: []
          pos: 22969
          length: 180
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: pow
              children: []
              pos: 23860
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex x
                children: []
                pos: 23864
                length: 9
              pos: 23845
              length: 154
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(x);
                children: []
                pos: 23922
                length: 26
              - type: return_statement
                fields:
                  text: return this.log().multiply(x).exp();
                children: []
                pos: 23957
                length: 36
              pos: 23912
              length: 87
          children: []
          pos: 23845
          length: 154
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sin
              children: []
              pos: 25057
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 25042
              length: 222
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 25077
                        length: 5
                    children: []
                    pos: 25076
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 25098
                    length: 11
                  pos: 25084
                  length: 35
                pos: 25073
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.sin(real) * MathUtils.cosh(imaginary),
                                FastMath.cos(real) * MathUtils.sinh(imaginary));
                children: []
                pos: 25129
                length: 129
              pos: 25063
              length: 201
          children: []
          pos: 25042
          length: 222
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sinh
              children: []
              pos: 26360
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 26345
              length: 223
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 26381
                        length: 5
                    children: []
                    pos: 26380
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 26402
                    length: 11
                  pos: 26388
                  length: 35
                pos: 26377
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(MathUtils.sinh(real) * FastMath.cos(imaginary),
                                MathUtils.cosh(real) * FastMath.sin(imaginary));
                children: []
                pos: 26433
                length: 129
              pos: 26367
              length: 201
          children: []
          pos: 26345
          length: 223
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sqrt
              children: []
              pos: 27982
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 27967
              length: 494
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 28003
                        length: 5
                    children: []
                    pos: 28002
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 28024
                    length: 11
                  pos: 28010
                  length: 35
                pos: 27999
                length: 46
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: real
                                children: []
                                pos: 28059
                                length: 4
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 28067
                                length: 3
                            children: []
                            pos: 28059
                            length: 11
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: imaginary
                                children: []
                                pos: 28074
                                length: 9
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 28087
                                length: 3
                            children: []
                            pos: 28074
                            length: 16
                        children: []
                        pos: 28059
                        length: 31
                    children: []
                    pos: 28058
                    length: 33
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return createComplex(0.0, 0.0);
                    children: []
                    pos: 28106
                    length: 31
                  pos: 28092
                  length: 55
                pos: 28055
                length: 92
              - type: local_variable_declaration
                fields:
                  text: double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
                children: []
                pos: 28157
                length: 61
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: greater_or_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: real
                            children: []
                            pos: 28231
                            length: 4
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: '0.0'
                            children: []
                            pos: 28239
                            length: 3
                        children: []
                        pos: 28231
                        length: 11
                    children: []
                    pos: 28230
                    length: 13
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return createComplex(t, imaginary / (2.0 * t));
                    children: []
                    pos: 28258
                    length: 47
                  pos: 28244
                  length: 71
                pos: 28227
                length: 228
              pos: 27989
              length: 472
          children: []
          pos: 27967
          length: 494
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sqrt1z
              children: []
              pos: 29184
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 29169
              length: 108
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
                children: []
                pos: 29203
                length: 68
              pos: 29193
              length: 84
          children: []
          pos: 29169
          length: 108
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: tan
              children: []
              pos: 30426
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 30411
              length: 321
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 30446
                        length: 5
                    children: []
                    pos: 30445
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 30467
                    length: 11
                  pos: 30453
                  length: 35
                pos: 30442
                length: 46
              - type: local_variable_declaration
                fields:
                  text: double real2 = 2.0 * real;
                children: []
                pos: 30498
                length: 26
              - type: local_variable_declaration
                fields:
                  text: double imaginary2 = 2.0 * imaginary;
                children: []
                pos: 30533
                length: 36
              - type: local_variable_declaration
                fields:
                  text: double d = FastMath.cos(real2) + MathUtils.cosh(imaginary2);
                children: []
                pos: 30578
                length: 60
              - type: return_statement
                fields:
                  text: return createComplex(FastMath.sin(real2) / d, MathUtils.sinh(imaginary2)
                    / d);
                children: []
                pos: 30648
                length: 78
              pos: 30432
              length: 300
          children: []
          pos: 30411
          length: 321
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: tanh
              children: []
              pos: 31888
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 31873
              length: 322
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 31909
                        length: 5
                    children: []
                    pos: 31908
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 31930
                    length: 11
                  pos: 31916
                  length: 35
                pos: 31905
                length: 46
              - type: local_variable_declaration
                fields:
                  text: double real2 = 2.0 * real;
                children: []
                pos: 31961
                length: 26
              - type: local_variable_declaration
                fields:
                  text: double imaginary2 = 2.0 * imaginary;
                children: []
                pos: 31996
                length: 36
              - type: local_variable_declaration
                fields:
                  text: double d = MathUtils.cosh(real2) + FastMath.cos(imaginary2);
                children: []
                pos: 32041
                length: 60
              - type: return_statement
                fields:
                  text: return createComplex(MathUtils.sinh(real2) / d, FastMath.sin(imaginary2)
                    / d);
                children: []
                pos: 32111
                length: 78
              pos: 31895
              length: 300
          children: []
          pos: 31873
          length: 322
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getArgument
              children: []
              pos: 33041
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 33027
              length: 93
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return FastMath.atan2(getImaginary(), getReal());
                children: []
                pos: 33065
                length: 49
              pos: 33055
              length: 65
          children: []
          pos: 33027
          length: 93
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: nthRoot
              children: []
              pos: 34088
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int n
                children: []
                pos: 34096
                length: 5
              pos: 34067
              length: 1225
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_or_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: "n"
                            children: []
                            pos: 34150
                            length: 1
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 34155
                            length: 1
                        children: []
                        pos: 34150
                        length: 6
                    children: []
                    pos: 34149
                    length: 8
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: |-
                        throw MathRuntimeException.createIllegalArgumentException(
                                            LocalizedFormats.CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N,
                                            n);
                    children: []
                    pos: 34172
                    length: 159
                  pos: 34158
                  length: 183
                pos: 34146
                length: 195
              - type: local_variable_declaration
                fields:
                  text: List<Complex> result = new ArrayList<Complex>();
                children: []
                pos: 34351
                length: 48
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 34413
                        length: 5
                    children: []
                    pos: 34412
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: result.add(NaN);
                    children: []
                    pos: 34434
                    length: 16
                  - type: return_statement
                    fields:
                      text: return result;
                    children: []
                    pos: 34463
                    length: 14
                  pos: 34420
                  length: 67
                pos: 34409
                length: 78
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isInfinite()
                        children: []
                        pos: 34501
                        length: 12
                    children: []
                    pos: 34500
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: result.add(INF);
                    children: []
                    pos: 34529
                    length: 16
                  - type: return_statement
                    fields:
                      text: return result;
                    children: []
                    pos: 34558
                    length: 14
                  pos: 34515
                  length: 67
                pos: 34497
                length: 85
              - type: local_variable_declaration
                fields:
                  text: final double nthRootOfAbs = FastMath.pow(abs(), 1.0 / n);
                children: []
                pos: 34667
                length: 57
              - type: local_variable_declaration
                fields:
                  text: final double nthPhi = getArgument()/n;
                children: []
                pos: 34804
                length: 38
              - type: local_variable_declaration
                fields:
                  text: final double slice = 2 * FastMath.PI / n;
                children: []
                pos: 34851
                length: 41
              - type: local_variable_declaration
                fields:
                  text: double innerPart = nthPhi;
                children: []
                pos: 34901
                length: 26
              - type: for_statement
                fields:
                  text: |-
                    for (int k = 0; k < n ; k++) {
                                // inner part
                                final double realPart      = nthRootOfAbs *  FastMath.cos(innerPart);
                                final double imaginaryPart = nthRootOfAbs *  FastMath.sin(innerPart);
                                result.add(createComplex(realPart, imaginaryPart));
                                innerPart += slice;
                            }
                children: []
                pos: 34936
                length: 326
              - type: return_statement
                fields:
                  text: return result;
                children: []
                pos: 35272
                length: 14
              pos: 34135
              length: 1157
          children: []
          pos: 34067
          length: 1225
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createComplex
              children: []
              pos: 35553
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double realPart
                children: []
                pos: 35567
                length: 15
              pos: 35535
              length: 131
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return new Complex(realPart, imaginaryPart);
                children: []
                pos: 35616
                length: 44
              pos: 35606
              length: 60
          children: []
          pos: 35535
          length: 131
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: readResolve
              children: []
              pos: 35960
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 35937
              length: 91
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return createComplex(real, imaginary);
                children: []
                pos: 35984
                length: 38
              pos: 35974
              length: 54
          children: []
          pos: 35937
          length: 91
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getField
              children: []
              pos: 36079
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 36059
              length: 81
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return ComplexField.getInstance();
                children: []
                pos: 36100
                length: 34
              pos: 36090
              length: 50
          children: []
          pos: 36059
          length: 81
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: toString
              children: []
              pos: 36199
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 36171
              length: 98
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return "(" + real + ", " + imaginary + ")";
                children: []
                pos: 36220
                length: 43
              pos: 36210
              length: 59
          children: []
          pos: 36171
          length: 98
        pos: 1949
        length: 34322
    children: []
    pos: 1949
    length: 34322
  pos: 0
  length: 36272
text_diff: |
  --- before
  +++ after
  @@ -150,9 +150,6 @@
       public Complex add(Complex rhs)
           throws NullArgumentException {
           MathUtils.checkNotNull(rhs);
  -        if (isNaN || rhs.isNaN) {
  -            return NaN;
  -        }
           return createComplex(real + rhs.getReal(),
               imaginary + rhs.getImaginary());
       }
tree_diff: |+
  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  if_statement [5465,5524]
      parenthesized_expression [5468,5488]
          or [5469,5487]
              identifier: isNaN [5469,5474]
              field_access: rhs.isNaN [5478,5487]
      block [5489,5524]
          return_statement: return NaN; [5503,5514]

...
