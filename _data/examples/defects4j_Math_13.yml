---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: AbstractLeastSquaresOptimizer
        children: []
        pos: 3244
        length: 29
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: |-
              @Deprecated
                  private static final double DEFAULT_SINGULARITY_THRESHOLD = 1e-14;
          children: []
          pos: 3545
          length: 82
        - type: field_declaration
          fields:
            text: |-
              @Deprecated
                  protected double[][] weightedResidualJacobian;
          children: []
          pos: 4070
          length: 62
        - type: field_declaration
          fields:
            text: |-
              @Deprecated
                  protected int cols;
          children: []
          pos: 4225
          length: 35
        - type: field_declaration
          fields:
            text: |-
              @Deprecated
                  protected int rows;
          children: []
          pos: 4350
          length: 35
        - type: field_declaration
          fields:
            text: |-
              @Deprecated
                  protected double[] point;
          children: []
          pos: 4451
          length: 41
        - type: field_declaration
          fields:
            text: |-
              @Deprecated
                  protected double[] objective;
          children: []
          pos: 4577
          length: 45
        - type: field_declaration
          fields:
            text: |-
              @Deprecated
                  protected double[] weightedResiduals;
          children: []
          pos: 4692
          length: 53
        - type: field_declaration
          fields:
            text: |-
              @Deprecated
                  protected double cost;
          children: []
          pos: 4928
          length: 38
        - type: field_declaration
          fields:
            text: private MultivariateDifferentiableVectorFunction jF;
          children: []
          pos: 5014
          length: 52
        - type: field_declaration
          fields:
            text: private int jacobianEvaluations;
          children: []
          pos: 5121
          length: 32
        - type: field_declaration
          fields:
            text: private RealMatrix weightMatrixSqrt;
          children: []
          pos: 5203
          length: 36
        - type: constructor_declaration
          fields:
            text: |-
              @Deprecated
                  protected AbstractLeastSquaresOptimizer() {}
          children: []
          pos: 5539
          length: 60
        - type: constructor_declaration
          fields:
            text: |-
              protected AbstractLeastSquaresOptimizer(ConvergenceChecker<PointVectorValuePair> checker) {
                      super(checker);
                  }
          children: []
          pos: 5664
          length: 121
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getJacobianEvaluations
              children: []
              pos: 5885
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 5874
              length: 79
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return jacobianEvaluations;
                children: []
                pos: 5920
                length: 27
              pos: 5910
              length: 43
          children: []
          pos: 5874
          length: 79
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateJacobian
              children: []
              pos: 6257
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6226
              length: 213
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final RealMatrix weightedJacobian = computeWeightedJacobian(point);
                children: []
                pos: 6284
                length: 67
              - type: expression_statement
                fields:
                  text: weightedResidualJacobian = weightedJacobian.scalarMultiply(-1).getData();
                children: []
                pos: 6360
                length: 73
              pos: 6274
              length: 165
          children: []
          pos: 6226
          length: 213
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: computeWeightedJacobian
              children: []
              pos: 6782
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double[] params
                children: []
                pos: 6806
                length: 15
              pos: 6761
              length: 1002
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: "++jacobianEvaluations;"
                children: []
                pos: 6833
                length: 22
              - type: local_variable_declaration
                fields:
                  text: final DerivativeStructure[] dsPoint = new DerivativeStructure[params.length];
                children: []
                pos: 6865
                length: 77
              - type: local_variable_declaration
                fields:
                  text: final int nC = params.length;
                children: []
                pos: 6951
                length: 29
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < nC; ++i) {
                                dsPoint[i] = new DerivativeStructure(nC, 1, i, params[i]);
                            }
                children: []
                pos: 6989
                length: 111
              - type: local_variable_declaration
                fields:
                  text: final DerivativeStructure[] dsValue = jF.value(dsPoint);
                children: []
                pos: 7109
                length: 56
              - type: local_variable_declaration
                fields:
                  text: final int nR = getTarget().length;
                children: []
                pos: 7174
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: field_access
                            fields:
                              text: dsValue.length
                            children: []
                            pos: 7221
                            length: 14
                          right:
                            type: identifier
                            fields:
                              text: nR
                            children: []
                            pos: 7239
                            length: 2
                        children: []
                        pos: 7221
                        length: 20
                    children: []
                    pos: 7220
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new DimensionMismatchException(dsValue.length, nR);
                    children: []
                    pos: 7257
                    length: 57
                  pos: 7243
                  length: 81
                pos: 7217
                length: 107
              - type: local_variable_declaration
                fields:
                  text: final double[][] jacobianData = new double[nR][nC];
                children: []
                pos: 7333
                length: 51
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < nR; ++i) {
                                int[] orders = new int[nC];
                                for (int j = 0; j < nC; ++j) {
                                    orders[j] = 1;
                                    jacobianData[i][j] = dsValue[i].getPartialDerivative(orders);
                                    orders[j] = 0;
                                }
                            }
                children: []
                pos: 7393
                length: 277
              - type: return_statement
                fields:
                  text: return weightMatrixSqrt.multiply(MatrixUtils.createRealMatrix(jacobianData));
                children: []
                pos: 7680
                length: 77
              pos: 6823
              length: 940
          children: []
          pos: 6761
          length: 1002
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateResidualsAndCost
              children: []
              pos: 8317
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 8286
              length: 413
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: objective = computeObjectiveValue(point);
                children: []
                pos: 8352
                length: 41
              - type: local_variable_declaration
                fields:
                  text: final double[] res = computeResiduals(objective);
                children: []
                pos: 8402
                length: 49
              - type: expression_statement
                fields:
                  text: cost = computeCost(res);
                children: []
                pos: 8486
                length: 24
              - type: local_variable_declaration
                fields:
                  text: final ArrayRealVector residuals = new ArrayRealVector(res);
                children: []
                pos: 8559
                length: 59
              - type: expression_statement
                fields:
                  text: weightedResiduals = weightMatrixSqrt.operate(residuals).toArray();
                children: []
                pos: 8627
                length: 66
              pos: 8342
              length: 357
          children: []
          pos: 8286
          length: 413
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: computeCost
              children: []
              pos: 8889
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double[] residuals
                children: []
                pos: 8901
                length: 18
              pos: 8872
              length: 190
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final ArrayRealVector r = new ArrayRealVector(residuals);
                children: []
                pos: 8931
                length: 57
              - type: return_statement
                fields:
                  text: return FastMath.sqrt(r.dotProduct(getWeight().operate(r)));
                children: []
                pos: 8997
                length: 59
              pos: 8921
              length: 141
          children: []
          pos: 8872
          length: 190
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getRMS
              children: []
              pos: 9509
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 9495
              length: 83
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return FastMath.sqrt(getChiSquare() / rows);
                children: []
                pos: 9528
                length: 44
              pos: 9518
              length: 60
          children: []
          pos: 9495
          length: 83
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getChiSquare
              children: []
              pos: 9828
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 9814
              length: 64
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return cost * cost;
                children: []
                pos: 9853
                length: 19
              pos: 9843
              length: 35
          children: []
          pos: 9814
          length: 64
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getWeightSquareRoot
              children: []
              pos: 10046
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 10028
              length: 87
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return weightMatrixSqrt.copy();
                children: []
                pos: 10078
                length: 31
              pos: 10068
              length: 47
          children: []
          pos: 10028
          length: 87
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: setCost
              children: []
              pos: 10230
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double cost
                children: []
                pos: 10238
                length: 11
              pos: 10215
              length: 69
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: this.cost = cost;
                children: []
                pos: 10261
                length: 17
              pos: 10251
              length: 33
          children: []
          pos: 10215
          length: 69
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getCovariances
              children: []
              pos: 10727
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 10693
              length: 120
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return getCovariances(DEFAULT_SINGULARITY_THRESHOLD);
                children: []
                pos: 10754
                length: 53
              pos: 10744
              length: 69
          children: []
          pos: 10693
          length: 120
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getCovariances
              children: []
              pos: 11621
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double threshold
                children: []
                pos: 11636
                length: 16
              pos: 11587
              length: 127
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return computeCovariances(point, threshold);
                children: []
                pos: 11664
                length: 44
              pos: 11654
              length: 60
          children: []
          pos: 11587
          length: 127
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: computeCovariances
              children: []
              pos: 12461
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double[] params
                children: []
                pos: 12480
                length: 15
              pos: 12443
              length: 501
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final RealMatrix j = computeWeightedJacobian(params);
                children: []
                pos: 12598
                length: 53
              - type: local_variable_declaration
                fields:
                  text: final RealMatrix jTj = j.transpose().multiply(j);
                children: []
                pos: 12695
                length: 49
              - type: local_variable_declaration
                fields:
                  text: |-
                    final DecompositionSolver solver
                                = new QRDecomposition(jTj, threshold).getSolver();
                children: []
                pos: 12797
                length: 95
              - type: return_statement
                fields:
                  text: return solver.getInverse().getData();
                children: []
                pos: 12901
                length: 37
              pos: 12556
              length: 388
          children: []
          pos: 12443
          length: 501
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: guessParametersErrors
              children: []
              pos: 14493
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 14461
              length: 573
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_or_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: rows
                            children: []
                            pos: 14531
                            length: 4
                          right:
                            type: identifier
                            fields:
                              text: cols
                            children: []
                            pos: 14539
                            length: 4
                        children: []
                        pos: 14531
                        length: 12
                    children: []
                    pos: 14530
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: |-
                        throw new NumberIsTooSmallException(LocalizedFormats.NO_DEGREES_OF_FREEDOM,
                                                                        rows, cols, false);
                    children: []
                    pos: 14559
                    length: 143
                  pos: 14545
                  length: 167
                pos: 14527
                length: 185
              - type: local_variable_declaration
                fields:
                  text: double[] errors = new double[cols];
                children: []
                pos: 14721
                length: 35
              - type: local_variable_declaration
                fields:
                  text: final double c = FastMath.sqrt(getChiSquare() / (rows - cols));
                children: []
                pos: 14765
                length: 63
              - type: local_variable_declaration
                fields:
                  text: double[][] covar = computeCovariances(point, 1e-14);
                children: []
                pos: 14837
                length: 52
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < errors.length; ++i) {
                                errors[i] = FastMath.sqrt(covar[i][i]) * c;
                            }
                children: []
                pos: 14898
                length: 107
              - type: return_statement
                fields:
                  text: return errors;
                children: []
                pos: 15014
                length: 14
              pos: 14517
              length: 517
          children: []
          pos: 14461
          length: 573
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: computeSigma
              children: []
              pos: 15829
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double[] params
                children: []
                pos: 15842
                length: 15
              pos: 15813
              length: 415
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final int nC = params.length;
                children: []
                pos: 15941
                length: 29
              - type: local_variable_declaration
                fields:
                  text: final double[] sig = new double[nC];
                children: []
                pos: 15979
                length: 36
              - type: local_variable_declaration
                fields:
                  text: final double[][] cov = computeCovariances(params, covarianceSingularityThreshold);
                children: []
                pos: 16024
                length: 82
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < nC; ++i) {
                                sig[i] = FastMath.sqrt(cov[i][i]);
                            }
                children: []
                pos: 16115
                length: 87
              - type: return_statement
                fields:
                  text: return sig;
                children: []
                pos: 16211
                length: 11
              pos: 15931
              length: 297
          children: []
          pos: 15813
          length: 415
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: optimize
              children: []
              pos: 16576
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int maxEval
                children: []
                pos: 16585
                length: 11
              pos: 16518
              length: 636
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return optimizeInternal(maxEval,
                                                    FunctionUtils.toMultivariateDifferentiableVectorFunction(f),
                                                    new Target(target),
                                                    new Weight(weights),
                                                    new InitialGuess(startPoint));
                children: []
                pos: 16855
                length: 293
              pos: 16845
              length: 309
          children: []
          pos: 16518
          length: 636
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: optimize
              children: []
              pos: 18502
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final int maxEval
                children: []
                pos: 18511
                length: 17
              pos: 18458
              length: 538
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return optimizeInternal(maxEval, f,
                                                    new Target(target),
                                                    new Weight(weights),
                                                    new InitialGuess(startPoint));
                children: []
                pos: 18787
                length: 203
              pos: 18777
              length: 219
          children: []
          pos: 18458
          length: 538
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: optimizeInternal
              children: []
              pos: 20303
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final int maxEval
                children: []
                pos: 20320
                length: 17
              pos: 20256
              length: 540
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return super.optimizeInternal(maxEval, FunctionUtils.toDifferentiableMultivariateVectorFunction(f),
                    optData);
                children: []
                pos: 20681
                length: 109
              pos: 20522
              length: 274
          children: []
          pos: 20256
          length: 540
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: setUp
              children: []
              pos: 20856
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 20827
              length: 935
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: super.setUp();
                children: []
                pos: 20874
                length: 14
              - type: expression_statement
                fields:
                  text: jacobianEvaluations = 0;
                children: []
                pos: 20924
                length: 24
              - type: expression_statement
                fields:
                  text: weightMatrixSqrt = squareRoot(getWeight());
                children: []
                pos: 21003
                length: 43
              - type: expression_statement
                fields:
                  text: jF = FunctionUtils.toMultivariateDifferentiableVectorFunction((DifferentiableMultivariateVectorFunction)
                    getObjectiveFunction());
                children: []
                pos: 21464
                length: 129
              - type: expression_statement
                fields:
                  text: point = getStartPoint();
                children: []
                pos: 21668
                length: 24
              - type: expression_statement
                fields:
                  text: rows = getTarget().length;
                children: []
                pos: 21701
                length: 26
              - type: expression_statement
                fields:
                  text: cols = point.length;
                children: []
                pos: 21736
                length: 20
              pos: 20864
              length: 898
          children: []
          pos: 20827
          length: 935
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: computeResiduals
              children: []
              pos: 22430
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double[] objectiveValue
                children: []
                pos: 22447
                length: 23
              pos: 22411
              length: 522
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final double[] target = getTarget();
                children: []
                pos: 22482
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: field_access
                            fields:
                              text: objectiveValue.length
                            children: []
                            pos: 22531
                            length: 21
                          right:
                            type: field_access
                            fields:
                              text: target.length
                            children: []
                            pos: 22556
                            length: 13
                        children: []
                        pos: 22531
                        length: 38
                    children: []
                    pos: 22530
                    length: 40
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: |-
                        throw new DimensionMismatchException(target.length,
                                                                         objectiveValue.length);
                    children: []
                    pos: 22585
                    length: 124
                  pos: 22571
                  length: 148
                pos: 22527
                length: 192
              - type: local_variable_declaration
                fields:
                  text: final double[] residuals = new double[target.length];
                children: []
                pos: 22729
                length: 53
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < target.length; i++) {
                                residuals[i] = target[i] - objectiveValue[i];
                            }
                children: []
                pos: 22791
                length: 109
              - type: return_statement
                fields:
                  text: return residuals;
                children: []
                pos: 22910
                length: 17
              pos: 22472
              length: 461
          children: []
          pos: 22411
          length: 522
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: squareRoot
              children: []
              pos: 23150
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: RealMatrix m
                children: []
                pos: 23161
                length: 12
              pos: 23131
              length: 496
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: m instanceof DiagonalMatrix
                        children: []
                        pos: 23189
                        length: 27
                    children: []
                    pos: 23188
                    length: 29
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: final int dim = m.getRowDimension();
                    children: []
                    pos: 23232
                    length: 36
                  - type: local_variable_declaration
                    fields:
                      text: final RealMatrix sqrtM = new DiagonalMatrix(dim);
                    children: []
                    pos: 23281
                    length: 49
                  - type: for_statement
                    fields:
                      text: |-
                        for (int i = 0; i < dim; i++) {
                                       sqrtM.setEntry(i, i, FastMath.sqrt(m.getEntry(i, i)));
                                    }
                    children: []
                    pos: 23343
                    length: 115
                  - type: return_statement
                    fields:
                      text: return sqrtM;
                    children: []
                    pos: 23471
                    length: 13
                  pos: 23218
                  length: 276
                pos: 23185
                length: 436
              pos: 23175
              length: 452
          children: []
          pos: 23131
          length: 496
        pos: 3210
        length: 20419
    children: []
    pos: 3210
    length: 20419
  pos: 0
  length: 23630
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: AbstractLeastSquaresOptimizer
        children: []
        pos: 3244
        length: 29
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: |-
              @Deprecated
                  private static final double DEFAULT_SINGULARITY_THRESHOLD = 1e-14;
          children: []
          pos: 3545
          length: 82
        - type: field_declaration
          fields:
            text: |-
              @Deprecated
                  protected double[][] weightedResidualJacobian;
          children: []
          pos: 4070
          length: 62
        - type: field_declaration
          fields:
            text: |-
              @Deprecated
                  protected int cols;
          children: []
          pos: 4225
          length: 35
        - type: field_declaration
          fields:
            text: |-
              @Deprecated
                  protected int rows;
          children: []
          pos: 4350
          length: 35
        - type: field_declaration
          fields:
            text: |-
              @Deprecated
                  protected double[] point;
          children: []
          pos: 4451
          length: 41
        - type: field_declaration
          fields:
            text: |-
              @Deprecated
                  protected double[] objective;
          children: []
          pos: 4577
          length: 45
        - type: field_declaration
          fields:
            text: |-
              @Deprecated
                  protected double[] weightedResiduals;
          children: []
          pos: 4692
          length: 53
        - type: field_declaration
          fields:
            text: |-
              @Deprecated
                  protected double cost;
          children: []
          pos: 4928
          length: 38
        - type: field_declaration
          fields:
            text: private MultivariateDifferentiableVectorFunction jF;
          children: []
          pos: 5014
          length: 52
        - type: field_declaration
          fields:
            text: private int jacobianEvaluations;
          children: []
          pos: 5121
          length: 32
        - type: field_declaration
          fields:
            text: private RealMatrix weightMatrixSqrt;
          children: []
          pos: 5203
          length: 36
        - type: constructor_declaration
          fields:
            text: |-
              @Deprecated
                  protected AbstractLeastSquaresOptimizer() {}
          children: []
          pos: 5539
          length: 60
        - type: constructor_declaration
          fields:
            text: |-
              protected AbstractLeastSquaresOptimizer(ConvergenceChecker<PointVectorValuePair> checker) {
                      super(checker);
                  }
          children: []
          pos: 5664
          length: 121
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getJacobianEvaluations
              children: []
              pos: 5885
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 5874
              length: 79
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return jacobianEvaluations;
                children: []
                pos: 5920
                length: 27
              pos: 5910
              length: 43
          children: []
          pos: 5874
          length: 79
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateJacobian
              children: []
              pos: 6257
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6226
              length: 213
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final RealMatrix weightedJacobian = computeWeightedJacobian(point);
                children: []
                pos: 6284
                length: 67
              - type: expression_statement
                fields:
                  text: weightedResidualJacobian = weightedJacobian.scalarMultiply(-1).getData();
                children: []
                pos: 6360
                length: 73
              pos: 6274
              length: 165
          children: []
          pos: 6226
          length: 213
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: computeWeightedJacobian
              children: []
              pos: 6782
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double[] params
                children: []
                pos: 6806
                length: 15
              pos: 6761
              length: 1002
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: "++jacobianEvaluations;"
                children: []
                pos: 6833
                length: 22
              - type: local_variable_declaration
                fields:
                  text: final DerivativeStructure[] dsPoint = new DerivativeStructure[params.length];
                children: []
                pos: 6865
                length: 77
              - type: local_variable_declaration
                fields:
                  text: final int nC = params.length;
                children: []
                pos: 6951
                length: 29
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < nC; ++i) {
                                dsPoint[i] = new DerivativeStructure(nC, 1, i, params[i]);
                            }
                children: []
                pos: 6989
                length: 111
              - type: local_variable_declaration
                fields:
                  text: final DerivativeStructure[] dsValue = jF.value(dsPoint);
                children: []
                pos: 7109
                length: 56
              - type: local_variable_declaration
                fields:
                  text: final int nR = getTarget().length;
                children: []
                pos: 7174
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: field_access
                            fields:
                              text: dsValue.length
                            children: []
                            pos: 7221
                            length: 14
                          right:
                            type: identifier
                            fields:
                              text: nR
                            children: []
                            pos: 7239
                            length: 2
                        children: []
                        pos: 7221
                        length: 20
                    children: []
                    pos: 7220
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new DimensionMismatchException(dsValue.length, nR);
                    children: []
                    pos: 7257
                    length: 57
                  pos: 7243
                  length: 81
                pos: 7217
                length: 107
              - type: local_variable_declaration
                fields:
                  text: final double[][] jacobianData = new double[nR][nC];
                children: []
                pos: 7333
                length: 51
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < nR; ++i) {
                                int[] orders = new int[nC];
                                for (int j = 0; j < nC; ++j) {
                                    orders[j] = 1;
                                    jacobianData[i][j] = dsValue[i].getPartialDerivative(orders);
                                    orders[j] = 0;
                                }
                            }
                children: []
                pos: 7393
                length: 277
              - type: return_statement
                fields:
                  text: return weightMatrixSqrt.multiply(MatrixUtils.createRealMatrix(jacobianData));
                children: []
                pos: 7680
                length: 77
              pos: 6823
              length: 940
          children: []
          pos: 6761
          length: 1002
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateResidualsAndCost
              children: []
              pos: 8317
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 8286
              length: 413
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: objective = computeObjectiveValue(point);
                children: []
                pos: 8352
                length: 41
              - type: local_variable_declaration
                fields:
                  text: final double[] res = computeResiduals(objective);
                children: []
                pos: 8402
                length: 49
              - type: expression_statement
                fields:
                  text: cost = computeCost(res);
                children: []
                pos: 8486
                length: 24
              - type: local_variable_declaration
                fields:
                  text: final ArrayRealVector residuals = new ArrayRealVector(res);
                children: []
                pos: 8559
                length: 59
              - type: expression_statement
                fields:
                  text: weightedResiduals = weightMatrixSqrt.operate(residuals).toArray();
                children: []
                pos: 8627
                length: 66
              pos: 8342
              length: 357
          children: []
          pos: 8286
          length: 413
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: computeCost
              children: []
              pos: 8889
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double[] residuals
                children: []
                pos: 8901
                length: 18
              pos: 8872
              length: 190
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final ArrayRealVector r = new ArrayRealVector(residuals);
                children: []
                pos: 8931
                length: 57
              - type: return_statement
                fields:
                  text: return FastMath.sqrt(r.dotProduct(getWeight().operate(r)));
                children: []
                pos: 8997
                length: 59
              pos: 8921
              length: 141
          children: []
          pos: 8872
          length: 190
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getRMS
              children: []
              pos: 9509
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 9495
              length: 83
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return FastMath.sqrt(getChiSquare() / rows);
                children: []
                pos: 9528
                length: 44
              pos: 9518
              length: 60
          children: []
          pos: 9495
          length: 83
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getChiSquare
              children: []
              pos: 9828
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 9814
              length: 64
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return cost * cost;
                children: []
                pos: 9853
                length: 19
              pos: 9843
              length: 35
          children: []
          pos: 9814
          length: 64
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getWeightSquareRoot
              children: []
              pos: 10046
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 10028
              length: 87
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return weightMatrixSqrt.copy();
                children: []
                pos: 10078
                length: 31
              pos: 10068
              length: 47
          children: []
          pos: 10028
          length: 87
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: setCost
              children: []
              pos: 10230
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double cost
                children: []
                pos: 10238
                length: 11
              pos: 10215
              length: 69
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: this.cost = cost;
                children: []
                pos: 10261
                length: 17
              pos: 10251
              length: 33
          children: []
          pos: 10215
          length: 69
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getCovariances
              children: []
              pos: 10727
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 10693
              length: 120
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return getCovariances(DEFAULT_SINGULARITY_THRESHOLD);
                children: []
                pos: 10754
                length: 53
              pos: 10744
              length: 69
          children: []
          pos: 10693
          length: 120
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getCovariances
              children: []
              pos: 11621
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double threshold
                children: []
                pos: 11636
                length: 16
              pos: 11587
              length: 127
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return computeCovariances(point, threshold);
                children: []
                pos: 11664
                length: 44
              pos: 11654
              length: 60
          children: []
          pos: 11587
          length: 127
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: computeCovariances
              children: []
              pos: 12461
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double[] params
                children: []
                pos: 12480
                length: 15
              pos: 12443
              length: 501
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final RealMatrix j = computeWeightedJacobian(params);
                children: []
                pos: 12598
                length: 53
              - type: local_variable_declaration
                fields:
                  text: final RealMatrix jTj = j.transpose().multiply(j);
                children: []
                pos: 12695
                length: 49
              - type: local_variable_declaration
                fields:
                  text: |-
                    final DecompositionSolver solver
                                = new QRDecomposition(jTj, threshold).getSolver();
                children: []
                pos: 12797
                length: 95
              - type: return_statement
                fields:
                  text: return solver.getInverse().getData();
                children: []
                pos: 12901
                length: 37
              pos: 12556
              length: 388
          children: []
          pos: 12443
          length: 501
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: guessParametersErrors
              children: []
              pos: 14493
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 14461
              length: 573
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_or_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: rows
                            children: []
                            pos: 14531
                            length: 4
                          right:
                            type: identifier
                            fields:
                              text: cols
                            children: []
                            pos: 14539
                            length: 4
                        children: []
                        pos: 14531
                        length: 12
                    children: []
                    pos: 14530
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: |-
                        throw new NumberIsTooSmallException(LocalizedFormats.NO_DEGREES_OF_FREEDOM,
                                                                        rows, cols, false);
                    children: []
                    pos: 14559
                    length: 143
                  pos: 14545
                  length: 167
                pos: 14527
                length: 185
              - type: local_variable_declaration
                fields:
                  text: double[] errors = new double[cols];
                children: []
                pos: 14721
                length: 35
              - type: local_variable_declaration
                fields:
                  text: final double c = FastMath.sqrt(getChiSquare() / (rows - cols));
                children: []
                pos: 14765
                length: 63
              - type: local_variable_declaration
                fields:
                  text: double[][] covar = computeCovariances(point, 1e-14);
                children: []
                pos: 14837
                length: 52
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < errors.length; ++i) {
                                errors[i] = FastMath.sqrt(covar[i][i]) * c;
                            }
                children: []
                pos: 14898
                length: 107
              - type: return_statement
                fields:
                  text: return errors;
                children: []
                pos: 15014
                length: 14
              pos: 14517
              length: 517
          children: []
          pos: 14461
          length: 573
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: computeSigma
              children: []
              pos: 15829
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double[] params
                children: []
                pos: 15842
                length: 15
              pos: 15813
              length: 415
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final int nC = params.length;
                children: []
                pos: 15941
                length: 29
              - type: local_variable_declaration
                fields:
                  text: final double[] sig = new double[nC];
                children: []
                pos: 15979
                length: 36
              - type: local_variable_declaration
                fields:
                  text: final double[][] cov = computeCovariances(params, covarianceSingularityThreshold);
                children: []
                pos: 16024
                length: 82
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < nC; ++i) {
                                sig[i] = FastMath.sqrt(cov[i][i]);
                            }
                children: []
                pos: 16115
                length: 87
              - type: return_statement
                fields:
                  text: return sig;
                children: []
                pos: 16211
                length: 11
              pos: 15931
              length: 297
          children: []
          pos: 15813
          length: 415
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: optimize
              children: []
              pos: 16576
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int maxEval
                children: []
                pos: 16585
                length: 11
              pos: 16518
              length: 636
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return optimizeInternal(maxEval,
                                                    FunctionUtils.toMultivariateDifferentiableVectorFunction(f),
                                                    new Target(target),
                                                    new Weight(weights),
                                                    new InitialGuess(startPoint));
                children: []
                pos: 16855
                length: 293
              pos: 16845
              length: 309
          children: []
          pos: 16518
          length: 636
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: optimize
              children: []
              pos: 18502
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final int maxEval
                children: []
                pos: 18511
                length: 17
              pos: 18458
              length: 538
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return optimizeInternal(maxEval, f,
                                                    new Target(target),
                                                    new Weight(weights),
                                                    new InitialGuess(startPoint));
                children: []
                pos: 18787
                length: 203
              pos: 18777
              length: 219
          children: []
          pos: 18458
          length: 538
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: optimizeInternal
              children: []
              pos: 20303
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final int maxEval
                children: []
                pos: 20320
                length: 17
              pos: 20256
              length: 540
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return super.optimizeInternal(maxEval, FunctionUtils.toDifferentiableMultivariateVectorFunction(f),
                    optData);
                children: []
                pos: 20681
                length: 109
              pos: 20522
              length: 274
          children: []
          pos: 20256
          length: 540
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: setUp
              children: []
              pos: 20856
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 20827
              length: 935
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: super.setUp();
                children: []
                pos: 20874
                length: 14
              - type: expression_statement
                fields:
                  text: jacobianEvaluations = 0;
                children: []
                pos: 20924
                length: 24
              - type: expression_statement
                fields:
                  text: weightMatrixSqrt = squareRoot(getWeight());
                children: []
                pos: 21003
                length: 43
              - type: expression_statement
                fields:
                  text: jF = FunctionUtils.toMultivariateDifferentiableVectorFunction((DifferentiableMultivariateVectorFunction)
                    getObjectiveFunction());
                children: []
                pos: 21464
                length: 129
              - type: expression_statement
                fields:
                  text: point = getStartPoint();
                children: []
                pos: 21668
                length: 24
              - type: expression_statement
                fields:
                  text: rows = getTarget().length;
                children: []
                pos: 21701
                length: 26
              - type: expression_statement
                fields:
                  text: cols = point.length;
                children: []
                pos: 21736
                length: 20
              pos: 20864
              length: 898
          children: []
          pos: 20827
          length: 935
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: computeResiduals
              children: []
              pos: 22430
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double[] objectiveValue
                children: []
                pos: 22447
                length: 23
              pos: 22411
              length: 522
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final double[] target = getTarget();
                children: []
                pos: 22482
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: field_access
                            fields:
                              text: objectiveValue.length
                            children: []
                            pos: 22531
                            length: 21
                          right:
                            type: field_access
                            fields:
                              text: target.length
                            children: []
                            pos: 22556
                            length: 13
                        children: []
                        pos: 22531
                        length: 38
                    children: []
                    pos: 22530
                    length: 40
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: |-
                        throw new DimensionMismatchException(target.length,
                                                                         objectiveValue.length);
                    children: []
                    pos: 22585
                    length: 124
                  pos: 22571
                  length: 148
                pos: 22527
                length: 192
              - type: local_variable_declaration
                fields:
                  text: final double[] residuals = new double[target.length];
                children: []
                pos: 22729
                length: 53
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < target.length; i++) {
                                residuals[i] = target[i] - objectiveValue[i];
                            }
                children: []
                pos: 22791
                length: 109
              - type: return_statement
                fields:
                  text: return residuals;
                children: []
                pos: 22910
                length: 17
              pos: 22472
              length: 461
          children: []
          pos: 22411
          length: 522
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: squareRoot
              children: []
              pos: 23150
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: RealMatrix m
                children: []
                pos: 23161
                length: 12
              pos: 23131
              length: 161
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final EigenDecomposition dec = new EigenDecomposition(m);
                children: []
                pos: 23189
                length: 57
              - type: return_statement
                fields:
                  text: return dec.getSquareRoot();
                children: []
                pos: 23259
                length: 27
              pos: 23175
              length: 117
          children: []
          pos: 23131
          length: 161
        pos: 3210
        length: 20084
    children: []
    pos: 3210
    length: 20084
  pos: 0
  length: 23295
text_diff: |
  --- before
  +++ after
  @@ -559,16 +559,7 @@
        * @return the square-root of the weight matrix.
        */
       private RealMatrix squareRoot(RealMatrix m) {
  -        if (m instanceof DiagonalMatrix) {
  -            final int dim = m.getRowDimension();
  -            final RealMatrix sqrtM = new DiagonalMatrix(dim);
  -            for (int i = 0; i < dim; i++) {
  -               sqrtM.setEntry(i, i, FastMath.sqrt(m.getEntry(i, i)));
  -            }
  -            return sqrtM;
  -        } else {
               final EigenDecomposition dec = new EigenDecomposition(m);
               return dec.getSquareRoot();
  -        }
       }
   }
tree_diff: |+
  New cluster:
  ===
  insert-node
  ---
  local_variable_declaration: final EigenDecomposition dec = new EigenDecomposition(m); [23189,23246]
  to
  block [23175,23627]
  at 0
  ------------
  ===
  insert-node
  ---
  local_variable_declaration: final EigenDecomposition dec = new EigenDecomposition(m); [23189,23246]
  to
  block [23175,23627]
  at 0

  New cluster:
  ===
  insert-node
  ---
  return_statement: return dec.getSquareRoot(); [23259,23286]
  to
  block [23175,23627]
  at 1
  ------------
  ===
  insert-node
  ---
  return_statement: return dec.getSquareRoot(); [23259,23286]
  to
  block [23175,23627]
  at 1

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  if_statement [23185,23621]
      parenthesized_expression [23188,23217]
          instanceof_expression: m instanceof DiagonalMatrix [23189,23216]
      block [23218,23494]
          local_variable_declaration: final int dim = m.getRowDimension(); [23232,23268]
          local_variable_declaration: final RealMatrix sqrtM = new DiagonalMatrix(dim); [23281,23330]
          for_statement: for (int i = 0; i < dim; i++) {
                 sqrtM.setEntry(i, i, FastMath.sqrt(m.getEntry(i, i)));
              } [23343,23458]
          return_statement: return sqrtM; [23471,23484]

...
