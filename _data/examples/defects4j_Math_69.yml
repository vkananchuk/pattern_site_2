---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: PearsonsCorrelation
        children: []
        pos: 1941
        length: 19
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private final RealMatrix correlationMatrix;
          children: []
          pos: 1998
          length: 43
        - type: field_declaration
          fields:
            text: private final int nObs;
          children: []
          pos: 2081
          length: 23
        - type: constructor_declaration
          fields:
            text: |-
              public PearsonsCorrelation() {
                      super();
                      correlationMatrix = null;
                      nObs = 0;
                  }
          children: []
          pos: 2184
          length: 105
        - type: constructor_declaration
          fields:
            text: |-
              public PearsonsCorrelation(double[][] data) {
                      this(new BlockRealMatrix(data));
                  }
          children: []
          pos: 2651
          length: 92
        - type: constructor_declaration
          fields:
            text: |-
              public PearsonsCorrelation(RealMatrix matrix) {
                      checkSufficientData(matrix);
                      nObs = matrix.getRowDimension();
                      correlationMatrix = computeCorrelationMatrix(matrix);
                  }
          children: []
          pos: 2962
          length: 193
        - type: constructor_declaration
          fields:
            text: |-
              public PearsonsCorrelation(Covariance covariance) {
                      RealMatrix covarianceMatrix = covariance.getCovarianceMatrix();
                      if (covarianceMatrix == null) {
                          throw MathRuntimeException.createIllegalArgumentException("covariance matrix is null");
                      }
                      nObs = covariance.getN();
                      correlationMatrix = covarianceToCorrelation(covarianceMatrix);
                  }
          children: []
          pos: 3505
          length: 384
        - type: constructor_declaration
          fields:
            text: |-
              public PearsonsCorrelation(RealMatrix covarianceMatrix, int numberOfObservations) {
                      nObs = numberOfObservations;
                      correlationMatrix = covarianceToCorrelation(covarianceMatrix);

                  }
          children: []
          pos: 4228
          length: 198
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getCorrelationMatrix
              children: []
              pos: 4545
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 4527
              length: 82
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return correlationMatrix;
                children: []
                pos: 4578
                length: 25
              pos: 4568
              length: 41
          children: []
          pos: 4527
          length: 82
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getCorrelationStandardErrors
              children: []
              pos: 5280
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 5262
              length: 445
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int nVars = correlationMatrix.getColumnDimension();
                children: []
                pos: 5321
                length: 51
              - type: local_variable_declaration
                fields:
                  text: double[][] out = new double[nVars][nVars];
                children: []
                pos: 5381
                length: 42
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < nVars; i++) {
                                for (int j = 0; j < nVars; j++) {
                                    double r = correlationMatrix.getEntry(i, j);
                                    out[i][j] = Math.sqrt((1 - r * r) /(nObs - 2));
                                }
                            }
                children: []
                pos: 5432
                length: 228
              - type: return_statement
                fields:
                  text: return new BlockRealMatrix(out);
                children: []
                pos: 5669
                length: 32
              pos: 5311
              length: 396
          children: []
          pos: 5262
          length: 445
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getCorrelationPValues
              children: []
              pos: 6452
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6434
              length: 736
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: TDistribution tDistribution = new TDistributionImpl(nObs -
                    2);
                children: []
                pos: 6507
                length: 62
              - type: local_variable_declaration
                fields:
                  text: int nVars = correlationMatrix.getColumnDimension();
                children: []
                pos: 6578
                length: 51
              - type: local_variable_declaration
                fields:
                  text: double[][] out = new double[nVars][nVars];
                children: []
                pos: 6638
                length: 42
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < nVars; i++) {
                                for (int j = 0; j < nVars; j++) {
                                    if (i == j) {
                                        out[i][j] = 0d;
                                    } else {
                                        double r = correlationMatrix.getEntry(i, j);
                                        double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));
                                        out[i][j] = 2 * tDistribution.cumulativeProbability(-t);
                                    }
                                }
                            }
                children: []
                pos: 6689
                length: 434
              - type: return_statement
                fields:
                  text: return new BlockRealMatrix(out);
                children: []
                pos: 7132
                length: 32
              pos: 6497
              length: 673
          children: []
          pos: 6434
          length: 736
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: computeCorrelationMatrix
              children: []
              pos: 7412
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: RealMatrix matrix
                children: []
                pos: 7437
                length: 17
              pos: 7394
              length: 535
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int nVars = matrix.getColumnDimension();
                children: []
                pos: 7466
                length: 40
              - type: local_variable_declaration
                fields:
                  text: RealMatrix outMatrix = new BlockRealMatrix(nVars, nVars);
                children: []
                pos: 7515
                length: 57
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < nVars; i++) {
                                for (int j = 0; j < i; j++) {
                                  double corr = correlation(matrix.getColumn(i), matrix.getColumn(j));
                                  outMatrix.setEntry(i, j, corr);
                                  outMatrix.setEntry(j, i, corr);
                                }
                                outMatrix.setEntry(i, i, 1d);
                            }
                children: []
                pos: 7581
                length: 316
              - type: return_statement
                fields:
                  text: return outMatrix;
                children: []
                pos: 7906
                length: 17
              pos: 7456
              length: 473
          children: []
          pos: 7394
          length: 535
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: computeCorrelationMatrix
              children: []
              pos: 8259
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double[][] data
                children: []
                pos: 8284
                length: 15
              pos: 8241
              length: 134
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return computeCorrelationMatrix(new BlockRealMatrix(data));
                children: []
                pos: 8310
                length: 59
              pos: 8301
              length: 74
          children: []
          pos: 8241
          length: 134
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: correlation
              children: []
              pos: 8918
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final double[] xArray
                children: []
                pos: 8930
                length: 21
              pos: 8904
              length: 649
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: SimpleRegression regression = new SimpleRegression();
                children: []
                pos: 9018
                length: 53
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: field_access
                                fields:
                                  text: xArray.length
                                children: []
                                pos: 9083
                                length: 13
                              right:
                                type: field_access
                                fields:
                                  text: yArray.length
                                children: []
                                pos: 9100
                                length: 13
                            children: []
                            pos: 9083
                            length: 30
                          right:
                            type: greater_than
                            fields:
                              left:
                                type: field_access
                                fields:
                                  text: xArray.length
                                children: []
                                pos: 9117
                                length: 13
                              right:
                                type: decimal_integer_literal
                                fields:
                                  text: '1'
                                children: []
                                pos: 9133
                                length: 1
                            children: []
                            pos: 9117
                            length: 17
                        children: []
                        pos: 9083
                        length: 51
                    children: []
                    pos: 9082
                    length: 53
                children:
                - type: block
                  fields: {}
                  children:
                  - type: for_statement
                    fields:
                      text: |-
                        for(int i=0; i<xArray.length; i++) {
                                        regression.addData(xArray[i], yArray[i]);
                                    }
                    children: []
                    pos: 9150
                    length: 108
                  - type: return_statement
                    fields:
                      text: return regression.getR();
                    children: []
                    pos: 9271
                    length: 25
                  pos: 9136
                  length: 170
                pos: 9080
                length: 467
              pos: 9008
              length: 545
          children: []
          pos: 8904
          length: 649
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: covarianceToCorrelation
              children: []
              pos: 9979
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: RealMatrix covarianceMatrix
                children: []
                pos: 10003
                length: 27
              pos: 9961
              length: 690
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int nVars = covarianceMatrix.getColumnDimension();
                children: []
                pos: 10042
                length: 50
              - type: local_variable_declaration
                fields:
                  text: RealMatrix outMatrix = new BlockRealMatrix(nVars, nVars);
                children: []
                pos: 10101
                length: 57
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < nVars; i++) {
                                double sigma = Math.sqrt(covarianceMatrix.getEntry(i, i));
                                outMatrix.setEntry(i, i, 1d);
                                for (int j = 0; j < i; j++) {
                                    double entry = covarianceMatrix.getEntry(i, j) /
                                           (sigma * Math.sqrt(covarianceMatrix.getEntry(j, j)));
                                    outMatrix.setEntry(i, j, entry);
                                    outMatrix.setEntry(j, i, entry);
                                }
                            }
                children: []
                pos: 10167
                length: 452
              - type: return_statement
                fields:
                  text: return outMatrix;
                children: []
                pos: 10628
                length: 17
              pos: 10032
              length: 619
          children: []
          pos: 9961
          length: 690
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkSufficientData
              children: []
              pos: 10854
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final RealMatrix matrix
                children: []
                pos: 10874
                length: 23
              pos: 10841
              length: 387
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int nRows = matrix.getRowDimension();
                children: []
                pos: 10909
                length: 37
              - type: local_variable_declaration
                fields:
                  text: int nCols = matrix.getColumnDimension();
                children: []
                pos: 10955
                length: 40
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: less_than
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: nRows
                                children: []
                                pos: 11008
                                length: 5
                              right:
                                type: decimal_integer_literal
                                fields:
                                  text: '2'
                                children: []
                                pos: 11016
                                length: 1
                            children: []
                            pos: 11008
                            length: 9
                          right:
                            type: less_than
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: nCols
                                children: []
                                pos: 11021
                                length: 5
                              right:
                                type: decimal_integer_literal
                                fields:
                                  text: '2'
                                children: []
                                pos: 11029
                                length: 1
                            children: []
                            pos: 11021
                            length: 9
                        children: []
                        pos: 11008
                        length: 22
                    children: []
                    pos: 11007
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: |-
                        throw MathRuntimeException.createIllegalArgumentException(
                                            "insufficient data: only {0} rows and {1} columns.",
                                            nRows, nCols);
                    children: []
                    pos: 11046
                    length: 166
                  pos: 11032
                  length: 190
                pos: 11004
                length: 218
              pos: 10899
              length: 329
          children: []
          pos: 10841
          length: 387
        pos: 1928
        length: 9302
    children: []
    pos: 1928
    length: 9302
  pos: 0
  length: 11231
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: PearsonsCorrelation
        children: []
        pos: 1941
        length: 19
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private final RealMatrix correlationMatrix;
          children: []
          pos: 1998
          length: 43
        - type: field_declaration
          fields:
            text: private final int nObs;
          children: []
          pos: 2081
          length: 23
        - type: constructor_declaration
          fields:
            text: |-
              public PearsonsCorrelation() {
                      super();
                      correlationMatrix = null;
                      nObs = 0;
                  }
          children: []
          pos: 2184
          length: 105
        - type: constructor_declaration
          fields:
            text: |-
              public PearsonsCorrelation(double[][] data) {
                      this(new BlockRealMatrix(data));
                  }
          children: []
          pos: 2651
          length: 92
        - type: constructor_declaration
          fields:
            text: |-
              public PearsonsCorrelation(RealMatrix matrix) {
                      checkSufficientData(matrix);
                      nObs = matrix.getRowDimension();
                      correlationMatrix = computeCorrelationMatrix(matrix);
                  }
          children: []
          pos: 2962
          length: 193
        - type: constructor_declaration
          fields:
            text: |-
              public PearsonsCorrelation(Covariance covariance) {
                      RealMatrix covarianceMatrix = covariance.getCovarianceMatrix();
                      if (covarianceMatrix == null) {
                          throw MathRuntimeException.createIllegalArgumentException("covariance matrix is null");
                      }
                      nObs = covariance.getN();
                      correlationMatrix = covarianceToCorrelation(covarianceMatrix);
                  }
          children: []
          pos: 3505
          length: 384
        - type: constructor_declaration
          fields:
            text: |-
              public PearsonsCorrelation(RealMatrix covarianceMatrix, int numberOfObservations) {
                      nObs = numberOfObservations;
                      correlationMatrix = covarianceToCorrelation(covarianceMatrix);

                  }
          children: []
          pos: 4228
          length: 198
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getCorrelationMatrix
              children: []
              pos: 4545
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 4527
              length: 82
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return correlationMatrix;
                children: []
                pos: 4578
                length: 25
              pos: 4568
              length: 41
          children: []
          pos: 4527
          length: 82
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getCorrelationStandardErrors
              children: []
              pos: 5280
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 5262
              length: 445
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int nVars = correlationMatrix.getColumnDimension();
                children: []
                pos: 5321
                length: 51
              - type: local_variable_declaration
                fields:
                  text: double[][] out = new double[nVars][nVars];
                children: []
                pos: 5381
                length: 42
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < nVars; i++) {
                                for (int j = 0; j < nVars; j++) {
                                    double r = correlationMatrix.getEntry(i, j);
                                    out[i][j] = Math.sqrt((1 - r * r) /(nObs - 2));
                                }
                            }
                children: []
                pos: 5432
                length: 228
              - type: return_statement
                fields:
                  text: return new BlockRealMatrix(out);
                children: []
                pos: 5669
                length: 32
              pos: 5311
              length: 396
          children: []
          pos: 5262
          length: 445
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getCorrelationPValues
              children: []
              pos: 6452
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6434
              length: 741
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: TDistribution tDistribution = new TDistributionImpl(nObs -
                    2);
                children: []
                pos: 6507
                length: 62
              - type: local_variable_declaration
                fields:
                  text: int nVars = correlationMatrix.getColumnDimension();
                children: []
                pos: 6578
                length: 51
              - type: local_variable_declaration
                fields:
                  text: double[][] out = new double[nVars][nVars];
                children: []
                pos: 6638
                length: 42
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < nVars; i++) {
                                for (int j = 0; j < nVars; j++) {
                                    if (i == j) {
                                        out[i][j] = 0d;
                                    } else {
                                        double r = correlationMatrix.getEntry(i, j);
                                        double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));
                                        out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));
                                    }
                                }
                            }
                children: []
                pos: 6689
                length: 439
              - type: return_statement
                fields:
                  text: return new BlockRealMatrix(out);
                children: []
                pos: 7137
                length: 32
              pos: 6497
              length: 678
          children: []
          pos: 6434
          length: 741
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: computeCorrelationMatrix
              children: []
              pos: 7417
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: RealMatrix matrix
                children: []
                pos: 7442
                length: 17
              pos: 7399
              length: 535
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int nVars = matrix.getColumnDimension();
                children: []
                pos: 7471
                length: 40
              - type: local_variable_declaration
                fields:
                  text: RealMatrix outMatrix = new BlockRealMatrix(nVars, nVars);
                children: []
                pos: 7520
                length: 57
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < nVars; i++) {
                                for (int j = 0; j < i; j++) {
                                  double corr = correlation(matrix.getColumn(i), matrix.getColumn(j));
                                  outMatrix.setEntry(i, j, corr);
                                  outMatrix.setEntry(j, i, corr);
                                }
                                outMatrix.setEntry(i, i, 1d);
                            }
                children: []
                pos: 7586
                length: 316
              - type: return_statement
                fields:
                  text: return outMatrix;
                children: []
                pos: 7911
                length: 17
              pos: 7461
              length: 473
          children: []
          pos: 7399
          length: 535
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: computeCorrelationMatrix
              children: []
              pos: 8264
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double[][] data
                children: []
                pos: 8289
                length: 15
              pos: 8246
              length: 134
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return computeCorrelationMatrix(new BlockRealMatrix(data));
                children: []
                pos: 8315
                length: 59
              pos: 8306
              length: 74
          children: []
          pos: 8246
          length: 134
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: correlation
              children: []
              pos: 8923
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final double[] xArray
                children: []
                pos: 8935
                length: 21
              pos: 8909
              length: 649
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: SimpleRegression regression = new SimpleRegression();
                children: []
                pos: 9023
                length: 53
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: field_access
                                fields:
                                  text: xArray.length
                                children: []
                                pos: 9088
                                length: 13
                              right:
                                type: field_access
                                fields:
                                  text: yArray.length
                                children: []
                                pos: 9105
                                length: 13
                            children: []
                            pos: 9088
                            length: 30
                          right:
                            type: greater_than
                            fields:
                              left:
                                type: field_access
                                fields:
                                  text: xArray.length
                                children: []
                                pos: 9122
                                length: 13
                              right:
                                type: decimal_integer_literal
                                fields:
                                  text: '1'
                                children: []
                                pos: 9138
                                length: 1
                            children: []
                            pos: 9122
                            length: 17
                        children: []
                        pos: 9088
                        length: 51
                    children: []
                    pos: 9087
                    length: 53
                children:
                - type: block
                  fields: {}
                  children:
                  - type: for_statement
                    fields:
                      text: |-
                        for(int i=0; i<xArray.length; i++) {
                                        regression.addData(xArray[i], yArray[i]);
                                    }
                    children: []
                    pos: 9155
                    length: 108
                  - type: return_statement
                    fields:
                      text: return regression.getR();
                    children: []
                    pos: 9276
                    length: 25
                  pos: 9141
                  length: 170
                pos: 9085
                length: 467
              pos: 9013
              length: 545
          children: []
          pos: 8909
          length: 649
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: covarianceToCorrelation
              children: []
              pos: 9984
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: RealMatrix covarianceMatrix
                children: []
                pos: 10008
                length: 27
              pos: 9966
              length: 690
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int nVars = covarianceMatrix.getColumnDimension();
                children: []
                pos: 10047
                length: 50
              - type: local_variable_declaration
                fields:
                  text: RealMatrix outMatrix = new BlockRealMatrix(nVars, nVars);
                children: []
                pos: 10106
                length: 57
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < nVars; i++) {
                                double sigma = Math.sqrt(covarianceMatrix.getEntry(i, i));
                                outMatrix.setEntry(i, i, 1d);
                                for (int j = 0; j < i; j++) {
                                    double entry = covarianceMatrix.getEntry(i, j) /
                                           (sigma * Math.sqrt(covarianceMatrix.getEntry(j, j)));
                                    outMatrix.setEntry(i, j, entry);
                                    outMatrix.setEntry(j, i, entry);
                                }
                            }
                children: []
                pos: 10172
                length: 452
              - type: return_statement
                fields:
                  text: return outMatrix;
                children: []
                pos: 10633
                length: 17
              pos: 10037
              length: 619
          children: []
          pos: 9966
          length: 690
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: checkSufficientData
              children: []
              pos: 10859
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final RealMatrix matrix
                children: []
                pos: 10879
                length: 23
              pos: 10846
              length: 387
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int nRows = matrix.getRowDimension();
                children: []
                pos: 10914
                length: 37
              - type: local_variable_declaration
                fields:
                  text: int nCols = matrix.getColumnDimension();
                children: []
                pos: 10960
                length: 40
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: less_than
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: nRows
                                children: []
                                pos: 11013
                                length: 5
                              right:
                                type: decimal_integer_literal
                                fields:
                                  text: '2'
                                children: []
                                pos: 11021
                                length: 1
                            children: []
                            pos: 11013
                            length: 9
                          right:
                            type: less_than
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: nCols
                                children: []
                                pos: 11026
                                length: 5
                              right:
                                type: decimal_integer_literal
                                fields:
                                  text: '2'
                                children: []
                                pos: 11034
                                length: 1
                            children: []
                            pos: 11026
                            length: 9
                        children: []
                        pos: 11013
                        length: 22
                    children: []
                    pos: 11012
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: |-
                        throw MathRuntimeException.createIllegalArgumentException(
                                            "insufficient data: only {0} rows and {1} columns.",
                                            nRows, nCols);
                    children: []
                    pos: 11051
                    length: 166
                  pos: 11037
                  length: 190
                pos: 11009
                length: 218
              pos: 10904
              length: 329
          children: []
          pos: 10846
          length: 387
        pos: 1928
        length: 9307
    children: []
    pos: 1928
    length: 9307
  pos: 0
  length: 11236
text_diff: |
  --- before
  +++ after
  @@ -168,7 +168,7 @@
                   } else {
                       double r = correlationMatrix.getEntry(i, j);
                       double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));
  -                    out[i][j] = 2 * tDistribution.cumulativeProbability(-t);
  +                    out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));
                   }
               }
           }
tree_diff: |+
  New cluster:
  UPDATE from for (int i = 0; i < nVars; i++) {
              for (int j = 0; j < nVars; j++) {
                  if (i == j) {
                      out[i][j] = 0d;
                  } else {
                      double r = correlationMatrix.getEntry(i, j);
                      double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));
                      out[i][j] = 2 * tDistribution.cumulativeProbability(-t);
                  }
              }
          } to for (int i = 0; i < nVars; i++) {
              for (int j = 0; j < nVars; j++) {
                  if (i == j) {
                      out[i][j] = 0d;
                  } else {
                      double r = correlationMatrix.getEntry(i, j);
                      double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));
                      out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));
                  }
              }
          }
  ------------
  ===
  update-node
  ---
  for_statement: for (int i = 0; i < nVars; i++) {
              for (int j = 0; j < nVars; j++) {
                  if (i == j) {
                      out[i][j] = 0d;
                  } else {
                      double r = correlationMatrix.getEntry(i, j);
                      double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));
                      out[i][j] = 2 * tDistribution.cumulativeProbability(-t);
                  }
              }
          } [6689,7123]
  replace for (int i = 0; i < nVars; i++) {
              for (int j = 0; j < nVars; j++) {
                  if (i == j) {
                      out[i][j] = 0d;
                  } else {
                      double r = correlationMatrix.getEntry(i, j);
                      double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));
                      out[i][j] = 2 * tDistribution.cumulativeProbability(-t);
                  }
              }
          } by for (int i = 0; i < nVars; i++) {
              for (int j = 0; j < nVars; j++) {
                  if (i == j) {
                      out[i][j] = 0d;
                  } else {
                      double r = correlationMatrix.getEntry(i, j);
                      double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));
                      out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));
                  }
              }
          }

...
