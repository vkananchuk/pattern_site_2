---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: TarUtils
        children: []
        pos: 1025
        length: 8
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private static final int BYTE_MASK = 255;
          children: []
          pos: 1041
          length: 41
        - type: constructor_declaration
          fields:
            text: "private TarUtils(){    \n    }"
          children: []
          pos: 1167
          length: 29
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: parseOctal
              children: []
              pos: 1956
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final byte[] buffer
                children: []
                pos: 1967
                length: 19
              pos: 1937
              length: 1719
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: long    result = 0;
                children: []
                pos: 2034
                length: 19
              - type: local_variable_declaration
                fields:
                  text: int     end = offset + length;
                children: []
                pos: 2062
                length: 30
              - type: local_variable_declaration
                fields:
                  text: int     start = offset;
                children: []
                pos: 2101
                length: 23
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: length
                            children: []
                            pos: 2138
                            length: 6
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '2'
                            children: []
                            pos: 2147
                            length: 1
                        children: []
                        pos: 2138
                        length: 10
                    children: []
                    pos: 2137
                    length: 12
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new IllegalArgumentException("Length "+length+"
                        must be at least 2");
                    children: []
                    pos: 2163
                    length: 75
                  pos: 2149
                  length: 99
                pos: 2134
                length: 114
              - type: local_variable_declaration
                fields:
                  text: boolean allNUL = true;
                children: []
                pos: 2258
                length: 22
              - type: for_statement
                fields:
                  text: |-
                    for (int i = start; i < end; i++){
                                if (buffer[i] != 0){
                                    allNUL = false;
                                    break;
                                }
                            }
                children: []
                pos: 2289
                length: 146
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: allNUL
                        children: []
                        pos: 2448
                        length: 6
                    children: []
                    pos: 2447
                    length: 8
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return 0L;
                    children: []
                    pos: 2470
                    length: 10
                  pos: 2456
                  length: 34
                pos: 2444
                length: 46
              - type: while_statement
                fields:
                  text: |-
                    while (start < end){
                                if (buffer[start] == ' '){
                                    start++;
                                } else {
                                    break;
                                }
                            }
                children: []
                pos: 2531
                length: 152
              - type: local_variable_declaration
                fields:
                  text: byte trailer;
                children: []
                pos: 2736
                length: 13
              - type: expression_statement
                fields:
                  text: trailer = buffer[end-1];
                children: []
                pos: 2758
                length: 24
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: trailer
                                children: []
                                pos: 2795
                                length: 7
                              right:
                                type: decimal_integer_literal
                                fields:
                                  text: '0'
                                children: []
                                pos: 2806
                                length: 1
                            children: []
                            pos: 2795
                            length: 12
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: trailer
                                children: []
                                pos: 2811
                                length: 7
                              right:
                                type: character_literal
                                fields:
                                  text: "' '"
                                children: []
                                pos: 2822
                                length: 3
                            children: []
                            pos: 2811
                            length: 14
                        children: []
                        pos: 2795
                        length: 30
                    children: []
                    pos: 2794
                    length: 32
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: end--;
                    children: []
                    pos: 2840
                    length: 6
                  pos: 2826
                  length: 30
                pos: 2791
                length: 209
              - type: expression_statement
                fields:
                  text: trailer = buffer[end-1];
                children: []
                pos: 3053
                length: 24
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: trailer
                                children: []
                                pos: 3090
                                length: 7
                              right:
                                type: decimal_integer_literal
                                fields:
                                  text: '0'
                                children: []
                                pos: 3101
                                length: 1
                            children: []
                            pos: 3090
                            length: 12
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: trailer
                                children: []
                                pos: 3106
                                length: 7
                              right:
                                type: character_literal
                                fields:
                                  text: "' '"
                                children: []
                                pos: 3117
                                length: 3
                            children: []
                            pos: 3106
                            length: 14
                        children: []
                        pos: 3090
                        length: 30
                    children: []
                    pos: 3089
                    length: 32
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: end--;
                    children: []
                    pos: 3135
                    length: 6
                  pos: 3121
                  length: 30
                pos: 3086
                length: 65
              - type: for_statement
                fields:
                  text: |-
                    for ( ;start < end; start++) {
                                final byte currentByte = buffer[start];
                                // CheckStyle:MagicNumber OFF
                                if (currentByte < '0' || currentByte > '7'){
                                    throw new IllegalArgumentException(
                                            exceptionMessage(buffer, offset, length, start, currentByte));
                                }
                                result = (result << 3) + (currentByte - '0'); // convert from ASCII
                                // CheckStyle:MagicNumber ON
                            }
                children: []
                pos: 3161
                length: 465
              - type: return_statement
                fields:
                  text: return result;
                children: []
                pos: 3636
                length: 14
              pos: 2024
              length: 1632
          children: []
          pos: 1937
          length: 1719
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: exceptionMessage
              children: []
              pos: 3739
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: byte[] buffer
                children: []
                pos: 3756
                length: 13
              pos: 3717
              length: 435
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String string = new String(buffer, offset, length);
                children: []
                pos: 3866
                length: 51
              - type: expression_statement
                fields:
                  text: string=string.replaceAll("\0", "{NUL}");
                children: []
                pos: 3926
                length: 40
              - type: local_variable_declaration
                fields:
                  text: final String s = "Invalid byte "+currentByte+" at offset "+(current-offset)+"
                    in '"+string+"' len="+length;
                children: []
                pos: 4021
                length: 107
              - type: return_statement
                fields:
                  text: return s;
                children: []
                pos: 4137
                length: 9
              pos: 3856
              length: 296
          children: []
          pos: 3717
          length: 435
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: parseName
              children: []
              pos: 4537
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: byte[] buffer
                children: []
                pos: 4547
                length: 13
              pos: 4516
              length: 466
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: StringBuffer result = new StringBuffer(length);
                children: []
                pos: 4608
                length: 47
              - type: local_variable_declaration
                fields:
                  text: int          end = offset + length;
                children: []
                pos: 4664
                length: 35
              - type: for_statement
                fields:
                  text: |-
                    for (int i = offset; i < end; ++i) {
                                byte b = buffer[i];
                                if (b == 0) { // Trailing null
                                    break;
                                }
                                result.append((char) (b & 0xFF)); // Allow for sign-extension
                            }
                children: []
                pos: 4709
                length: 232
              - type: return_statement
                fields:
                  text: return result.toString();
                children: []
                pos: 4951
                length: 25
              pos: 4598
              length: 384
          children: []
          pos: 4516
          length: 466
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: formatNameBytes
              children: []
              pos: 5656
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: String name
                children: []
                pos: 5672
                length: 11
              pos: 5638
              length: 460
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int i;
                children: []
                pos: 5743
                length: 6
              - type: for_statement
                fields:
                  text: |-
                    for (i = 0; i < length && i < name.length(); ++i) {
                                buf[offset + i] = (byte) name.charAt(i);
                            }
                children: []
                pos: 5816
                length: 114
              - type: for_statement
                fields:
                  text: |-
                    for (; i < length; ++i) {
                                buf[offset + i] = 0;
                            }
                children: []
                pos: 5991
                length: 68
              - type: return_statement
                fields:
                  text: return offset + length;
                children: []
                pos: 6069
                length: 23
              pos: 5733
              length: 365
          children: []
          pos: 5638
          length: 460
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: formatUnsignedOctalString
              children: []
              pos: 6504
              length: 25
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final long value
                children: []
                pos: 6530
                length: 16
              pos: 6485
              length: 941
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int remaining = length;
                children: []
                pos: 6621
                length: 23
              - type: expression_statement
                fields:
                  text: remaining--;
                children: []
                pos: 6653
                length: 12
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: value
                            children: []
                            pos: 6678
                            length: 5
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 6687
                            length: 1
                        children: []
                        pos: 6678
                        length: 10
                    children: []
                    pos: 6677
                    length: 12
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: buffer[offset + remaining--] = (byte) '0';
                    children: []
                    pos: 6704
                    length: 42
                  pos: 6690
                  length: 66
                pos: 6674
                length: 619
              - type: for_statement
                fields:
                  text: |-
                    for (; remaining >= 0; --remaining) { // leading zeros
                                buffer[offset + remaining] = (byte) '0';
                            }
                children: []
                pos: 7303
                length: 117
              pos: 6611
              length: 815
          children: []
          pos: 6485
          length: 941
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: formatOctalBytes
              children: []
              pos: 8041
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final long value
                children: []
                pos: 8058
                length: 16
              pos: 8023
              length: 370
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int idx=length-2;
                children: []
                pos: 8135
                length: 17
              - type: expression_statement
                fields:
                  text: formatUnsignedOctalString(value, buf, offset, idx);
                children: []
                pos: 8192
                length: 51
              - type: expression_statement
                fields:
                  text: buf[offset + idx++] = (byte) ' ';
                children: []
                pos: 8253
                length: 33
              - type: expression_statement
                fields:
                  text: buf[offset + idx]   = 0;
                children: []
                pos: 8313
                length: 24
              - type: return_statement
                fields:
                  text: return offset + length;
                children: []
                pos: 8364
                length: 23
              pos: 8124
              length: 269
          children: []
          pos: 8023
          length: 370
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: formatLongOctalBytes
              children: []
              pos: 8985
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final long value
                children: []
                pos: 9006
                length: 16
              pos: 8967
              length: 312
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int idx=length-1;
                children: []
                pos: 9083
                length: 17
              - type: expression_statement
                fields:
                  text: formatUnsignedOctalString(value, buf, offset, idx);
                children: []
                pos: 9131
                length: 51
              - type: expression_statement
                fields:
                  text: buf[offset + idx] = (byte) ' ';
                children: []
                pos: 9191
                length: 31
              - type: return_statement
                fields:
                  text: return offset + length;
                children: []
                pos: 9250
                length: 23
              pos: 9072
              length: 207
          children: []
          pos: 8967
          length: 312
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: formatCheckSumOctalBytes
              children: []
              pos: 9896
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final long value
                children: []
                pos: 9921
                length: 16
              pos: 9878
              length: 372
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int idx=length-2;
                children: []
                pos: 9998
                length: 17
              - type: expression_statement
                fields:
                  text: formatUnsignedOctalString(value, buf, offset, idx);
                children: []
                pos: 10045
                length: 51
              - type: expression_statement
                fields:
                  text: buf[offset + idx++]   = 0;
                children: []
                pos: 10106
                length: 26
              - type: expression_statement
                fields:
                  text: buf[offset + idx]     = (byte) ' ';
                children: []
                pos: 10158
                length: 35
              - type: return_statement
                fields:
                  text: return offset + length;
                children: []
                pos: 10221
                length: 23
              pos: 9987
              length: 263
          children: []
          pos: 9878
          length: 372
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: computeCheckSum
              children: []
              pos: 10436
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final byte[] buf
                children: []
                pos: 10452
                length: 16
              pos: 10417
              length: 200
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: long sum = 0;
                children: []
                pos: 10480
                length: 13
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < buf.length; ++i) {
                                sum += BYTE_MASK & buf[i];
                            }
                children: []
                pos: 10503
                length: 87
              - type: return_statement
                fields:
                  text: return sum;
                children: []
                pos: 10600
                length: 11
              pos: 10470
              length: 147
          children: []
          pos: 10417
          length: 200
        pos: 1012
        length: 9607
    children: []
    pos: 1012
    length: 9607
  pos: 0
  length: 10620
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: TarUtils
        children: []
        pos: 1025
        length: 8
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private static final int BYTE_MASK = 255;
          children: []
          pos: 1041
          length: 41
        - type: constructor_declaration
          fields:
            text: "private TarUtils(){    \n    }"
          children: []
          pos: 1167
          length: 29
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: parseOctal
              children: []
              pos: 1956
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final byte[] buffer
                children: []
                pos: 1967
                length: 19
              pos: 1937
              length: 1207
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: long    result = 0;
                children: []
                pos: 2034
                length: 19
              - type: local_variable_declaration
                fields:
                  text: boolean stillPadding = true;
                children: []
                pos: 2062
                length: 28
              - type: local_variable_declaration
                fields:
                  text: int     end = offset + length;
                children: []
                pos: 2099
                length: 30
              - type: local_variable_declaration
                fields:
                  text: int     start = offset;
                children: []
                pos: 2138
                length: 23
              - type: for_statement
                fields:
                  text: |-
                    for (int i = start; i < end; i++){
                                final byte currentByte = buffer[i];
                                if (currentByte == 0) {
                                    break;
                                }

                            // Skip leading spaces
                                if (currentByte == (byte) ' ' || currentByte == '0') {
                                    if (stillPadding) {
                                       continue;
                                }
                                    if (currentByte == (byte) ' ') {
                                    break;
                                    }
                                }

                            // Must have trailing NUL or space
                            // May have additional NUL or space

                                stillPadding = false;
                                // CheckStyle:MagicNumber OFF
                                if (currentByte < '0' || currentByte > '7'){
                                    throw new IllegalArgumentException(
                                            exceptionMessage(buffer, offset, length, start, currentByte));
                                }
                                result = (result << 3) + (currentByte - '0'); // convert from ASCII
                                // CheckStyle:MagicNumber ON
                            }
                children: []
                pos: 2171
                length: 943
              - type: return_statement
                fields:
                  text: return result;
                children: []
                pos: 3124
                length: 14
              pos: 2024
              length: 1120
          children: []
          pos: 1937
          length: 1207
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: exceptionMessage
              children: []
              pos: 3227
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: byte[] buffer
                children: []
                pos: 3244
                length: 13
              pos: 3205
              length: 435
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String string = new String(buffer, offset, length);
                children: []
                pos: 3354
                length: 51
              - type: expression_statement
                fields:
                  text: string=string.replaceAll("\0", "{NUL}");
                children: []
                pos: 3414
                length: 40
              - type: local_variable_declaration
                fields:
                  text: final String s = "Invalid byte "+currentByte+" at offset "+(current-offset)+"
                    in '"+string+"' len="+length;
                children: []
                pos: 3509
                length: 107
              - type: return_statement
                fields:
                  text: return s;
                children: []
                pos: 3625
                length: 9
              pos: 3344
              length: 296
          children: []
          pos: 3205
          length: 435
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: parseName
              children: []
              pos: 4025
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: byte[] buffer
                children: []
                pos: 4035
                length: 13
              pos: 4004
              length: 466
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: StringBuffer result = new StringBuffer(length);
                children: []
                pos: 4096
                length: 47
              - type: local_variable_declaration
                fields:
                  text: int          end = offset + length;
                children: []
                pos: 4152
                length: 35
              - type: for_statement
                fields:
                  text: |-
                    for (int i = offset; i < end; ++i) {
                                byte b = buffer[i];
                                if (b == 0) { // Trailing null
                                    break;
                                }
                                result.append((char) (b & 0xFF)); // Allow for sign-extension
                            }
                children: []
                pos: 4197
                length: 232
              - type: return_statement
                fields:
                  text: return result.toString();
                children: []
                pos: 4439
                length: 25
              pos: 4086
              length: 384
          children: []
          pos: 4004
          length: 466
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: formatNameBytes
              children: []
              pos: 5144
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: String name
                children: []
                pos: 5160
                length: 11
              pos: 5126
              length: 460
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int i;
                children: []
                pos: 5231
                length: 6
              - type: for_statement
                fields:
                  text: |-
                    for (i = 0; i < length && i < name.length(); ++i) {
                                buf[offset + i] = (byte) name.charAt(i);
                            }
                children: []
                pos: 5304
                length: 114
              - type: for_statement
                fields:
                  text: |-
                    for (; i < length; ++i) {
                                buf[offset + i] = 0;
                            }
                children: []
                pos: 5479
                length: 68
              - type: return_statement
                fields:
                  text: return offset + length;
                children: []
                pos: 5557
                length: 23
              pos: 5221
              length: 365
          children: []
          pos: 5126
          length: 460
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: formatUnsignedOctalString
              children: []
              pos: 5992
              length: 25
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final long value
                children: []
                pos: 6018
                length: 16
              pos: 5973
              length: 941
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int remaining = length;
                children: []
                pos: 6109
                length: 23
              - type: expression_statement
                fields:
                  text: remaining--;
                children: []
                pos: 6141
                length: 12
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: value
                            children: []
                            pos: 6166
                            length: 5
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 6175
                            length: 1
                        children: []
                        pos: 6166
                        length: 10
                    children: []
                    pos: 6165
                    length: 12
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: buffer[offset + remaining--] = (byte) '0';
                    children: []
                    pos: 6192
                    length: 42
                  pos: 6178
                  length: 66
                pos: 6162
                length: 619
              - type: for_statement
                fields:
                  text: |-
                    for (; remaining >= 0; --remaining) { // leading zeros
                                buffer[offset + remaining] = (byte) '0';
                            }
                children: []
                pos: 6791
                length: 117
              pos: 6099
              length: 815
          children: []
          pos: 5973
          length: 941
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: formatOctalBytes
              children: []
              pos: 7529
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final long value
                children: []
                pos: 7546
                length: 16
              pos: 7511
              length: 370
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int idx=length-2;
                children: []
                pos: 7623
                length: 17
              - type: expression_statement
                fields:
                  text: formatUnsignedOctalString(value, buf, offset, idx);
                children: []
                pos: 7680
                length: 51
              - type: expression_statement
                fields:
                  text: buf[offset + idx++] = (byte) ' ';
                children: []
                pos: 7741
                length: 33
              - type: expression_statement
                fields:
                  text: buf[offset + idx]   = 0;
                children: []
                pos: 7801
                length: 24
              - type: return_statement
                fields:
                  text: return offset + length;
                children: []
                pos: 7852
                length: 23
              pos: 7612
              length: 269
          children: []
          pos: 7511
          length: 370
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: formatLongOctalBytes
              children: []
              pos: 8473
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final long value
                children: []
                pos: 8494
                length: 16
              pos: 8455
              length: 312
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int idx=length-1;
                children: []
                pos: 8571
                length: 17
              - type: expression_statement
                fields:
                  text: formatUnsignedOctalString(value, buf, offset, idx);
                children: []
                pos: 8619
                length: 51
              - type: expression_statement
                fields:
                  text: buf[offset + idx] = (byte) ' ';
                children: []
                pos: 8679
                length: 31
              - type: return_statement
                fields:
                  text: return offset + length;
                children: []
                pos: 8738
                length: 23
              pos: 8560
              length: 207
          children: []
          pos: 8455
          length: 312
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: formatCheckSumOctalBytes
              children: []
              pos: 9384
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final long value
                children: []
                pos: 9409
                length: 16
              pos: 9366
              length: 372
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int idx=length-2;
                children: []
                pos: 9486
                length: 17
              - type: expression_statement
                fields:
                  text: formatUnsignedOctalString(value, buf, offset, idx);
                children: []
                pos: 9533
                length: 51
              - type: expression_statement
                fields:
                  text: buf[offset + idx++]   = 0;
                children: []
                pos: 9594
                length: 26
              - type: expression_statement
                fields:
                  text: buf[offset + idx]     = (byte) ' ';
                children: []
                pos: 9646
                length: 35
              - type: return_statement
                fields:
                  text: return offset + length;
                children: []
                pos: 9709
                length: 23
              pos: 9475
              length: 263
          children: []
          pos: 9366
          length: 372
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: computeCheckSum
              children: []
              pos: 9924
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final byte[] buf
                children: []
                pos: 9940
                length: 16
              pos: 9905
              length: 200
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: long sum = 0;
                children: []
                pos: 9968
                length: 13
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < buf.length; ++i) {
                                sum += BYTE_MASK & buf[i];
                            }
                children: []
                pos: 9991
                length: 87
              - type: return_statement
                fields:
                  text: return sum;
                children: []
                pos: 10088
                length: 11
              pos: 9958
              length: 147
          children: []
          pos: 9905
          length: 200
        pos: 1012
        length: 9095
    children: []
    pos: 1012
    length: 9095
  pos: 0
  length: 10108
text_diff: "--- before\n+++ after\n@@ -50,50 +50,30 @@\n      */\n     public static
  long parseOctal(final byte[] buffer, final int offset, final int length) {\n         long
  \   result = 0;\n+        boolean stillPadding = true;\n         int     end = offset
  + length;\n         int     start = offset;\n \n-        if (length < 2){\n-            throw
  new IllegalArgumentException(\"Length \"+length+\" must be at least 2\");\n-        }\n-\n-
  \       boolean allNUL = true;\n         for (int i = start; i < end; i++){\n-            if
  (buffer[i] != 0){\n-                allNUL = false;\n+            final byte currentByte
  = buffer[i];\n+            if (currentByte == 0) {\n                 break;\n             }\n-
  \       }\n-        if (allNUL) {\n-            return 0L;\n-        }\n \n         //
  Skip leading spaces\n-        while (start < end){\n-            if (buffer[start]
  == ' '){\n-                start++;\n-            } else {\n+            if (currentByte
  == (byte) ' ' || currentByte == '0') {\n+                if (stillPadding) {\n+
  \                  continue;\n+            }\n+                if (currentByte ==
  (byte) ' ') {\n                 break;\n+                }\n             }\n-        }\n
  \n         // Must have trailing NUL or space\n-        byte trailer;\n-        trailer
  = buffer[end-1];\n-        if (trailer == 0 || trailer == ' '){\n-            end--;\n-
  \       } else {\n-            throw new IllegalArgumentException(\n-                    exceptionMessage(buffer,
  offset, length, end-1, trailer));\n-        }\n         // May have additional NUL
  or space\n-        trailer = buffer[end-1];\n-        if (trailer == 0 || trailer
  == ' '){\n-            end--;\n-        }\n \n-        for ( ;start < end; start++)
  {\n-            final byte currentByte = buffer[start];\n+            stillPadding
  = false;\n             // CheckStyle:MagicNumber OFF\n             if (currentByte
  < '0' || currentByte > '7'){\n                 throw new IllegalArgumentException(\n"
tree_diff: |+
  New cluster:
  MOVE from block [2024,3656]
  ------------
  ===
  move-tree
  ---
  local_variable_declaration: boolean allNUL = true; [2258,2280]
  to
  block [2024,3656]
  at 1

  New cluster:
  UPDATE from boolean allNUL = true; to boolean stillPadding = true;
  ------------
  ===
  update-node
  ---
  local_variable_declaration: boolean allNUL = true; [2258,2280]
  replace boolean allNUL = true; by boolean stillPadding = true;

  New cluster:
  UPDATE from for (int i = start; i < end; i++){
              if (buffer[i] != 0){
                  allNUL = false;
                  break;
              }
          } to for (int i = start; i < end; i++){
              final byte currentByte = buffer[i];
              if (currentByte == 0) {
                  break;
              }

          // Skip leading spaces
              if (currentByte == (byte) ' ' || currentByte == '0') {
                  if (stillPadding) {
                     continue;
              }
                  if (currentByte == (byte) ' ') {
                  break;
                  }
              }

          // Must have trailing NUL or space
          // May have additional NUL or space

              stillPadding = false;
              // CheckStyle:MagicNumber OFF
              if (currentByte < '0' || currentByte > '7'){
                  throw new IllegalArgumentException(
                          exceptionMessage(buffer, offset, length, start, currentByte));
              }
              result = (result << 3) + (currentByte - '0'); // convert from ASCII
              // CheckStyle:MagicNumber ON
          }
  ------------
  ===
  update-node
  ---
  for_statement: for (int i = start; i < end; i++){
              if (buffer[i] != 0){
                  allNUL = false;
                  break;
              }
          } [2289,2435]
  replace for (int i = start; i < end; i++){
              if (buffer[i] != 0){
                  allNUL = false;
                  break;
              }
          } by for (int i = start; i < end; i++){
              final byte currentByte = buffer[i];
              if (currentByte == 0) {
                  break;
              }

          // Skip leading spaces
              if (currentByte == (byte) ' ' || currentByte == '0') {
                  if (stillPadding) {
                     continue;
              }
                  if (currentByte == (byte) ' ') {
                  break;
                  }
              }

          // Must have trailing NUL or space
          // May have additional NUL or space

              stillPadding = false;
              // CheckStyle:MagicNumber OFF
              if (currentByte < '0' || currentByte > '7'){
                  throw new IllegalArgumentException(
                          exceptionMessage(buffer, offset, length, start, currentByte));
              }
              result = (result << 3) + (currentByte - '0'); // convert from ASCII
              // CheckStyle:MagicNumber ON
          }

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  if_statement [2134,2248]
      parenthesized_expression [2137,2149]
          less_than [2138,2148]
              identifier: length [2138,2144]
              decimal_integer_literal: 2 [2147,2148]
      block [2149,2248]
          throw_statement: throw new IllegalArgumentException("Length "+length+" must be at least 2"); [2163,2238]

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  if_statement [2444,2490]
      parenthesized_expression [2447,2455]
          identifier: allNUL [2448,2454]
      block [2456,2490]
          return_statement: return 0L; [2470,2480]

  New cluster:
  ===
  delete-node
  ---
  while_statement: while (start < end){
              if (buffer[start] == ' '){
                  start++;
              } else {
                  break;
              }
          } [2531,2683]
  ===
  ------------
  ===
  delete-node
  ---
  while_statement: while (start < end){
              if (buffer[start] == ' '){
                  start++;
              } else {
                  break;
              }
          } [2531,2683]
  ===

  New cluster:
  ===
  delete-node
  ---
  local_variable_declaration: byte trailer; [2736,2749]
  ===
  ------------
  ===
  delete-node
  ---
  local_variable_declaration: byte trailer; [2736,2749]
  ===

  New cluster:
  ===
  delete-node
  ---
  expression_statement: trailer = buffer[end-1]; [2758,2782]
  ===
  ------------
  ===
  delete-node
  ---
  expression_statement: trailer = buffer[end-1]; [2758,2782]
  ===

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  if_statement [2791,3000]
      parenthesized_expression [2794,2826]
          or [2795,2825]
              equals [2795,2807]
                  identifier: trailer [2795,2802]
                  decimal_integer_literal: 0 [2806,2807]
              equals [2811,2825]
                  identifier: trailer [2811,2818]
                  character_literal: ' ' [2822,2825]
      block [2826,2856]
          expression_statement: end--; [2840,2846]

  New cluster:
  ===
  delete-node
  ---
  expression_statement: trailer = buffer[end-1]; [3053,3077]
  ===
  ------------
  ===
  delete-node
  ---
  expression_statement: trailer = buffer[end-1]; [3053,3077]
  ===

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  if_statement [3086,3151]
      parenthesized_expression [3089,3121]
          or [3090,3120]
              equals [3090,3102]
                  identifier: trailer [3090,3097]
                  decimal_integer_literal: 0 [3101,3102]
              equals [3106,3120]
                  identifier: trailer [3106,3113]
                  character_literal: ' ' [3117,3120]
      block [3121,3151]
          expression_statement: end--; [3135,3141]

  New cluster:
  ===
  delete-node
  ---
  for_statement: for ( ;start < end; start++) {
              final byte currentByte = buffer[start];
              // CheckStyle:MagicNumber OFF
              if (currentByte < '0' || currentByte > '7'){
                  throw new IllegalArgumentException(
                          exceptionMessage(buffer, offset, length, start, currentByte));
              }
              result = (result << 3) + (currentByte - '0'); // convert from ASCII
              // CheckStyle:MagicNumber ON
          } [3161,3626]
  ===
  ------------
  ===
  delete-node
  ---
  for_statement: for ( ;start < end; start++) {
              final byte currentByte = buffer[start];
              // CheckStyle:MagicNumber OFF
              if (currentByte < '0' || currentByte > '7'){
                  throw new IllegalArgumentException(
                          exceptionMessage(buffer, offset, length, start, currentByte));
              }
              result = (result << 3) + (currentByte - '0'); // convert from ASCII
              // CheckStyle:MagicNumber ON
          } [3161,3626]
  ===

...
