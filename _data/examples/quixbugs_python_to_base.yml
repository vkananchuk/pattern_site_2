---
language: python
before_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: to_base
        children: []
        pos: 18
        length: 7
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: num
          children: []
          pos: 26
          length: 3
        pos: 14
        length: 208
      body:
        type: block
        fields: {}
        children:
        - type: expression_statement
          fields:
            text: result = ''
          children: []
          pos: 39
          length: 11
        - type: expression_statement
          fields:
            text: alphabet = string.digits + string.ascii_uppercase
          children: []
          pos: 55
          length: 49
        - type: while_statement
          fields:
            text: |-
              while num > 0:
                      i = num % b
                      num = num // b
                      result = result + alphabet[i]
          children: []
          pos: 109
          length: 95
        - type: return_statement
          fields:
            text: return result
          children: []
          pos: 209
          length: 13
        pos: 39
        length: 183
    children: []
    pos: 14
    length: 208
  pos: 0
  length: 224
after_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: to_base
        children: []
        pos: 18
        length: 7
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: num
          children: []
          pos: 26
          length: 3
        pos: 14
        length: 208
      body:
        type: block
        fields: {}
        children:
        - type: expression_statement
          fields:
            text: result = ''
          children: []
          pos: 39
          length: 11
        - type: expression_statement
          fields:
            text: alphabet = string.digits + string.ascii_uppercase
          children: []
          pos: 55
          length: 49
        - type: while_statement
          fields:
            text: |-
              while num > 0:
                      i = num % b
                      num = num // b
                      result = alphabet[i] + result
          children: []
          pos: 109
          length: 95
        - type: return_statement
          fields:
            text: return result
          children: []
          pos: 209
          length: 13
        pos: 39
        length: 183
    children: []
    pos: 14
    length: 208
  pos: 0
  length: 223
text_diff: |
  --- before
  +++ after
  @@ -5,6 +5,5 @@
       while num > 0:
           i = num % b
           num = num // b
  -        result = result + alphabet[i]
  +        result = alphabet[i] + result
       return result
  -
tree_diff: |+
  New cluster:
  UPDATE from while num > 0:
          i = num % b
          num = num // b
          result = result + alphabet[i] to while num > 0:
          i = num % b
          num = num // b
          result = alphabet[i] + result
  ------------
  ===
  update-node
  ---
  while_statement: while num > 0:
          i = num % b
          num = num // b
          result = result + alphabet[i] [109,204]
  replace while num > 0:
          i = num % b
          num = num // b
          result = result + alphabet[i] by while num > 0:
          i = num % b
          num = num // b
          result = alphabet[i] + result

...
