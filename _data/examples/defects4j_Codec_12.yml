---
language: java
text_diff: "--- before\n+++ after\n@@ -139,31 +139,9 @@\n      *\n      * @throws
  IllegalArgumentException if the provided skip length is negative\n      */\n-    @Override\n-
  \   public long skip(long n) throws IOException {\n-        if (n < 0) {\n-            throw
  new IllegalArgumentException(\"Negative skip length\");\n-        }\n \n         //
  skip in chunks of 512 bytes\n-        final byte[] b = new byte[512];\n-        final
  int max = (int) Math.min(n, Integer.MAX_VALUE);\n-        int total = 0;\n \n-        while
  (total < max) {\n-            int len = max - total;\n-            if (len > b.length)
  {\n-                len = b.length;\n-            }\n-            len = read(b,
  0, len);\n-            if (len == EOF) {\n-                break;\n-            }\n-
  \           total += len;\n-        }\n-\n-        return total;\n-    }\n \n     /**\n
  \     * {@inheritDoc}\n@@ -171,17 +149,10 @@\n      * @return <code>0</code> if
  the {@link InputStream} has reached <code>EOF</code>,\n      * <code>1</code> otherwise\n
  \     */\n-    public int available() throws IOException {\n         // Note: the
  logic is similar to the InflaterInputStream:\n         //       as long as we have
  not reached EOF, indicate that there is more\n         //       data available.
  As we do not know for sure how much data is left,\n         //       just return
  1 as a safe guess.\n \n         // use the EOF flag of the underlying codec instance\n-
  \       if (baseNCodec.eof) {\n-            return 0;\n-        } else {\n-            return
  1;\n-        }\n-    }\n }\n"
tree_diff: |+
  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  method_declaration [4818,5458]
      identifier: skip [4844,4848]
      method_parameters [4818,5458]
          formal_parameter: long n [4849,4855]
      block [4876,5458]
          if_statement [4886,4980]
              parenthesized_expression [4889,4896]
                  less_than [4890,4895]
                      identifier: n [4890,4891]
                      decimal_integer_literal: 0 [4894,4895]
              block [4897,4980]
                  throw_statement: throw new IllegalArgumentException("Negative skip length"); [4911,4970]
          local_variable_declaration: final byte[] b = new byte[512]; [5029,5060]
          local_variable_declaration: final int max = (int) Math.min(n, Integer.MAX_VALUE); [5069,5122]
          local_variable_declaration: int total = 0; [5131,5145]
          while_statement: while (total < max) {
              int len = max - total;
              if (len > b.length) {
                  len = b.length;
              }
              len = read(b, 0, len);
              if (len == EOF) {
                  break;
              }
              total += len;
          } [5155,5429]
          return_statement: return total; [5439,5452]

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  method_declaration [5627,6117]
      identifier: available [5638,5647]
      method_parameters [5627,6117]
      block [5669,6117]
          if_statement [6019,6111]
              parenthesized_expression [6022,6038]
                  field_access: baseNCodec.eof [6023,6037]
              block [6039,6072]
                  return_statement: return 0; [6053,6062]

...
