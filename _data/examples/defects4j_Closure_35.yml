---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: TypeInference
        children: []
        pos: 2477
        length: 13
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType TEMPLATE_TYPE_NOT_OBJECT_TYPE =
                    DiagnosticType.warning(
                    "JSC_TEMPLATE_TYPE_NOT_OBJECT_TYPE",
                    "The template type must be an object type.\nActual: {0}");
          children: []
          pos: 2573
          length: 197
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType TEMPLATE_TYPE_OF_THIS_EXPECTED =
                    DiagnosticType.warning(
                    "JSC_TEMPLATE_TYPE_OF_THIS_EXPECTED",
                    "A function type with the template type as the type of this must be a " +
                    "parameter type");
          children: []
          pos: 2774
          length: 239
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType FUNCTION_LITERAL_UNDEFINED_THIS =
                  DiagnosticType.warning(
                      "JSC_FUNCTION_LITERAL_UNDEFINED_THIS",
                      "Function literal argument refers to undefined this argument");
          children: []
          pos: 3017
          length: 208
        - type: field_declaration
          fields:
            text: private final AbstractCompiler compiler;
          children: []
          pos: 3229
          length: 40
        - type: field_declaration
          fields:
            text: private final JSTypeRegistry registry;
          children: []
          pos: 3272
          length: 38
        - type: field_declaration
          fields:
            text: private final ReverseAbstractInterpreter reverseInterpreter;
          children: []
          pos: 3313
          length: 60
        - type: field_declaration
          fields:
            text: private final Scope syntacticScope;
          children: []
          pos: 3376
          length: 35
        - type: field_declaration
          fields:
            text: private final FlowScope functionScope;
          children: []
          pos: 3414
          length: 38
        - type: field_declaration
          fields:
            text: private final FlowScope bottomScope;
          children: []
          pos: 3455
          length: 36
        - type: field_declaration
          fields:
            text: private final Map<String, AssertionFunctionSpec> assertionFunctionsMap;
          children: []
          pos: 3494
          length: 71
        - type: constructor_declaration
          fields:
            text: |-
              TypeInference(AbstractCompiler compiler, ControlFlowGraph<Node> cfg,
                              ReverseAbstractInterpreter reverseInterpreter,
                              Scope functionScope,
                              Map<String, AssertionFunctionSpec> assertionFunctionsMap) {
                  super(cfg, new LinkedFlowScope.FlowScopeJoinOp());
                  this.compiler = compiler;
                  this.registry = compiler.getTypeRegistry();
                  this.reverseInterpreter = reverseInterpreter;
                  this.syntacticScope = functionScope;
                  this.functionScope = LinkedFlowScope.createEntryLattice(functionScope);
                  this.assertionFunctionsMap = assertionFunctionsMap;

                  // For each local variable declared with the VAR keyword, the entry
                  // type is VOID.
                  Iterator<Var> varIt =
                      functionScope.getDeclarativelyUnboundVarsWithoutTypes();
                  while (varIt.hasNext()) {
                    Var var = varIt.next();
                    if (isUnflowable(var)) {
                      continue;
                    }

                    this.functionScope.inferSlotType(
                        var.getName(), getNativeType(VOID_TYPE));
                  }

                  this.bottomScope = LinkedFlowScope.createEntryLattice(
                      new Scope(functionScope.getRootNode(), functionScope.getTypeOfThis()));
                }
          children: []
          pos: 3569
          length: 1145
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createInitialEstimateLattice
              children: []
              pos: 4740
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 4718
              length: 82
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return bottomScope;
                children: []
                pos: 4777
                length: 19
              pos: 4771
              length: 29
          children: []
          pos: 4718
          length: 82
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createEntryLattice
              children: []
              pos: 4826
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 4804
              length: 74
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return functionScope;
                children: []
                pos: 4853
                length: 21
              pos: 4847
              length: 31
          children: []
          pos: 4804
          length: 74
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: flowThrough
              children: []
              pos: 4904
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 4916
                length: 6
              pos: 4882
              length: 348
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: input
                            children: []
                            pos: 5070
                            length: 5
                          right:
                            type: identifier
                            fields:
                              text: bottomScope
                            children: []
                            pos: 5079
                            length: 11
                        children: []
                        pos: 5070
                        length: 20
                    children: []
                    pos: 5069
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return input;
                    children: []
                    pos: 5100
                    length: 13
                  pos: 5092
                  length: 27
                pos: 5066
                length: 53
              - type: local_variable_declaration
                fields:
                  text: FlowScope output = input.createChildFlowScope();
                children: []
                pos: 5125
                length: 48
              - type: expression_statement
                fields:
                  text: output = traverse(n, output);
                children: []
                pos: 5178
                length: 29
              - type: return_statement
                fields:
                  text: return output;
                children: []
                pos: 5212
                length: 14
              pos: 4941
              length: 289
          children: []
          pos: 4882
          length: 348
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: branchedFlowThrough
              children: []
              pos: 5297
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node source
                children: []
                pos: 5317
                length: 11
              pos: 5234
              length: 4656
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: FlowScope output = flowThrough(source, input);
                children: []
                pos: 5668
                length: 46
              - type: local_variable_declaration
                fields:
                  text: Node condition = null;
                children: []
                pos: 5719
                length: 22
              - type: local_variable_declaration
                fields:
                  text: FlowScope conditionFlowScope = null;
                children: []
                pos: 5746
                length: 36
              - type: local_variable_declaration
                fields:
                  text: BooleanOutcomePair conditionOutcomes = null;
                children: []
                pos: 5787
                length: 44
              - type: local_variable_declaration
                fields:
                  text: List<DiGraphEdge<Node, Branch>> branchEdges = getCfg().getOutEdges(source);
                children: []
                pos: 5837
                length: 75
              - type: local_variable_declaration
                fields:
                  text: List<FlowScope> result = Lists.newArrayListWithCapacity(branchEdges.size());
                children: []
                pos: 5917
                length: 76
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (DiGraphEdge<Node, Branch> branchEdge : branchEdges) {
                          Branch branch = branchEdge.getValue();
                          FlowScope newScope = output;

                          switch (branch) {
                            case ON_TRUE:
                              if (NodeUtil.isForIn(source)) {
                                // item is assigned a property name, so its type should be string.
                                Node item = source.getFirstChild();
                                Node obj = item.getNext();

                                FlowScope informed = traverse(obj, output.createChildFlowScope());

                                if (item.isVar()) {
                                  item = item.getFirstChild();
                                }
                                if (item.isName()) {
                                  JSType iterKeyType = getNativeType(STRING_TYPE);
                                  ObjectType objType = getJSType(obj).dereference();
                                  JSType objIndexType = objType == null ?
                                      null : objType.getIndexType();
                                  if (objIndexType != null && !objIndexType.isUnknownType()) {
                                    JSType narrowedKeyType =
                                        iterKeyType.getGreatestSubtype(objIndexType);
                                    if (!narrowedKeyType.isEmptyType()) {
                                      iterKeyType = narrowedKeyType;
                                    }
                                  }
                                  redeclareSimpleVar(informed, item, iterKeyType);
                                }
                                newScope = informed;
                                break;
                              }

                              // FALL THROUGH

                            case ON_FALSE:
                              if (condition == null) {
                                condition = NodeUtil.getConditionExpression(source);
                                if (condition == null && source.isCase()) {
                                  condition = source;

                                  // conditionFlowScope is cached from previous iterations
                                  // of the loop.
                                  if (conditionFlowScope == null) {
                                    conditionFlowScope = traverse(
                                        condition.getFirstChild(), output.createChildFlowScope());
                                  }
                                }
                              }

                              if (condition != null) {
                                if (condition.isAnd() ||
                                    condition.isOr()) {
                                  // When handling the short-circuiting binary operators,
                                  // the outcome scope on true can be different than the outcome
                                  // scope on false.
                                  //
                                  // TODO(nicksantos): The "right" way to do this is to
                                  // carry the known outcome all the way through the
                                  // recursive traversal, so that we can construct a
                                  // different flow scope based on the outcome. However,
                                  // this would require a bunch of code and a bunch of
                                  // extra computation for an edge case. This seems to be
                                  // a "good enough" approximation.

                                  // conditionOutcomes is cached from previous iterations
                                  // of the loop.
                                  if (conditionOutcomes == null) {
                                    conditionOutcomes = condition.isAnd() ?
                                        traverseAnd(condition, output.createChildFlowScope()) :
                                        traverseOr(condition, output.createChildFlowScope());
                                  }
                                  newScope =
                                      reverseInterpreter.getPreciserScopeKnowingConditionOutcome(
                                          condition,
                                          conditionOutcomes.getOutcomeFlowScope(
                                              condition.getType(), branch == Branch.ON_TRUE),
                                          branch == Branch.ON_TRUE);
                                } else {
                                  // conditionFlowScope is cached from previous iterations
                                  // of the loop.
                                  if (conditionFlowScope == null) {
                                    conditionFlowScope =
                                        traverse(condition, output.createChildFlowScope());
                                  }
                                  newScope =
                                      reverseInterpreter.getPreciserScopeKnowingConditionOutcome(
                                          condition, conditionFlowScope, branch == Branch.ON_TRUE);
                                }
                              }
                              break;
                          }

                          result.add(newScope.optimize());
                        }
                children: []
                pos: 5998
                length: 3869
              - type: return_statement
                fields:
                  text: return result;
                children: []
                pos: 9872
                length: 14
              pos: 5347
              length: 4543
          children: []
          pos: 5234
          length: 4656
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverse
              children: []
              pos: 9912
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 9921
                length: 6
              pos: 9894
              length: 4132
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 9960
                        length: 11
                    children: []
                    pos: 9959
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.ASSIGN:
                                scope = traverseAssign(n, scope);
                                break;

                              case Token.NAME:
                                scope = traverseName(n, scope);
                                break;

                              case Token.GETPROP:
                                scope = traverseGetProp(n, scope);
                                break;

                              case Token.AND:
                                scope = traverseAnd(n, scope).getJoinedFlowScope()
                                    .createChildFlowScope();
                                break;

                              case Token.OR:
                                scope = traverseOr(n, scope).getJoinedFlowScope()
                                    .createChildFlowScope();
                                break;

                              case Token.HOOK:
                                scope = traverseHook(n, scope);
                                break;

                              case Token.OBJECTLIT:
                                scope = traverseObjectLiteral(n, scope);
                                break;

                              case Token.CALL:
                                scope = traverseCall(n, scope);
                                break;

                              case Token.NEW:
                                scope = traverseNew(n, scope);
                                break;

                              case Token.ASSIGN_ADD:
                              case Token.ADD:
                                scope = traverseAdd(n, scope);
                                break;

                              case Token.POS:
                              case Token.NEG:
                                scope = traverse(n.getFirstChild(), scope);  // Find types.
                                n.setJSType(getNativeType(NUMBER_TYPE));
                                break;

                              case Token.ARRAYLIT:
                                scope = traverseArrayLiteral(n, scope);
                                break;

                              case Token.THIS:
                                n.setJSType(scope.getTypeOfThis());
                                break;

                              case Token.ASSIGN_LSH:
                              case Token.ASSIGN_RSH:
                              case Token.LSH:
                              case Token.RSH:
                              case Token.ASSIGN_URSH:
                              case Token.URSH:
                              case Token.ASSIGN_DIV:
                              case Token.ASSIGN_MOD:
                              case Token.ASSIGN_BITAND:
                              case Token.ASSIGN_BITXOR:
                              case Token.ASSIGN_BITOR:
                              case Token.ASSIGN_MUL:
                              case Token.ASSIGN_SUB:
                              case Token.DIV:
                              case Token.MOD:
                              case Token.BITAND:
                              case Token.BITXOR:
                              case Token.BITOR:
                              case Token.MUL:
                              case Token.SUB:
                              case Token.DEC:
                              case Token.INC:
                              case Token.BITNOT:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getNativeType(NUMBER_TYPE));
                                break;

                              case Token.PARAM_LIST:
                                scope = traverse(n.getFirstChild(), scope);
                                n.setJSType(getJSType(n.getFirstChild()));
                                break;

                              case Token.COMMA:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getJSType(n.getLastChild()));
                                break;

                              case Token.TYPEOF:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getNativeType(STRING_TYPE));
                                break;

                              case Token.DELPROP:
                              case Token.LT:
                              case Token.LE:
                              case Token.GT:
                              case Token.GE:
                              case Token.NOT:
                              case Token.EQ:
                              case Token.NE:
                              case Token.SHEQ:
                              case Token.SHNE:
                              case Token.INSTANCEOF:
                              case Token.IN:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getNativeType(BOOLEAN_TYPE));
                                break;

                              case Token.GETELEM:
                                scope = traverseGetElem(n, scope);
                                break;

                              case Token.EXPR_RESULT:
                                scope = traverseChildren(n, scope);
                                if (n.getFirstChild().isGetProp()) {
                                  ensurePropertyDeclared(n.getFirstChild());
                                }
                                break;

                              case Token.SWITCH:
                                scope = traverse(n.getFirstChild(), scope);
                                break;

                              case Token.RETURN:
                                scope = traverseReturn(n, scope);
                                break;

                              case Token.VAR:
                              case Token.THROW:
                                scope = traverseChildren(n, scope);
                                break;

                              case Token.CATCH:
                                scope = traverseCatch(n, scope);
                                break;
                            }
                    children: []
                    pos: 9973
                    length: 3452
                children: []
                pos: 9952
                length: 3473
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!n.isFunction()"
                        children: []
                        pos: 13434
                        length: 15
                    children: []
                    pos: 13433
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSDocInfo info = n.getJSDocInfo();
                    children: []
                    pos: 13459
                    length: 34
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: info
                                    children: []
                                    pos: 13504
                                    length: 4
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 13512
                                    length: 4
                                children: []
                                pos: 13504
                                length: 12
                              right:
                                type: method_invocation
                                fields:
                                  text: info.hasType()
                                children: []
                                pos: 13520
                                length: 14
                            children: []
                            pos: 13504
                            length: 30
                        children: []
                        pos: 13503
                        length: 32
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType castType = info.getType().evaluate(syntacticScope,
                            registry);
                        children: []
                        pos: 13546
                        length: 68
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: n.isQualifiedName()
                                    children: []
                                    pos: 13810
                                    length: 19
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: n.getParent().isExprResult()
                                    children: []
                                    pos: 13845
                                    length: 28
                                children: []
                                pos: 13810
                                length: 63
                            children: []
                            pos: 13809
                            length: 65
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: updateScopeForTypeChange(scope, n, n.getJSType(),
                                castType);
                            children: []
                            pos: 13887
                            length: 60
                          pos: 13875
                          length: 82
                        pos: 13806
                        length: 151
                      - type: expression_statement
                        fields:
                          text: n.setJSType(castType);
                        children: []
                        pos: 13967
                        length: 22
                      pos: 13536
                      length: 461
                    pos: 13500
                    length: 497
                  pos: 13451
                  length: 552
                pos: 13430
                length: 573
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 14009
                length: 13
              pos: 9946
              length: 4080
          children: []
          pos: 9894
          length: 4132
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseReturn
              children: []
              pos: 14090
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 14105
                length: 6
              pos: 14072
              length: 496
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 14136
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node retValue = n.getFirstChild();
                children: []
                pos: 14177
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: retValue
                            children: []
                            pos: 14220
                            length: 8
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 14232
                            length: 4
                        children: []
                        pos: 14220
                        length: 16
                    children: []
                    pos: 14219
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType type = functionScope.getRootNode().getJSType();
                    children: []
                    pos: 14246
                    length: 54
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 14311
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 14319
                                length: 4
                            children: []
                            pos: 14311
                            length: 12
                        children: []
                        pos: 14310
                        length: 14
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: FunctionType fnType = type.toMaybeFunctionType();
                        children: []
                        pos: 14335
                        length: 49
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: fnType
                                    children: []
                                    pos: 14397
                                    length: 6
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 14407
                                    length: 4
                                children: []
                                pos: 14397
                                length: 14
                            children: []
                            pos: 14396
                            length: 16
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: |-
                                inferPropertyTypesToMatchConstraint(
                                              retValue.getJSType(), fnType.getReturnType());
                            children: []
                            pos: 14425
                            length: 97
                          pos: 14413
                          length: 119
                        pos: 14393
                        length: 139
                      pos: 14325
                      length: 215
                    pos: 14307
                    length: 233
                  pos: 14238
                  length: 308
                pos: 14216
                length: 330
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 14551
                length: 13
              pos: 14130
              length: 438
          children: []
          pos: 14072
          length: 496
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseCatch
              children: []
              pos: 14733
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 14747
                length: 6
              pos: 14715
              length: 244
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node name = n.getFirstChild();
                children: []
                pos: 14778
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType type = getNativeType(JSTypeNative.UNKNOWN_TYPE);
                children: []
                pos: 14813
                length: 55
              - type: expression_statement
                fields:
                  text: name.setJSType(type);
                children: []
                pos: 14873
                length: 21
              - type: expression_statement
                fields:
                  text: redeclareSimpleVar(scope, name, type);
                children: []
                pos: 14899
                length: 38
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 14942
                length: 13
              pos: 14772
              length: 187
          children: []
          pos: 14715
          length: 244
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseAssign
              children: []
              pos: 14981
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 14996
                length: 6
              pos: 14963
              length: 366
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 15027
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 15062
                length: 30
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 15097
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = left.getJSType();
                children: []
                pos: 15138
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = getJSType(right);
                children: []
                pos: 15178
                length: 36
              - type: expression_statement
                fields:
                  text: n.setJSType(rightType);
                children: []
                pos: 15219
                length: 23
              - type: expression_statement
                fields:
                  text: updateScopeForTypeChange(scope, left, leftType, rightType);
                children: []
                pos: 15248
                length: 59
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 15312
                length: 13
              pos: 15021
              length: 308
          children: []
          pos: 14963
          length: 366
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateScopeForTypeChange
              children: []
              pos: 15463
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 15495
                length: 15
              pos: 15450
              length: 1794
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(resultType);
                children: []
                pos: 15565
                length: 39
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: left.getType()
                        children: []
                        pos: 15617
                        length: 14
                    children: []
                    pos: 15616
                    length: 16
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.NAME:
                                String varName = left.getString();
                                Var var = syntacticScope.getVar(varName);

                                // When looking at VAR initializers for declared VARs, we trust
                                // the declared type over the type it's being initialized to.
                                // This has two purposes:
                                // 1) We avoid re-declaring declared variables so that built-in
                                //    types defined in externs are not redeclared.
                                // 2) When there's a lexical closure like
                                //    /** @type {?string} */ var x = null;
                                //    function f() { x = 'xyz'; }
                                //    the inference will ignore the lexical closure,
                                //    which is just wrong. This bug needs to be fixed eventually.
                                boolean isVarDeclaration = left.hasChildren();
                                if (!isVarDeclaration || var == null || var.isTypeInferred()) {
                                  redeclareSimpleVar(scope, left, resultType);
                                }
                                left.setJSType(isVarDeclaration || leftType == null ?
                                    resultType : null);

                                if (var != null && var.isTypeInferred()) {
                                  JSType oldType = var.getType();
                                  var.setType(oldType == null ?
                                      resultType : oldType.getLeastSupertype(resultType));
                                }
                                break;
                              case Token.GETPROP:
                                String qualifiedName = left.getQualifiedName();
                                if (qualifiedName != null) {
                                  scope.inferQualifiedSlot(left, qualifiedName,
                                      leftType == null ? getNativeType(UNKNOWN_TYPE) : leftType,
                                      resultType);
                                }

                                left.setJSType(resultType);
                                ensurePropertyDefined(left, resultType);
                                break;
                            }
                    children: []
                    pos: 15633
                    length: 1607
                children: []
                pos: 15609
                length: 1631
              pos: 15559
              length: 1685
          children: []
          pos: 15450
          length: 1794
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensurePropertyDefined
              children: []
              pos: 17339
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getprop
                children: []
                pos: 17361
                length: 12
              pos: 17326
              length: 1932
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String propName = getprop.getLastChild().getString();
                children: []
                pos: 17399
                length: 53
              - type: local_variable_declaration
                fields:
                  text: JSType nodeType = getJSType(getprop.getFirstChild());
                children: []
                pos: 17457
                length: 53
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType objectType = ObjectType.cast(
                            nodeType.restrictByNotNullOrUndefined());
                children: []
                pos: 17515
                length: 90
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: objectType
                            children: []
                            pos: 17614
                            length: 10
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 17628
                            length: 4
                        children: []
                        pos: 17614
                        length: 18
                    children: []
                    pos: 17613
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: registry.registerPropertyOnType(propName, nodeType);
                    children: []
                    pos: 17642
                    length: 52
                  pos: 17634
                  length: 66
                pos: 17610
                length: 1644
              pos: 17393
              length: 1865
          children: []
          pos: 17326
          length: 1932
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensurePropertyDeclared
              children: []
              pos: 19542
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getprop
                children: []
                pos: 19565
                length: 12
              pos: 19529
              length: 266
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType ownerType = ObjectType.cast(
                            getJSType(getprop.getFirstChild()).restrictByNotNullOrUndefined());
                children: []
                pos: 19585
                length: 115
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: ownerType
                            children: []
                            pos: 19709
                            length: 9
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 19722
                            length: 4
                        children: []
                        pos: 19709
                        length: 17
                    children: []
                    pos: 19708
                    length: 19
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensurePropertyDeclaredHelper(getprop, ownerType);
                    children: []
                    pos: 19736
                    length: 49
                  pos: 19728
                  length: 63
                pos: 19705
                length: 86
              pos: 19579
              length: 216
          children: []
          pos: 19529
          length: 266
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensurePropertyDeclaredHelper
              children: []
              pos: 19926
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getprop
                children: []
                pos: 19962
                length: 12
              pos: 19910
              length: 834
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String propName = getprop.getLastChild().getString();
                children: []
                pos: 20005
                length: 53
              - type: local_variable_declaration
                fields:
                  text: String qName = getprop.getQualifiedName();
                children: []
                pos: 20063
                length: 42
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: qName
                            children: []
                            pos: 20114
                            length: 5
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 20123
                            length: 4
                        children: []
                        pos: 20114
                        length: 13
                    children: []
                    pos: 20113
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Var var = syntacticScope.getVar(qName);
                    children: []
                    pos: 20137
                    length: 39
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: var
                                    children: []
                                    pos: 20187
                                    length: 3
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 20194
                                    length: 4
                                children: []
                                pos: 20187
                                length: 11
                              right:
                                type: unary_expression
                                fields:
                                  text: "!var.isTypeInferred()"
                                children: []
                                pos: 20202
                                length: 21
                            children: []
                            pos: 20187
                            length: 36
                        children: []
                        pos: 20186
                        length: 38
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: or
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: propName.equals("prototype")
                                    children: []
                                    pos: 20314
                                    length: 28
                                  right:
                                    type: parenthesized_expression
                                    fields:
                                      expression:
                                        type: and
                                        fields:
                                          left:
                                            type: unary_expression
                                            fields:
                                              text: "!objectType.hasOwnProperty(propName)"
                                            children: []
                                            pos: 20437
                                            length: 36
                                          right:
                                            type: parenthesized_expression
                                            fields:
                                              expression:
                                                type: or
                                                fields:
                                                  left:
                                                    type: unary_expression
                                                    fields:
                                                      text: "!objectType.isInstanceType()"
                                                    children: []
                                                    pos: 20491
                                                    length: 28
                                                  right:
                                                    type: parenthesized_expression
                                                    fields:
                                                      expression:
                                                        type: and
                                                        fields:
                                                          left:
                                                            type: method_invocation
                                                            fields:
                                                              text: var.isExtern()
                                                            children: []
                                                            pos: 20541
                                                            length: 14
                                                          right:
                                                            type: unary_expression
                                                            fields:
                                                              text: "!objectType.isNativeObjectType()"
                                                            children: []
                                                            pos: 20559
                                                            length: 32
                                                        children: []
                                                        pos: 20541
                                                        length: 50
                                                    children: []
                                                    pos: 20540
                                                    length: 52
                                                children: []
                                                pos: 20491
                                                length: 101
                                            children: []
                                            pos: 20490
                                            length: 103
                                        children: []
                                        pos: 20437
                                        length: 156
                                    children: []
                                    pos: 20436
                                    length: 158
                                children: []
                                pos: 20314
                                length: 280
                            children: []
                            pos: 20313
                            length: 282
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: return_statement
                            fields:
                              text: |-
                                return objectType.defineDeclaredProperty(
                                              propName, var.getType(), getprop);
                            children: []
                            pos: 20608
                            length: 90
                          pos: 20596
                          length: 112
                        pos: 20310
                        length: 398
                      pos: 20225
                      length: 491
                    pos: 20183
                    length: 533
                  pos: 20129
                  length: 593
                pos: 20110
                length: 612
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 20727
                length: 13
              pos: 19999
              length: 745
          children: []
          pos: 19910
          length: 834
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseName
              children: []
              pos: 20766
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 20779
                length: 6
              pos: 20748
              length: 1420
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String varName = n.getString();
                children: []
                pos: 20810
                length: 31
              - type: local_variable_declaration
                fields:
                  text: Node value = n.getFirstChild();
                children: []
                pos: 20846
                length: 31
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 20882
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: value
                            children: []
                            pos: 20919
                            length: 5
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 20928
                            length: 4
                        children: []
                        pos: 20919
                        length: 13
                    children: []
                    pos: 20918
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: scope = traverse(value, scope);
                    children: []
                    pos: 20942
                    length: 31
                  - type: expression_statement
                    fields:
                      text: |-
                        updateScopeForTypeChange(scope, n, n.getJSType() /* could be null */,
                                  getJSType(value));
                    children: []
                    pos: 20980
                    length: 98
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 21085
                    length: 13
                  pos: 20934
                  length: 170
                pos: 20915
                length: 1208
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 22128
                length: 18
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 22151
                length: 13
              pos: 20804
              length: 1364
          children: []
          pos: 20748
          length: 1420
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseArrayLiteral
              children: []
              pos: 22235
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 22256
                length: 6
              pos: 22217
              length: 171
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 22287
                length: 35
              - type: expression_statement
                fields:
                  text: n.setJSType(getNativeType(ARRAY_TYPE));
                children: []
                pos: 22327
                length: 39
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 22371
                length: 13
              pos: 22281
              length: 107
          children: []
          pos: 22217
          length: 171
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseObjectLiteral
              children: []
              pos: 22410
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 22432
                length: 6
              pos: 22392
              length: 2258
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 22463
                length: 28
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(type);
                children: []
                pos: 22496
                length: 33
              - type: for_statement
                fields:
                  text: |-
                    for (Node name = n.getFirstChild(); name != null; name = name.getNext()) {
                          scope = traverse(name.getFirstChild(), scope);
                        }
                children: []
                pos: 22535
                length: 133
              - type: local_variable_declaration
                fields:
                  text: ObjectType objectType = ObjectType.cast(type);
                children: []
                pos: 22981
                length: 46
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: objectType
                            children: []
                            pos: 23036
                            length: 10
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 23050
                            length: 4
                        children: []
                        pos: 23036
                        length: 18
                    children: []
                    pos: 23035
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 23064
                    length: 13
                  pos: 23056
                  length: 27
                pos: 23032
                length: 51
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean hasLendsName = n.getJSDocInfo() != null &&
                            n.getJSDocInfo().getLendsName() != null;
                children: []
                pos: 23089
                length: 99
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: objectType.hasReferenceName()
                            children: []
                            pos: 23197
                            length: 29
                          right:
                            type: unary_expression
                            fields:
                              text: "!hasLendsName"
                            children: []
                            pos: 23230
                            length: 13
                        children: []
                        pos: 23197
                        length: 46
                    children: []
                    pos: 23196
                    length: 48
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 23253
                    length: 13
                  pos: 23245
                  length: 27
                pos: 23193
                length: 79
              - type: local_variable_declaration
                fields:
                  text: |-
                    String qObjName = NodeUtil.getBestLValueName(
                            NodeUtil.getBestLValue(n));
                children: []
                pos: 23278
                length: 81
              - type: for_statement
                fields:
                  text: |-
                    for (Node name = n.getFirstChild(); name != null;
                             name = name.getNext()) {
                          Node value = name.getFirstChild();
                          String memberName = NodeUtil.getObjectLitKeyName(name);
                          if (memberName != null) {
                            JSType rawValueType =  name.getFirstChild().getJSType();
                            JSType valueType = NodeUtil.getObjectLitKeyTypeFromValueType(
                                name, rawValueType);
                            if (valueType == null) {
                              valueType = getNativeType(UNKNOWN_TYPE);
                            }
                            objectType.defineInferredProperty(memberName, valueType, name);

                            // Do normal flow inference if this is a direct property assignment.
                            if (qObjName != null && name.isString()) {
                              String qKeyName = qObjName + "." + memberName;
                              Var var = syntacticScope.getVar(qKeyName);
                              JSType oldType = var == null ? null : var.getType();
                              if (var != null && var.isTypeInferred()) {
                                var.setType(oldType == null ?
                                    valueType : oldType.getLeastSupertype(oldType));
                              }

                              scope.inferQualifiedSlot(name, qKeyName,
                                  oldType == null ? getNativeType(UNKNOWN_TYPE) : oldType,
                                  valueType);
                            }
                          } else {
                            n.setJSType(getNativeType(UNKNOWN_TYPE));
                          }
                        }
                children: []
                pos: 23364
                length: 1264
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 24633
                length: 13
              pos: 22457
              length: 2193
          children: []
          pos: 22392
          length: 2258
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseAdd
              children: []
              pos: 24672
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 24684
                length: 6
              pos: 24654
              length: 1164
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 24715
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = left.getNext();
                children: []
                pos: 24750
                length: 28
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 24783
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = left.getJSType();
                children: []
                pos: 24824
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = right.getJSType();
                children: []
                pos: 24864
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType type = getNativeType(UNKNOWN_TYPE);
                children: []
                pos: 24907
                length: 42
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: leftType
                                children: []
                                pos: 24958
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 24970
                                length: 4
                            children: []
                            pos: 24958
                            length: 16
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: rightType
                                children: []
                                pos: 24978
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 24991
                                length: 4
                            children: []
                            pos: 24978
                            length: 17
                        children: []
                        pos: 24958
                        length: 37
                    children: []
                    pos: 24957
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: boolean leftIsUnknown = leftType.isUnknownType();
                    children: []
                    pos: 25005
                    length: 49
                  - type: local_variable_declaration
                    fields:
                      text: boolean rightIsUnknown = rightType.isUnknownType();
                    children: []
                    pos: 25061
                    length: 51
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: leftIsUnknown
                                children: []
                                pos: 25123
                                length: 13
                              right:
                                type: identifier
                                fields:
                                  text: rightIsUnknown
                                children: []
                                pos: 25140
                                length: 14
                            children: []
                            pos: 25123
                            length: 31
                        children: []
                        pos: 25122
                        length: 33
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: type = getNativeType(UNKNOWN_TYPE);
                        children: []
                        pos: 25166
                        length: 35
                      pos: 25156
                      length: 53
                    pos: 25119
                    length: 552
                  pos: 24997
                  length: 680
                pos: 24954
                length: 723
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 25682
                length: 18
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.isAssignAdd()
                        children: []
                        pos: 25710
                        length: 15
                    children: []
                    pos: 25709
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: updateScopeForTypeChange(scope, left, leftType, type);
                    children: []
                    pos: 25735
                    length: 54
                  pos: 25727
                  length: 68
                pos: 25706
                length: 89
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 25801
                length: 13
              pos: 24709
              length: 1109
          children: []
          pos: 24654
          length: 1164
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isAddedAsNumber
              children: []
              pos: 25838
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType type
                children: []
                pos: 25854
                length: 11
              pos: 25822
              length: 197
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return type.isSubtype(registry.createUnionType(VOID_TYPE, NULL_TYPE,
                            NUMBER_VALUE_OR_OBJECT_TYPE, BOOLEAN_TYPE, BOOLEAN_OBJECT_TYPE));
                children: []
                pos: 25873
                length: 142
              pos: 25867
              length: 152
          children: []
          pos: 25822
          length: 197
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseHook
              children: []
              pos: 26041
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 26054
                length: 6
              pos: 26023
              length: 1146
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node condition = n.getFirstChild();
                children: []
                pos: 26085
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node trueNode = condition.getNext();
                children: []
                pos: 26125
                length: 36
              - type: local_variable_declaration
                fields:
                  text: Node falseNode = n.getLastChild();
                children: []
                pos: 26166
                length: 34
              - type: expression_statement
                fields:
                  text: scope = traverse(condition, scope);
                children: []
                pos: 26234
                length: 35
              - type: local_variable_declaration
                fields:
                  text: |-
                    FlowScope trueScope = reverseInterpreter.
                            getPreciserScopeKnowingConditionOutcome(
                                condition, scope, true);
                children: []
                pos: 26349
                length: 127
              - type: local_variable_declaration
                fields:
                  text: |-
                    FlowScope falseScope = reverseInterpreter.
                            getPreciserScopeKnowingConditionOutcome(
                                condition, scope, false);
                children: []
                pos: 26481
                length: 129
              - type: expression_statement
                fields:
                  text: traverse(trueNode, trueScope.createChildFlowScope());
                children: []
                pos: 26665
                length: 53
              - type: expression_statement
                fields:
                  text: traverse(falseNode, falseScope.createChildFlowScope());
                children: []
                pos: 26775
                length: 55
              - type: local_variable_declaration
                fields:
                  text: JSType trueType = trueNode.getJSType();
                children: []
                pos: 26887
                length: 39
              - type: local_variable_declaration
                fields:
                  text: JSType falseType = falseNode.getJSType();
                children: []
                pos: 26931
                length: 41
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: trueType
                                children: []
                                pos: 26981
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 26993
                                length: 4
                            children: []
                            pos: 26981
                            length: 16
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: falseType
                                children: []
                                pos: 27001
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 27014
                                length: 4
                            children: []
                            pos: 27001
                            length: 17
                        children: []
                        pos: 26981
                        length: 37
                    children: []
                    pos: 26980
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: n.setJSType(trueType.getLeastSupertype(falseType));
                    children: []
                    pos: 27028
                    length: 51
                  pos: 27020
                  length: 65
                pos: 26977
                length: 146
              - type: return_statement
                fields:
                  text: return scope.createChildFlowScope();
                children: []
                pos: 27129
                length: 36
              pos: 26079
              length: 1090
          children: []
          pos: 26023
          length: 1146
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseCall
              children: []
              pos: 27191
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 27204
                length: 6
              pos: 27173
              length: 667
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 27235
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 27276
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType functionType = getJSType(left).restrictByNotNullOrUndefined();
                children: []
                pos: 27311
                length: 69
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: functionType
                            children: []
                            pos: 27389
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 27405
                            length: 4
                        children: []
                        pos: 27389
                        length: 20
                    children: []
                    pos: 27388
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: functionType.isFunctionType()
                            children: []
                            pos: 27423
                            length: 29
                        children: []
                        pos: 27422
                        length: 31
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: FunctionType fnType = functionType.toMaybeFunctionType();
                        children: []
                        pos: 27464
                        length: 57
                      - type: expression_statement
                        fields:
                          text: n.setJSType(fnType.getReturnType());
                        children: []
                        pos: 27530
                        length: 36
                      - type: expression_statement
                        fields:
                          text: backwardsInferenceFromCallSite(n, fnType);
                        children: []
                        pos: 27575
                        length: 42
                      pos: 27454
                      length: 171
                    pos: 27419
                    length: 341
                  pos: 27411
                  length: 355
                pos: 27385
                length: 381
              - type: expression_statement
                fields:
                  text: scope = tightenTypesAfterAssertions(scope, n);
                children: []
                pos: 27772
                length: 46
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 27823
                length: 13
              pos: 27229
              length: 611
          children: []
          pos: 27173
          length: 667
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: tightenTypesAfterAssertions
              children: []
              pos: 27862
              length: 27
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 27890
                length: 15
              pos: 27844
              length: 1831
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = callNode.getFirstChild();
                children: []
                pos: 27934
                length: 37
              - type: local_variable_declaration
                fields:
                  text: Node firstParam = left.getNext();
                children: []
                pos: 27976
                length: 33
              - type: local_variable_declaration
                fields:
                  text: |-
                    AssertionFunctionSpec assertionFunctionSpec =
                            assertionFunctionsMap.get(left.getQualifiedName());
                children: []
                pos: 28014
                length: 105
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: assertionFunctionSpec
                                children: []
                                pos: 28128
                                length: 21
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 28153
                                length: 4
                            children: []
                            pos: 28128
                            length: 29
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: firstParam
                                children: []
                                pos: 28161
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 28175
                                length: 4
                            children: []
                            pos: 28161
                            length: 18
                        children: []
                        pos: 28128
                        length: 51
                    children: []
                    pos: 28127
                    length: 53
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 28189
                    length: 13
                  pos: 28181
                  length: 27
                pos: 28124
                length: 84
              - type: local_variable_declaration
                fields:
                  text: Node assertedNode = assertionFunctionSpec.getAssertedParam(firstParam);
                children: []
                pos: 28213
                length: 71
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: assertedNode
                            children: []
                            pos: 28293
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 28309
                            length: 4
                        children: []
                        pos: 28293
                        length: 20
                    children: []
                    pos: 28292
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 28323
                    length: 13
                  pos: 28315
                  length: 27
                pos: 28289
                length: 53
              - type: local_variable_declaration
                fields:
                  text: JSTypeNative assertedType = assertionFunctionSpec.getAssertedType();
                children: []
                pos: 28347
                length: 68
              - type: local_variable_declaration
                fields:
                  text: String assertedNodeName = assertedNode.getQualifiedName();
                children: []
                pos: 28420
                length: 58
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: assertedType
                            children: []
                            pos: 28555
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 28571
                            length: 4
                        children: []
                        pos: 28555
                        length: 20
                    children: []
                    pos: 28554
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: assertedNodeName
                                children: []
                                pos: 28589
                                length: 16
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 28609
                                length: 4
                            children: []
                            pos: 28589
                            length: 24
                        children: []
                        pos: 28588
                        length: 26
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType type = getJSType(assertedNode);
                        children: []
                        pos: 28625
                        length: 38
                      - type: local_variable_declaration
                        fields:
                          text: JSType narrowed = type.restrictByNotNullOrUndefined();
                        children: []
                        pos: 28672
                        length: 54
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: type
                                    children: []
                                    pos: 28739
                                    length: 4
                                  right:
                                    type: identifier
                                    fields:
                                      text: narrowed
                                    children: []
                                    pos: 28747
                                    length: 8
                                children: []
                                pos: 28739
                                length: 16
                            children: []
                            pos: 28738
                            length: 18
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: scope = narrowScope(scope, assertedNode, narrowed);
                            children: []
                            pos: 28769
                            length: 51
                          - type: expression_statement
                            fields:
                              text: callNode.setJSType(narrowed);
                            children: []
                            pos: 28831
                            length: 29
                          pos: 28757
                          length: 113
                        pos: 28735
                        length: 135
                      pos: 28615
                      length: 263
                    pos: 28585
                    length: 685
                  pos: 28577
                  length: 699
                pos: 28551
                length: 1102
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 29658
                length: 13
              pos: 27928
              length: 1747
          children: []
          pos: 27844
          length: 1831
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: narrowScope
              children: []
              pos: 29697
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 29709
                length: 15
              pos: 29679
              length: 337
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = scope.createChildFlowScope();
                children: []
                pos: 29760
                length: 37
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: node.isGetProp()
                        children: []
                        pos: 29806
                        length: 16
                    children: []
                    pos: 29805
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        scope.inferQualifiedSlot(
                                  node, node.getQualifiedName(), getJSType(node), narrowed);
                    children: []
                    pos: 29832
                    length: 94
                  pos: 29824
                  length: 108
                pos: 29802
                length: 192
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 29999
                length: 13
              pos: 29754
              length: 262
          children: []
          pos: 29679
          length: 337
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: backwardsInferenceFromCallSite
              children: []
              pos: 30955
              length: 30
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 30986
                length: 6
              pos: 30942
              length: 186
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: updateTypeOfParameters(n, fnType);
                children: []
                pos: 31021
                length: 34
              - type: expression_statement
                fields:
                  text: updateTypeOfThisOnClosure(n, fnType);
                children: []
                pos: 31060
                length: 37
              - type: expression_statement
                fields:
                  text: updateBind(n, fnType);
                children: []
                pos: 31102
                length: 22
              pos: 31015
              length: 113
          children: []
          pos: 30942
          length: 186
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateBind
              children: []
              pos: 31312
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 31323
                length: 6
              pos: 31299
              length: 640
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node calledFn = n.getFirstChild();
                children: []
                pos: 31452
                length: 34
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean looksLikeBind = calledFn.isGetProp()
                            && calledFn.getLastChild().getString().equals("bind");
                children: []
                pos: 31491
                length: 107
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!looksLikeBind"
                        children: []
                        pos: 31607
                        length: 14
                    children: []
                    pos: 31606
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 31631
                    length: 7
                  pos: 31623
                  length: 21
                pos: 31603
                length: 41
              - type: local_variable_declaration
                fields:
                  text: Node callTarget = calledFn.getFirstChild();
                children: []
                pos: 31650
                length: 43
              - type: local_variable_declaration
                fields:
                  text: |-
                    FunctionType callTargetFn = getJSType(callTarget)
                            .restrictByNotNullOrUndefined().toMaybeFunctionType();
                children: []
                pos: 31698
                length: 112
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: callTargetFn
                            children: []
                            pos: 31819
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 31835
                            length: 4
                        children: []
                        pos: 31819
                        length: 20
                    children: []
                    pos: 31818
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 31849
                    length: 7
                  pos: 31841
                  length: 21
                pos: 31815
                length: 47
              - type: expression_statement
                fields:
                  text: n.setJSType(callTargetFn.getBindReturnType(n.getChildCount()
                    - 1));
                children: []
                pos: 31868
                length: 67
              pos: 31352
              length: 587
          children: []
          pos: 31299
          length: 640
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateTypeOfParameters
              children: []
              pos: 32116
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 32139
                length: 6
              pos: 32103
              length: 867
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int i = 0;
                children: []
                pos: 32174
                length: 10
              - type: local_variable_declaration
                fields:
                  text: int childCount = n.getChildCount();
                children: []
                pos: 32189
                length: 35
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (Node iParameter : fnType.getParameters()) {
                          if (i + 1 >= childCount) {
                            // TypeCheck#visitParametersList will warn so we bail.
                            return;
                          }

                          JSType iParameterType = getJSType(iParameter);
                          Node iArgument = n.getChildAtIndex(i + 1);
                          JSType iArgumentType = getJSType(iArgument);
                          inferPropertyTypesToMatchConstraint(iArgumentType, iParameterType);

                          if (iParameterType.isFunctionType()) {
                            FunctionType iParameterFnType = iParameterType.toMaybeFunctionType();

                            if (iArgument.isFunction() &&
                                iArgumentType.isFunctionType() &&
                                iArgument.getJSDocInfo() == null) {
                              iArgument.setJSType(iParameterFnType);
                            }
                          }
                          i++;
                        }
                children: []
                pos: 32229
                length: 737
              pos: 32168
              length: 802
          children: []
          pos: 32103
          length: 867
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateTypeOfThisOnClosure
              children: []
              pos: 33178
              length: 25
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 33204
                length: 6
              pos: 33165
              length: 3662
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: fnType.getTemplateTypeName()
                            children: []
                            pos: 33301
                            length: 28
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 33333
                            length: 4
                        children: []
                        pos: 33301
                        length: 36
                    children: []
                    pos: 33300
                    length: 38
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 33347
                    length: 7
                  pos: 33339
                  length: 21
                pos: 33297
                length: 63
              - type: local_variable_declaration
                fields:
                  text: int i = 0;
                children: []
                pos: 33366
                length: 10
              - type: local_variable_declaration
                fields:
                  text: int childCount = n.getChildCount();
                children: []
                pos: 33381
                length: 35
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (Node iParameter : fnType.getParameters()) {
                          JSType iParameterType =
                              getJSType(iParameter).restrictByNotNullOrUndefined();
                          if (iParameterType.isTemplateType()) {
                            // Find the actual type of this argument.
                            ObjectType iArgumentType = null;
                            if (i + 1 < childCount) {
                              Node iArgument = n.getChildAtIndex(i + 1);
                              iArgumentType = getJSType(iArgument)
                                  .restrictByNotNullOrUndefined()
                                  .collapseUnion()
                                  .toObjectType();
                              if (iArgumentType == null) {
                                compiler.report(
                                    JSError.make(NodeUtil.getSourceName(iArgument), iArgument,
                                        TEMPLATE_TYPE_NOT_OBJECT_TYPE,
                                        getJSType(iArgument).toString()));
                                return;
                              }
                            }

                            // Find the parameter whose type is function(this: T, ...)
                            boolean foundTemplateTypeOfThisParameter = false;
                            int j = 0;
                            for (Node jParameter : fnType.getParameters()) {
                              JSType jParameterType =
                                  getJSType(jParameter).restrictByNotNullOrUndefined();
                              if (jParameterType.isFunctionType()) {
                                FunctionType jParameterFnType = jParameterType.toMaybeFunctionType();
                                if (jParameterFnType.getTypeOfThis().equals(iParameterType)) {
                                  foundTemplateTypeOfThisParameter = true;
                                  // Find the actual type of the this argument.
                                  if (j + 1 >= childCount) {
                                    // TypeCheck#visitParameterList will warn so we bail.
                                    return;
                                  }
                                  Node jArgument = n.getChildAtIndex(j + 1);
                                  JSType jArgumentType = getJSType(jArgument);
                                  if (jArgument.isFunction() &&
                                      jArgumentType.isFunctionType()) {
                                    if (iArgumentType != null &&
                                        // null and undefined get filtered out above.
                                        !iArgumentType.isNoType()) {
                                      // If it's an function expression, update the type of this
                                      // using the actual type of T.
                                      FunctionType jArgumentFnType = jArgumentType.toMaybeFunctionType();
                                      if (jArgumentFnType.getTypeOfThis().isUnknownType()) {
                                        // The new type will be picked up when we traverse the inner
                                        // function.
                                        jArgument.setJSType(
                                            registry.createFunctionTypeWithNewThisType(
                                                jArgumentFnType, iArgumentType));
                                      }
                                    } else {
                                      // Warn if the anonymous function literal references this.
                                      if (NodeUtil.referencesThis(
                                              NodeUtil.getFunctionBody(jArgument))) {
                                        compiler.report(JSError.make(NodeUtil.getSourceName(n), n,
                                            FUNCTION_LITERAL_UNDEFINED_THIS));
                                      }
                                    }
                                  }
                                  // TODO(user): Add code to TypeCheck to check that the
                                  // types of the arguments match.
                                }
                              }
                              j++;
                            }

                            if (!foundTemplateTypeOfThisParameter) {
                              compiler.report(JSError.make(NodeUtil.getSourceName(n), n,
                                  TEMPLATE_TYPE_OF_THIS_EXPECTED));
                              return;
                            }
                          }
                          i++;
                        }
                children: []
                pos: 33480
                length: 3343
              pos: 33233
              length: 3594
          children: []
          pos: 33165
          length: 3662
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseNew
              children: []
              pos: 36849
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 36861
                length: 6
              pos: 36831
              length: 1127
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node constructor = n.getFirstChild();
                children: []
                pos: 36892
                length: 37
              - type: expression_statement
                fields:
                  text: scope = traverse(constructor, scope);
                children: []
                pos: 36934
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType constructorType = constructor.getJSType();
                children: []
                pos: 36977
                length: 49
              - type: local_variable_declaration
                fields:
                  text: JSType type = null;
                children: []
                pos: 37031
                length: 19
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: constructorType
                            children: []
                            pos: 37059
                            length: 15
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 37078
                            length: 4
                        children: []
                        pos: 37059
                        length: 23
                    children: []
                    pos: 37058
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: constructorType = constructorType.restrictByNotNullOrUndefined();
                    children: []
                    pos: 37092
                    length: 65
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: constructorType.isUnknownType()
                            children: []
                            pos: 37168
                            length: 31
                        children: []
                        pos: 37167
                        length: 33
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: type = getNativeType(UNKNOWN_TYPE);
                        children: []
                        pos: 37211
                        length: 35
                      pos: 37201
                      length: 53
                    pos: 37164
                    length: 621
                  pos: 37084
                  length: 707
                pos: 37055
                length: 736
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 37796
                length: 18
              - type: for_statement
                fields:
                  text: |-
                    for (Node arg = constructor.getNext(); arg != null; arg = arg.getNext()) {
                          scope = traverse(arg, scope);
                        }
                children: []
                pos: 37820
                length: 116
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 37941
                length: 13
              pos: 36886
              length: 1072
          children: []
          pos: 36831
          length: 1127
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseAnd
              children: []
              pos: 37989
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 38001
                length: 6
              pos: 37962
              length: 126
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return traverseShortCircuitingBinOp(n, scope, true);
                children: []
                pos: 38032
                length: 52
              pos: 38026
              length: 62
          children: []
          pos: 37962
          length: 126
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseChildren
              children: []
              pos: 38110
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 38127
                length: 6
              pos: 38092
              length: 195
            body:
              type: block
              fields: {}
              children:
              - type: for_statement
                fields:
                  text: |-
                    for (Node el = n.getFirstChild(); el != null; el = el.getNext()) {
                          scope = traverse(el, scope);
                        }
                children: []
                pos: 38158
                length: 107
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 38270
                length: 13
              pos: 38152
              length: 135
          children: []
          pos: 38092
          length: 195
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseGetElem
              children: []
              pos: 38309
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 38325
                length: 6
              pos: 38291
              length: 415
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 38356
                length: 35
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType objType = ObjectType.cast(
                            getJSType(n.getFirstChild()).restrictByNotNullOrUndefined());
                children: []
                pos: 38396
                length: 107
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: objType
                            children: []
                            pos: 38512
                            length: 7
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 38523
                            length: 4
                        children: []
                        pos: 38512
                        length: 15
                    children: []
                    pos: 38511
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType type = objType.getParameterType();
                    children: []
                    pos: 38537
                    length: 41
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 38589
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 38597
                                length: 4
                            children: []
                            pos: 38589
                            length: 12
                        children: []
                        pos: 38588
                        length: 14
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: n.setJSType(type);
                        children: []
                        pos: 38613
                        length: 18
                      pos: 38603
                      length: 36
                    pos: 38585
                    length: 54
                  pos: 38529
                  length: 116
                pos: 38508
                length: 137
              - type: return_statement
                fields:
                  text: return dereferencePointer(n.getFirstChild(), scope);
                children: []
                pos: 38650
                length: 52
              pos: 38350
              length: 356
          children: []
          pos: 38291
          length: 415
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseGetProp
              children: []
              pos: 38728
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 38744
                length: 6
              pos: 38710
              length: 346
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node objNode = n.getFirstChild();
                children: []
                pos: 38775
                length: 33
              - type: local_variable_declaration
                fields:
                  text: Node property = n.getLastChild();
                children: []
                pos: 38813
                length: 33
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 38851
                length: 35
              - type: expression_statement
                fields:
                  text: |-
                    n.setJSType(
                            getPropertyType(
                                objNode.getJSType(), property.getString(), n, scope));
                children: []
                pos: 38891
                length: 104
              - type: return_statement
                fields:
                  text: return dereferencePointer(n.getFirstChild(), scope);
                children: []
                pos: 39000
                length: 52
              pos: 38769
              length: 287
          children: []
          pos: 38710
          length: 346
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: inferPropertyTypesToMatchConstraint
              children: []
              pos: 39603
              length: 35
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType type
                children: []
                pos: 39646
                length: 11
              pos: 39590
              length: 341
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 39688
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 39696
                                length: 4
                            children: []
                            pos: 39688
                            length: 12
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: constraint
                                children: []
                                pos: 39704
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 39718
                                length: 4
                            children: []
                            pos: 39704
                            length: 18
                        children: []
                        pos: 39688
                        length: 34
                    children: []
                    pos: 39687
                    length: 36
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 39732
                    length: 7
                  pos: 39724
                  length: 21
                pos: 39684
                length: 61
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType constraintObj =
                            ObjectType.cast(constraint.restrictByNotNullOrUndefined());
                children: []
                pos: 39751
                length: 94
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: constraintObj
                            children: []
                            pos: 39854
                            length: 13
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 39871
                            length: 4
                        children: []
                        pos: 39854
                        length: 21
                    children: []
                    pos: 39853
                    length: 23
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: type.matchConstraint(constraintObj);
                    children: []
                    pos: 39885
                    length: 36
                  pos: 39877
                  length: 50
                pos: 39850
                length: 77
              pos: 39678
              length: 253
          children: []
          pos: 39590
          length: 341
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: dereferencePointer
              children: []
              pos: 40055
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 40074
                length: 6
              pos: 40037
              length: 304
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.isQualifiedName()
                        children: []
                        pos: 40109
                        length: 19
                    children: []
                    pos: 40108
                    length: 21
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType type = getJSType(n);
                    children: []
                    pos: 40138
                    length: 27
                  - type: local_variable_declaration
                    fields:
                      text: JSType narrowed = type.restrictByNotNullOrUndefined();
                    children: []
                    pos: 40172
                    length: 54
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 40237
                                length: 4
                              right:
                                type: identifier
                                fields:
                                  text: narrowed
                                children: []
                                pos: 40245
                                length: 8
                            children: []
                            pos: 40237
                            length: 16
                        children: []
                        pos: 40236
                        length: 18
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: scope = narrowScope(scope, n, narrowed);
                        children: []
                        pos: 40265
                        length: 40
                      pos: 40255
                      length: 58
                    pos: 40233
                    length: 80
                  pos: 40130
                  length: 189
                pos: 40105
                length: 214
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 40324
                length: 13
              pos: 40099
              length: 242
          children: []
          pos: 40037
          length: 304
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getPropertyType
              children: []
              pos: 40360
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType objType
                children: []
                pos: 40376
                length: 14
              pos: 40345
              length: 1254
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String qualifiedName = n.getQualifiedName();
                children: []
                pos: 40520
                length: 44
              - type: local_variable_declaration
                fields:
                  text: StaticSlot<JSType> var = scope.getSlot(qualifiedName);
                children: []
                pos: 40569
                length: 54
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: var
                            children: []
                            pos: 40632
                            length: 3
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 40639
                            length: 4
                        children: []
                        pos: 40632
                        length: 11
                    children: []
                    pos: 40631
                    length: 13
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType varType = var.getType();
                    children: []
                    pos: 40653
                    length: 31
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: varType
                                children: []
                                pos: 40695
                                length: 7
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 40706
                                length: 4
                            children: []
                            pos: 40695
                            length: 15
                        children: []
                        pos: 40694
                        length: 17
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: varType.equals(getNativeType(UNKNOWN_TYPE))
                                    children: []
                                    pos: 40726
                                    length: 43
                                  right:
                                    type: not_equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: var
                                        children: []
                                        pos: 40785
                                        length: 3
                                      right:
                                        type: method_invocation
                                        fields:
                                          text: syntacticScope.getSlot(qualifiedName)
                                        children: []
                                        pos: 40792
                                        length: 37
                                    children: []
                                    pos: 40785
                                    length: 44
                                children: []
                                pos: 40726
                                length: 103
                            children: []
                            pos: 40725
                            length: 105
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: return_statement
                            fields:
                              text: return getNativeType(CHECKED_UNKNOWN_TYPE);
                            children: []
                            pos: 40992
                            length: 43
                          pos: 40831
                          length: 214
                        pos: 40722
                        length: 366
                      pos: 40712
                      length: 384
                    pos: 40691
                    length: 405
                  pos: 40645
                  length: 457
                pos: 40628
                length: 474
              - type: local_variable_declaration
                fields:
                  text: JSType propertyType = null;
                children: []
                pos: 41108
                length: 27
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: objType
                            children: []
                            pos: 41144
                            length: 7
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 41155
                            length: 4
                        children: []
                        pos: 41144
                        length: 15
                    children: []
                    pos: 41143
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: propertyType = objType.findPropertyType(propName);
                    children: []
                    pos: 41169
                    length: 50
                  pos: 41161
                  length: 64
                pos: 41140
                length: 85
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: or
                                fields:
                                  left:
                                    type: equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: propertyType
                                        children: []
                                        pos: 41236
                                        length: 12
                                      right:
                                        type: null_literal
                                        fields: {}
                                        children: []
                                        pos: 41252
                                        length: 4
                                    children: []
                                    pos: 41236
                                    length: 20
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: propertyType.isUnknownType()
                                    children: []
                                    pos: 41260
                                    length: 28
                                children: []
                                pos: 41236
                                length: 52
                            children: []
                            pos: 41235
                            length: 54
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: qualifiedName
                                children: []
                                pos: 41301
                                length: 13
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 41318
                                length: 4
                            children: []
                            pos: 41301
                            length: 21
                        children: []
                        pos: 41235
                        length: 87
                    children: []
                    pos: 41234
                    length: 89
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: ObjectType regType = ObjectType.cast(registry.getType(qualifiedName));
                    children: []
                    pos: 41407
                    length: 70
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: regType
                                children: []
                                pos: 41488
                                length: 7
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 41499
                                length: 4
                            children: []
                            pos: 41488
                            length: 15
                        children: []
                        pos: 41487
                        length: 17
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: propertyType = regType.getConstructor();
                        children: []
                        pos: 41515
                        length: 40
                      pos: 41505
                      length: 58
                    pos: 41484
                    length: 79
                  pos: 41324
                  length: 245
                pos: 41231
                length: 338
              - type: return_statement
                fields:
                  text: return propertyType;
                children: []
                pos: 41575
                length: 20
              pos: 40440
              length: 1159
          children: []
          pos: 40345
          length: 1254
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseOr
              children: []
              pos: 41630
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 41641
                length: 6
              pos: 41603
              length: 126
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return traverseShortCircuitingBinOp(n, scope, false);
                children: []
                pos: 41672
                length: 53
              pos: 41666
              length: 63
          children: []
          pos: 41603
          length: 126
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseShortCircuitingBinOp
              children: []
              pos: 41760
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 41796
                length: 6
              pos: 41733
              length: 2359
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 41846
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 41881
                length: 30
              - type: local_variable_declaration
                fields:
                  text: |-
                    BooleanOutcomePair leftLiterals =
                            traverseWithinShortCircuitingBinOp(left,
                                scope.createChildFlowScope());
                children: []
                pos: 41943
                length: 125
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = left.getJSType();
                children: []
                pos: 42073
                length: 35
              - type: local_variable_declaration
                fields:
                  text: |-
                    FlowScope rightScope = reverseInterpreter.
                            getPreciserScopeKnowingConditionOutcome(
                                left, leftLiterals.getOutcomeFlowScope(left.getType(), condition),
                                condition);
                children: []
                pos: 42232
                length: 194
              - type: local_variable_declaration
                fields:
                  text: |-
                    BooleanOutcomePair rightLiterals =
                            traverseWithinShortCircuitingBinOp(
                                right, rightScope.createChildFlowScope());
                children: []
                pos: 42459
                length: 133
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = right.getJSType();
                children: []
                pos: 42597
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType type;
                children: []
                pos: 42640
                length: 12
              - type: local_variable_declaration
                fields:
                  text: BooleanOutcomePair literals;
                children: []
                pos: 42657
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: leftType
                                children: []
                                pos: 42694
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 42706
                                length: 4
                            children: []
                            pos: 42694
                            length: 16
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: rightType
                                children: []
                                pos: 42714
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 42727
                                length: 4
                            children: []
                            pos: 42714
                            length: 17
                        children: []
                        pos: 42694
                        length: 37
                    children: []
                    pos: 42693
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: leftType = leftType.getRestrictedTypeGivenToBooleanOutcome(!condition);
                    children: []
                    pos: 42741
                    length: 71
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: field_access
                                fields:
                                  text: leftLiterals.toBooleanOutcomes
                                children: []
                                pos: 42823
                                length: 30
                              right:
                                type: method_invocation
                                fields:
                                  text: BooleanLiteralSet.get(!condition)
                                children: []
                                pos: 42867
                                length: 33
                            children: []
                            pos: 42823
                            length: 77
                        children: []
                        pos: 42822
                        length: 79
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: type = leftType;
                        children: []
                        pos: 43007
                        length: 16
                      - type: expression_statement
                        fields:
                          text: literals = leftLiterals;
                        children: []
                        pos: 43032
                        length: 24
                      pos: 42902
                      length: 162
                    pos: 42819
                    length: 541
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: equals
                                fields:
                                  left:
                                    type: field_access
                                    fields:
                                      text: literals.booleanValues
                                    children: []
                                    pos: 43493
                                    length: 22
                                  right:
                                    type: field_access
                                    fields:
                                      text: BooleanLiteralSet.EMPTY
                                    children: []
                                    pos: 43519
                                    length: 23
                                children: []
                                pos: 43493
                                length: 49
                              right:
                                type: method_invocation
                                fields:
                                  text: getNativeType(BOOLEAN_TYPE).isSubtype(type)
                                children: []
                                pos: 43556
                                length: 43
                            children: []
                            pos: 43493
                            length: 106
                        children: []
                        pos: 43492
                        length: 108
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: method_invocation
                                fields:
                                  text: type.isUnionType()
                                children: []
                                pos: 43670
                                length: 18
                            children: []
                            pos: 43669
                            length: 20
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: |-
                                type = type.toMaybeUnionType().getRestrictedUnion(
                                              getNativeType(BOOLEAN_TYPE));
                            children: []
                            pos: 43702
                            length: 94
                          pos: 43690
                          length: 116
                        pos: 43666
                        length: 140
                      pos: 43601
                      length: 213
                    pos: 43489
                    length: 325
                  pos: 42733
                  length: 1087
                pos: 42690
                length: 1353
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 44048
                length: 18
              - type: return_statement
                fields:
                  text: return literals;
                children: []
                pos: 44072
                length: 16
              pos: 41840
              length: 2252
          children: []
          pos: 41733
          length: 2359
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseWithinShortCircuitingBinOp
              children: []
              pos: 44123
              length: 34
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 44158
                length: 6
              pos: 44096
              length: 362
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 44203
                        length: 11
                    children: []
                    pos: 44202
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.AND:
                                return traverseAnd(n, scope);

                              case Token.OR:
                                return traverseOr(n, scope);

                              default:
                                scope = traverse(n, scope);
                                return newBooleanOutcomePair(n.getJSType(), scope);
                            }
                    children: []
                    pos: 44216
                    length: 238
                children: []
                pos: 44195
                length: 259
              pos: 44189
              length: 269
          children: []
          pos: 44096
          length: 362
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getBooleanOutcomePair
              children: []
              pos: 44697
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: BooleanOutcomePair left
                children: []
                pos: 44719
                length: 23
              pos: 44678
              length: 416
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return new BooleanOutcomePair(
                            getBooleanOutcomes(left.toBooleanOutcomes, right.toBooleanOutcomes,
                                               condition),
                            getBooleanOutcomes(left.booleanValues, right.booleanValues, condition),
                            left.getJoinedFlowScope(), right.getJoinedFlowScope());
                children: []
                pos: 44801
                length: 289
              pos: 44795
              length: 299
          children: []
          pos: 44678
          length: 416
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getBooleanOutcomes
              children: []
              pos: 45780
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: BooleanLiteralSet left
                children: []
                pos: 45799
                length: 22
              pos: 45755
              length: 201
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return right.union(left.intersection(BooleanLiteralSet.get(!condition)));
                children: []
                pos: 45879
                length: 73
              pos: 45873
              length: 83
          children: []
          pos: 45755
          length: 201
        - type: class_declaration
          fields:
            name:
              type: identifier
              fields:
                text: BooleanOutcomePair
              children: []
              pos: 46263
              length: 18
            body:
              type: class_body
              fields: {}
              children:
              - type: field_declaration
                fields:
                  text: final BooleanLiteralSet toBooleanOutcomes;
                children: []
                pos: 46288
                length: 42
              - type: field_declaration
                fields:
                  text: final BooleanLiteralSet booleanValues;
                children: []
                pos: 46335
                length: 38
              - type: field_declaration
                fields:
                  text: final FlowScope leftScope;
                children: []
                pos: 46454
                length: 26
              - type: field_declaration
                fields:
                  text: final FlowScope rightScope;
                children: []
                pos: 46539
                length: 27
              - type: field_declaration
                fields:
                  text: FlowScope joinedScope = null;
                children: []
                pos: 46648
                length: 29
              - type: constructor_declaration
                fields:
                  text: |-
                    BooleanOutcomePair(
                            BooleanLiteralSet toBooleanOutcomes, BooleanLiteralSet booleanValues,
                            FlowScope leftScope, FlowScope rightScope) {
                          this.toBooleanOutcomes = toBooleanOutcomes;
                          this.booleanValues = booleanValues;
                          this.leftScope = leftScope;
                          this.rightScope = rightScope;
                        }
                children: []
                pos: 46683
                length: 318
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: getJoinedFlowScope
                    children: []
                    pos: 47141
                    length: 18
                  parameters:
                    type: method_parameters
                    fields: {}
                    children: []
                    pos: 47131
                    length: 260
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: equals
                              fields:
                                left:
                                  type: identifier
                                  fields:
                                    text: joinedScope
                                  children: []
                                  pos: 47174
                                  length: 11
                                right:
                                  type: null_literal
                                  fields: {}
                                  children: []
                                  pos: 47189
                                  length: 4
                              children: []
                              pos: 47174
                              length: 19
                          children: []
                          pos: 47173
                          length: 21
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: if_statement
                          fields:
                            condition:
                              type: parenthesized_expression
                              fields:
                                expression:
                                  type: equals
                                  fields:
                                    left:
                                      type: identifier
                                      fields:
                                        text: leftScope
                                      children: []
                                      pos: 47209
                                      length: 9
                                    right:
                                      type: identifier
                                      fields:
                                        text: rightScope
                                      children: []
                                      pos: 47222
                                      length: 10
                                  children: []
                                  pos: 47209
                                  length: 23
                              children: []
                              pos: 47208
                              length: 25
                          children:
                          - type: block
                            fields: {}
                            children:
                            - type: expression_statement
                              fields:
                                text: joinedScope = rightScope;
                              children: []
                              pos: 47246
                              length: 25
                            pos: 47234
                            length: 47
                          pos: 47205
                          length: 146
                        pos: 47195
                        length: 164
                      pos: 47170
                      length: 189
                    - type: return_statement
                      fields:
                        text: return joinedScope;
                      children: []
                      pos: 47366
                      length: 19
                    pos: 47162
                    length: 229
                children: []
                pos: 47131
                length: 260
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: getOutcomeFlowScope
                    children: []
                    pos: 47512
                    length: 19
                  parameters:
                    type: method_parameters
                    fields: {}
                    children:
                    - type: formal_parameter
                      fields:
                        text: int nodeType
                      children: []
                      pos: 47532
                      length: 12
                    pos: 47502
                    length: 312
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: or
                              fields:
                                left:
                                  type: and
                                  fields:
                                    left:
                                      type: equals
                                      fields:
                                        left:
                                          type: identifier
                                          fields:
                                            text: nodeType
                                          children: []
                                          pos: 47575
                                          length: 8
                                        right:
                                          type: field_access
                                          fields:
                                            text: Token.AND
                                          children: []
                                          pos: 47587
                                          length: 9
                                      children: []
                                      pos: 47575
                                      length: 21
                                    right:
                                      type: identifier
                                      fields:
                                        text: outcome
                                      children: []
                                      pos: 47600
                                      length: 7
                                  children: []
                                  pos: 47575
                                  length: 32
                                right:
                                  type: and
                                  fields:
                                    left:
                                      type: equals
                                      fields:
                                        left:
                                          type: identifier
                                          fields:
                                            text: nodeType
                                          children: []
                                          pos: 47621
                                          length: 8
                                        right:
                                          type: field_access
                                          fields:
                                            text: Token.OR
                                          children: []
                                          pos: 47633
                                          length: 8
                                      children: []
                                      pos: 47621
                                      length: 20
                                    right:
                                      type: unary_expression
                                      fields:
                                        text: "!outcome"
                                      children: []
                                      pos: 47645
                                      length: 8
                                  children: []
                                  pos: 47621
                                  length: 32
                              children: []
                              pos: 47575
                              length: 78
                          children: []
                          pos: 47574
                          length: 80
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: return_statement
                          fields:
                            text: return rightScope;
                          children: []
                          pos: 47730
                          length: 18
                        pos: 47655
                        length: 101
                      pos: 47571
                      length: 237
                    pos: 47563
                    length: 251
                children: []
                pos: 47502
                length: 312
              pos: 46243
              length: 1575
          children: []
          pos: 46243
          length: 1575
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: newBooleanOutcomePair
              children: []
              pos: 47849
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType jsType
                children: []
                pos: 47878
                length: 13
              pos: 47822
              length: 478
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: jsType
                            children: []
                            pos: 47924
                            length: 6
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 47934
                            length: 4
                        children: []
                        pos: 47924
                        length: 14
                    children: []
                    pos: 47923
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: |-
                        return new BooleanOutcomePair(
                                  BooleanLiteralSet.BOTH, BooleanLiteralSet.BOTH, flowScope, flowScope);
                    children: []
                    pos: 47948
                    length: 111
                  pos: 47940
                  length: 125
                pos: 47920
                length: 145
              - type: return_statement
                fields:
                  text: |-
                    return new BooleanOutcomePair(jsType.getPossibleToBooleanOutcomes(),
                            registry.getNativeType(BOOLEAN_TYPE).isSubtype(jsType) ?
                                BooleanLiteralSet.BOTH : BooleanLiteralSet.EMPTY,
                            flowScope, flowScope);
                children: []
                pos: 48070
                length: 226
              pos: 47914
              length: 386
          children: []
          pos: 47822
          length: 478
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: redeclareSimpleVar
              children: []
              pos: 48317
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 48343
                length: 15
              pos: 48304
              length: 394
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(nameNode.isName());
                children: []
                pos: 48397
                length: 44
              - type: local_variable_declaration
                fields:
                  text: String varName = nameNode.getString();
                children: []
                pos: 48446
                length: 38
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: varType
                            children: []
                            pos: 48493
                            length: 7
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 48504
                            length: 4
                        children: []
                        pos: 48493
                        length: 15
                    children: []
                    pos: 48492
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: varType = getNativeType(JSTypeNative.UNKNOWN_TYPE);
                    children: []
                    pos: 48518
                    length: 51
                  pos: 48510
                  length: 65
                pos: 48489
                length: 86
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isUnflowable(syntacticScope.getVar(varName))
                        children: []
                        pos: 48584
                        length: 44
                    children: []
                    pos: 48583
                    length: 46
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 48638
                    length: 7
                  pos: 48630
                  length: 21
                pos: 48580
                length: 71
              - type: expression_statement
                fields:
                  text: scope.inferSlotType(varName, varType);
                children: []
                pos: 48656
                length: 38
              pos: 48391
              length: 307
          children: []
          pos: 48304
          length: 394
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isUnflowable
              children: []
              pos: 48718
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Var v
                children: []
                pos: 48731
                length: 5
              pos: 48702
              length: 214
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return v != null && v.isLocal() && v.isMarkedEscaped() &&
                            // It's OK to flow a variable in the scope where it's escaped.
                            v.getScope() == syntacticScope;
                children: []
                pos: 48744
                length: 168
              pos: 48738
              length: 178
          children: []
          pos: 48702
          length: 214
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getJSType
              children: []
              pos: 49041
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 49051
                length: 6
              pos: 49026
              length: 461
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType jsType = n.getJSType();
                children: []
                pos: 49065
                length: 30
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: jsType
                            children: []
                            pos: 49104
                            length: 6
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 49114
                            length: 4
                        children: []
                        pos: 49104
                        length: 14
                    children: []
                    pos: 49103
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return getNativeType(UNKNOWN_TYPE);
                    children: []
                    pos: 49408
                    length: 35
                  pos: 49120
                  length: 329
                pos: 49100
                length: 383
              pos: 49059
              length: 428
          children: []
          pos: 49026
          length: 461
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getNativeType
              children: []
              pos: 49506
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSTypeNative typeId
                children: []
                pos: 49520
                length: 19
              pos: 49491
              length: 98
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return registry.getNativeType(typeId);
                children: []
                pos: 49547
                length: 38
              pos: 49541
              length: 48
          children: []
          pos: 49491
          length: 98
        pos: 2471
        length: 47120
    children: []
    pos: 2471
    length: 47120
  pos: 0
  length: 49592
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: TypeInference
        children: []
        pos: 2477
        length: 13
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType TEMPLATE_TYPE_NOT_OBJECT_TYPE =
                    DiagnosticType.warning(
                    "JSC_TEMPLATE_TYPE_NOT_OBJECT_TYPE",
                    "The template type must be an object type.\nActual: {0}");
          children: []
          pos: 2573
          length: 197
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType TEMPLATE_TYPE_OF_THIS_EXPECTED =
                    DiagnosticType.warning(
                    "JSC_TEMPLATE_TYPE_OF_THIS_EXPECTED",
                    "A function type with the template type as the type of this must be a " +
                    "parameter type");
          children: []
          pos: 2774
          length: 239
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType FUNCTION_LITERAL_UNDEFINED_THIS =
                  DiagnosticType.warning(
                      "JSC_FUNCTION_LITERAL_UNDEFINED_THIS",
                      "Function literal argument refers to undefined this argument");
          children: []
          pos: 3017
          length: 208
        - type: field_declaration
          fields:
            text: private final AbstractCompiler compiler;
          children: []
          pos: 3229
          length: 40
        - type: field_declaration
          fields:
            text: private final JSTypeRegistry registry;
          children: []
          pos: 3272
          length: 38
        - type: field_declaration
          fields:
            text: private final ReverseAbstractInterpreter reverseInterpreter;
          children: []
          pos: 3313
          length: 60
        - type: field_declaration
          fields:
            text: private final Scope syntacticScope;
          children: []
          pos: 3376
          length: 35
        - type: field_declaration
          fields:
            text: private final FlowScope functionScope;
          children: []
          pos: 3414
          length: 38
        - type: field_declaration
          fields:
            text: private final FlowScope bottomScope;
          children: []
          pos: 3455
          length: 36
        - type: field_declaration
          fields:
            text: private final Map<String, AssertionFunctionSpec> assertionFunctionsMap;
          children: []
          pos: 3494
          length: 71
        - type: constructor_declaration
          fields:
            text: |-
              TypeInference(AbstractCompiler compiler, ControlFlowGraph<Node> cfg,
                              ReverseAbstractInterpreter reverseInterpreter,
                              Scope functionScope,
                              Map<String, AssertionFunctionSpec> assertionFunctionsMap) {
                  super(cfg, new LinkedFlowScope.FlowScopeJoinOp());
                  this.compiler = compiler;
                  this.registry = compiler.getTypeRegistry();
                  this.reverseInterpreter = reverseInterpreter;
                  this.syntacticScope = functionScope;
                  this.functionScope = LinkedFlowScope.createEntryLattice(functionScope);
                  this.assertionFunctionsMap = assertionFunctionsMap;

                  // For each local variable declared with the VAR keyword, the entry
                  // type is VOID.
                  Iterator<Var> varIt =
                      functionScope.getDeclarativelyUnboundVarsWithoutTypes();
                  while (varIt.hasNext()) {
                    Var var = varIt.next();
                    if (isUnflowable(var)) {
                      continue;
                    }

                    this.functionScope.inferSlotType(
                        var.getName(), getNativeType(VOID_TYPE));
                  }

                  this.bottomScope = LinkedFlowScope.createEntryLattice(
                      new Scope(functionScope.getRootNode(), functionScope.getTypeOfThis()));
                }
          children: []
          pos: 3569
          length: 1145
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createInitialEstimateLattice
              children: []
              pos: 4740
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 4718
              length: 82
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return bottomScope;
                children: []
                pos: 4777
                length: 19
              pos: 4771
              length: 29
          children: []
          pos: 4718
          length: 82
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createEntryLattice
              children: []
              pos: 4826
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 4804
              length: 74
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return functionScope;
                children: []
                pos: 4853
                length: 21
              pos: 4847
              length: 31
          children: []
          pos: 4804
          length: 74
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: flowThrough
              children: []
              pos: 4904
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 4916
                length: 6
              pos: 4882
              length: 348
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: input
                            children: []
                            pos: 5070
                            length: 5
                          right:
                            type: identifier
                            fields:
                              text: bottomScope
                            children: []
                            pos: 5079
                            length: 11
                        children: []
                        pos: 5070
                        length: 20
                    children: []
                    pos: 5069
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return input;
                    children: []
                    pos: 5100
                    length: 13
                  pos: 5092
                  length: 27
                pos: 5066
                length: 53
              - type: local_variable_declaration
                fields:
                  text: FlowScope output = input.createChildFlowScope();
                children: []
                pos: 5125
                length: 48
              - type: expression_statement
                fields:
                  text: output = traverse(n, output);
                children: []
                pos: 5178
                length: 29
              - type: return_statement
                fields:
                  text: return output;
                children: []
                pos: 5212
                length: 14
              pos: 4941
              length: 289
          children: []
          pos: 4882
          length: 348
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: branchedFlowThrough
              children: []
              pos: 5297
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node source
                children: []
                pos: 5317
                length: 11
              pos: 5234
              length: 4656
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: FlowScope output = flowThrough(source, input);
                children: []
                pos: 5668
                length: 46
              - type: local_variable_declaration
                fields:
                  text: Node condition = null;
                children: []
                pos: 5719
                length: 22
              - type: local_variable_declaration
                fields:
                  text: FlowScope conditionFlowScope = null;
                children: []
                pos: 5746
                length: 36
              - type: local_variable_declaration
                fields:
                  text: BooleanOutcomePair conditionOutcomes = null;
                children: []
                pos: 5787
                length: 44
              - type: local_variable_declaration
                fields:
                  text: List<DiGraphEdge<Node, Branch>> branchEdges = getCfg().getOutEdges(source);
                children: []
                pos: 5837
                length: 75
              - type: local_variable_declaration
                fields:
                  text: List<FlowScope> result = Lists.newArrayListWithCapacity(branchEdges.size());
                children: []
                pos: 5917
                length: 76
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (DiGraphEdge<Node, Branch> branchEdge : branchEdges) {
                          Branch branch = branchEdge.getValue();
                          FlowScope newScope = output;

                          switch (branch) {
                            case ON_TRUE:
                              if (NodeUtil.isForIn(source)) {
                                // item is assigned a property name, so its type should be string.
                                Node item = source.getFirstChild();
                                Node obj = item.getNext();

                                FlowScope informed = traverse(obj, output.createChildFlowScope());

                                if (item.isVar()) {
                                  item = item.getFirstChild();
                                }
                                if (item.isName()) {
                                  JSType iterKeyType = getNativeType(STRING_TYPE);
                                  ObjectType objType = getJSType(obj).dereference();
                                  JSType objIndexType = objType == null ?
                                      null : objType.getIndexType();
                                  if (objIndexType != null && !objIndexType.isUnknownType()) {
                                    JSType narrowedKeyType =
                                        iterKeyType.getGreatestSubtype(objIndexType);
                                    if (!narrowedKeyType.isEmptyType()) {
                                      iterKeyType = narrowedKeyType;
                                    }
                                  }
                                  redeclareSimpleVar(informed, item, iterKeyType);
                                }
                                newScope = informed;
                                break;
                              }

                              // FALL THROUGH

                            case ON_FALSE:
                              if (condition == null) {
                                condition = NodeUtil.getConditionExpression(source);
                                if (condition == null && source.isCase()) {
                                  condition = source;

                                  // conditionFlowScope is cached from previous iterations
                                  // of the loop.
                                  if (conditionFlowScope == null) {
                                    conditionFlowScope = traverse(
                                        condition.getFirstChild(), output.createChildFlowScope());
                                  }
                                }
                              }

                              if (condition != null) {
                                if (condition.isAnd() ||
                                    condition.isOr()) {
                                  // When handling the short-circuiting binary operators,
                                  // the outcome scope on true can be different than the outcome
                                  // scope on false.
                                  //
                                  // TODO(nicksantos): The "right" way to do this is to
                                  // carry the known outcome all the way through the
                                  // recursive traversal, so that we can construct a
                                  // different flow scope based on the outcome. However,
                                  // this would require a bunch of code and a bunch of
                                  // extra computation for an edge case. This seems to be
                                  // a "good enough" approximation.

                                  // conditionOutcomes is cached from previous iterations
                                  // of the loop.
                                  if (conditionOutcomes == null) {
                                    conditionOutcomes = condition.isAnd() ?
                                        traverseAnd(condition, output.createChildFlowScope()) :
                                        traverseOr(condition, output.createChildFlowScope());
                                  }
                                  newScope =
                                      reverseInterpreter.getPreciserScopeKnowingConditionOutcome(
                                          condition,
                                          conditionOutcomes.getOutcomeFlowScope(
                                              condition.getType(), branch == Branch.ON_TRUE),
                                          branch == Branch.ON_TRUE);
                                } else {
                                  // conditionFlowScope is cached from previous iterations
                                  // of the loop.
                                  if (conditionFlowScope == null) {
                                    conditionFlowScope =
                                        traverse(condition, output.createChildFlowScope());
                                  }
                                  newScope =
                                      reverseInterpreter.getPreciserScopeKnowingConditionOutcome(
                                          condition, conditionFlowScope, branch == Branch.ON_TRUE);
                                }
                              }
                              break;
                          }

                          result.add(newScope.optimize());
                        }
                children: []
                pos: 5998
                length: 3869
              - type: return_statement
                fields:
                  text: return result;
                children: []
                pos: 9872
                length: 14
              pos: 5347
              length: 4543
          children: []
          pos: 5234
          length: 4656
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverse
              children: []
              pos: 9912
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 9921
                length: 6
              pos: 9894
              length: 4132
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 9960
                        length: 11
                    children: []
                    pos: 9959
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.ASSIGN:
                                scope = traverseAssign(n, scope);
                                break;

                              case Token.NAME:
                                scope = traverseName(n, scope);
                                break;

                              case Token.GETPROP:
                                scope = traverseGetProp(n, scope);
                                break;

                              case Token.AND:
                                scope = traverseAnd(n, scope).getJoinedFlowScope()
                                    .createChildFlowScope();
                                break;

                              case Token.OR:
                                scope = traverseOr(n, scope).getJoinedFlowScope()
                                    .createChildFlowScope();
                                break;

                              case Token.HOOK:
                                scope = traverseHook(n, scope);
                                break;

                              case Token.OBJECTLIT:
                                scope = traverseObjectLiteral(n, scope);
                                break;

                              case Token.CALL:
                                scope = traverseCall(n, scope);
                                break;

                              case Token.NEW:
                                scope = traverseNew(n, scope);
                                break;

                              case Token.ASSIGN_ADD:
                              case Token.ADD:
                                scope = traverseAdd(n, scope);
                                break;

                              case Token.POS:
                              case Token.NEG:
                                scope = traverse(n.getFirstChild(), scope);  // Find types.
                                n.setJSType(getNativeType(NUMBER_TYPE));
                                break;

                              case Token.ARRAYLIT:
                                scope = traverseArrayLiteral(n, scope);
                                break;

                              case Token.THIS:
                                n.setJSType(scope.getTypeOfThis());
                                break;

                              case Token.ASSIGN_LSH:
                              case Token.ASSIGN_RSH:
                              case Token.LSH:
                              case Token.RSH:
                              case Token.ASSIGN_URSH:
                              case Token.URSH:
                              case Token.ASSIGN_DIV:
                              case Token.ASSIGN_MOD:
                              case Token.ASSIGN_BITAND:
                              case Token.ASSIGN_BITXOR:
                              case Token.ASSIGN_BITOR:
                              case Token.ASSIGN_MUL:
                              case Token.ASSIGN_SUB:
                              case Token.DIV:
                              case Token.MOD:
                              case Token.BITAND:
                              case Token.BITXOR:
                              case Token.BITOR:
                              case Token.MUL:
                              case Token.SUB:
                              case Token.DEC:
                              case Token.INC:
                              case Token.BITNOT:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getNativeType(NUMBER_TYPE));
                                break;

                              case Token.PARAM_LIST:
                                scope = traverse(n.getFirstChild(), scope);
                                n.setJSType(getJSType(n.getFirstChild()));
                                break;

                              case Token.COMMA:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getJSType(n.getLastChild()));
                                break;

                              case Token.TYPEOF:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getNativeType(STRING_TYPE));
                                break;

                              case Token.DELPROP:
                              case Token.LT:
                              case Token.LE:
                              case Token.GT:
                              case Token.GE:
                              case Token.NOT:
                              case Token.EQ:
                              case Token.NE:
                              case Token.SHEQ:
                              case Token.SHNE:
                              case Token.INSTANCEOF:
                              case Token.IN:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getNativeType(BOOLEAN_TYPE));
                                break;

                              case Token.GETELEM:
                                scope = traverseGetElem(n, scope);
                                break;

                              case Token.EXPR_RESULT:
                                scope = traverseChildren(n, scope);
                                if (n.getFirstChild().isGetProp()) {
                                  ensurePropertyDeclared(n.getFirstChild());
                                }
                                break;

                              case Token.SWITCH:
                                scope = traverse(n.getFirstChild(), scope);
                                break;

                              case Token.RETURN:
                                scope = traverseReturn(n, scope);
                                break;

                              case Token.VAR:
                              case Token.THROW:
                                scope = traverseChildren(n, scope);
                                break;

                              case Token.CATCH:
                                scope = traverseCatch(n, scope);
                                break;
                            }
                    children: []
                    pos: 9973
                    length: 3452
                children: []
                pos: 9952
                length: 3473
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!n.isFunction()"
                        children: []
                        pos: 13434
                        length: 15
                    children: []
                    pos: 13433
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSDocInfo info = n.getJSDocInfo();
                    children: []
                    pos: 13459
                    length: 34
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: info
                                    children: []
                                    pos: 13504
                                    length: 4
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 13512
                                    length: 4
                                children: []
                                pos: 13504
                                length: 12
                              right:
                                type: method_invocation
                                fields:
                                  text: info.hasType()
                                children: []
                                pos: 13520
                                length: 14
                            children: []
                            pos: 13504
                            length: 30
                        children: []
                        pos: 13503
                        length: 32
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType castType = info.getType().evaluate(syntacticScope,
                            registry);
                        children: []
                        pos: 13546
                        length: 68
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: n.isQualifiedName()
                                    children: []
                                    pos: 13810
                                    length: 19
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: n.getParent().isExprResult()
                                    children: []
                                    pos: 13845
                                    length: 28
                                children: []
                                pos: 13810
                                length: 63
                            children: []
                            pos: 13809
                            length: 65
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: updateScopeForTypeChange(scope, n, n.getJSType(),
                                castType);
                            children: []
                            pos: 13887
                            length: 60
                          pos: 13875
                          length: 82
                        pos: 13806
                        length: 151
                      - type: expression_statement
                        fields:
                          text: n.setJSType(castType);
                        children: []
                        pos: 13967
                        length: 22
                      pos: 13536
                      length: 461
                    pos: 13500
                    length: 497
                  pos: 13451
                  length: 552
                pos: 13430
                length: 573
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 14009
                length: 13
              pos: 9946
              length: 4080
          children: []
          pos: 9894
          length: 4132
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseReturn
              children: []
              pos: 14090
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 14105
                length: 6
              pos: 14072
              length: 496
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 14136
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node retValue = n.getFirstChild();
                children: []
                pos: 14177
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: retValue
                            children: []
                            pos: 14220
                            length: 8
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 14232
                            length: 4
                        children: []
                        pos: 14220
                        length: 16
                    children: []
                    pos: 14219
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType type = functionScope.getRootNode().getJSType();
                    children: []
                    pos: 14246
                    length: 54
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 14311
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 14319
                                length: 4
                            children: []
                            pos: 14311
                            length: 12
                        children: []
                        pos: 14310
                        length: 14
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: FunctionType fnType = type.toMaybeFunctionType();
                        children: []
                        pos: 14335
                        length: 49
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: fnType
                                    children: []
                                    pos: 14397
                                    length: 6
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 14407
                                    length: 4
                                children: []
                                pos: 14397
                                length: 14
                            children: []
                            pos: 14396
                            length: 16
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: |-
                                inferPropertyTypesToMatchConstraint(
                                              retValue.getJSType(), fnType.getReturnType());
                            children: []
                            pos: 14425
                            length: 97
                          pos: 14413
                          length: 119
                        pos: 14393
                        length: 139
                      pos: 14325
                      length: 215
                    pos: 14307
                    length: 233
                  pos: 14238
                  length: 308
                pos: 14216
                length: 330
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 14551
                length: 13
              pos: 14130
              length: 438
          children: []
          pos: 14072
          length: 496
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseCatch
              children: []
              pos: 14733
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 14747
                length: 6
              pos: 14715
              length: 244
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node name = n.getFirstChild();
                children: []
                pos: 14778
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType type = getNativeType(JSTypeNative.UNKNOWN_TYPE);
                children: []
                pos: 14813
                length: 55
              - type: expression_statement
                fields:
                  text: name.setJSType(type);
                children: []
                pos: 14873
                length: 21
              - type: expression_statement
                fields:
                  text: redeclareSimpleVar(scope, name, type);
                children: []
                pos: 14899
                length: 38
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 14942
                length: 13
              pos: 14772
              length: 187
          children: []
          pos: 14715
          length: 244
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseAssign
              children: []
              pos: 14981
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 14996
                length: 6
              pos: 14963
              length: 366
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 15027
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 15062
                length: 30
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 15097
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = left.getJSType();
                children: []
                pos: 15138
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = getJSType(right);
                children: []
                pos: 15178
                length: 36
              - type: expression_statement
                fields:
                  text: n.setJSType(rightType);
                children: []
                pos: 15219
                length: 23
              - type: expression_statement
                fields:
                  text: updateScopeForTypeChange(scope, left, leftType, rightType);
                children: []
                pos: 15248
                length: 59
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 15312
                length: 13
              pos: 15021
              length: 308
          children: []
          pos: 14963
          length: 366
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateScopeForTypeChange
              children: []
              pos: 15463
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 15495
                length: 15
              pos: 15450
              length: 1794
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(resultType);
                children: []
                pos: 15565
                length: 39
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: left.getType()
                        children: []
                        pos: 15617
                        length: 14
                    children: []
                    pos: 15616
                    length: 16
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.NAME:
                                String varName = left.getString();
                                Var var = syntacticScope.getVar(varName);

                                // When looking at VAR initializers for declared VARs, we trust
                                // the declared type over the type it's being initialized to.
                                // This has two purposes:
                                // 1) We avoid re-declaring declared variables so that built-in
                                //    types defined in externs are not redeclared.
                                // 2) When there's a lexical closure like
                                //    /** @type {?string} */ var x = null;
                                //    function f() { x = 'xyz'; }
                                //    the inference will ignore the lexical closure,
                                //    which is just wrong. This bug needs to be fixed eventually.
                                boolean isVarDeclaration = left.hasChildren();
                                if (!isVarDeclaration || var == null || var.isTypeInferred()) {
                                  redeclareSimpleVar(scope, left, resultType);
                                }
                                left.setJSType(isVarDeclaration || leftType == null ?
                                    resultType : null);

                                if (var != null && var.isTypeInferred()) {
                                  JSType oldType = var.getType();
                                  var.setType(oldType == null ?
                                      resultType : oldType.getLeastSupertype(resultType));
                                }
                                break;
                              case Token.GETPROP:
                                String qualifiedName = left.getQualifiedName();
                                if (qualifiedName != null) {
                                  scope.inferQualifiedSlot(left, qualifiedName,
                                      leftType == null ? getNativeType(UNKNOWN_TYPE) : leftType,
                                      resultType);
                                }

                                left.setJSType(resultType);
                                ensurePropertyDefined(left, resultType);
                                break;
                            }
                    children: []
                    pos: 15633
                    length: 1607
                children: []
                pos: 15609
                length: 1631
              pos: 15559
              length: 1685
          children: []
          pos: 15450
          length: 1794
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensurePropertyDefined
              children: []
              pos: 17339
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getprop
                children: []
                pos: 17361
                length: 12
              pos: 17326
              length: 1932
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String propName = getprop.getLastChild().getString();
                children: []
                pos: 17399
                length: 53
              - type: local_variable_declaration
                fields:
                  text: JSType nodeType = getJSType(getprop.getFirstChild());
                children: []
                pos: 17457
                length: 53
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType objectType = ObjectType.cast(
                            nodeType.restrictByNotNullOrUndefined());
                children: []
                pos: 17515
                length: 90
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: objectType
                            children: []
                            pos: 17614
                            length: 10
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 17628
                            length: 4
                        children: []
                        pos: 17614
                        length: 18
                    children: []
                    pos: 17613
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: registry.registerPropertyOnType(propName, nodeType);
                    children: []
                    pos: 17642
                    length: 52
                  pos: 17634
                  length: 66
                pos: 17610
                length: 1644
              pos: 17393
              length: 1865
          children: []
          pos: 17326
          length: 1932
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensurePropertyDeclared
              children: []
              pos: 19542
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getprop
                children: []
                pos: 19565
                length: 12
              pos: 19529
              length: 266
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType ownerType = ObjectType.cast(
                            getJSType(getprop.getFirstChild()).restrictByNotNullOrUndefined());
                children: []
                pos: 19585
                length: 115
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: ownerType
                            children: []
                            pos: 19709
                            length: 9
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 19722
                            length: 4
                        children: []
                        pos: 19709
                        length: 17
                    children: []
                    pos: 19708
                    length: 19
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensurePropertyDeclaredHelper(getprop, ownerType);
                    children: []
                    pos: 19736
                    length: 49
                  pos: 19728
                  length: 63
                pos: 19705
                length: 86
              pos: 19579
              length: 216
          children: []
          pos: 19529
          length: 266
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensurePropertyDeclaredHelper
              children: []
              pos: 19926
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getprop
                children: []
                pos: 19962
                length: 12
              pos: 19910
              length: 834
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String propName = getprop.getLastChild().getString();
                children: []
                pos: 20005
                length: 53
              - type: local_variable_declaration
                fields:
                  text: String qName = getprop.getQualifiedName();
                children: []
                pos: 20063
                length: 42
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: qName
                            children: []
                            pos: 20114
                            length: 5
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 20123
                            length: 4
                        children: []
                        pos: 20114
                        length: 13
                    children: []
                    pos: 20113
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Var var = syntacticScope.getVar(qName);
                    children: []
                    pos: 20137
                    length: 39
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: var
                                    children: []
                                    pos: 20187
                                    length: 3
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 20194
                                    length: 4
                                children: []
                                pos: 20187
                                length: 11
                              right:
                                type: unary_expression
                                fields:
                                  text: "!var.isTypeInferred()"
                                children: []
                                pos: 20202
                                length: 21
                            children: []
                            pos: 20187
                            length: 36
                        children: []
                        pos: 20186
                        length: 38
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: or
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: propName.equals("prototype")
                                    children: []
                                    pos: 20314
                                    length: 28
                                  right:
                                    type: parenthesized_expression
                                    fields:
                                      expression:
                                        type: and
                                        fields:
                                          left:
                                            type: unary_expression
                                            fields:
                                              text: "!objectType.hasOwnProperty(propName)"
                                            children: []
                                            pos: 20437
                                            length: 36
                                          right:
                                            type: parenthesized_expression
                                            fields:
                                              expression:
                                                type: or
                                                fields:
                                                  left:
                                                    type: unary_expression
                                                    fields:
                                                      text: "!objectType.isInstanceType()"
                                                    children: []
                                                    pos: 20491
                                                    length: 28
                                                  right:
                                                    type: parenthesized_expression
                                                    fields:
                                                      expression:
                                                        type: and
                                                        fields:
                                                          left:
                                                            type: method_invocation
                                                            fields:
                                                              text: var.isExtern()
                                                            children: []
                                                            pos: 20541
                                                            length: 14
                                                          right:
                                                            type: unary_expression
                                                            fields:
                                                              text: "!objectType.isNativeObjectType()"
                                                            children: []
                                                            pos: 20559
                                                            length: 32
                                                        children: []
                                                        pos: 20541
                                                        length: 50
                                                    children: []
                                                    pos: 20540
                                                    length: 52
                                                children: []
                                                pos: 20491
                                                length: 101
                                            children: []
                                            pos: 20490
                                            length: 103
                                        children: []
                                        pos: 20437
                                        length: 156
                                    children: []
                                    pos: 20436
                                    length: 158
                                children: []
                                pos: 20314
                                length: 280
                            children: []
                            pos: 20313
                            length: 282
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: return_statement
                            fields:
                              text: |-
                                return objectType.defineDeclaredProperty(
                                              propName, var.getType(), getprop);
                            children: []
                            pos: 20608
                            length: 90
                          pos: 20596
                          length: 112
                        pos: 20310
                        length: 398
                      pos: 20225
                      length: 491
                    pos: 20183
                    length: 533
                  pos: 20129
                  length: 593
                pos: 20110
                length: 612
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 20727
                length: 13
              pos: 19999
              length: 745
          children: []
          pos: 19910
          length: 834
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseName
              children: []
              pos: 20766
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 20779
                length: 6
              pos: 20748
              length: 1420
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String varName = n.getString();
                children: []
                pos: 20810
                length: 31
              - type: local_variable_declaration
                fields:
                  text: Node value = n.getFirstChild();
                children: []
                pos: 20846
                length: 31
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 20882
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: value
                            children: []
                            pos: 20919
                            length: 5
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 20928
                            length: 4
                        children: []
                        pos: 20919
                        length: 13
                    children: []
                    pos: 20918
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: scope = traverse(value, scope);
                    children: []
                    pos: 20942
                    length: 31
                  - type: expression_statement
                    fields:
                      text: |-
                        updateScopeForTypeChange(scope, n, n.getJSType() /* could be null */,
                                  getJSType(value));
                    children: []
                    pos: 20980
                    length: 98
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 21085
                    length: 13
                  pos: 20934
                  length: 170
                pos: 20915
                length: 1208
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 22128
                length: 18
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 22151
                length: 13
              pos: 20804
              length: 1364
          children: []
          pos: 20748
          length: 1420
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseArrayLiteral
              children: []
              pos: 22235
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 22256
                length: 6
              pos: 22217
              length: 171
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 22287
                length: 35
              - type: expression_statement
                fields:
                  text: n.setJSType(getNativeType(ARRAY_TYPE));
                children: []
                pos: 22327
                length: 39
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 22371
                length: 13
              pos: 22281
              length: 107
          children: []
          pos: 22217
          length: 171
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseObjectLiteral
              children: []
              pos: 22410
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 22432
                length: 6
              pos: 22392
              length: 2258
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 22463
                length: 28
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(type);
                children: []
                pos: 22496
                length: 33
              - type: for_statement
                fields:
                  text: |-
                    for (Node name = n.getFirstChild(); name != null; name = name.getNext()) {
                          scope = traverse(name.getFirstChild(), scope);
                        }
                children: []
                pos: 22535
                length: 133
              - type: local_variable_declaration
                fields:
                  text: ObjectType objectType = ObjectType.cast(type);
                children: []
                pos: 22981
                length: 46
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: objectType
                            children: []
                            pos: 23036
                            length: 10
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 23050
                            length: 4
                        children: []
                        pos: 23036
                        length: 18
                    children: []
                    pos: 23035
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 23064
                    length: 13
                  pos: 23056
                  length: 27
                pos: 23032
                length: 51
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean hasLendsName = n.getJSDocInfo() != null &&
                            n.getJSDocInfo().getLendsName() != null;
                children: []
                pos: 23089
                length: 99
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: objectType.hasReferenceName()
                            children: []
                            pos: 23197
                            length: 29
                          right:
                            type: unary_expression
                            fields:
                              text: "!hasLendsName"
                            children: []
                            pos: 23230
                            length: 13
                        children: []
                        pos: 23197
                        length: 46
                    children: []
                    pos: 23196
                    length: 48
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 23253
                    length: 13
                  pos: 23245
                  length: 27
                pos: 23193
                length: 79
              - type: local_variable_declaration
                fields:
                  text: |-
                    String qObjName = NodeUtil.getBestLValueName(
                            NodeUtil.getBestLValue(n));
                children: []
                pos: 23278
                length: 81
              - type: for_statement
                fields:
                  text: |-
                    for (Node name = n.getFirstChild(); name != null;
                             name = name.getNext()) {
                          Node value = name.getFirstChild();
                          String memberName = NodeUtil.getObjectLitKeyName(name);
                          if (memberName != null) {
                            JSType rawValueType =  name.getFirstChild().getJSType();
                            JSType valueType = NodeUtil.getObjectLitKeyTypeFromValueType(
                                name, rawValueType);
                            if (valueType == null) {
                              valueType = getNativeType(UNKNOWN_TYPE);
                            }
                            objectType.defineInferredProperty(memberName, valueType, name);

                            // Do normal flow inference if this is a direct property assignment.
                            if (qObjName != null && name.isString()) {
                              String qKeyName = qObjName + "." + memberName;
                              Var var = syntacticScope.getVar(qKeyName);
                              JSType oldType = var == null ? null : var.getType();
                              if (var != null && var.isTypeInferred()) {
                                var.setType(oldType == null ?
                                    valueType : oldType.getLeastSupertype(oldType));
                              }

                              scope.inferQualifiedSlot(name, qKeyName,
                                  oldType == null ? getNativeType(UNKNOWN_TYPE) : oldType,
                                  valueType);
                            }
                          } else {
                            n.setJSType(getNativeType(UNKNOWN_TYPE));
                          }
                        }
                children: []
                pos: 23364
                length: 1264
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 24633
                length: 13
              pos: 22457
              length: 2193
          children: []
          pos: 22392
          length: 2258
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseAdd
              children: []
              pos: 24672
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 24684
                length: 6
              pos: 24654
              length: 1164
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 24715
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = left.getNext();
                children: []
                pos: 24750
                length: 28
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 24783
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = left.getJSType();
                children: []
                pos: 24824
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = right.getJSType();
                children: []
                pos: 24864
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType type = getNativeType(UNKNOWN_TYPE);
                children: []
                pos: 24907
                length: 42
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: leftType
                                children: []
                                pos: 24958
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 24970
                                length: 4
                            children: []
                            pos: 24958
                            length: 16
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: rightType
                                children: []
                                pos: 24978
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 24991
                                length: 4
                            children: []
                            pos: 24978
                            length: 17
                        children: []
                        pos: 24958
                        length: 37
                    children: []
                    pos: 24957
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: boolean leftIsUnknown = leftType.isUnknownType();
                    children: []
                    pos: 25005
                    length: 49
                  - type: local_variable_declaration
                    fields:
                      text: boolean rightIsUnknown = rightType.isUnknownType();
                    children: []
                    pos: 25061
                    length: 51
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: leftIsUnknown
                                children: []
                                pos: 25123
                                length: 13
                              right:
                                type: identifier
                                fields:
                                  text: rightIsUnknown
                                children: []
                                pos: 25140
                                length: 14
                            children: []
                            pos: 25123
                            length: 31
                        children: []
                        pos: 25122
                        length: 33
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: type = getNativeType(UNKNOWN_TYPE);
                        children: []
                        pos: 25166
                        length: 35
                      pos: 25156
                      length: 53
                    pos: 25119
                    length: 552
                  pos: 24997
                  length: 680
                pos: 24954
                length: 723
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 25682
                length: 18
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.isAssignAdd()
                        children: []
                        pos: 25710
                        length: 15
                    children: []
                    pos: 25709
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: updateScopeForTypeChange(scope, left, leftType, type);
                    children: []
                    pos: 25735
                    length: 54
                  pos: 25727
                  length: 68
                pos: 25706
                length: 89
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 25801
                length: 13
              pos: 24709
              length: 1109
          children: []
          pos: 24654
          length: 1164
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isAddedAsNumber
              children: []
              pos: 25838
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType type
                children: []
                pos: 25854
                length: 11
              pos: 25822
              length: 197
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return type.isSubtype(registry.createUnionType(VOID_TYPE, NULL_TYPE,
                            NUMBER_VALUE_OR_OBJECT_TYPE, BOOLEAN_TYPE, BOOLEAN_OBJECT_TYPE));
                children: []
                pos: 25873
                length: 142
              pos: 25867
              length: 152
          children: []
          pos: 25822
          length: 197
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseHook
              children: []
              pos: 26041
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 26054
                length: 6
              pos: 26023
              length: 1146
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node condition = n.getFirstChild();
                children: []
                pos: 26085
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node trueNode = condition.getNext();
                children: []
                pos: 26125
                length: 36
              - type: local_variable_declaration
                fields:
                  text: Node falseNode = n.getLastChild();
                children: []
                pos: 26166
                length: 34
              - type: expression_statement
                fields:
                  text: scope = traverse(condition, scope);
                children: []
                pos: 26234
                length: 35
              - type: local_variable_declaration
                fields:
                  text: |-
                    FlowScope trueScope = reverseInterpreter.
                            getPreciserScopeKnowingConditionOutcome(
                                condition, scope, true);
                children: []
                pos: 26349
                length: 127
              - type: local_variable_declaration
                fields:
                  text: |-
                    FlowScope falseScope = reverseInterpreter.
                            getPreciserScopeKnowingConditionOutcome(
                                condition, scope, false);
                children: []
                pos: 26481
                length: 129
              - type: expression_statement
                fields:
                  text: traverse(trueNode, trueScope.createChildFlowScope());
                children: []
                pos: 26665
                length: 53
              - type: expression_statement
                fields:
                  text: traverse(falseNode, falseScope.createChildFlowScope());
                children: []
                pos: 26775
                length: 55
              - type: local_variable_declaration
                fields:
                  text: JSType trueType = trueNode.getJSType();
                children: []
                pos: 26887
                length: 39
              - type: local_variable_declaration
                fields:
                  text: JSType falseType = falseNode.getJSType();
                children: []
                pos: 26931
                length: 41
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: trueType
                                children: []
                                pos: 26981
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 26993
                                length: 4
                            children: []
                            pos: 26981
                            length: 16
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: falseType
                                children: []
                                pos: 27001
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 27014
                                length: 4
                            children: []
                            pos: 27001
                            length: 17
                        children: []
                        pos: 26981
                        length: 37
                    children: []
                    pos: 26980
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: n.setJSType(trueType.getLeastSupertype(falseType));
                    children: []
                    pos: 27028
                    length: 51
                  pos: 27020
                  length: 65
                pos: 26977
                length: 146
              - type: return_statement
                fields:
                  text: return scope.createChildFlowScope();
                children: []
                pos: 27129
                length: 36
              pos: 26079
              length: 1090
          children: []
          pos: 26023
          length: 1146
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseCall
              children: []
              pos: 27191
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 27204
                length: 6
              pos: 27173
              length: 667
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 27235
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 27276
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType functionType = getJSType(left).restrictByNotNullOrUndefined();
                children: []
                pos: 27311
                length: 69
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: functionType
                            children: []
                            pos: 27389
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 27405
                            length: 4
                        children: []
                        pos: 27389
                        length: 20
                    children: []
                    pos: 27388
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: functionType.isFunctionType()
                            children: []
                            pos: 27423
                            length: 29
                        children: []
                        pos: 27422
                        length: 31
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: FunctionType fnType = functionType.toMaybeFunctionType();
                        children: []
                        pos: 27464
                        length: 57
                      - type: expression_statement
                        fields:
                          text: n.setJSType(fnType.getReturnType());
                        children: []
                        pos: 27530
                        length: 36
                      - type: expression_statement
                        fields:
                          text: backwardsInferenceFromCallSite(n, fnType);
                        children: []
                        pos: 27575
                        length: 42
                      pos: 27454
                      length: 171
                    pos: 27419
                    length: 341
                  pos: 27411
                  length: 355
                pos: 27385
                length: 381
              - type: expression_statement
                fields:
                  text: scope = tightenTypesAfterAssertions(scope, n);
                children: []
                pos: 27772
                length: 46
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 27823
                length: 13
              pos: 27229
              length: 611
          children: []
          pos: 27173
          length: 667
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: tightenTypesAfterAssertions
              children: []
              pos: 27862
              length: 27
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 27890
                length: 15
              pos: 27844
              length: 1831
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = callNode.getFirstChild();
                children: []
                pos: 27934
                length: 37
              - type: local_variable_declaration
                fields:
                  text: Node firstParam = left.getNext();
                children: []
                pos: 27976
                length: 33
              - type: local_variable_declaration
                fields:
                  text: |-
                    AssertionFunctionSpec assertionFunctionSpec =
                            assertionFunctionsMap.get(left.getQualifiedName());
                children: []
                pos: 28014
                length: 105
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: assertionFunctionSpec
                                children: []
                                pos: 28128
                                length: 21
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 28153
                                length: 4
                            children: []
                            pos: 28128
                            length: 29
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: firstParam
                                children: []
                                pos: 28161
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 28175
                                length: 4
                            children: []
                            pos: 28161
                            length: 18
                        children: []
                        pos: 28128
                        length: 51
                    children: []
                    pos: 28127
                    length: 53
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 28189
                    length: 13
                  pos: 28181
                  length: 27
                pos: 28124
                length: 84
              - type: local_variable_declaration
                fields:
                  text: Node assertedNode = assertionFunctionSpec.getAssertedParam(firstParam);
                children: []
                pos: 28213
                length: 71
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: assertedNode
                            children: []
                            pos: 28293
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 28309
                            length: 4
                        children: []
                        pos: 28293
                        length: 20
                    children: []
                    pos: 28292
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 28323
                    length: 13
                  pos: 28315
                  length: 27
                pos: 28289
                length: 53
              - type: local_variable_declaration
                fields:
                  text: JSTypeNative assertedType = assertionFunctionSpec.getAssertedType();
                children: []
                pos: 28347
                length: 68
              - type: local_variable_declaration
                fields:
                  text: String assertedNodeName = assertedNode.getQualifiedName();
                children: []
                pos: 28420
                length: 58
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: assertedType
                            children: []
                            pos: 28555
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 28571
                            length: 4
                        children: []
                        pos: 28555
                        length: 20
                    children: []
                    pos: 28554
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: assertedNodeName
                                children: []
                                pos: 28589
                                length: 16
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 28609
                                length: 4
                            children: []
                            pos: 28589
                            length: 24
                        children: []
                        pos: 28588
                        length: 26
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType type = getJSType(assertedNode);
                        children: []
                        pos: 28625
                        length: 38
                      - type: local_variable_declaration
                        fields:
                          text: JSType narrowed = type.restrictByNotNullOrUndefined();
                        children: []
                        pos: 28672
                        length: 54
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: type
                                    children: []
                                    pos: 28739
                                    length: 4
                                  right:
                                    type: identifier
                                    fields:
                                      text: narrowed
                                    children: []
                                    pos: 28747
                                    length: 8
                                children: []
                                pos: 28739
                                length: 16
                            children: []
                            pos: 28738
                            length: 18
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: scope = narrowScope(scope, assertedNode, narrowed);
                            children: []
                            pos: 28769
                            length: 51
                          - type: expression_statement
                            fields:
                              text: callNode.setJSType(narrowed);
                            children: []
                            pos: 28831
                            length: 29
                          pos: 28757
                          length: 113
                        pos: 28735
                        length: 135
                      pos: 28615
                      length: 263
                    pos: 28585
                    length: 685
                  pos: 28577
                  length: 699
                pos: 28551
                length: 1102
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 29658
                length: 13
              pos: 27928
              length: 1747
          children: []
          pos: 27844
          length: 1831
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: narrowScope
              children: []
              pos: 29697
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 29709
                length: 15
              pos: 29679
              length: 337
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = scope.createChildFlowScope();
                children: []
                pos: 29760
                length: 37
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: node.isGetProp()
                        children: []
                        pos: 29806
                        length: 16
                    children: []
                    pos: 29805
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        scope.inferQualifiedSlot(
                                  node, node.getQualifiedName(), getJSType(node), narrowed);
                    children: []
                    pos: 29832
                    length: 94
                  pos: 29824
                  length: 108
                pos: 29802
                length: 192
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 29999
                length: 13
              pos: 29754
              length: 262
          children: []
          pos: 29679
          length: 337
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: backwardsInferenceFromCallSite
              children: []
              pos: 30955
              length: 30
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 30986
                length: 6
              pos: 30942
              length: 186
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: updateTypeOfParameters(n, fnType);
                children: []
                pos: 31021
                length: 34
              - type: expression_statement
                fields:
                  text: updateTypeOfThisOnClosure(n, fnType);
                children: []
                pos: 31060
                length: 37
              - type: expression_statement
                fields:
                  text: updateBind(n, fnType);
                children: []
                pos: 31102
                length: 22
              pos: 31015
              length: 113
          children: []
          pos: 30942
          length: 186
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateBind
              children: []
              pos: 31312
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 31323
                length: 6
              pos: 31299
              length: 640
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node calledFn = n.getFirstChild();
                children: []
                pos: 31452
                length: 34
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean looksLikeBind = calledFn.isGetProp()
                            && calledFn.getLastChild().getString().equals("bind");
                children: []
                pos: 31491
                length: 107
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!looksLikeBind"
                        children: []
                        pos: 31607
                        length: 14
                    children: []
                    pos: 31606
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 31631
                    length: 7
                  pos: 31623
                  length: 21
                pos: 31603
                length: 41
              - type: local_variable_declaration
                fields:
                  text: Node callTarget = calledFn.getFirstChild();
                children: []
                pos: 31650
                length: 43
              - type: local_variable_declaration
                fields:
                  text: |-
                    FunctionType callTargetFn = getJSType(callTarget)
                            .restrictByNotNullOrUndefined().toMaybeFunctionType();
                children: []
                pos: 31698
                length: 112
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: callTargetFn
                            children: []
                            pos: 31819
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 31835
                            length: 4
                        children: []
                        pos: 31819
                        length: 20
                    children: []
                    pos: 31818
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 31849
                    length: 7
                  pos: 31841
                  length: 21
                pos: 31815
                length: 47
              - type: expression_statement
                fields:
                  text: n.setJSType(callTargetFn.getBindReturnType(n.getChildCount()
                    - 1));
                children: []
                pos: 31868
                length: 67
              pos: 31352
              length: 587
          children: []
          pos: 31299
          length: 640
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateTypeOfParameters
              children: []
              pos: 32116
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 32139
                length: 6
              pos: 32103
              length: 867
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int i = 0;
                children: []
                pos: 32174
                length: 10
              - type: local_variable_declaration
                fields:
                  text: int childCount = n.getChildCount();
                children: []
                pos: 32189
                length: 35
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (Node iParameter : fnType.getParameters()) {
                          if (i + 1 >= childCount) {
                            // TypeCheck#visitParametersList will warn so we bail.
                            return;
                          }

                          JSType iParameterType = getJSType(iParameter);
                          Node iArgument = n.getChildAtIndex(i + 1);
                          JSType iArgumentType = getJSType(iArgument);
                          inferPropertyTypesToMatchConstraint(iArgumentType, iParameterType);

                          if (iParameterType.isFunctionType()) {
                            FunctionType iParameterFnType = iParameterType.toMaybeFunctionType();

                            if (iArgument.isFunction() &&
                                iArgumentType.isFunctionType() &&
                                iArgument.getJSDocInfo() == null) {
                              iArgument.setJSType(iParameterFnType);
                            }
                          }
                          i++;
                        }
                children: []
                pos: 32229
                length: 737
              pos: 32168
              length: 802
          children: []
          pos: 32103
          length: 867
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateTypeOfThisOnClosure
              children: []
              pos: 33178
              length: 25
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 33204
                length: 6
              pos: 33165
              length: 3662
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: fnType.getTemplateTypeName()
                            children: []
                            pos: 33301
                            length: 28
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 33333
                            length: 4
                        children: []
                        pos: 33301
                        length: 36
                    children: []
                    pos: 33300
                    length: 38
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 33347
                    length: 7
                  pos: 33339
                  length: 21
                pos: 33297
                length: 63
              - type: local_variable_declaration
                fields:
                  text: int i = 0;
                children: []
                pos: 33366
                length: 10
              - type: local_variable_declaration
                fields:
                  text: int childCount = n.getChildCount();
                children: []
                pos: 33381
                length: 35
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (Node iParameter : fnType.getParameters()) {
                          JSType iParameterType =
                              getJSType(iParameter).restrictByNotNullOrUndefined();
                          if (iParameterType.isTemplateType()) {
                            // Find the actual type of this argument.
                            ObjectType iArgumentType = null;
                            if (i + 1 < childCount) {
                              Node iArgument = n.getChildAtIndex(i + 1);
                              iArgumentType = getJSType(iArgument)
                                  .restrictByNotNullOrUndefined()
                                  .collapseUnion()
                                  .toObjectType();
                              if (iArgumentType == null) {
                                compiler.report(
                                    JSError.make(NodeUtil.getSourceName(iArgument), iArgument,
                                        TEMPLATE_TYPE_NOT_OBJECT_TYPE,
                                        getJSType(iArgument).toString()));
                                return;
                              }
                            }

                            // Find the parameter whose type is function(this: T, ...)
                            boolean foundTemplateTypeOfThisParameter = false;
                            int j = 0;
                            for (Node jParameter : fnType.getParameters()) {
                              JSType jParameterType =
                                  getJSType(jParameter).restrictByNotNullOrUndefined();
                              if (jParameterType.isFunctionType()) {
                                FunctionType jParameterFnType = jParameterType.toMaybeFunctionType();
                                if (jParameterFnType.getTypeOfThis().equals(iParameterType)) {
                                  foundTemplateTypeOfThisParameter = true;
                                  // Find the actual type of the this argument.
                                  if (j + 1 >= childCount) {
                                    // TypeCheck#visitParameterList will warn so we bail.
                                    return;
                                  }
                                  Node jArgument = n.getChildAtIndex(j + 1);
                                  JSType jArgumentType = getJSType(jArgument);
                                  if (jArgument.isFunction() &&
                                      jArgumentType.isFunctionType()) {
                                    if (iArgumentType != null &&
                                        // null and undefined get filtered out above.
                                        !iArgumentType.isNoType()) {
                                      // If it's an function expression, update the type of this
                                      // using the actual type of T.
                                      FunctionType jArgumentFnType = jArgumentType.toMaybeFunctionType();
                                      if (jArgumentFnType.getTypeOfThis().isUnknownType()) {
                                        // The new type will be picked up when we traverse the inner
                                        // function.
                                        jArgument.setJSType(
                                            registry.createFunctionTypeWithNewThisType(
                                                jArgumentFnType, iArgumentType));
                                      }
                                    } else {
                                      // Warn if the anonymous function literal references this.
                                      if (NodeUtil.referencesThis(
                                              NodeUtil.getFunctionBody(jArgument))) {
                                        compiler.report(JSError.make(NodeUtil.getSourceName(n), n,
                                            FUNCTION_LITERAL_UNDEFINED_THIS));
                                      }
                                    }
                                  }
                                  // TODO(user): Add code to TypeCheck to check that the
                                  // types of the arguments match.
                                }
                              }
                              j++;
                            }

                            if (!foundTemplateTypeOfThisParameter) {
                              compiler.report(JSError.make(NodeUtil.getSourceName(n), n,
                                  TEMPLATE_TYPE_OF_THIS_EXPECTED));
                              return;
                            }
                          }
                          i++;
                        }
                children: []
                pos: 33480
                length: 3343
              pos: 33233
              length: 3594
          children: []
          pos: 33165
          length: 3662
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseNew
              children: []
              pos: 36849
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 36861
                length: 6
              pos: 36831
              length: 1127
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node constructor = n.getFirstChild();
                children: []
                pos: 36892
                length: 37
              - type: expression_statement
                fields:
                  text: scope = traverse(constructor, scope);
                children: []
                pos: 36934
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType constructorType = constructor.getJSType();
                children: []
                pos: 36977
                length: 49
              - type: local_variable_declaration
                fields:
                  text: JSType type = null;
                children: []
                pos: 37031
                length: 19
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: constructorType
                            children: []
                            pos: 37059
                            length: 15
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 37078
                            length: 4
                        children: []
                        pos: 37059
                        length: 23
                    children: []
                    pos: 37058
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: constructorType = constructorType.restrictByNotNullOrUndefined();
                    children: []
                    pos: 37092
                    length: 65
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: constructorType.isUnknownType()
                            children: []
                            pos: 37168
                            length: 31
                        children: []
                        pos: 37167
                        length: 33
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: type = getNativeType(UNKNOWN_TYPE);
                        children: []
                        pos: 37211
                        length: 35
                      pos: 37201
                      length: 53
                    pos: 37164
                    length: 621
                  pos: 37084
                  length: 707
                pos: 37055
                length: 736
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 37796
                length: 18
              - type: for_statement
                fields:
                  text: |-
                    for (Node arg = constructor.getNext(); arg != null; arg = arg.getNext()) {
                          scope = traverse(arg, scope);
                        }
                children: []
                pos: 37820
                length: 116
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 37941
                length: 13
              pos: 36886
              length: 1072
          children: []
          pos: 36831
          length: 1127
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseAnd
              children: []
              pos: 37989
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 38001
                length: 6
              pos: 37962
              length: 126
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return traverseShortCircuitingBinOp(n, scope, true);
                children: []
                pos: 38032
                length: 52
              pos: 38026
              length: 62
          children: []
          pos: 37962
          length: 126
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseChildren
              children: []
              pos: 38110
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 38127
                length: 6
              pos: 38092
              length: 195
            body:
              type: block
              fields: {}
              children:
              - type: for_statement
                fields:
                  text: |-
                    for (Node el = n.getFirstChild(); el != null; el = el.getNext()) {
                          scope = traverse(el, scope);
                        }
                children: []
                pos: 38158
                length: 107
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 38270
                length: 13
              pos: 38152
              length: 135
          children: []
          pos: 38092
          length: 195
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseGetElem
              children: []
              pos: 38309
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 38325
                length: 6
              pos: 38291
              length: 415
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 38356
                length: 35
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType objType = ObjectType.cast(
                            getJSType(n.getFirstChild()).restrictByNotNullOrUndefined());
                children: []
                pos: 38396
                length: 107
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: objType
                            children: []
                            pos: 38512
                            length: 7
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 38523
                            length: 4
                        children: []
                        pos: 38512
                        length: 15
                    children: []
                    pos: 38511
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType type = objType.getParameterType();
                    children: []
                    pos: 38537
                    length: 41
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 38589
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 38597
                                length: 4
                            children: []
                            pos: 38589
                            length: 12
                        children: []
                        pos: 38588
                        length: 14
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: n.setJSType(type);
                        children: []
                        pos: 38613
                        length: 18
                      pos: 38603
                      length: 36
                    pos: 38585
                    length: 54
                  pos: 38529
                  length: 116
                pos: 38508
                length: 137
              - type: return_statement
                fields:
                  text: return dereferencePointer(n.getFirstChild(), scope);
                children: []
                pos: 38650
                length: 52
              pos: 38350
              length: 356
          children: []
          pos: 38291
          length: 415
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseGetProp
              children: []
              pos: 38728
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 38744
                length: 6
              pos: 38710
              length: 346
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node objNode = n.getFirstChild();
                children: []
                pos: 38775
                length: 33
              - type: local_variable_declaration
                fields:
                  text: Node property = n.getLastChild();
                children: []
                pos: 38813
                length: 33
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 38851
                length: 35
              - type: expression_statement
                fields:
                  text: |-
                    n.setJSType(
                            getPropertyType(
                                objNode.getJSType(), property.getString(), n, scope));
                children: []
                pos: 38891
                length: 104
              - type: return_statement
                fields:
                  text: return dereferencePointer(n.getFirstChild(), scope);
                children: []
                pos: 39000
                length: 52
              pos: 38769
              length: 287
          children: []
          pos: 38710
          length: 346
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: inferPropertyTypesToMatchConstraint
              children: []
              pos: 39603
              length: 35
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType type
                children: []
                pos: 39646
                length: 11
              pos: 39590
              length: 928
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 39688
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 39696
                                length: 4
                            children: []
                            pos: 39688
                            length: 12
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: constraint
                                children: []
                                pos: 39704
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 39718
                                length: 4
                            children: []
                            pos: 39704
                            length: 18
                        children: []
                        pos: 39688
                        length: 34
                    children: []
                    pos: 39687
                    length: 36
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 39732
                    length: 7
                  pos: 39724
                  length: 21
                pos: 39684
                length: 61
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType constraintObj =
                            ObjectType.cast(constraint.restrictByNotNullOrUndefined());
                children: []
                pos: 39751
                length: 94
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: constraintObj
                                children: []
                                pos: 39854
                                length: 13
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 39871
                                length: 4
                            children: []
                            pos: 39854
                            length: 21
                          right:
                            type: method_invocation
                            fields:
                              text: constraintObj.isRecordType()
                            children: []
                            pos: 39879
                            length: 28
                        children: []
                        pos: 39854
                        length: 53
                    children: []
                    pos: 39853
                    length: 55
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());
                    children: []
                    pos: 39917
                    length: 74
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: objType
                                children: []
                                pos: 40002
                                length: 7
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 40013
                                length: 4
                            children: []
                            pos: 40002
                            length: 15
                        children: []
                        pos: 40001
                        length: 17
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: enhanced_for_statement
                        fields:
                          text: |-
                            for (String prop : constraintObj.getOwnPropertyNames()) {
                                      JSType propType = constraintObj.getPropertyType(prop);
                                      if (!objType.isPropertyTypeDeclared(prop)) {
                                        JSType typeToInfer = propType;
                                        if (!objType.hasProperty(prop)) {
                                          typeToInfer =
                                              getNativeType(VOID_TYPE).getLeastSupertype(propType);
                                        }
                                        objType.defineInferredProperty(prop, typeToInfer, null);
                                      }
                                    }
                        children: []
                        pos: 40029
                        length: 471
                      pos: 40019
                      length: 489
                    pos: 39998
                    length: 510
                  pos: 39909
                  length: 605
                pos: 39850
                length: 664
              pos: 39678
              length: 840
          children: []
          pos: 39590
          length: 928
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: dereferencePointer
              children: []
              pos: 40642
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 40661
                length: 6
              pos: 40624
              length: 304
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.isQualifiedName()
                        children: []
                        pos: 40696
                        length: 19
                    children: []
                    pos: 40695
                    length: 21
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType type = getJSType(n);
                    children: []
                    pos: 40725
                    length: 27
                  - type: local_variable_declaration
                    fields:
                      text: JSType narrowed = type.restrictByNotNullOrUndefined();
                    children: []
                    pos: 40759
                    length: 54
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 40824
                                length: 4
                              right:
                                type: identifier
                                fields:
                                  text: narrowed
                                children: []
                                pos: 40832
                                length: 8
                            children: []
                            pos: 40824
                            length: 16
                        children: []
                        pos: 40823
                        length: 18
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: scope = narrowScope(scope, n, narrowed);
                        children: []
                        pos: 40852
                        length: 40
                      pos: 40842
                      length: 58
                    pos: 40820
                    length: 80
                  pos: 40717
                  length: 189
                pos: 40692
                length: 214
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 40911
                length: 13
              pos: 40686
              length: 242
          children: []
          pos: 40624
          length: 304
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getPropertyType
              children: []
              pos: 40947
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType objType
                children: []
                pos: 40963
                length: 14
              pos: 40932
              length: 1254
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String qualifiedName = n.getQualifiedName();
                children: []
                pos: 41107
                length: 44
              - type: local_variable_declaration
                fields:
                  text: StaticSlot<JSType> var = scope.getSlot(qualifiedName);
                children: []
                pos: 41156
                length: 54
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: var
                            children: []
                            pos: 41219
                            length: 3
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 41226
                            length: 4
                        children: []
                        pos: 41219
                        length: 11
                    children: []
                    pos: 41218
                    length: 13
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType varType = var.getType();
                    children: []
                    pos: 41240
                    length: 31
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: varType
                                children: []
                                pos: 41282
                                length: 7
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 41293
                                length: 4
                            children: []
                            pos: 41282
                            length: 15
                        children: []
                        pos: 41281
                        length: 17
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: varType.equals(getNativeType(UNKNOWN_TYPE))
                                    children: []
                                    pos: 41313
                                    length: 43
                                  right:
                                    type: not_equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: var
                                        children: []
                                        pos: 41372
                                        length: 3
                                      right:
                                        type: method_invocation
                                        fields:
                                          text: syntacticScope.getSlot(qualifiedName)
                                        children: []
                                        pos: 41379
                                        length: 37
                                    children: []
                                    pos: 41372
                                    length: 44
                                children: []
                                pos: 41313
                                length: 103
                            children: []
                            pos: 41312
                            length: 105
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: return_statement
                            fields:
                              text: return getNativeType(CHECKED_UNKNOWN_TYPE);
                            children: []
                            pos: 41579
                            length: 43
                          pos: 41418
                          length: 214
                        pos: 41309
                        length: 366
                      pos: 41299
                      length: 384
                    pos: 41278
                    length: 405
                  pos: 41232
                  length: 457
                pos: 41215
                length: 474
              - type: local_variable_declaration
                fields:
                  text: JSType propertyType = null;
                children: []
                pos: 41695
                length: 27
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: objType
                            children: []
                            pos: 41731
                            length: 7
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 41742
                            length: 4
                        children: []
                        pos: 41731
                        length: 15
                    children: []
                    pos: 41730
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: propertyType = objType.findPropertyType(propName);
                    children: []
                    pos: 41756
                    length: 50
                  pos: 41748
                  length: 64
                pos: 41727
                length: 85
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: or
                                fields:
                                  left:
                                    type: equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: propertyType
                                        children: []
                                        pos: 41823
                                        length: 12
                                      right:
                                        type: null_literal
                                        fields: {}
                                        children: []
                                        pos: 41839
                                        length: 4
                                    children: []
                                    pos: 41823
                                    length: 20
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: propertyType.isUnknownType()
                                    children: []
                                    pos: 41847
                                    length: 28
                                children: []
                                pos: 41823
                                length: 52
                            children: []
                            pos: 41822
                            length: 54
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: qualifiedName
                                children: []
                                pos: 41888
                                length: 13
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 41905
                                length: 4
                            children: []
                            pos: 41888
                            length: 21
                        children: []
                        pos: 41822
                        length: 87
                    children: []
                    pos: 41821
                    length: 89
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: ObjectType regType = ObjectType.cast(registry.getType(qualifiedName));
                    children: []
                    pos: 41994
                    length: 70
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: regType
                                children: []
                                pos: 42075
                                length: 7
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 42086
                                length: 4
                            children: []
                            pos: 42075
                            length: 15
                        children: []
                        pos: 42074
                        length: 17
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: propertyType = regType.getConstructor();
                        children: []
                        pos: 42102
                        length: 40
                      pos: 42092
                      length: 58
                    pos: 42071
                    length: 79
                  pos: 41911
                  length: 245
                pos: 41818
                length: 338
              - type: return_statement
                fields:
                  text: return propertyType;
                children: []
                pos: 42162
                length: 20
              pos: 41027
              length: 1159
          children: []
          pos: 40932
          length: 1254
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseOr
              children: []
              pos: 42217
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 42228
                length: 6
              pos: 42190
              length: 126
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return traverseShortCircuitingBinOp(n, scope, false);
                children: []
                pos: 42259
                length: 53
              pos: 42253
              length: 63
          children: []
          pos: 42190
          length: 126
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseShortCircuitingBinOp
              children: []
              pos: 42347
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 42383
                length: 6
              pos: 42320
              length: 2359
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 42433
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 42468
                length: 30
              - type: local_variable_declaration
                fields:
                  text: |-
                    BooleanOutcomePair leftLiterals =
                            traverseWithinShortCircuitingBinOp(left,
                                scope.createChildFlowScope());
                children: []
                pos: 42530
                length: 125
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = left.getJSType();
                children: []
                pos: 42660
                length: 35
              - type: local_variable_declaration
                fields:
                  text: |-
                    FlowScope rightScope = reverseInterpreter.
                            getPreciserScopeKnowingConditionOutcome(
                                left, leftLiterals.getOutcomeFlowScope(left.getType(), condition),
                                condition);
                children: []
                pos: 42819
                length: 194
              - type: local_variable_declaration
                fields:
                  text: |-
                    BooleanOutcomePair rightLiterals =
                            traverseWithinShortCircuitingBinOp(
                                right, rightScope.createChildFlowScope());
                children: []
                pos: 43046
                length: 133
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = right.getJSType();
                children: []
                pos: 43184
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType type;
                children: []
                pos: 43227
                length: 12
              - type: local_variable_declaration
                fields:
                  text: BooleanOutcomePair literals;
                children: []
                pos: 43244
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: leftType
                                children: []
                                pos: 43281
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 43293
                                length: 4
                            children: []
                            pos: 43281
                            length: 16
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: rightType
                                children: []
                                pos: 43301
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 43314
                                length: 4
                            children: []
                            pos: 43301
                            length: 17
                        children: []
                        pos: 43281
                        length: 37
                    children: []
                    pos: 43280
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: leftType = leftType.getRestrictedTypeGivenToBooleanOutcome(!condition);
                    children: []
                    pos: 43328
                    length: 71
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: field_access
                                fields:
                                  text: leftLiterals.toBooleanOutcomes
                                children: []
                                pos: 43410
                                length: 30
                              right:
                                type: method_invocation
                                fields:
                                  text: BooleanLiteralSet.get(!condition)
                                children: []
                                pos: 43454
                                length: 33
                            children: []
                            pos: 43410
                            length: 77
                        children: []
                        pos: 43409
                        length: 79
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: type = leftType;
                        children: []
                        pos: 43594
                        length: 16
                      - type: expression_statement
                        fields:
                          text: literals = leftLiterals;
                        children: []
                        pos: 43619
                        length: 24
                      pos: 43489
                      length: 162
                    pos: 43406
                    length: 541
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: equals
                                fields:
                                  left:
                                    type: field_access
                                    fields:
                                      text: literals.booleanValues
                                    children: []
                                    pos: 44080
                                    length: 22
                                  right:
                                    type: field_access
                                    fields:
                                      text: BooleanLiteralSet.EMPTY
                                    children: []
                                    pos: 44106
                                    length: 23
                                children: []
                                pos: 44080
                                length: 49
                              right:
                                type: method_invocation
                                fields:
                                  text: getNativeType(BOOLEAN_TYPE).isSubtype(type)
                                children: []
                                pos: 44143
                                length: 43
                            children: []
                            pos: 44080
                            length: 106
                        children: []
                        pos: 44079
                        length: 108
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: method_invocation
                                fields:
                                  text: type.isUnionType()
                                children: []
                                pos: 44257
                                length: 18
                            children: []
                            pos: 44256
                            length: 20
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: |-
                                type = type.toMaybeUnionType().getRestrictedUnion(
                                              getNativeType(BOOLEAN_TYPE));
                            children: []
                            pos: 44289
                            length: 94
                          pos: 44277
                          length: 116
                        pos: 44253
                        length: 140
                      pos: 44188
                      length: 213
                    pos: 44076
                    length: 325
                  pos: 43320
                  length: 1087
                pos: 43277
                length: 1353
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 44635
                length: 18
              - type: return_statement
                fields:
                  text: return literals;
                children: []
                pos: 44659
                length: 16
              pos: 42427
              length: 2252
          children: []
          pos: 42320
          length: 2359
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseWithinShortCircuitingBinOp
              children: []
              pos: 44710
              length: 34
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 44745
                length: 6
              pos: 44683
              length: 362
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 44790
                        length: 11
                    children: []
                    pos: 44789
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.AND:
                                return traverseAnd(n, scope);

                              case Token.OR:
                                return traverseOr(n, scope);

                              default:
                                scope = traverse(n, scope);
                                return newBooleanOutcomePair(n.getJSType(), scope);
                            }
                    children: []
                    pos: 44803
                    length: 238
                children: []
                pos: 44782
                length: 259
              pos: 44776
              length: 269
          children: []
          pos: 44683
          length: 362
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getBooleanOutcomePair
              children: []
              pos: 45284
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: BooleanOutcomePair left
                children: []
                pos: 45306
                length: 23
              pos: 45265
              length: 416
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return new BooleanOutcomePair(
                            getBooleanOutcomes(left.toBooleanOutcomes, right.toBooleanOutcomes,
                                               condition),
                            getBooleanOutcomes(left.booleanValues, right.booleanValues, condition),
                            left.getJoinedFlowScope(), right.getJoinedFlowScope());
                children: []
                pos: 45388
                length: 289
              pos: 45382
              length: 299
          children: []
          pos: 45265
          length: 416
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getBooleanOutcomes
              children: []
              pos: 46367
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: BooleanLiteralSet left
                children: []
                pos: 46386
                length: 22
              pos: 46342
              length: 201
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return right.union(left.intersection(BooleanLiteralSet.get(!condition)));
                children: []
                pos: 46466
                length: 73
              pos: 46460
              length: 83
          children: []
          pos: 46342
          length: 201
        - type: class_declaration
          fields:
            name:
              type: identifier
              fields:
                text: BooleanOutcomePair
              children: []
              pos: 46850
              length: 18
            body:
              type: class_body
              fields: {}
              children:
              - type: field_declaration
                fields:
                  text: final BooleanLiteralSet toBooleanOutcomes;
                children: []
                pos: 46875
                length: 42
              - type: field_declaration
                fields:
                  text: final BooleanLiteralSet booleanValues;
                children: []
                pos: 46922
                length: 38
              - type: field_declaration
                fields:
                  text: final FlowScope leftScope;
                children: []
                pos: 47041
                length: 26
              - type: field_declaration
                fields:
                  text: final FlowScope rightScope;
                children: []
                pos: 47126
                length: 27
              - type: field_declaration
                fields:
                  text: FlowScope joinedScope = null;
                children: []
                pos: 47235
                length: 29
              - type: constructor_declaration
                fields:
                  text: |-
                    BooleanOutcomePair(
                            BooleanLiteralSet toBooleanOutcomes, BooleanLiteralSet booleanValues,
                            FlowScope leftScope, FlowScope rightScope) {
                          this.toBooleanOutcomes = toBooleanOutcomes;
                          this.booleanValues = booleanValues;
                          this.leftScope = leftScope;
                          this.rightScope = rightScope;
                        }
                children: []
                pos: 47270
                length: 318
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: getJoinedFlowScope
                    children: []
                    pos: 47728
                    length: 18
                  parameters:
                    type: method_parameters
                    fields: {}
                    children: []
                    pos: 47718
                    length: 260
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: equals
                              fields:
                                left:
                                  type: identifier
                                  fields:
                                    text: joinedScope
                                  children: []
                                  pos: 47761
                                  length: 11
                                right:
                                  type: null_literal
                                  fields: {}
                                  children: []
                                  pos: 47776
                                  length: 4
                              children: []
                              pos: 47761
                              length: 19
                          children: []
                          pos: 47760
                          length: 21
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: if_statement
                          fields:
                            condition:
                              type: parenthesized_expression
                              fields:
                                expression:
                                  type: equals
                                  fields:
                                    left:
                                      type: identifier
                                      fields:
                                        text: leftScope
                                      children: []
                                      pos: 47796
                                      length: 9
                                    right:
                                      type: identifier
                                      fields:
                                        text: rightScope
                                      children: []
                                      pos: 47809
                                      length: 10
                                  children: []
                                  pos: 47796
                                  length: 23
                              children: []
                              pos: 47795
                              length: 25
                          children:
                          - type: block
                            fields: {}
                            children:
                            - type: expression_statement
                              fields:
                                text: joinedScope = rightScope;
                              children: []
                              pos: 47833
                              length: 25
                            pos: 47821
                            length: 47
                          pos: 47792
                          length: 146
                        pos: 47782
                        length: 164
                      pos: 47757
                      length: 189
                    - type: return_statement
                      fields:
                        text: return joinedScope;
                      children: []
                      pos: 47953
                      length: 19
                    pos: 47749
                    length: 229
                children: []
                pos: 47718
                length: 260
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: getOutcomeFlowScope
                    children: []
                    pos: 48099
                    length: 19
                  parameters:
                    type: method_parameters
                    fields: {}
                    children:
                    - type: formal_parameter
                      fields:
                        text: int nodeType
                      children: []
                      pos: 48119
                      length: 12
                    pos: 48089
                    length: 312
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: or
                              fields:
                                left:
                                  type: and
                                  fields:
                                    left:
                                      type: equals
                                      fields:
                                        left:
                                          type: identifier
                                          fields:
                                            text: nodeType
                                          children: []
                                          pos: 48162
                                          length: 8
                                        right:
                                          type: field_access
                                          fields:
                                            text: Token.AND
                                          children: []
                                          pos: 48174
                                          length: 9
                                      children: []
                                      pos: 48162
                                      length: 21
                                    right:
                                      type: identifier
                                      fields:
                                        text: outcome
                                      children: []
                                      pos: 48187
                                      length: 7
                                  children: []
                                  pos: 48162
                                  length: 32
                                right:
                                  type: and
                                  fields:
                                    left:
                                      type: equals
                                      fields:
                                        left:
                                          type: identifier
                                          fields:
                                            text: nodeType
                                          children: []
                                          pos: 48208
                                          length: 8
                                        right:
                                          type: field_access
                                          fields:
                                            text: Token.OR
                                          children: []
                                          pos: 48220
                                          length: 8
                                      children: []
                                      pos: 48208
                                      length: 20
                                    right:
                                      type: unary_expression
                                      fields:
                                        text: "!outcome"
                                      children: []
                                      pos: 48232
                                      length: 8
                                  children: []
                                  pos: 48208
                                  length: 32
                              children: []
                              pos: 48162
                              length: 78
                          children: []
                          pos: 48161
                          length: 80
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: return_statement
                          fields:
                            text: return rightScope;
                          children: []
                          pos: 48317
                          length: 18
                        pos: 48242
                        length: 101
                      pos: 48158
                      length: 237
                    pos: 48150
                    length: 251
                children: []
                pos: 48089
                length: 312
              pos: 46830
              length: 1575
          children: []
          pos: 46830
          length: 1575
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: newBooleanOutcomePair
              children: []
              pos: 48436
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType jsType
                children: []
                pos: 48465
                length: 13
              pos: 48409
              length: 478
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: jsType
                            children: []
                            pos: 48511
                            length: 6
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 48521
                            length: 4
                        children: []
                        pos: 48511
                        length: 14
                    children: []
                    pos: 48510
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: |-
                        return new BooleanOutcomePair(
                                  BooleanLiteralSet.BOTH, BooleanLiteralSet.BOTH, flowScope, flowScope);
                    children: []
                    pos: 48535
                    length: 111
                  pos: 48527
                  length: 125
                pos: 48507
                length: 145
              - type: return_statement
                fields:
                  text: |-
                    return new BooleanOutcomePair(jsType.getPossibleToBooleanOutcomes(),
                            registry.getNativeType(BOOLEAN_TYPE).isSubtype(jsType) ?
                                BooleanLiteralSet.BOTH : BooleanLiteralSet.EMPTY,
                            flowScope, flowScope);
                children: []
                pos: 48657
                length: 226
              pos: 48501
              length: 386
          children: []
          pos: 48409
          length: 478
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: redeclareSimpleVar
              children: []
              pos: 48904
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 48930
                length: 15
              pos: 48891
              length: 394
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(nameNode.isName());
                children: []
                pos: 48984
                length: 44
              - type: local_variable_declaration
                fields:
                  text: String varName = nameNode.getString();
                children: []
                pos: 49033
                length: 38
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: varType
                            children: []
                            pos: 49080
                            length: 7
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 49091
                            length: 4
                        children: []
                        pos: 49080
                        length: 15
                    children: []
                    pos: 49079
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: varType = getNativeType(JSTypeNative.UNKNOWN_TYPE);
                    children: []
                    pos: 49105
                    length: 51
                  pos: 49097
                  length: 65
                pos: 49076
                length: 86
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isUnflowable(syntacticScope.getVar(varName))
                        children: []
                        pos: 49171
                        length: 44
                    children: []
                    pos: 49170
                    length: 46
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 49225
                    length: 7
                  pos: 49217
                  length: 21
                pos: 49167
                length: 71
              - type: expression_statement
                fields:
                  text: scope.inferSlotType(varName, varType);
                children: []
                pos: 49243
                length: 38
              pos: 48978
              length: 307
          children: []
          pos: 48891
          length: 394
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isUnflowable
              children: []
              pos: 49305
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Var v
                children: []
                pos: 49318
                length: 5
              pos: 49289
              length: 214
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return v != null && v.isLocal() && v.isMarkedEscaped() &&
                            // It's OK to flow a variable in the scope where it's escaped.
                            v.getScope() == syntacticScope;
                children: []
                pos: 49331
                length: 168
              pos: 49325
              length: 178
          children: []
          pos: 49289
          length: 214
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getJSType
              children: []
              pos: 49628
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 49638
                length: 6
              pos: 49613
              length: 461
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType jsType = n.getJSType();
                children: []
                pos: 49652
                length: 30
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: jsType
                            children: []
                            pos: 49691
                            length: 6
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 49701
                            length: 4
                        children: []
                        pos: 49691
                        length: 14
                    children: []
                    pos: 49690
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return getNativeType(UNKNOWN_TYPE);
                    children: []
                    pos: 49995
                    length: 35
                  pos: 49707
                  length: 329
                pos: 49687
                length: 383
              pos: 49646
              length: 428
          children: []
          pos: 49613
          length: 461
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getNativeType
              children: []
              pos: 50093
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSTypeNative typeId
                children: []
                pos: 50107
                length: 19
              pos: 50078
              length: 98
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return registry.getNativeType(typeId);
                children: []
                pos: 50134
                length: 38
              pos: 50128
              length: 48
          children: []
          pos: 50078
          length: 98
        pos: 2471
        length: 47707
    children: []
    pos: 2471
    length: 47707
  pos: 0
  length: 50179
text_diff: "--- before\n+++ after\n@@ -1118,8 +1118,21 @@\n \n     ObjectType constraintObj
  =\n         ObjectType.cast(constraint.restrictByNotNullOrUndefined());\n-    if
  (constraintObj != null) {\n-      type.matchConstraint(constraintObj);\n+    if
  (constraintObj != null && constraintObj.isRecordType()) {\n+      ObjectType objType
  = ObjectType.cast(type.restrictByNotNullOrUndefined());\n+      if (objType != null)
  {\n+        for (String prop : constraintObj.getOwnPropertyNames()) {\n+          JSType
  propType = constraintObj.getPropertyType(prop);\n+          if (!objType.isPropertyTypeDeclared(prop))
  {\n+            JSType typeToInfer = propType;\n+            if (!objType.hasProperty(prop))
  {\n+              typeToInfer =\n+                  getNativeType(VOID_TYPE).getLeastSupertype(propType);\n+
  \           }\n+            objType.defineInferredProperty(prop, typeToInfer, null);\n+
  \         }\n+        }\n+      }\n     }\n   }\n \n"
tree_diff: |+
  New cluster:
  ===
  insert-node
  ---
  and [39854,39907]
  to
  parenthesized_expression [39853,39876]
  at 0
  ------------
  ===
  insert-node
  ---
  method_invocation: constraintObj.isRecordType() [39879,39907]
  to
  and [39854,39907]
  at 1
  ===
  insert-node
  ---
  and [39854,39907]
  to
  parenthesized_expression [39853,39876]
  at 0

  New cluster:
  ===
  insert-node
  ---
  local_variable_declaration: ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined()); [39917,39991]
  to
  block [39877,39927]
  at 0
  ------------
  ===
  insert-node
  ---
  local_variable_declaration: ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined()); [39917,39991]
  to
  block [39877,39927]
  at 0

  New cluster:
  Unknown cluster type
  ------------
  ===
  insert-tree
  ---
  if_statement [39998,40508]
      parenthesized_expression [40001,40018]
          not_equals [40002,40017]
              identifier: objType [40002,40009]
              null_literal [40013,40017]
      block [40019,40508]
          enhanced_for_statement: for (String prop : constraintObj.getOwnPropertyNames()) {
            JSType propType = constraintObj.getPropertyType(prop);
            if (!objType.isPropertyTypeDeclared(prop)) {
              JSType typeToInfer = propType;
              if (!objType.hasProperty(prop)) {
                typeToInfer =
                    getNativeType(VOID_TYPE).getLeastSupertype(propType);
              }
              objType.defineInferredProperty(prop, typeToInfer, null);
            }
          } [40029,40500]
  to
  block [39877,39927]
  at 1

  New cluster:
  MOVE from and [39854,39907]
  ------------
  ===
  move-tree
  ---
  not_equals [39854,39875]
      identifier: constraintObj [39854,39867]
      null_literal [39871,39875]
  to
  and [39854,39907]
  at 0

  New cluster:
  ===
  delete-node
  ---
  expression_statement: type.matchConstraint(constraintObj); [39885,39921]
  ===
  ------------
  ===
  delete-node
  ---
  expression_statement: type.matchConstraint(constraintObj); [39885,39921]
  ===

...
