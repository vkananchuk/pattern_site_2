---
language: java
text_diff: "--- before\n+++ after\n@@ -178,13 +178,13 @@\n      * @throws NotStrictlyPositiveException
  if {@code sampleSize} is not\n      * positive.\n      */\n-    public Object[]
  sample(int sampleSize) throws NotStrictlyPositiveException {\n+    public T[] sample(int
  sampleSize) throws NotStrictlyPositiveException {\n         if (sampleSize <= 0)
  {\n             throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,\n
  \                    sampleSize);\n         }\n \n-        final Object[] out =
  new Object[sampleSize];\n+        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(),
  sampleSize);\n \n         for (int i = 0; i < sampleSize; i++) {\n             out[i]
  = sample();\n"
tree_diff: |+
  New cluster:
  UPDATE from final Object[] out = new Object[sampleSize]; to final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
  ------------
  ===
  update-node
  ---
  local_variable_declaration: final Object[] out = new Object[sampleSize]; [6980,7024]
  replace final Object[] out = new Object[sampleSize]; by final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);

...
