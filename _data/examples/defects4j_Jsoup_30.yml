---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: Cleaner
        children: []
        pos: 896
        length: 7
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private Whitelist whitelist;
          children: []
          pos: 910
          length: 28
        - type: constructor_declaration
          fields:
            text: |-
              public Cleaner(Whitelist whitelist) {
                      Validate.notNull(whitelist);
                      this.whitelist = whitelist;
                  }
          children: []
          pos: 1089
          length: 116
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: clean
              children: []
              pos: 1566
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Document dirtyDocument
                children: []
                pos: 1572
                length: 22
              pos: 1550
              length: 372
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Validate.notNull(dirtyDocument);
                children: []
                pos: 1606
                length: 32
              - type: local_variable_declaration
                fields:
                  text: Document clean = Document.createShell(dirtyDocument.baseUri());
                children: []
                pos: 1648
                length: 63
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: dirtyDocument.body()
                            children: []
                            pos: 1724
                            length: 20
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 1748
                            length: 4
                        children: []
                        pos: 1724
                        length: 28
                    children: []
                    pos: 1723
                    length: 30
                children:
                - type: expression_statement
                  fields:
                    text: copySafeNodes(dirtyDocument.body(), clean.body());
                  children: []
                  pos: 1843
                  length: 50
                pos: 1720
                length: 173
              - type: return_statement
                fields:
                  text: return clean;
                children: []
                pos: 1903
                length: 13
              pos: 1596
              length: 326
          children: []
          pos: 1550
          length: 372
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isValid
              children: []
              pos: 2597
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Document dirtyDocument
                children: []
                pos: 2605
                length: 22
              pos: 2582
              length: 280
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Validate.notNull(dirtyDocument);
                children: []
                pos: 2639
                length: 32
              - type: local_variable_declaration
                fields:
                  text: Document clean = Document.createShell(dirtyDocument.baseUri());
                children: []
                pos: 2681
                length: 63
              - type: local_variable_declaration
                fields:
                  text: int numDiscarded = copySafeNodes(dirtyDocument.body(), clean.body());
                children: []
                pos: 2753
                length: 69
              - type: return_statement
                fields:
                  text: return numDiscarded == 0;
                children: []
                pos: 2831
                length: 25
              pos: 2629
              length: 233
          children: []
          pos: 2582
          length: 280
        - type: class_declaration
          fields:
            name:
              type: identifier
              fields:
                text: CleaningVisitor
              children: []
              pos: 3000
              length: 15
            body:
              type: class_body
              fields: {}
              children:
              - type: field_declaration
                fields:
                  text: private int numDiscarded = 0;
                children: []
                pos: 3049
                length: 29
              - type: field_declaration
                fields:
                  text: private final Element root;
                children: []
                pos: 3087
                length: 27
              - type: field_declaration
                fields:
                  text: private Element destination;
                children: []
                pos: 3123
                length: 28
              - type: constructor_declaration
                fields:
                  text: |-
                    private CleaningVisitor(Element root, Element destination) {
                                this.root = root;
                                this.destination = destination;
                            }
                children: []
                pos: 3199
                length: 144
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: head
                    children: []
                    pos: 3365
                    length: 4
                  parameters:
                    type: method_parameters
                    fields: {}
                    children:
                    - type: formal_parameter
                      fields:
                        text: Node source
                      children: []
                      pos: 3370
                      length: 11
                    pos: 3353
                    length: 1087
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: instanceof_expression
                              fields:
                                text: source instanceof Element
                              children: []
                              pos: 3412
                              length: 25
                          children: []
                          pos: 3411
                          length: 27
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: local_variable_declaration
                          fields:
                            text: Element sourceEl = (Element) source;
                          children: []
                          pos: 3457
                          length: 36
                        - type: if_statement
                          fields:
                            condition:
                              type: parenthesized_expression
                              fields:
                                expression:
                                  type: method_invocation
                                  fields:
                                    text: whitelist.isSafeTag(sourceEl.tagName())
                                  children: []
                                  pos: 3515
                                  length: 39
                              children: []
                              pos: 3514
                              length: 41
                          children:
                          - type: block
                            fields: {}
                            children:
                            - type: local_variable_declaration
                              fields:
                                text: ElementMeta meta = createSafeElement(sourceEl);
                              children: []
                              pos: 3613
                              length: 47
                            - type: local_variable_declaration
                              fields:
                                text: Element destChild = meta.el;
                              children: []
                              pos: 3681
                              length: 28
                            - type: expression_statement
                              fields:
                                text: destination.appendChild(destChild);
                              children: []
                              pos: 3730
                              length: 35
                            - type: expression_statement
                              fields:
                                text: numDiscarded += meta.numAttribsDiscarded;
                              children: []
                              pos: 3787
                              length: 41
                            - type: expression_statement
                              fields:
                                text: destination = destChild;
                              children: []
                              pos: 3849
                              length: 24
                            pos: 3556
                            length: 335
                          pos: 3511
                          length: 530
                        pos: 3439
                        length: 616
                      pos: 3408
                      length: 1022
                    pos: 3394
                    length: 1046
                children: []
                pos: 3353
                length: 1087
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: tail
                    children: []
                    pos: 4462
                    length: 4
                  parameters:
                    type: method_parameters
                    fields: {}
                    children:
                    - type: formal_parameter
                      fields:
                        text: Node source
                      children: []
                      pos: 4467
                      length: 11
                    pos: 4450
                    length: 255
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: and
                              fields:
                                left:
                                  type: instanceof_expression
                                  fields:
                                    text: source instanceof Element
                                  children: []
                                  pos: 4509
                                  length: 25
                                right:
                                  type: method_invocation
                                  fields:
                                    text: whitelist.isSafeTag(source.nodeName())
                                  children: []
                                  pos: 4538
                                  length: 38
                              children: []
                              pos: 4509
                              length: 67
                          children: []
                          pos: 4508
                          length: 69
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: expression_statement
                          fields:
                            text: destination = destination.parent();
                          children: []
                          pos: 4596
                          length: 35
                        pos: 4578
                        length: 117
                      pos: 4505
                      length: 190
                    pos: 4491
                    length: 214
                children: []
                pos: 4450
                length: 255
              pos: 2980
              length: 1731
          children: []
          pos: 2980
          length: 1731
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: copySafeNodes
              children: []
              pos: 4729
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Element source
                children: []
                pos: 4743
                length: 14
              pos: 4717
              length: 291
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: CleaningVisitor cleaningVisitor = new CleaningVisitor(source,
                    dest);
                children: []
                pos: 4783
                length: 68
              - type: local_variable_declaration
                fields:
                  text: NodeTraversor traversor = new NodeTraversor(cleaningVisitor);
                children: []
                pos: 4860
                length: 61
              - type: expression_statement
                fields:
                  text: traversor.traverse(source);
                children: []
                pos: 4930
                length: 27
              - type: return_statement
                fields:
                  text: return cleaningVisitor.numDiscarded;
                children: []
                pos: 4966
                length: 36
              pos: 4773
              length: 235
          children: []
          pos: 4717
          length: 291
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createSafeElement
              children: []
              pos: 5034
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Element sourceEl
                children: []
                pos: 5052
                length: 16
              pos: 5014
              length: 739
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String sourceTag = sourceEl.tagName();
                children: []
                pos: 5080
                length: 38
              - type: local_variable_declaration
                fields:
                  text: Attributes destAttrs = new Attributes();
                children: []
                pos: 5127
                length: 40
              - type: local_variable_declaration
                fields:
                  text: Element dest = new Element(Tag.valueOf(sourceTag), sourceEl.baseUri(),
                    destAttrs);
                children: []
                pos: 5176
                length: 82
              - type: local_variable_declaration
                fields:
                  text: int numDiscarded = 0;
                children: []
                pos: 5267
                length: 21
              - type: local_variable_declaration
                fields:
                  text: Attributes sourceAttrs = sourceEl.attributes();
                children: []
                pos: 5298
                length: 47
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (Attribute sourceAttr : sourceAttrs) {
                                if (whitelist.isSafeAttribute(sourceTag, sourceEl, sourceAttr))
                                    destAttrs.put(sourceAttr);
                                else
                                    numDiscarded++;
                            }
                children: []
                pos: 5354
                length: 220
              - type: local_variable_declaration
                fields:
                  text: Attributes enforcedAttrs = whitelist.getEnforcedAttributes(sourceTag);
                children: []
                pos: 5583
                length: 70
              - type: expression_statement
                fields:
                  text: destAttrs.addAll(enforcedAttrs);
                children: []
                pos: 5662
                length: 32
              - type: return_statement
                fields:
                  text: return new ElementMeta(dest, numDiscarded);
                children: []
                pos: 5704
                length: 43
              pos: 5070
              length: 683
          children: []
          pos: 5014
          length: 739
        - type: class_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ElementMeta
              children: []
              pos: 5780
              length: 11
            body:
              type: class_body
              fields: {}
              children:
              - type: field_declaration
                fields:
                  text: Element el;
                children: []
                pos: 5802
                length: 11
              - type: field_declaration
                fields:
                  text: int numAttribsDiscarded;
                children: []
                pos: 5822
                length: 24
              - type: constructor_declaration
                fields:
                  text: |-
                    ElementMeta(Element el, int numAttribsDiscarded) {
                                this.el = el;
                                this.numAttribsDiscarded = numAttribsDiscarded;
                            }
                children: []
                pos: 5856
                length: 146
              pos: 5759
              length: 249
          children: []
          pos: 5759
          length: 249
        pos: 883
        length: 5128
    children: []
    pos: 883
    length: 5128
  pos: 0
  length: 6012
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: Cleaner
        children: []
        pos: 820
        length: 7
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private Whitelist whitelist;
          children: []
          pos: 834
          length: 28
        - type: constructor_declaration
          fields:
            text: |-
              public Cleaner(Whitelist whitelist) {
                      Validate.notNull(whitelist);
                      this.whitelist = whitelist;
                  }
          children: []
          pos: 1013
          length: 116
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: clean
              children: []
              pos: 1490
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Document dirtyDocument
                children: []
                pos: 1496
                length: 22
              pos: 1474
              length: 372
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Validate.notNull(dirtyDocument);
                children: []
                pos: 1530
                length: 32
              - type: local_variable_declaration
                fields:
                  text: Document clean = Document.createShell(dirtyDocument.baseUri());
                children: []
                pos: 1572
                length: 63
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: dirtyDocument.body()
                            children: []
                            pos: 1648
                            length: 20
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 1672
                            length: 4
                        children: []
                        pos: 1648
                        length: 28
                    children: []
                    pos: 1647
                    length: 30
                children:
                - type: expression_statement
                  fields:
                    text: copySafeNodes(dirtyDocument.body(), clean.body());
                  children: []
                  pos: 1767
                  length: 50
                pos: 1644
                length: 173
              - type: return_statement
                fields:
                  text: return clean;
                children: []
                pos: 1827
                length: 13
              pos: 1520
              length: 326
          children: []
          pos: 1474
          length: 372
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isValid
              children: []
              pos: 2521
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Document dirtyDocument
                children: []
                pos: 2529
                length: 22
              pos: 2506
              length: 280
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Validate.notNull(dirtyDocument);
                children: []
                pos: 2563
                length: 32
              - type: local_variable_declaration
                fields:
                  text: Document clean = Document.createShell(dirtyDocument.baseUri());
                children: []
                pos: 2605
                length: 63
              - type: local_variable_declaration
                fields:
                  text: int numDiscarded = copySafeNodes(dirtyDocument.body(), clean.body());
                children: []
                pos: 2677
                length: 69
              - type: return_statement
                fields:
                  text: return numDiscarded == 0;
                children: []
                pos: 2755
                length: 25
              pos: 2553
              length: 233
          children: []
          pos: 2506
          length: 280
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: copySafeNodes
              children: []
              pos: 2916
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Element root
                children: []
                pos: 2930
                length: 12
              pos: 2904
              length: 1168
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: List<Node> sourceChildren = root.childNodes();
                children: []
                pos: 2975
                length: 46
              - type: local_variable_declaration
                fields:
                  text: int numDiscarded = 0;
                children: []
                pos: 3030
                length: 21
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (Node source : sourceChildren) {
                                if (source instanceof Element) {
                                    Element sourceEl = (Element) source;

                                    if (whitelist.isSafeTag(sourceEl.tagName())) { // safe, clone and copy safe attrs
                                        ElementMeta meta = createSafeElement(sourceEl);
                                        Element destChild = meta.el;
                                        destination.appendChild(destChild);

                                        numDiscarded += meta.numAttribsDiscarded;
                                        numDiscarded += copySafeNodes(sourceEl, destChild);
                                    } else {
                                        numDiscarded++;
                                        numDiscarded += copySafeNodes(sourceEl, destination);
                                    }
                                } else if (source instanceof TextNode) {
                                    TextNode sourceText = (TextNode) source;
                                    TextNode destText = new TextNode(sourceText.getWholeText(), source.baseUri());
                                    destination.appendChild(destText);
                                }
                            }
                children: []
                pos: 3061
                length: 974
              - type: return_statement
                fields:
                  text: return numDiscarded;
                children: []
                pos: 4044
                length: 20
              pos: 2965
              length: 1107
          children: []
          pos: 2904
          length: 1168
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createSafeElement
              children: []
              pos: 4098
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Element sourceEl
                children: []
                pos: 4116
                length: 16
              pos: 4078
              length: 739
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String sourceTag = sourceEl.tagName();
                children: []
                pos: 4144
                length: 38
              - type: local_variable_declaration
                fields:
                  text: Attributes destAttrs = new Attributes();
                children: []
                pos: 4191
                length: 40
              - type: local_variable_declaration
                fields:
                  text: Element dest = new Element(Tag.valueOf(sourceTag), sourceEl.baseUri(),
                    destAttrs);
                children: []
                pos: 4240
                length: 82
              - type: local_variable_declaration
                fields:
                  text: int numDiscarded = 0;
                children: []
                pos: 4331
                length: 21
              - type: local_variable_declaration
                fields:
                  text: Attributes sourceAttrs = sourceEl.attributes();
                children: []
                pos: 4362
                length: 47
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (Attribute sourceAttr : sourceAttrs) {
                                if (whitelist.isSafeAttribute(sourceTag, sourceEl, sourceAttr))
                                    destAttrs.put(sourceAttr);
                                else
                                    numDiscarded++;
                            }
                children: []
                pos: 4418
                length: 220
              - type: local_variable_declaration
                fields:
                  text: Attributes enforcedAttrs = whitelist.getEnforcedAttributes(sourceTag);
                children: []
                pos: 4647
                length: 70
              - type: expression_statement
                fields:
                  text: destAttrs.addAll(enforcedAttrs);
                children: []
                pos: 4726
                length: 32
              - type: return_statement
                fields:
                  text: return new ElementMeta(dest, numDiscarded);
                children: []
                pos: 4768
                length: 43
              pos: 4134
              length: 683
          children: []
          pos: 4078
          length: 739
        - type: class_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ElementMeta
              children: []
              pos: 4844
              length: 11
            body:
              type: class_body
              fields: {}
              children:
              - type: field_declaration
                fields:
                  text: Element el;
                children: []
                pos: 4866
                length: 11
              - type: field_declaration
                fields:
                  text: int numAttribsDiscarded;
                children: []
                pos: 4886
                length: 24
              - type: constructor_declaration
                fields:
                  text: |-
                    ElementMeta(Element el, int numAttribsDiscarded) {
                                this.el = el;
                                this.numAttribsDiscarded = numAttribsDiscarded;
                            }
                children: []
                pos: 4920
                length: 146
              pos: 4823
              length: 249
          children: []
          pos: 4823
          length: 249
        pos: 807
        length: 4268
    children: []
    pos: 807
    length: 4268
  pos: 0
  length: 5076
text_diff: "--- before\n+++ after\n@@ -3,8 +3,6 @@\n import org.jsoup.helper.Validate;\n
  import org.jsoup.nodes.*;\n import org.jsoup.parser.Tag;\n-import org.jsoup.select.NodeTraversor;\n-import
  org.jsoup.select.NodeVisitor;\n \n import java.util.List;\n \n@@ -69,17 +67,11 @@\n
  \    /**\n      Iterates the input and copies trusted nodes (tags, attributes, text)
  into the destination.\n      */\n-    private final class CleaningVisitor implements
  NodeVisitor {\n-        private int numDiscarded = 0;\n-        private final Element
  root;\n-        private Element destination; // current element to append nodes
  to\n-\n-        private CleaningVisitor(Element root, Element destination) {\n-
  \           this.root = root;\n-            this.destination = destination;\n-        }\n+
  \   private int copySafeNodes(Element root, Element destination) {\n+        List<Node>
  sourceChildren = root.childNodes();\n+        int numDiscarded = 0;\n \n-        public
  void head(Node source, int depth) {\n+        for (Node source : sourceChildren)
  {\n             if (source instanceof Element) {\n                 Element sourceEl
  = (Element) source;\n \n@@ -89,31 +81,20 @@\n                     destination.appendChild(destChild);\n
  \n                     numDiscarded += meta.numAttribsDiscarded;\n-                    destination
  = destChild;\n-                } else if (source != root) { // not a safe tag, so
  don't add. don't count root against discarded.\n+                    numDiscarded
  += copySafeNodes(sourceEl, destChild);\n+                } else {\n                     numDiscarded++;\n+
  \                   numDiscarded += copySafeNodes(sourceEl, destination);\n                 }\n
  \            } else if (source instanceof TextNode) {\n                 TextNode
  sourceText = (TextNode) source;\n                 TextNode destText = new TextNode(sourceText.getWholeText(),
  source.baseUri());\n                 destination.appendChild(destText);\n-            }
  else { // else, we don't care about comments, xml proc instructions, etc\n-                numDiscarded++;\n
  \            }\n         }\n+        return numDiscarded;\n \n-        public void
  tail(Node source, int depth) {\n-            if (source instanceof Element && whitelist.isSafeTag(source.nodeName()))
  {\n-                destination = destination.parent(); // would have descended,
  so pop destination stack\n-            }\n-        }\n-    }\n \n-    private int
  copySafeNodes(Element source, Element dest) {\n-        CleaningVisitor cleaningVisitor
  = new CleaningVisitor(source, dest);\n-        NodeTraversor traversor = new NodeTraversor(cleaningVisitor);\n-
  \       traversor.traverse(source);\n-        return cleaningVisitor.numDiscarded;\n
  \    }\n \n     private ElementMeta createSafeElement(Element sourceEl) {\n"
tree_diff: |+
  New cluster:
  UPDATE from Element source to Element root
  ------------
  ===
  update-node
  ---
  formal_parameter: Element source [4743,4757]
  replace Element source by Element root

  New cluster:
  UPDATE from CleaningVisitor cleaningVisitor = new CleaningVisitor(source, dest); to List<Node> sourceChildren = root.childNodes();
  ------------
  ===
  update-node
  ---
  local_variable_declaration: CleaningVisitor cleaningVisitor = new CleaningVisitor(source, dest); [4783,4851]
  replace CleaningVisitor cleaningVisitor = new CleaningVisitor(source, dest); by List<Node> sourceChildren = root.childNodes();

  New cluster:
  UPDATE from NodeTraversor traversor = new NodeTraversor(cleaningVisitor); to int numDiscarded = 0;
  ------------
  ===
  update-node
  ---
  local_variable_declaration: NodeTraversor traversor = new NodeTraversor(cleaningVisitor); [4860,4921]
  replace NodeTraversor traversor = new NodeTraversor(cleaningVisitor); by int numDiscarded = 0;

  New cluster:
  ===
  insert-node
  ---
  enhanced_for_statement: for (Node source : sourceChildren) {
              if (source instanceof Element) {
                  Element sourceEl = (Element) source;

                  if (whitelist.isSafeTag(sourceEl.tagName())) { // safe, clone and copy safe attrs
                      ElementMeta meta = createSafeElement(sourceEl);
                      Element destChild = meta.el;
                      destination.appendChild(destChild);

                      numDiscarded += meta.numAttribsDiscarded;
                      numDiscarded += copySafeNodes(sourceEl, destChild);
                  } else {
                      numDiscarded++;
                      numDiscarded += copySafeNodes(sourceEl, destination);
                  }
              } else if (source instanceof TextNode) {
                  TextNode sourceText = (TextNode) source;
                  TextNode destText = new TextNode(sourceText.getWholeText(), source.baseUri());
                  destination.appendChild(destText);
              }
          } [3061,4035]
  to
  block [4773,5008]
  at 2
  ------------
  ===
  insert-node
  ---
  enhanced_for_statement: for (Node source : sourceChildren) {
              if (source instanceof Element) {
                  Element sourceEl = (Element) source;

                  if (whitelist.isSafeTag(sourceEl.tagName())) { // safe, clone and copy safe attrs
                      ElementMeta meta = createSafeElement(sourceEl);
                      Element destChild = meta.el;
                      destination.appendChild(destChild);

                      numDiscarded += meta.numAttribsDiscarded;
                      numDiscarded += copySafeNodes(sourceEl, destChild);
                  } else {
                      numDiscarded++;
                      numDiscarded += copySafeNodes(sourceEl, destination);
                  }
              } else if (source instanceof TextNode) {
                  TextNode sourceText = (TextNode) source;
                  TextNode destText = new TextNode(sourceText.getWholeText(), source.baseUri());
                  destination.appendChild(destText);
              }
          } [3061,4035]
  to
  block [4773,5008]
  at 2

  New cluster:
  UPDATE from return cleaningVisitor.numDiscarded; to return numDiscarded;
  ------------
  ===
  update-node
  ---
  return_statement: return cleaningVisitor.numDiscarded; [4966,5002]
  replace return cleaningVisitor.numDiscarded; by return numDiscarded;

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  class_declaration [2980,4711]
      identifier: CleaningVisitor [3000,3015]
      class_body [2980,4711]
          field_declaration: private int numDiscarded = 0; [3049,3078]
          field_declaration: private final Element root; [3087,3114]
          field_declaration: private Element destination; [3123,3151]
          constructor_declaration: private CleaningVisitor(Element root, Element destination) {
              this.root = root;
              this.destination = destination;
          } [3199,3343]
          method_declaration [3353,4440]
              identifier: head [3365,3369]
              method_parameters [3353,4440]
                  formal_parameter: Node source [3370,3381]
              block [3394,4440]
                  if_statement [3408,4430]
                      parenthesized_expression [3411,3438]
                          instanceof_expression: source instanceof Element [3412,3437]
                      block [3439,4055]
                          local_variable_declaration: Element sourceEl = (Element) source; [3457,3493]
                          if_statement [3511,4041]
                              parenthesized_expression [3514,3555]
                                  method_invocation: whitelist.isSafeTag(sourceEl.tagName()) [3515,3554]
                              block [3556,3891]
                                  local_variable_declaration: ElementMeta meta = createSafeElement(sourceEl); [3613,3660]
                                  local_variable_declaration: Element destChild = meta.el; [3681,3709]
                                  expression_statement: destination.appendChild(destChild); [3730,3765]
                                  expression_statement: numDiscarded += meta.numAttribsDiscarded; [3787,3828]
                                  expression_statement: destination = destChild; [3849,3873]
          method_declaration [4450,4705]
              identifier: tail [4462,4466]
              method_parameters [4450,4705]
                  formal_parameter: Node source [4467,4478]
              block [4491,4705]
                  if_statement [4505,4695]
                      parenthesized_expression [4508,4577]
                          and [4509,4576]
                              instanceof_expression: source instanceof Element [4509,4534]
                              method_invocation: whitelist.isSafeTag(source.nodeName()) [4538,4576]
                      block [4578,4695]
                          expression_statement: destination = destination.parent(); [4596,4631]

  New cluster:
  ===
  delete-node
  ---
  expression_statement: traversor.traverse(source); [4930,4957]
  ===
  ------------
  ===
  delete-node
  ---
  expression_statement: traversor.traverse(source); [4930,4957]
  ===

...
