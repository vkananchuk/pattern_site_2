---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: SQRT
        children: []
        pos: 191
        length: 4
      body:
        type: class_body
        fields: {}
        children:
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sqrt
              children: []
              pos: 223
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double x
                children: []
                pos: 228
                length: 8
              pos: 202
              length: 222
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: double approx = x / 2d;
                children: []
                pos: 264
                length: 23
              - type: while_statement
                fields:
                  text: |-
                    while (Math.abs(x-approx) > epsilon) {
                                approx = 0.5d * (approx + x / approx);
                            }
                children: []
                pos: 296
                length: 99
              - type: return_statement
                fields:
                  text: return approx;
                children: []
                pos: 404
                length: 14
              pos: 254
              length: 170
          children: []
          pos: 202
          length: 222
        pos: 178
        length: 248
    children: []
    pos: 178
    length: 248
  pos: 0
  length: 427
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: SQRT
        children: []
        pos: 199
        length: 4
      body:
        type: class_body
        fields: {}
        children:
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sqrt
              children: []
              pos: 231
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double x
                children: []
                pos: 236
                length: 8
              pos: 210
              length: 229
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: double approx = x / 2d;
                children: []
                pos: 272
                length: 23
              - type: while_statement
                fields:
                  text: |-
                    while (Math.abs(x-approx*approx) > epsilon) {
                                approx = 0.5d * (approx + x / approx);
                            }
                children: []
                pos: 304
                length: 106
              - type: return_statement
                fields:
                  text: return approx;
                children: []
                pos: 419
                length: 14
              pos: 262
              length: 177
          children: []
          pos: 210
          length: 229
        pos: 186
        length: 255
    children: []
    pos: 186
    length: 255
  pos: 0
  length: 442
text_diff: "--- before\n+++ after\n@@ -1,4 +1,4 @@\n-package java_programs;\n+package
  correct_java_programs;\n import java.util.*;\n \n /*\n@@ -13,7 +13,7 @@\n public
  class SQRT {\n     public static double sqrt(double x, double epsilon) {\n         double
  approx = x / 2d;\n-        while (Math.abs(x-approx) > epsilon) {\n+        while
  (Math.abs(x-approx*approx) > epsilon) {\n             approx = 0.5d * (approx +
  x / approx);\n         }\n         return approx;\n"
tree_diff: |+
  New cluster:
  UPDATE from while (Math.abs(x-approx) > epsilon) {
              approx = 0.5d * (approx + x / approx);
          } to while (Math.abs(x-approx*approx) > epsilon) {
              approx = 0.5d * (approx + x / approx);
          }
  ------------
  ===
  update-node
  ---
  while_statement: while (Math.abs(x-approx) > epsilon) {
              approx = 0.5d * (approx + x / approx);
          } [296,395]
  replace while (Math.abs(x-approx) > epsilon) {
              approx = 0.5d * (approx + x / approx);
          } by while (Math.abs(x-approx*approx) > epsilon) {
              approx = 0.5d * (approx + x / approx);
          }

...
