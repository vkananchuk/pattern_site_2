---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: Complex
        children: []
        pos: 1614
        length: 7
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private static final long serialVersionUID = -6530173849413811929L;
          children: []
          pos: 1697
          length: 67
        - type: field_declaration
          fields:
            text: public static final Complex I = new Complex(0.0, 1.0);
          children: []
          pos: 1847
          length: 54
        - type: field_declaration
          fields:
            text: public static final Complex NaN = new Complex(Double.NaN, Double.NaN);
          children: []
          pos: 1965
          length: 70
        - type: field_declaration
          fields:
            text: public static final Complex INF = new Complex(Double.POSITIVE_INFINITY,
              Double.POSITIVE_INFINITY);
          children: []
          pos: 2096
          length: 98
        - type: field_declaration
          fields:
            text: public static final Complex ONE = new Complex(1.0, 0.0);
          children: []
          pos: 2258
          length: 56
        - type: field_declaration
          fields:
            text: public static final Complex ZERO = new Complex(0.0, 0.0);
          children: []
          pos: 2382
          length: 57
        - type: field_declaration
          fields:
            text: private final double imaginary;
          children: []
          pos: 2493
          length: 31
        - type: field_declaration
          fields:
            text: private final double real;
          children: []
          pos: 2573
          length: 26
        - type: constructor_declaration
          fields:
            text: |-
              public Complex(double real, double imaginary) {
                      super();
                      this.real = real;
                      this.imaginary = imaginary;
                  }
          children: []
          pos: 2775
          length: 132
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: abs
              children: []
              pos: 3288
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 3274
              length: 652
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 3308
                        length: 7
                    children: []
                    pos: 3307
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Double.NaN;
                    children: []
                    pos: 3331
                    length: 18
                  pos: 3317
                  length: 42
                pos: 3304
                length: 55
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isInfinite()
                        children: []
                        pos: 3381
                        length: 12
                    children: []
                    pos: 3380
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Double.POSITIVE_INFINITY;
                    children: []
                    pos: 3409
                    length: 32
                  pos: 3395
                  length: 56
                pos: 3377
                length: 74
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: Math.abs(real)
                            children: []
                            pos: 3473
                            length: 14
                          right:
                            type: method_invocation
                            fields:
                              text: Math.abs(imaginary)
                            children: []
                            pos: 3490
                            length: 19
                        children: []
                        pos: 3473
                        length: 36
                    children: []
                    pos: 3472
                    length: 38
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: imaginary
                                children: []
                                pos: 3529
                                length: 9
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 3542
                                length: 3
                            children: []
                            pos: 3529
                            length: 16
                        children: []
                        pos: 3528
                        length: 18
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return Math.abs(real);
                        children: []
                        pos: 3565
                        length: 22
                      pos: 3547
                      length: 54
                    pos: 3525
                    length: 76
                  - type: local_variable_declaration
                    fields:
                      text: double q = real / imaginary;
                    children: []
                    pos: 3614
                    length: 28
                  - type: return_statement
                    fields:
                      text: return (Math.abs(imaginary) * Math.sqrt(1 + q*q));
                    children: []
                    pos: 3655
                    length: 50
                  pos: 3511
                  length: 204
                pos: 3469
                length: 451
              pos: 3294
              length: 632
          children: []
          pos: 3274
          length: 652
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: add
              children: []
              pos: 4594
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex rhs
                children: []
                pos: 4598
                length: 11
              pos: 4579
              length: 138
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real + rhs.getReal(),
                                imaginary + rhs.getImaginary());
                children: []
                pos: 4624
                length: 87
              pos: 4611
              length: 106
          children: []
          pos: 4579
          length: 138
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: conjugate
              children: []
              pos: 5340
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 5325
              length: 142
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 5366
                        length: 7
                    children: []
                    pos: 5365
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 5389
                    length: 11
                  pos: 5375
                  length: 35
                pos: 5362
                length: 48
              - type: return_statement
                fields:
                  text: return createComplex(real, -imaginary);
                children: []
                pos: 5422
                length: 39
              pos: 5352
              length: 115
          children: []
          pos: 5325
          length: 142
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: divide
              children: []
              pos: 7066
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex rhs
                children: []
                pos: 7073
                length: 11
              pos: 7051
              length: 1023
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: isNaN()
                            children: []
                            pos: 7100
                            length: 7
                          right:
                            type: method_invocation
                            fields:
                              text: rhs.isNaN()
                            children: []
                            pos: 7111
                            length: 11
                        children: []
                        pos: 7100
                        length: 22
                    children: []
                    pos: 7099
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 7138
                    length: 11
                  pos: 7124
                  length: 35
                pos: 7096
                length: 63
              - type: local_variable_declaration
                fields:
                  text: double c = rhs.getReal();
                children: []
                pos: 7169
                length: 25
              - type: local_variable_declaration
                fields:
                  text: double d = rhs.getImaginary();
                children: []
                pos: 7203
                length: 30
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: c
                                children: []
                                pos: 7246
                                length: 1
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 7251
                                length: 3
                            children: []
                            pos: 7246
                            length: 8
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: d
                                children: []
                                pos: 7258
                                length: 1
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 7263
                                length: 3
                            children: []
                            pos: 7258
                            length: 8
                        children: []
                        pos: 7246
                        length: 20
                    children: []
                    pos: 7245
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 7282
                    length: 11
                  pos: 7268
                  length: 35
                pos: 7242
                length: 61
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: rhs.isInfinite()
                            children: []
                            pos: 7325
                            length: 16
                          right:
                            type: unary_expression
                            fields:
                              text: "!isInfinite()"
                            children: []
                            pos: 7345
                            length: 13
                        children: []
                        pos: 7325
                        length: 33
                    children: []
                    pos: 7324
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return ZERO;
                    children: []
                    pos: 7374
                    length: 12
                  pos: 7360
                  length: 36
                pos: 7321
                length: 75
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: Math.abs(c)
                            children: []
                            pos: 7410
                            length: 11
                          right:
                            type: method_invocation
                            fields:
                              text: Math.abs(d)
                            children: []
                            pos: 7424
                            length: 11
                        children: []
                        pos: 7410
                        length: 25
                    children: []
                    pos: 7409
                    length: 27
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: d
                                children: []
                                pos: 7455
                                length: 1
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 7460
                                length: 3
                            children: []
                            pos: 7455
                            length: 8
                        children: []
                        pos: 7454
                        length: 10
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return createComplex(real/c, imaginary/c);
                        children: []
                        pos: 7483
                        length: 42
                      pos: 7465
                      length: 74
                    pos: 7451
                    length: 88
                  - type: local_variable_declaration
                    fields:
                      text: double q = c / d;
                    children: []
                    pos: 7552
                    length: 17
                  - type: local_variable_declaration
                    fields:
                      text: double denominator = c * q + d;
                    children: []
                    pos: 7582
                    length: 31
                  - type: return_statement
                    fields:
                      text: |-
                        return createComplex((real * q + imaginary) / denominator,
                                        (imaginary * q - real) / denominator);
                    children: []
                    pos: 7626
                    length: 113
                  pos: 7437
                  length: 312
                pos: 7406
                length: 662
              pos: 7086
              length: 988
          children: []
          pos: 7051
          length: 1023
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: equals
              children: []
              pos: 8892
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Object other
                children: []
                pos: 8899
                length: 12
              pos: 8877
              length: 629
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: boolean ret;
                children: []
                pos: 8923
                length: 12
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: this
                            fields: {}
                            children: []
                            pos: 8957
                            length: 4
                          right:
                            type: identifier
                            fields:
                              text: other
                            children: []
                            pos: 8965
                            length: 5
                        children: []
                        pos: 8957
                        length: 13
                    children: []
                    pos: 8956
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ret = true;
                    children: []
                    pos: 8987
                    length: 11
                  pos: 8972
                  length: 36
                pos: 8953
                length: 520
              - type: return_statement
                fields:
                  text: return ret;
                children: []
                pos: 9489
                length: 11
              pos: 8913
              length: 593
          children: []
          pos: 8877
          length: 629
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: hashCode
              children: []
              pos: 9708
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 9697
              length: 174
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 9733
                        length: 7
                    children: []
                    pos: 9732
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return 7;
                    children: []
                    pos: 9756
                    length: 9
                  pos: 9742
                  length: 33
                pos: 9729
                length: 46
              - type: return_statement
                fields:
                  text: "return 37 * (17 * MathUtils.hash(imaginary) + \n            MathUtils.hash(real));"
                children: []
                pos: 9784
                length: 81
              pos: 9719
              length: 152
          children: []
          pos: 9697
          length: 174
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getImaginary
              children: []
              pos: 9982
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 9968
              length: 62
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return imaginary;
                children: []
                pos: 10007
                length: 17
              pos: 9997
              length: 33
          children: []
          pos: 9968
          length: 62
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getReal
              children: []
              pos: 10131
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 10117
              length: 52
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return real;
                children: []
                pos: 10151
                length: 12
              pos: 10141
              length: 28
          children: []
          pos: 10117
          length: 52
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isNaN
              children: []
              pos: 10414
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 10399
              length: 100
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return Double.isNaN(real) || Double.isNaN(imaginary);
                children: []
                pos: 10432
                length: 53
              pos: 10422
              length: 77
          children: []
          pos: 10399
          length: 100
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isInfinite
              children: []
              pos: 10921
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 10906
              length: 138
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: "return !isNaN() && \n        (Double.isInfinite(real) ||
                    Double.isInfinite(imaginary));"
                children: []
                pos: 10944
                length: 86
              pos: 10934
              length: 110
          children: []
          pos: 10906
          length: 138
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: multiply
              children: []
              pos: 12059
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex rhs
                children: []
                pos: 12068
                length: 11
              pos: 12044
              length: 515
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: isNaN()
                            children: []
                            pos: 12095
                            length: 7
                          right:
                            type: method_invocation
                            fields:
                              text: rhs.isNaN()
                            children: []
                            pos: 12106
                            length: 11
                        children: []
                        pos: 12095
                        length: 22
                    children: []
                    pos: 12094
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 12133
                    length: 11
                  pos: 12119
                  length: 35
                pos: 12091
                length: 63
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: or
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: Double.isInfinite(real)
                                    children: []
                                    pos: 12167
                                    length: 23
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: Double.isInfinite(imaginary)
                                    children: []
                                    pos: 12194
                                    length: 28
                                children: []
                                pos: 12167
                                length: 55
                              right:
                                type: method_invocation
                                fields:
                                  text: Double.isInfinite(rhs.real)
                                children: []
                                pos: 12238
                                length: 27
                            children: []
                            pos: 12167
                            length: 98
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isInfinite(rhs.imaginary)
                            children: []
                            pos: 12268
                            length: 32
                        children: []
                        pos: 12167
                        length: 133
                    children: []
                    pos: 12166
                    length: 135
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return INF;
                    children: []
                    pos: 12396
                    length: 11
                  pos: 12302
                  length: 115
                pos: 12163
                length: 254
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real * rhs.real - imaginary * rhs.imaginary,
                                    real * rhs.imaginary + imaginary * rhs.real);
                children: []
                pos: 12426
                length: 127
              pos: 12081
              length: 478
          children: []
          pos: 12044
          length: 515
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: negate
              children: []
              pos: 12867
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 12852
              length: 146
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 12890
                        length: 7
                    children: []
                    pos: 12889
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 12913
                    length: 11
                  pos: 12899
                  length: 35
                pos: 12886
                length: 48
              - type: return_statement
                fields:
                  text: return createComplex(-real, -imaginary);
                children: []
                pos: 12952
                length: 40
              pos: 12876
              length: 122
          children: []
          pos: 12852
          length: 146
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: subtract
              children: []
              pos: 13694
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex rhs
                children: []
                pos: 13703
                length: 11
              pos: 13679
              length: 221
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: isNaN()
                            children: []
                            pos: 13730
                            length: 7
                          right:
                            type: method_invocation
                            fields:
                              text: rhs.isNaN()
                            children: []
                            pos: 13741
                            length: 11
                        children: []
                        pos: 13730
                        length: 22
                    children: []
                    pos: 13729
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 13768
                    length: 11
                  pos: 13754
                  length: 35
                pos: 13726
                length: 63
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real - rhs.getReal(),
                                imaginary - rhs.getImaginary());
                children: []
                pos: 13807
                length: 87
              pos: 13716
              length: 184
          children: []
          pos: 13679
          length: 221
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: acos
              children: []
              pos: 14451
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 14436
              length: 205
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 14472
                        length: 7
                    children: []
                    pos: 14471
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Complex.NaN;
                    children: []
                    pos: 14495
                    length: 19
                  pos: 14481
                  length: 43
                pos: 14468
                length: 56
              - type: return_statement
                fields:
                  text: |-
                    return this.add(this.sqrt1z().multiply(Complex.I)).log()
                                  .multiply(Complex.I.negate());
                children: []
                pos: 14534
                length: 101
              pos: 14458
              length: 183
          children: []
          pos: 14436
          length: 205
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: asin
              children: []
              pos: 15185
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 15170
              length: 200
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 15206
                        length: 7
                    children: []
                    pos: 15205
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Complex.NaN;
                    children: []
                    pos: 15229
                    length: 19
                  pos: 15215
                  length: 43
                pos: 15202
                length: 56
              - type: return_statement
                fields:
                  text: |-
                    return sqrt1z().add(this.multiply(Complex.I)).log()
                                  .multiply(Complex.I.negate());
                children: []
                pos: 15268
                length: 96
              pos: 15192
              length: 178
          children: []
          pos: 15170
          length: 200
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: atan
              children: []
              pos: 15910
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 15895
              length: 243
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 15931
                        length: 7
                    children: []
                    pos: 15930
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Complex.NaN;
                    children: []
                    pos: 15954
                    length: 19
                  pos: 15940
                  length: 43
                pos: 15927
                length: 56
              - type: return_statement
                fields:
                  text: |-
                    return this.add(Complex.I).divide(Complex.I.subtract(this)).log()
                                .multiply(Complex.I.divide(createComplex(2.0, 0.0)));
                children: []
                pos: 16001
                length: 131
              pos: 15917
              length: 221
          children: []
          pos: 15895
          length: 243
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: cos
              children: []
              pos: 17210
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 17195
              length: 233
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 17230
                        length: 7
                    children: []
                    pos: 17229
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Complex.NaN;
                    children: []
                    pos: 17253
                    length: 19
                  pos: 17239
                  length: 43
                pos: 17226
                length: 56
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(Math.cos(real) * MathUtils.cosh(imaginary),
                                -Math.sin(real) * MathUtils.sinh(imaginary));
                children: []
                pos: 17300
                length: 122
              pos: 17216
              length: 212
          children: []
          pos: 17195
          length: 233
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: cosh
              children: []
              pos: 18537
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 18522
              length: 233
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 18558
                        length: 7
                    children: []
                    pos: 18557
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Complex.NaN;
                    children: []
                    pos: 18581
                    length: 19
                  pos: 18567
                  length: 43
                pos: 18554
                length: 56
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(MathUtils.cosh(real) * Math.cos(imaginary),
                                MathUtils.sinh(real) * Math.sin(imaginary));
                children: []
                pos: 18628
                length: 121
              pos: 18544
              length: 211
          children: []
          pos: 18522
          length: 233
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: exp
              children: []
              pos: 19854
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 19839
              length: 236
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 19874
                        length: 7
                    children: []
                    pos: 19873
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Complex.NaN;
                    children: []
                    pos: 19897
                    length: 19
                  pos: 19883
                  length: 43
                pos: 19870
                length: 56
              - type: local_variable_declaration
                fields:
                  text: double expReal = Math.exp(real);
                children: []
                pos: 19944
                length: 32
              - type: return_statement
                fields:
                  text: return createComplex(expReal *  Math.cos(imaginary), expReal
                    * Math.sin(imaginary));
                children: []
                pos: 19985
                length: 84
              pos: 19860
              length: 215
          children: []
          pos: 19839
          length: 236
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: log
              children: []
              pos: 21362
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 21347
              length: 190
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 21382
                        length: 7
                    children: []
                    pos: 21381
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Complex.NaN;
                    children: []
                    pos: 21405
                    length: 19
                  pos: 21391
                  length: 43
                pos: 21378
                length: 56
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(Math.log(abs()),
                                Math.atan2(imaginary, real));
                children: []
                pos: 21444
                length: 79
              pos: 21368
              length: 169
          children: []
          pos: 21347
          length: 190
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: pow
              children: []
              pos: 22254
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex x
                children: []
                pos: 22258
                length: 9
              pos: 22239
              length: 163
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: x
                            children: []
                            pos: 22283
                            length: 1
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 22288
                            length: 4
                        children: []
                        pos: 22283
                        length: 9
                    children: []
                    pos: 22282
                    length: 11
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new NullPointerException();
                    children: []
                    pos: 22308
                    length: 33
                  pos: 22294
                  length: 57
                pos: 22279
                length: 72
              - type: return_statement
                fields:
                  text: return this.log().multiply(x).exp();
                children: []
                pos: 22360
                length: 36
              pos: 22269
              length: 133
          children: []
          pos: 22239
          length: 163
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sin
              children: []
              pos: 23469
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 23454
              length: 232
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 23489
                        length: 7
                    children: []
                    pos: 23488
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Complex.NaN;
                    children: []
                    pos: 23512
                    length: 19
                  pos: 23498
                  length: 43
                pos: 23485
                length: 56
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(Math.sin(real) * MathUtils.cosh(imaginary),
                                Math.cos(real) * MathUtils.sinh(imaginary));
                children: []
                pos: 23559
                length: 121
              pos: 23475
              length: 211
          children: []
          pos: 23454
          length: 232
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sinh
              children: []
              pos: 24791
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 24776
              length: 233
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 24812
                        length: 7
                    children: []
                    pos: 24811
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Complex.NaN;
                    children: []
                    pos: 24835
                    length: 19
                  pos: 24821
                  length: 43
                pos: 24808
                length: 56
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(MathUtils.sinh(real) * Math.cos(imaginary),
                                MathUtils.cosh(real) * Math.sin(imaginary));
                children: []
                pos: 24882
                length: 121
              pos: 24798
              length: 211
          children: []
          pos: 24776
          length: 233
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sqrt
              children: []
              pos: 26432
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 26417
              length: 508
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 26453
                        length: 7
                    children: []
                    pos: 26452
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Complex.NaN;
                    children: []
                    pos: 26476
                    length: 19
                  pos: 26462
                  length: 43
                pos: 26449
                length: 56
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: real
                                children: []
                                pos: 26527
                                length: 4
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 26535
                                length: 3
                            children: []
                            pos: 26527
                            length: 11
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: imaginary
                                children: []
                                pos: 26542
                                length: 9
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 26555
                                length: 3
                            children: []
                            pos: 26542
                            length: 16
                        children: []
                        pos: 26527
                        length: 31
                    children: []
                    pos: 26526
                    length: 33
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return createComplex(0.0, 0.0);
                    children: []
                    pos: 26574
                    length: 31
                  pos: 26560
                  length: 55
                pos: 26523
                length: 92
              - type: local_variable_declaration
                fields:
                  text: double t = Math.sqrt((Math.abs(real) + abs()) / 2.0);
                children: []
                pos: 26633
                length: 53
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: greater_or_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: real
                            children: []
                            pos: 26699
                            length: 4
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: '0.0'
                            children: []
                            pos: 26707
                            length: 3
                        children: []
                        pos: 26699
                        length: 11
                    children: []
                    pos: 26698
                    length: 13
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return createComplex(t, imaginary / (2.0 * t));
                    children: []
                    pos: 26726
                    length: 47
                  pos: 26712
                  length: 71
                pos: 26695
                length: 224
              pos: 26439
              length: 486
          children: []
          pos: 26417
          length: 508
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sqrt1z
              children: []
              pos: 27656
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 27641
              length: 108
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
                children: []
                pos: 27675
                length: 68
              pos: 27665
              length: 84
          children: []
          pos: 27641
          length: 108
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: tan
              children: []
              pos: 28907
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 28892
              length: 339
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 28927
                        length: 7
                    children: []
                    pos: 28926
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Complex.NaN;
                    children: []
                    pos: 28950
                    length: 19
                  pos: 28936
                  length: 43
                pos: 28923
                length: 56
              - type: local_variable_declaration
                fields:
                  text: double real2 = 2.0 * real;
                children: []
                pos: 28997
                length: 26
              - type: local_variable_declaration
                fields:
                  text: double imaginary2 = 2.0 * imaginary;
                children: []
                pos: 29032
                length: 36
              - type: local_variable_declaration
                fields:
                  text: double d = Math.cos(real2) + MathUtils.cosh(imaginary2);
                children: []
                pos: 29077
                length: 56
              - type: return_statement
                fields:
                  text: return createComplex(Math.sin(real2) / d, MathUtils.sinh(imaginary2)
                    / d);
                children: []
                pos: 29151
                length: 74
              pos: 28913
              length: 318
          children: []
          pos: 28892
          length: 339
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: tanh
              children: []
              pos: 30394
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 30379
              length: 340
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 30415
                        length: 7
                    children: []
                    pos: 30414
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Complex.NaN;
                    children: []
                    pos: 30438
                    length: 19
                  pos: 30424
                  length: 43
                pos: 30411
                length: 56
              - type: local_variable_declaration
                fields:
                  text: double real2 = 2.0 * real;
                children: []
                pos: 30485
                length: 26
              - type: local_variable_declaration
                fields:
                  text: double imaginary2 = 2.0 * imaginary;
                children: []
                pos: 30520
                length: 36
              - type: local_variable_declaration
                fields:
                  text: double d = MathUtils.cosh(real2) + Math.cos(imaginary2);
                children: []
                pos: 30565
                length: 56
              - type: return_statement
                fields:
                  text: return createComplex(MathUtils.sinh(real2) / d, Math.sin(imaginary2)
                    / d);
                children: []
                pos: 30639
                length: 74
              pos: 30401
              length: 318
          children: []
          pos: 30379
          length: 340
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createComplex
              children: []
              pos: 30972
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double real
                children: []
                pos: 30986
                length: 11
              pos: 30954
              length: 115
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return new Complex(real, imaginary);
                children: []
                pos: 31027
                length: 36
              pos: 31017
              length: 52
          children: []
          pos: 30954
          length: 115
        pos: 1601
        length: 29470
    children: []
    pos: 1601
    length: 29470
  pos: 0
  length: 31072
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: Complex
        children: []
        pos: 1614
        length: 7
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private static final long serialVersionUID = -6530173849413811929L;
          children: []
          pos: 1697
          length: 67
        - type: field_declaration
          fields:
            text: public static final Complex I = new Complex(0.0, 1.0);
          children: []
          pos: 1847
          length: 54
        - type: field_declaration
          fields:
            text: public static final Complex NaN = new Complex(Double.NaN, Double.NaN);
          children: []
          pos: 1965
          length: 70
        - type: field_declaration
          fields:
            text: public static final Complex INF = new Complex(Double.POSITIVE_INFINITY,
              Double.POSITIVE_INFINITY);
          children: []
          pos: 2096
          length: 98
        - type: field_declaration
          fields:
            text: public static final Complex ONE = new Complex(1.0, 0.0);
          children: []
          pos: 2258
          length: 56
        - type: field_declaration
          fields:
            text: public static final Complex ZERO = new Complex(0.0, 0.0);
          children: []
          pos: 2382
          length: 57
        - type: field_declaration
          fields:
            text: private final double imaginary;
          children: []
          pos: 2493
          length: 31
        - type: field_declaration
          fields:
            text: private final double real;
          children: []
          pos: 2573
          length: 26
        - type: constructor_declaration
          fields:
            text: |-
              public Complex(double real, double imaginary) {
                      super();
                      this.real = real;
                      this.imaginary = imaginary;
                  }
          children: []
          pos: 2775
          length: 132
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: abs
              children: []
              pos: 3288
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 3274
              length: 652
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 3308
                        length: 7
                    children: []
                    pos: 3307
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Double.NaN;
                    children: []
                    pos: 3331
                    length: 18
                  pos: 3317
                  length: 42
                pos: 3304
                length: 55
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isInfinite()
                        children: []
                        pos: 3381
                        length: 12
                    children: []
                    pos: 3380
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Double.POSITIVE_INFINITY;
                    children: []
                    pos: 3409
                    length: 32
                  pos: 3395
                  length: 56
                pos: 3377
                length: 74
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: Math.abs(real)
                            children: []
                            pos: 3473
                            length: 14
                          right:
                            type: method_invocation
                            fields:
                              text: Math.abs(imaginary)
                            children: []
                            pos: 3490
                            length: 19
                        children: []
                        pos: 3473
                        length: 36
                    children: []
                    pos: 3472
                    length: 38
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: imaginary
                                children: []
                                pos: 3529
                                length: 9
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 3542
                                length: 3
                            children: []
                            pos: 3529
                            length: 16
                        children: []
                        pos: 3528
                        length: 18
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return Math.abs(real);
                        children: []
                        pos: 3565
                        length: 22
                      pos: 3547
                      length: 54
                    pos: 3525
                    length: 76
                  - type: local_variable_declaration
                    fields:
                      text: double q = real / imaginary;
                    children: []
                    pos: 3614
                    length: 28
                  - type: return_statement
                    fields:
                      text: return (Math.abs(imaginary) * Math.sqrt(1 + q*q));
                    children: []
                    pos: 3655
                    length: 50
                  pos: 3511
                  length: 204
                pos: 3469
                length: 451
              pos: 3294
              length: 632
          children: []
          pos: 3274
          length: 652
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: add
              children: []
              pos: 4594
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex rhs
                children: []
                pos: 4598
                length: 11
              pos: 4579
              length: 138
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real + rhs.getReal(),
                                imaginary + rhs.getImaginary());
                children: []
                pos: 4624
                length: 87
              pos: 4611
              length: 106
          children: []
          pos: 4579
          length: 138
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: conjugate
              children: []
              pos: 5340
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 5325
              length: 142
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 5366
                        length: 7
                    children: []
                    pos: 5365
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 5389
                    length: 11
                  pos: 5375
                  length: 35
                pos: 5362
                length: 48
              - type: return_statement
                fields:
                  text: return createComplex(real, -imaginary);
                children: []
                pos: 5422
                length: 39
              pos: 5352
              length: 115
          children: []
          pos: 5325
          length: 142
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: divide
              children: []
              pos: 7066
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex rhs
                children: []
                pos: 7073
                length: 11
              pos: 7051
              length: 1023
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: isNaN()
                            children: []
                            pos: 7100
                            length: 7
                          right:
                            type: method_invocation
                            fields:
                              text: rhs.isNaN()
                            children: []
                            pos: 7111
                            length: 11
                        children: []
                        pos: 7100
                        length: 22
                    children: []
                    pos: 7099
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 7138
                    length: 11
                  pos: 7124
                  length: 35
                pos: 7096
                length: 63
              - type: local_variable_declaration
                fields:
                  text: double c = rhs.getReal();
                children: []
                pos: 7169
                length: 25
              - type: local_variable_declaration
                fields:
                  text: double d = rhs.getImaginary();
                children: []
                pos: 7203
                length: 30
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: c
                                children: []
                                pos: 7246
                                length: 1
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 7251
                                length: 3
                            children: []
                            pos: 7246
                            length: 8
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: d
                                children: []
                                pos: 7258
                                length: 1
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 7263
                                length: 3
                            children: []
                            pos: 7258
                            length: 8
                        children: []
                        pos: 7246
                        length: 20
                    children: []
                    pos: 7245
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 7282
                    length: 11
                  pos: 7268
                  length: 35
                pos: 7242
                length: 61
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: rhs.isInfinite()
                            children: []
                            pos: 7325
                            length: 16
                          right:
                            type: unary_expression
                            fields:
                              text: "!isInfinite()"
                            children: []
                            pos: 7345
                            length: 13
                        children: []
                        pos: 7325
                        length: 33
                    children: []
                    pos: 7324
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return ZERO;
                    children: []
                    pos: 7374
                    length: 12
                  pos: 7360
                  length: 36
                pos: 7321
                length: 75
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: Math.abs(c)
                            children: []
                            pos: 7410
                            length: 11
                          right:
                            type: method_invocation
                            fields:
                              text: Math.abs(d)
                            children: []
                            pos: 7424
                            length: 11
                        children: []
                        pos: 7410
                        length: 25
                    children: []
                    pos: 7409
                    length: 27
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: d
                                children: []
                                pos: 7455
                                length: 1
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 7460
                                length: 3
                            children: []
                            pos: 7455
                            length: 8
                        children: []
                        pos: 7454
                        length: 10
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return createComplex(real/c, imaginary/c);
                        children: []
                        pos: 7483
                        length: 42
                      pos: 7465
                      length: 74
                    pos: 7451
                    length: 88
                  - type: local_variable_declaration
                    fields:
                      text: double q = c / d;
                    children: []
                    pos: 7552
                    length: 17
                  - type: local_variable_declaration
                    fields:
                      text: double denominator = c * q + d;
                    children: []
                    pos: 7582
                    length: 31
                  - type: return_statement
                    fields:
                      text: |-
                        return createComplex((real * q + imaginary) / denominator,
                                        (imaginary * q - real) / denominator);
                    children: []
                    pos: 7626
                    length: 113
                  pos: 7437
                  length: 312
                pos: 7406
                length: 662
              pos: 7086
              length: 988
          children: []
          pos: 7051
          length: 1023
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: equals
              children: []
              pos: 8892
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Object other
                children: []
                pos: 8899
                length: 12
              pos: 8877
              length: 751
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: boolean ret;
                children: []
                pos: 8923
                length: 12
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: this
                            fields: {}
                            children: []
                            pos: 8957
                            length: 4
                          right:
                            type: identifier
                            fields:
                              text: other
                            children: []
                            pos: 8965
                            length: 5
                        children: []
                        pos: 8957
                        length: 13
                    children: []
                    pos: 8956
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ret = true;
                    children: []
                    pos: 8987
                    length: 11
                  pos: 8972
                  length: 36
                pos: 8953
                length: 642
              - type: return_statement
                fields:
                  text: return ret;
                children: []
                pos: 9611
                length: 11
              pos: 8913
              length: 715
          children: []
          pos: 8877
          length: 751
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: hashCode
              children: []
              pos: 9830
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 9819
              length: 174
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 9855
                        length: 7
                    children: []
                    pos: 9854
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return 7;
                    children: []
                    pos: 9878
                    length: 9
                  pos: 9864
                  length: 33
                pos: 9851
                length: 46
              - type: return_statement
                fields:
                  text: "return 37 * (17 * MathUtils.hash(imaginary) + \n            MathUtils.hash(real));"
                children: []
                pos: 9906
                length: 81
              pos: 9841
              length: 152
          children: []
          pos: 9819
          length: 174
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getImaginary
              children: []
              pos: 10104
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 10090
              length: 62
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return imaginary;
                children: []
                pos: 10129
                length: 17
              pos: 10119
              length: 33
          children: []
          pos: 10090
          length: 62
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getReal
              children: []
              pos: 10253
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 10239
              length: 52
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return real;
                children: []
                pos: 10273
                length: 12
              pos: 10263
              length: 28
          children: []
          pos: 10239
          length: 52
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isNaN
              children: []
              pos: 10536
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 10521
              length: 100
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return Double.isNaN(real) || Double.isNaN(imaginary);
                children: []
                pos: 10554
                length: 53
              pos: 10544
              length: 77
          children: []
          pos: 10521
          length: 100
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isInfinite
              children: []
              pos: 11043
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 11028
              length: 138
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: "return !isNaN() && \n        (Double.isInfinite(real) ||
                    Double.isInfinite(imaginary));"
                children: []
                pos: 11066
                length: 86
              pos: 11056
              length: 110
          children: []
          pos: 11028
          length: 138
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: multiply
              children: []
              pos: 12181
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex rhs
                children: []
                pos: 12190
                length: 11
              pos: 12166
              length: 515
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: isNaN()
                            children: []
                            pos: 12217
                            length: 7
                          right:
                            type: method_invocation
                            fields:
                              text: rhs.isNaN()
                            children: []
                            pos: 12228
                            length: 11
                        children: []
                        pos: 12217
                        length: 22
                    children: []
                    pos: 12216
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 12255
                    length: 11
                  pos: 12241
                  length: 35
                pos: 12213
                length: 63
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: or
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: Double.isInfinite(real)
                                    children: []
                                    pos: 12289
                                    length: 23
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: Double.isInfinite(imaginary)
                                    children: []
                                    pos: 12316
                                    length: 28
                                children: []
                                pos: 12289
                                length: 55
                              right:
                                type: method_invocation
                                fields:
                                  text: Double.isInfinite(rhs.real)
                                children: []
                                pos: 12360
                                length: 27
                            children: []
                            pos: 12289
                            length: 98
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isInfinite(rhs.imaginary)
                            children: []
                            pos: 12390
                            length: 32
                        children: []
                        pos: 12289
                        length: 133
                    children: []
                    pos: 12288
                    length: 135
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return INF;
                    children: []
                    pos: 12518
                    length: 11
                  pos: 12424
                  length: 115
                pos: 12285
                length: 254
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real * rhs.real - imaginary * rhs.imaginary,
                                    real * rhs.imaginary + imaginary * rhs.real);
                children: []
                pos: 12548
                length: 127
              pos: 12203
              length: 478
          children: []
          pos: 12166
          length: 515
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: negate
              children: []
              pos: 12989
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 12974
              length: 146
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 13012
                        length: 7
                    children: []
                    pos: 13011
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 13035
                    length: 11
                  pos: 13021
                  length: 35
                pos: 13008
                length: 48
              - type: return_statement
                fields:
                  text: return createComplex(-real, -imaginary);
                children: []
                pos: 13074
                length: 40
              pos: 12998
              length: 122
          children: []
          pos: 12974
          length: 146
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: subtract
              children: []
              pos: 13816
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex rhs
                children: []
                pos: 13825
                length: 11
              pos: 13801
              length: 221
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: isNaN()
                            children: []
                            pos: 13852
                            length: 7
                          right:
                            type: method_invocation
                            fields:
                              text: rhs.isNaN()
                            children: []
                            pos: 13863
                            length: 11
                        children: []
                        pos: 13852
                        length: 22
                    children: []
                    pos: 13851
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 13890
                    length: 11
                  pos: 13876
                  length: 35
                pos: 13848
                length: 63
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real - rhs.getReal(),
                                imaginary - rhs.getImaginary());
                children: []
                pos: 13929
                length: 87
              pos: 13838
              length: 184
          children: []
          pos: 13801
          length: 221
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: acos
              children: []
              pos: 14573
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 14558
              length: 205
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 14594
                        length: 7
                    children: []
                    pos: 14593
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Complex.NaN;
                    children: []
                    pos: 14617
                    length: 19
                  pos: 14603
                  length: 43
                pos: 14590
                length: 56
              - type: return_statement
                fields:
                  text: |-
                    return this.add(this.sqrt1z().multiply(Complex.I)).log()
                                  .multiply(Complex.I.negate());
                children: []
                pos: 14656
                length: 101
              pos: 14580
              length: 183
          children: []
          pos: 14558
          length: 205
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: asin
              children: []
              pos: 15307
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 15292
              length: 200
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 15328
                        length: 7
                    children: []
                    pos: 15327
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Complex.NaN;
                    children: []
                    pos: 15351
                    length: 19
                  pos: 15337
                  length: 43
                pos: 15324
                length: 56
              - type: return_statement
                fields:
                  text: |-
                    return sqrt1z().add(this.multiply(Complex.I)).log()
                                  .multiply(Complex.I.negate());
                children: []
                pos: 15390
                length: 96
              pos: 15314
              length: 178
          children: []
          pos: 15292
          length: 200
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: atan
              children: []
              pos: 16032
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 16017
              length: 243
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 16053
                        length: 7
                    children: []
                    pos: 16052
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Complex.NaN;
                    children: []
                    pos: 16076
                    length: 19
                  pos: 16062
                  length: 43
                pos: 16049
                length: 56
              - type: return_statement
                fields:
                  text: |-
                    return this.add(Complex.I).divide(Complex.I.subtract(this)).log()
                                .multiply(Complex.I.divide(createComplex(2.0, 0.0)));
                children: []
                pos: 16123
                length: 131
              pos: 16039
              length: 221
          children: []
          pos: 16017
          length: 243
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: cos
              children: []
              pos: 17332
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 17317
              length: 233
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 17352
                        length: 7
                    children: []
                    pos: 17351
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Complex.NaN;
                    children: []
                    pos: 17375
                    length: 19
                  pos: 17361
                  length: 43
                pos: 17348
                length: 56
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(Math.cos(real) * MathUtils.cosh(imaginary),
                                -Math.sin(real) * MathUtils.sinh(imaginary));
                children: []
                pos: 17422
                length: 122
              pos: 17338
              length: 212
          children: []
          pos: 17317
          length: 233
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: cosh
              children: []
              pos: 18659
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 18644
              length: 233
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 18680
                        length: 7
                    children: []
                    pos: 18679
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Complex.NaN;
                    children: []
                    pos: 18703
                    length: 19
                  pos: 18689
                  length: 43
                pos: 18676
                length: 56
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(MathUtils.cosh(real) * Math.cos(imaginary),
                                MathUtils.sinh(real) * Math.sin(imaginary));
                children: []
                pos: 18750
                length: 121
              pos: 18666
              length: 211
          children: []
          pos: 18644
          length: 233
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: exp
              children: []
              pos: 19976
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 19961
              length: 236
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 19996
                        length: 7
                    children: []
                    pos: 19995
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Complex.NaN;
                    children: []
                    pos: 20019
                    length: 19
                  pos: 20005
                  length: 43
                pos: 19992
                length: 56
              - type: local_variable_declaration
                fields:
                  text: double expReal = Math.exp(real);
                children: []
                pos: 20066
                length: 32
              - type: return_statement
                fields:
                  text: return createComplex(expReal *  Math.cos(imaginary), expReal
                    * Math.sin(imaginary));
                children: []
                pos: 20107
                length: 84
              pos: 19982
              length: 215
          children: []
          pos: 19961
          length: 236
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: log
              children: []
              pos: 21484
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 21469
              length: 190
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 21504
                        length: 7
                    children: []
                    pos: 21503
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Complex.NaN;
                    children: []
                    pos: 21527
                    length: 19
                  pos: 21513
                  length: 43
                pos: 21500
                length: 56
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(Math.log(abs()),
                                Math.atan2(imaginary, real));
                children: []
                pos: 21566
                length: 79
              pos: 21490
              length: 169
          children: []
          pos: 21469
          length: 190
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: pow
              children: []
              pos: 22376
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex x
                children: []
                pos: 22380
                length: 9
              pos: 22361
              length: 163
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: x
                            children: []
                            pos: 22405
                            length: 1
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 22410
                            length: 4
                        children: []
                        pos: 22405
                        length: 9
                    children: []
                    pos: 22404
                    length: 11
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new NullPointerException();
                    children: []
                    pos: 22430
                    length: 33
                  pos: 22416
                  length: 57
                pos: 22401
                length: 72
              - type: return_statement
                fields:
                  text: return this.log().multiply(x).exp();
                children: []
                pos: 22482
                length: 36
              pos: 22391
              length: 133
          children: []
          pos: 22361
          length: 163
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sin
              children: []
              pos: 23591
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 23576
              length: 232
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 23611
                        length: 7
                    children: []
                    pos: 23610
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Complex.NaN;
                    children: []
                    pos: 23634
                    length: 19
                  pos: 23620
                  length: 43
                pos: 23607
                length: 56
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(Math.sin(real) * MathUtils.cosh(imaginary),
                                Math.cos(real) * MathUtils.sinh(imaginary));
                children: []
                pos: 23681
                length: 121
              pos: 23597
              length: 211
          children: []
          pos: 23576
          length: 232
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sinh
              children: []
              pos: 24913
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 24898
              length: 233
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 24934
                        length: 7
                    children: []
                    pos: 24933
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Complex.NaN;
                    children: []
                    pos: 24957
                    length: 19
                  pos: 24943
                  length: 43
                pos: 24930
                length: 56
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(MathUtils.sinh(real) * Math.cos(imaginary),
                                MathUtils.cosh(real) * Math.sin(imaginary));
                children: []
                pos: 25004
                length: 121
              pos: 24920
              length: 211
          children: []
          pos: 24898
          length: 233
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sqrt
              children: []
              pos: 26554
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 26539
              length: 508
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 26575
                        length: 7
                    children: []
                    pos: 26574
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Complex.NaN;
                    children: []
                    pos: 26598
                    length: 19
                  pos: 26584
                  length: 43
                pos: 26571
                length: 56
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: real
                                children: []
                                pos: 26649
                                length: 4
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 26657
                                length: 3
                            children: []
                            pos: 26649
                            length: 11
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: imaginary
                                children: []
                                pos: 26664
                                length: 9
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 26677
                                length: 3
                            children: []
                            pos: 26664
                            length: 16
                        children: []
                        pos: 26649
                        length: 31
                    children: []
                    pos: 26648
                    length: 33
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return createComplex(0.0, 0.0);
                    children: []
                    pos: 26696
                    length: 31
                  pos: 26682
                  length: 55
                pos: 26645
                length: 92
              - type: local_variable_declaration
                fields:
                  text: double t = Math.sqrt((Math.abs(real) + abs()) / 2.0);
                children: []
                pos: 26755
                length: 53
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: greater_or_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: real
                            children: []
                            pos: 26821
                            length: 4
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: '0.0'
                            children: []
                            pos: 26829
                            length: 3
                        children: []
                        pos: 26821
                        length: 11
                    children: []
                    pos: 26820
                    length: 13
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return createComplex(t, imaginary / (2.0 * t));
                    children: []
                    pos: 26848
                    length: 47
                  pos: 26834
                  length: 71
                pos: 26817
                length: 224
              pos: 26561
              length: 486
          children: []
          pos: 26539
          length: 508
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sqrt1z
              children: []
              pos: 27778
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 27763
              length: 108
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
                children: []
                pos: 27797
                length: 68
              pos: 27787
              length: 84
          children: []
          pos: 27763
          length: 108
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: tan
              children: []
              pos: 29029
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 29014
              length: 339
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 29049
                        length: 7
                    children: []
                    pos: 29048
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Complex.NaN;
                    children: []
                    pos: 29072
                    length: 19
                  pos: 29058
                  length: 43
                pos: 29045
                length: 56
              - type: local_variable_declaration
                fields:
                  text: double real2 = 2.0 * real;
                children: []
                pos: 29119
                length: 26
              - type: local_variable_declaration
                fields:
                  text: double imaginary2 = 2.0 * imaginary;
                children: []
                pos: 29154
                length: 36
              - type: local_variable_declaration
                fields:
                  text: double d = Math.cos(real2) + MathUtils.cosh(imaginary2);
                children: []
                pos: 29199
                length: 56
              - type: return_statement
                fields:
                  text: return createComplex(Math.sin(real2) / d, MathUtils.sinh(imaginary2)
                    / d);
                children: []
                pos: 29273
                length: 74
              pos: 29035
              length: 318
          children: []
          pos: 29014
          length: 339
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: tanh
              children: []
              pos: 30516
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 30501
              length: 340
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isNaN()
                        children: []
                        pos: 30537
                        length: 7
                    children: []
                    pos: 30536
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Complex.NaN;
                    children: []
                    pos: 30560
                    length: 19
                  pos: 30546
                  length: 43
                pos: 30533
                length: 56
              - type: local_variable_declaration
                fields:
                  text: double real2 = 2.0 * real;
                children: []
                pos: 30607
                length: 26
              - type: local_variable_declaration
                fields:
                  text: double imaginary2 = 2.0 * imaginary;
                children: []
                pos: 30642
                length: 36
              - type: local_variable_declaration
                fields:
                  text: double d = MathUtils.cosh(real2) + Math.cos(imaginary2);
                children: []
                pos: 30687
                length: 56
              - type: return_statement
                fields:
                  text: return createComplex(MathUtils.sinh(real2) / d, Math.sin(imaginary2)
                    / d);
                children: []
                pos: 30761
                length: 74
              pos: 30523
              length: 318
          children: []
          pos: 30501
          length: 340
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createComplex
              children: []
              pos: 31094
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double real
                children: []
                pos: 31108
                length: 11
              pos: 31076
              length: 115
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return new Complex(real, imaginary);
                children: []
                pos: 31149
                length: 36
              pos: 31139
              length: 52
          children: []
          pos: 31076
          length: 115
        pos: 1601
        length: 29592
    children: []
    pos: 1601
    length: 29592
  pos: 0
  length: 31194
text_diff: "--- before\n+++ after\n@@ -255,7 +255,7 @@\n                 if (rhs.isNaN())
  {\n                     ret = this.isNaN();\n                 } else {\n-                    ret
  = (real == rhs.real) && (imaginary == rhs.imaginary); \n+                    ret
  = (Double.doubleToRawLongBits(real) == Double.doubleToRawLongBits(rhs.getReal()))
  && (Double.doubleToRawLongBits(imaginary) == Double.doubleToRawLongBits(rhs.getImaginary()));
  \n                 }\n             } catch (ClassCastException ex) {\n                 //
  ignore exception\n"
tree_diff: ''
