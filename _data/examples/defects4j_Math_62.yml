---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: MultiStartUnivariateRealOptimizer
        children: []
        pos: 1923
        length: 33
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private final BaseUnivariateRealOptimizer<FUNC> optimizer;
          children: []
          pos: 2092
          length: 58
        - type: field_declaration
          fields:
            text: private int maxEvaluations;
          children: []
          pos: 2205
          length: 27
        - type: field_declaration
          fields:
            text: private int totalEvaluations;
          children: []
          pos: 2304
          length: 29
        - type: field_declaration
          fields:
            text: private int starts;
          children: []
          pos: 2373
          length: 19
        - type: field_declaration
          fields:
            text: private RandomGenerator generator;
          children: []
          pos: 2442
          length: 34
        - type: field_declaration
          fields:
            text: private UnivariateRealPointValuePair[] optima;
          children: []
          pos: 2506
          length: 46
        - type: constructor_declaration
          fields:
            text: |-
              public MultiStartUnivariateRealOptimizer(final BaseUnivariateRealOptimizer<FUNC> optimizer,
                                                           final int starts,
                                                           final RandomGenerator generator) {
                      this.optimizer = optimizer;
                      this.starts = starts;
                      this.generator = generator;
                  }
          children: []
          pos: 2919
          length: 342
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: setConvergenceChecker
              children: []
              pos: 3316
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: ConvergenceChecker<UnivariateRealPointValuePair> checker
                children: []
                pos: 3338
                length: 56
              pos: 3304
              length: 149
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: optimizer.setConvergenceChecker(checker);
                children: []
                pos: 3406
                length: 41
              pos: 3396
              length: 57
          children: []
          pos: 3304
          length: 149
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getConvergenceChecker
              children: []
              pos: 3552
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 3496
              length: 137
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return optimizer.getConvergenceChecker();
                children: []
                pos: 3586
                length: 41
              pos: 3576
              length: 57
          children: []
          pos: 3496
          length: 137
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getMaxEvaluations
              children: []
              pos: 3675
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 3664
              length: 69
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return maxEvaluations;
                children: []
                pos: 3705
                length: 22
              pos: 3695
              length: 38
          children: []
          pos: 3664
          length: 69
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getEvaluations
              children: []
              pos: 3775
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 3764
              length: 68
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return totalEvaluations;
                children: []
                pos: 3802
                length: 24
              pos: 3792
              length: 40
          children: []
          pos: 3764
          length: 68
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: setMaxEvaluations
              children: []
              pos: 3875
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int maxEvaluations
                children: []
                pos: 3893
                length: 18
              pos: 3863
              length: 156
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: this.maxEvaluations = maxEvaluations;
                children: []
                pos: 3923
                length: 37
              - type: expression_statement
                fields:
                  text: optimizer.setMaxEvaluations(maxEvaluations);
                children: []
                pos: 3969
                length: 44
              pos: 3913
              length: 106
          children: []
          pos: 3863
          length: 156
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getOptima
              children: []
              pos: 5478
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 5440
              length: 219
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: optima
                            children: []
                            pos: 5504
                            length: 6
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 5514
                            length: 4
                        children: []
                        pos: 5504
                        length: 14
                    children: []
                    pos: 5503
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new MathIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET);
                    children: []
                    pos: 5534
                    length: 78
                  pos: 5520
                  length: 102
                pos: 5500
                length: 122
              - type: return_statement
                fields:
                  text: return optima.clone();
                children: []
                pos: 5631
                length: 22
              pos: 5490
              length: 169
          children: []
          pos: 5440
          length: 219
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: optimize
              children: []
              pos: 5726
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final FUNC f
                children: []
                pos: 5735
                length: 12
              pos: 5690
              length: 333
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return optimize(f, goal, min, max, min + 0.5 * (max - min));
                children: []
                pos: 5957
                length: 60
              pos: 5947
              length: 76
          children: []
          pos: 5690
          length: 333
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: optimize
              children: []
              pos: 6090
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final FUNC f
                children: []
                pos: 6099
                length: 12
              pos: 6054
              length: 1358
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: optima = new UnivariateRealPointValuePair[starts];
                children: []
                pos: 6346
                length: 50
              - type: expression_statement
                fields:
                  text: totalEvaluations = 0;
                children: []
                pos: 6405
                length: 21
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < starts; ++i) {
                                try {
                                    final double s = (i == 0) ? startValue : min + generator.nextDouble() * (max - min);
                                    optima[i] = optimizer.optimize(f, goal, min, max, s);
                                } catch (FunctionEvaluationException fee) {
                                    optima[i] = null;
                                } catch (ConvergenceException ce) {
                                    optima[i] = null;
                                }

                                final int usedEvaluations = optimizer.getEvaluations();
                                optimizer.setMaxEvaluations(optimizer.getMaxEvaluations() - usedEvaluations);
                                totalEvaluations += usedEvaluations;
                            }
                children: []
                pos: 6465
                length: 627
              - type: expression_statement
                fields:
                  text: sortPairs(goal);
                children: []
                pos: 7102
                length: 16
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: array_access
                            fields:
                              array:
                                type: identifier
                                fields:
                                  text: optima
                                children: []
                                pos: 7132
                                length: 6
                              index:
                                type: decimal_integer_literal
                                fields:
                                  text: '0'
                                children: []
                                pos: 7139
                                length: 1
                            children: []
                            pos: 7132
                            length: 9
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 7145
                            length: 4
                        children: []
                        pos: 7132
                        length: 17
                    children: []
                    pos: 7131
                    length: 19
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: |-
                        throw new ConvergenceException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,
                                                                   starts);
                    children: []
                    pos: 7165
                    length: 136
                  pos: 7151
                  length: 160
                pos: 7128
                length: 183
              - type: return_statement
                fields:
                  text: return optima[0];
                children: []
                pos: 7389
                length: 17
              pos: 6336
              length: 1076
          children: []
          pos: 6054
          length: 1358
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sortPairs
              children: []
              pos: 7562
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final GoalType goal
                children: []
                pos: 7572
                length: 19
              pos: 7549
              length: 741
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    Arrays.sort(optima, new Comparator<UnivariateRealPointValuePair>() {
                                    public int compare(final UnivariateRealPointValuePair o1,
                                                       final UnivariateRealPointValuePair o2) {
                                        if (o1 == null) {
                                            return (o2 == null) ? 0 : 1;
                                        } else if (o2 == null) {
                                            return -1;
                                        }
                                        final double v1 = o1.getValue();
                                        final double v2 = o2.getValue();
                                        return (goal == GoalType.MINIMIZE) ?
                                            Double.compare(v1, v2) : Double.compare(v2, v1);
                                    }
                                });
                children: []
                pos: 7603
                length: 681
              pos: 7593
              length: 697
          children: []
          pos: 7549
          length: 741
        pos: 1910
        length: 6382
    children: []
    pos: 1910
    length: 6382
  pos: 0
  length: 8293
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: MultiStartUnivariateRealOptimizer
        children: []
        pos: 1923
        length: 33
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private final BaseUnivariateRealOptimizer<FUNC> optimizer;
          children: []
          pos: 2092
          length: 58
        - type: field_declaration
          fields:
            text: private int maxEvaluations;
          children: []
          pos: 2205
          length: 27
        - type: field_declaration
          fields:
            text: private int totalEvaluations;
          children: []
          pos: 2304
          length: 29
        - type: field_declaration
          fields:
            text: private int starts;
          children: []
          pos: 2373
          length: 19
        - type: field_declaration
          fields:
            text: private RandomGenerator generator;
          children: []
          pos: 2442
          length: 34
        - type: field_declaration
          fields:
            text: private UnivariateRealPointValuePair[] optima;
          children: []
          pos: 2506
          length: 46
        - type: constructor_declaration
          fields:
            text: |-
              public MultiStartUnivariateRealOptimizer(final BaseUnivariateRealOptimizer<FUNC> optimizer,
                                                           final int starts,
                                                           final RandomGenerator generator) {
                      this.optimizer = optimizer;
                      this.starts = starts;
                      this.generator = generator;
                  }
          children: []
          pos: 2919
          length: 342
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: setConvergenceChecker
              children: []
              pos: 3316
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: ConvergenceChecker<UnivariateRealPointValuePair> checker
                children: []
                pos: 3338
                length: 56
              pos: 3304
              length: 149
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: optimizer.setConvergenceChecker(checker);
                children: []
                pos: 3406
                length: 41
              pos: 3396
              length: 57
          children: []
          pos: 3304
          length: 149
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getConvergenceChecker
              children: []
              pos: 3552
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 3496
              length: 137
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return optimizer.getConvergenceChecker();
                children: []
                pos: 3586
                length: 41
              pos: 3576
              length: 57
          children: []
          pos: 3496
          length: 137
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getMaxEvaluations
              children: []
              pos: 3675
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 3664
              length: 69
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return maxEvaluations;
                children: []
                pos: 3705
                length: 22
              pos: 3695
              length: 38
          children: []
          pos: 3664
          length: 69
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getEvaluations
              children: []
              pos: 3775
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 3764
              length: 68
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return totalEvaluations;
                children: []
                pos: 3802
                length: 24
              pos: 3792
              length: 40
          children: []
          pos: 3764
          length: 68
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: setMaxEvaluations
              children: []
              pos: 3875
              length: 17
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int maxEvaluations
                children: []
                pos: 3893
                length: 18
              pos: 3863
              length: 156
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: this.maxEvaluations = maxEvaluations;
                children: []
                pos: 3923
                length: 37
              - type: expression_statement
                fields:
                  text: optimizer.setMaxEvaluations(maxEvaluations);
                children: []
                pos: 3969
                length: 44
              pos: 3913
              length: 106
          children: []
          pos: 3863
          length: 156
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getOptima
              children: []
              pos: 5478
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 5440
              length: 219
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: optima
                            children: []
                            pos: 5504
                            length: 6
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 5514
                            length: 4
                        children: []
                        pos: 5504
                        length: 14
                    children: []
                    pos: 5503
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new MathIllegalStateException(LocalizedFormats.NO_OPTIMUM_COMPUTED_YET);
                    children: []
                    pos: 5534
                    length: 78
                  pos: 5520
                  length: 102
                pos: 5500
                length: 122
              - type: return_statement
                fields:
                  text: return optima.clone();
                children: []
                pos: 5631
                length: 22
              pos: 5490
              length: 169
          children: []
          pos: 5440
          length: 219
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: optimize
              children: []
              pos: 5726
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final FUNC f
                children: []
                pos: 5735
                length: 12
              pos: 5690
              length: 311
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return optimize(f, goal, min, max, 0);
                children: []
                pos: 5957
                length: 38
              pos: 5947
              length: 54
          children: []
          pos: 5690
          length: 311
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: optimize
              children: []
              pos: 6068
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final FUNC f
                children: []
                pos: 6077
                length: 12
              pos: 6032
              length: 1502
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: optima = new UnivariateRealPointValuePair[starts];
                children: []
                pos: 6324
                length: 50
              - type: expression_statement
                fields:
                  text: totalEvaluations = 0;
                children: []
                pos: 6383
                length: 21
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < starts; ++i) {
                                try {
                                    final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min);
                                    final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min);
                                    optima[i] = optimizer.optimize(f, goal, FastMath.min(bound1, bound2), FastMath.max(bound1, bound2));
                                } catch (FunctionEvaluationException fee) {
                                    optima[i] = null;
                                } catch (ConvergenceException ce) {
                                    optima[i] = null;
                                }

                                final int usedEvaluations = optimizer.getEvaluations();
                                optimizer.setMaxEvaluations(optimizer.getMaxEvaluations() - usedEvaluations);
                                totalEvaluations += usedEvaluations;
                            }
                children: []
                pos: 6443
                length: 771
              - type: expression_statement
                fields:
                  text: sortPairs(goal);
                children: []
                pos: 7224
                length: 16
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: array_access
                            fields:
                              array:
                                type: identifier
                                fields:
                                  text: optima
                                children: []
                                pos: 7254
                                length: 6
                              index:
                                type: decimal_integer_literal
                                fields:
                                  text: '0'
                                children: []
                                pos: 7261
                                length: 1
                            children: []
                            pos: 7254
                            length: 9
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 7267
                            length: 4
                        children: []
                        pos: 7254
                        length: 17
                    children: []
                    pos: 7253
                    length: 19
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: |-
                        throw new ConvergenceException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,
                                                                   starts);
                    children: []
                    pos: 7287
                    length: 136
                  pos: 7273
                  length: 160
                pos: 7250
                length: 183
              - type: return_statement
                fields:
                  text: return optima[0];
                children: []
                pos: 7511
                length: 17
              pos: 6314
              length: 1220
          children: []
          pos: 6032
          length: 1502
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sortPairs
              children: []
              pos: 7684
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final GoalType goal
                children: []
                pos: 7694
                length: 19
              pos: 7671
              length: 741
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    Arrays.sort(optima, new Comparator<UnivariateRealPointValuePair>() {
                                    public int compare(final UnivariateRealPointValuePair o1,
                                                       final UnivariateRealPointValuePair o2) {
                                        if (o1 == null) {
                                            return (o2 == null) ? 0 : 1;
                                        } else if (o2 == null) {
                                            return -1;
                                        }
                                        final double v1 = o1.getValue();
                                        final double v2 = o2.getValue();
                                        return (goal == GoalType.MINIMIZE) ?
                                            Double.compare(v1, v2) : Double.compare(v2, v1);
                                    }
                                });
                children: []
                pos: 7725
                length: 681
              pos: 7715
              length: 697
          children: []
          pos: 7671
          length: 741
        pos: 1910
        length: 6504
    children: []
    pos: 1910
    length: 6504
  pos: 0
  length: 8415
text_diff: "--- before\n+++ after\n@@ -143,7 +143,7 @@\n                                                  final
  GoalType goal,\n                                                  final double min,
  final double max)\n         throws FunctionEvaluationException {\n-        return
  optimize(f, goal, min, max, min + 0.5 * (max - min));\n+        return optimize(f,
  goal, min, max, 0);\n     }\n \n     /** {@inheritDoc} */\n@@ -157,8 +157,9 @@\n
  \        // Multi-start loop.\n         for (int i = 0; i < starts; ++i) {\n             try
  {\n-                final double s = (i == 0) ? startValue : min + generator.nextDouble()
  * (max - min);\n-                optima[i] = optimizer.optimize(f, goal, min, max,
  s);\n+                final double bound1 = (i == 0) ? min : min + generator.nextDouble()
  * (max - min);\n+                final double bound2 = (i == 0) ? max : min + generator.nextDouble()
  * (max - min);\n+                optima[i] = optimizer.optimize(f, goal, FastMath.min(bound1,
  bound2), FastMath.max(bound1, bound2));\n             } catch (FunctionEvaluationException
  fee) {\n                 optima[i] = null;\n             } catch (ConvergenceException
  ce) {\n"
tree_diff: |+
  New cluster:
  UPDATE from return optimize(f, goal, min, max, min + 0.5 * (max - min)); to return optimize(f, goal, min, max, 0);
  ------------
  ===
  update-node
  ---
  return_statement: return optimize(f, goal, min, max, min + 0.5 * (max - min)); [5957,6017]
  replace return optimize(f, goal, min, max, min + 0.5 * (max - min)); by return optimize(f, goal, min, max, 0);

  New cluster:
  UPDATE from for (int i = 0; i < starts; ++i) {
              try {
                  final double s = (i == 0) ? startValue : min + generator.nextDouble() * (max - min);
                  optima[i] = optimizer.optimize(f, goal, min, max, s);
              } catch (FunctionEvaluationException fee) {
                  optima[i] = null;
              } catch (ConvergenceException ce) {
                  optima[i] = null;
              }

              final int usedEvaluations = optimizer.getEvaluations();
              optimizer.setMaxEvaluations(optimizer.getMaxEvaluations() - usedEvaluations);
              totalEvaluations += usedEvaluations;
          } to for (int i = 0; i < starts; ++i) {
              try {
                  final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min);
                  final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min);
                  optima[i] = optimizer.optimize(f, goal, FastMath.min(bound1, bound2), FastMath.max(bound1, bound2));
              } catch (FunctionEvaluationException fee) {
                  optima[i] = null;
              } catch (ConvergenceException ce) {
                  optima[i] = null;
              }

              final int usedEvaluations = optimizer.getEvaluations();
              optimizer.setMaxEvaluations(optimizer.getMaxEvaluations() - usedEvaluations);
              totalEvaluations += usedEvaluations;
          }
  ------------
  ===
  update-node
  ---
  for_statement: for (int i = 0; i < starts; ++i) {
              try {
                  final double s = (i == 0) ? startValue : min + generator.nextDouble() * (max - min);
                  optima[i] = optimizer.optimize(f, goal, min, max, s);
              } catch (FunctionEvaluationException fee) {
                  optima[i] = null;
              } catch (ConvergenceException ce) {
                  optima[i] = null;
              }

              final int usedEvaluations = optimizer.getEvaluations();
              optimizer.setMaxEvaluations(optimizer.getMaxEvaluations() - usedEvaluations);
              totalEvaluations += usedEvaluations;
          } [6465,7092]
  replace for (int i = 0; i < starts; ++i) {
              try {
                  final double s = (i == 0) ? startValue : min + generator.nextDouble() * (max - min);
                  optima[i] = optimizer.optimize(f, goal, min, max, s);
              } catch (FunctionEvaluationException fee) {
                  optima[i] = null;
              } catch (ConvergenceException ce) {
                  optima[i] = null;
              }

              final int usedEvaluations = optimizer.getEvaluations();
              optimizer.setMaxEvaluations(optimizer.getMaxEvaluations() - usedEvaluations);
              totalEvaluations += usedEvaluations;
          } by for (int i = 0; i < starts; ++i) {
              try {
                  final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min);
                  final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min);
                  optima[i] = optimizer.optimize(f, goal, FastMath.min(bound1, bound2), FastMath.max(bound1, bound2));
              } catch (FunctionEvaluationException fee) {
                  optima[i] = null;
              } catch (ConvergenceException ce) {
                  optima[i] = null;
              }

              final int usedEvaluations = optimizer.getEvaluations();
              optimizer.setMaxEvaluations(optimizer.getMaxEvaluations() - usedEvaluations);
              totalEvaluations += usedEvaluations;
          }

...
