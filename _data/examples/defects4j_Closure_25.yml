---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: TypeInference
        children: []
        pos: 2598
        length: 13
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType TEMPLATE_TYPE_NOT_OBJECT_TYPE =
                    DiagnosticType.warning(
                    "JSC_TEMPLATE_TYPE_NOT_OBJECT_TYPE",
                    "The template type must be an object type.\nActual: {0}");
          children: []
          pos: 2694
          length: 197
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType TEMPLATE_TYPE_OF_THIS_EXPECTED =
                    DiagnosticType.warning(
                    "JSC_TEMPLATE_TYPE_OF_THIS_EXPECTED",
                    "A function type with the template type as the type of this must be a " +
                    "parameter type");
          children: []
          pos: 2895
          length: 239
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType FUNCTION_LITERAL_UNDEFINED_THIS =
                  DiagnosticType.warning(
                      "JSC_FUNCTION_LITERAL_UNDEFINED_THIS",
                      "Function literal argument refers to undefined this argument");
          children: []
          pos: 3138
          length: 208
        - type: field_declaration
          fields:
            text: private final AbstractCompiler compiler;
          children: []
          pos: 3350
          length: 40
        - type: field_declaration
          fields:
            text: private final JSTypeRegistry registry;
          children: []
          pos: 3393
          length: 38
        - type: field_declaration
          fields:
            text: private final ReverseAbstractInterpreter reverseInterpreter;
          children: []
          pos: 3434
          length: 60
        - type: field_declaration
          fields:
            text: private final Scope syntacticScope;
          children: []
          pos: 3497
          length: 35
        - type: field_declaration
          fields:
            text: private final FlowScope functionScope;
          children: []
          pos: 3535
          length: 38
        - type: field_declaration
          fields:
            text: private final FlowScope bottomScope;
          children: []
          pos: 3576
          length: 36
        - type: field_declaration
          fields:
            text: private final Map<String, AssertionFunctionSpec> assertionFunctionsMap;
          children: []
          pos: 3615
          length: 71
        - type: constructor_declaration
          fields:
            text: |-
              TypeInference(AbstractCompiler compiler, ControlFlowGraph<Node> cfg,
                              ReverseAbstractInterpreter reverseInterpreter,
                              Scope functionScope,
                              Map<String, AssertionFunctionSpec> assertionFunctionsMap) {
                  super(cfg, new LinkedFlowScope.FlowScopeJoinOp());
                  this.compiler = compiler;
                  this.registry = compiler.getTypeRegistry();
                  this.reverseInterpreter = reverseInterpreter;
                  this.syntacticScope = functionScope;
                  this.functionScope = LinkedFlowScope.createEntryLattice(functionScope);
                  this.assertionFunctionsMap = assertionFunctionsMap;

                  // For each local variable declared with the VAR keyword, the entry
                  // type is VOID.
                  Iterator<Var> varIt =
                      functionScope.getDeclarativelyUnboundVarsWithoutTypes();
                  while (varIt.hasNext()) {
                    Var var = varIt.next();
                    if (isUnflowable(var)) {
                      continue;
                    }

                    this.functionScope.inferSlotType(
                        var.getName(), getNativeType(VOID_TYPE));
                  }

                  this.bottomScope = LinkedFlowScope.createEntryLattice(
                      new Scope(functionScope.getRootNode(), functionScope.getTypeOfThis()));
                }
          children: []
          pos: 3690
          length: 1145
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createInitialEstimateLattice
              children: []
              pos: 4861
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 4839
              length: 82
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return bottomScope;
                children: []
                pos: 4898
                length: 19
              pos: 4892
              length: 29
          children: []
          pos: 4839
          length: 82
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createEntryLattice
              children: []
              pos: 4947
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 4925
              length: 74
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return functionScope;
                children: []
                pos: 4974
                length: 21
              pos: 4968
              length: 31
          children: []
          pos: 4925
          length: 74
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: flowThrough
              children: []
              pos: 5025
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 5037
                length: 6
              pos: 5003
              length: 348
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: input
                            children: []
                            pos: 5191
                            length: 5
                          right:
                            type: identifier
                            fields:
                              text: bottomScope
                            children: []
                            pos: 5200
                            length: 11
                        children: []
                        pos: 5191
                        length: 20
                    children: []
                    pos: 5190
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return input;
                    children: []
                    pos: 5221
                    length: 13
                  pos: 5213
                  length: 27
                pos: 5187
                length: 53
              - type: local_variable_declaration
                fields:
                  text: FlowScope output = input.createChildFlowScope();
                children: []
                pos: 5246
                length: 48
              - type: expression_statement
                fields:
                  text: output = traverse(n, output);
                children: []
                pos: 5299
                length: 29
              - type: return_statement
                fields:
                  text: return output;
                children: []
                pos: 5333
                length: 14
              pos: 5062
              length: 289
          children: []
          pos: 5003
          length: 348
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: branchedFlowThrough
              children: []
              pos: 5418
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node source
                children: []
                pos: 5438
                length: 11
              pos: 5355
              length: 4656
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: FlowScope output = flowThrough(source, input);
                children: []
                pos: 5789
                length: 46
              - type: local_variable_declaration
                fields:
                  text: Node condition = null;
                children: []
                pos: 5840
                length: 22
              - type: local_variable_declaration
                fields:
                  text: FlowScope conditionFlowScope = null;
                children: []
                pos: 5867
                length: 36
              - type: local_variable_declaration
                fields:
                  text: BooleanOutcomePair conditionOutcomes = null;
                children: []
                pos: 5908
                length: 44
              - type: local_variable_declaration
                fields:
                  text: List<DiGraphEdge<Node, Branch>> branchEdges = getCfg().getOutEdges(source);
                children: []
                pos: 5958
                length: 75
              - type: local_variable_declaration
                fields:
                  text: List<FlowScope> result = Lists.newArrayListWithCapacity(branchEdges.size());
                children: []
                pos: 6038
                length: 76
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (DiGraphEdge<Node, Branch> branchEdge : branchEdges) {
                          Branch branch = branchEdge.getValue();
                          FlowScope newScope = output;

                          switch (branch) {
                            case ON_TRUE:
                              if (NodeUtil.isForIn(source)) {
                                // item is assigned a property name, so its type should be string.
                                Node item = source.getFirstChild();
                                Node obj = item.getNext();

                                FlowScope informed = traverse(obj, output.createChildFlowScope());

                                if (item.isVar()) {
                                  item = item.getFirstChild();
                                }
                                if (item.isName()) {
                                  JSType iterKeyType = getNativeType(STRING_TYPE);
                                  ObjectType objType = getJSType(obj).dereference();
                                  JSType objIndexType = objType == null ?
                                      null : objType.getIndexType();
                                  if (objIndexType != null && !objIndexType.isUnknownType()) {
                                    JSType narrowedKeyType =
                                        iterKeyType.getGreatestSubtype(objIndexType);
                                    if (!narrowedKeyType.isEmptyType()) {
                                      iterKeyType = narrowedKeyType;
                                    }
                                  }
                                  redeclareSimpleVar(informed, item, iterKeyType);
                                }
                                newScope = informed;
                                break;
                              }

                              // FALL THROUGH

                            case ON_FALSE:
                              if (condition == null) {
                                condition = NodeUtil.getConditionExpression(source);
                                if (condition == null && source.isCase()) {
                                  condition = source;

                                  // conditionFlowScope is cached from previous iterations
                                  // of the loop.
                                  if (conditionFlowScope == null) {
                                    conditionFlowScope = traverse(
                                        condition.getFirstChild(), output.createChildFlowScope());
                                  }
                                }
                              }

                              if (condition != null) {
                                if (condition.isAnd() ||
                                    condition.isOr()) {
                                  // When handling the short-circuiting binary operators,
                                  // the outcome scope on true can be different than the outcome
                                  // scope on false.
                                  //
                                  // TODO(nicksantos): The "right" way to do this is to
                                  // carry the known outcome all the way through the
                                  // recursive traversal, so that we can construct a
                                  // different flow scope based on the outcome. However,
                                  // this would require a bunch of code and a bunch of
                                  // extra computation for an edge case. This seems to be
                                  // a "good enough" approximation.

                                  // conditionOutcomes is cached from previous iterations
                                  // of the loop.
                                  if (conditionOutcomes == null) {
                                    conditionOutcomes = condition.isAnd() ?
                                        traverseAnd(condition, output.createChildFlowScope()) :
                                        traverseOr(condition, output.createChildFlowScope());
                                  }
                                  newScope =
                                      reverseInterpreter.getPreciserScopeKnowingConditionOutcome(
                                          condition,
                                          conditionOutcomes.getOutcomeFlowScope(
                                              condition.getType(), branch == Branch.ON_TRUE),
                                          branch == Branch.ON_TRUE);
                                } else {
                                  // conditionFlowScope is cached from previous iterations
                                  // of the loop.
                                  if (conditionFlowScope == null) {
                                    conditionFlowScope =
                                        traverse(condition, output.createChildFlowScope());
                                  }
                                  newScope =
                                      reverseInterpreter.getPreciserScopeKnowingConditionOutcome(
                                          condition, conditionFlowScope, branch == Branch.ON_TRUE);
                                }
                              }
                              break;
                          }

                          result.add(newScope.optimize());
                        }
                children: []
                pos: 6119
                length: 3869
              - type: return_statement
                fields:
                  text: return result;
                children: []
                pos: 9993
                length: 14
              pos: 5468
              length: 4543
          children: []
          pos: 5355
          length: 4656
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverse
              children: []
              pos: 10033
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 10042
                length: 6
              pos: 10015
              length: 4132
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 10081
                        length: 11
                    children: []
                    pos: 10080
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.ASSIGN:
                                scope = traverseAssign(n, scope);
                                break;

                              case Token.NAME:
                                scope = traverseName(n, scope);
                                break;

                              case Token.GETPROP:
                                scope = traverseGetProp(n, scope);
                                break;

                              case Token.AND:
                                scope = traverseAnd(n, scope).getJoinedFlowScope()
                                    .createChildFlowScope();
                                break;

                              case Token.OR:
                                scope = traverseOr(n, scope).getJoinedFlowScope()
                                    .createChildFlowScope();
                                break;

                              case Token.HOOK:
                                scope = traverseHook(n, scope);
                                break;

                              case Token.OBJECTLIT:
                                scope = traverseObjectLiteral(n, scope);
                                break;

                              case Token.CALL:
                                scope = traverseCall(n, scope);
                                break;

                              case Token.NEW:
                                scope = traverseNew(n, scope);
                                break;

                              case Token.ASSIGN_ADD:
                              case Token.ADD:
                                scope = traverseAdd(n, scope);
                                break;

                              case Token.POS:
                              case Token.NEG:
                                scope = traverse(n.getFirstChild(), scope);  // Find types.
                                n.setJSType(getNativeType(NUMBER_TYPE));
                                break;

                              case Token.ARRAYLIT:
                                scope = traverseArrayLiteral(n, scope);
                                break;

                              case Token.THIS:
                                n.setJSType(scope.getTypeOfThis());
                                break;

                              case Token.ASSIGN_LSH:
                              case Token.ASSIGN_RSH:
                              case Token.LSH:
                              case Token.RSH:
                              case Token.ASSIGN_URSH:
                              case Token.URSH:
                              case Token.ASSIGN_DIV:
                              case Token.ASSIGN_MOD:
                              case Token.ASSIGN_BITAND:
                              case Token.ASSIGN_BITXOR:
                              case Token.ASSIGN_BITOR:
                              case Token.ASSIGN_MUL:
                              case Token.ASSIGN_SUB:
                              case Token.DIV:
                              case Token.MOD:
                              case Token.BITAND:
                              case Token.BITXOR:
                              case Token.BITOR:
                              case Token.MUL:
                              case Token.SUB:
                              case Token.DEC:
                              case Token.INC:
                              case Token.BITNOT:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getNativeType(NUMBER_TYPE));
                                break;

                              case Token.PARAM_LIST:
                                scope = traverse(n.getFirstChild(), scope);
                                n.setJSType(getJSType(n.getFirstChild()));
                                break;

                              case Token.COMMA:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getJSType(n.getLastChild()));
                                break;

                              case Token.TYPEOF:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getNativeType(STRING_TYPE));
                                break;

                              case Token.DELPROP:
                              case Token.LT:
                              case Token.LE:
                              case Token.GT:
                              case Token.GE:
                              case Token.NOT:
                              case Token.EQ:
                              case Token.NE:
                              case Token.SHEQ:
                              case Token.SHNE:
                              case Token.INSTANCEOF:
                              case Token.IN:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getNativeType(BOOLEAN_TYPE));
                                break;

                              case Token.GETELEM:
                                scope = traverseGetElem(n, scope);
                                break;

                              case Token.EXPR_RESULT:
                                scope = traverseChildren(n, scope);
                                if (n.getFirstChild().isGetProp()) {
                                  ensurePropertyDeclared(n.getFirstChild());
                                }
                                break;

                              case Token.SWITCH:
                                scope = traverse(n.getFirstChild(), scope);
                                break;

                              case Token.RETURN:
                                scope = traverseReturn(n, scope);
                                break;

                              case Token.VAR:
                              case Token.THROW:
                                scope = traverseChildren(n, scope);
                                break;

                              case Token.CATCH:
                                scope = traverseCatch(n, scope);
                                break;
                            }
                    children: []
                    pos: 10094
                    length: 3452
                children: []
                pos: 10073
                length: 3473
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!n.isFunction()"
                        children: []
                        pos: 13555
                        length: 15
                    children: []
                    pos: 13554
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSDocInfo info = n.getJSDocInfo();
                    children: []
                    pos: 13580
                    length: 34
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: info
                                    children: []
                                    pos: 13625
                                    length: 4
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 13633
                                    length: 4
                                children: []
                                pos: 13625
                                length: 12
                              right:
                                type: method_invocation
                                fields:
                                  text: info.hasType()
                                children: []
                                pos: 13641
                                length: 14
                            children: []
                            pos: 13625
                            length: 30
                        children: []
                        pos: 13624
                        length: 32
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType castType = info.getType().evaluate(syntacticScope,
                            registry);
                        children: []
                        pos: 13667
                        length: 68
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: n.isQualifiedName()
                                    children: []
                                    pos: 13931
                                    length: 19
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: n.getParent().isExprResult()
                                    children: []
                                    pos: 13966
                                    length: 28
                                children: []
                                pos: 13931
                                length: 63
                            children: []
                            pos: 13930
                            length: 65
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: updateScopeForTypeChange(scope, n, n.getJSType(),
                                castType);
                            children: []
                            pos: 14008
                            length: 60
                          pos: 13996
                          length: 82
                        pos: 13927
                        length: 151
                      - type: expression_statement
                        fields:
                          text: n.setJSType(castType);
                        children: []
                        pos: 14088
                        length: 22
                      pos: 13657
                      length: 461
                    pos: 13621
                    length: 497
                  pos: 13572
                  length: 552
                pos: 13551
                length: 573
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 14130
                length: 13
              pos: 10067
              length: 4080
          children: []
          pos: 10015
          length: 4132
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseReturn
              children: []
              pos: 14211
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 14226
                length: 6
              pos: 14193
              length: 496
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 14257
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node retValue = n.getFirstChild();
                children: []
                pos: 14298
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: retValue
                            children: []
                            pos: 14341
                            length: 8
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 14353
                            length: 4
                        children: []
                        pos: 14341
                        length: 16
                    children: []
                    pos: 14340
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType type = functionScope.getRootNode().getJSType();
                    children: []
                    pos: 14367
                    length: 54
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 14432
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 14440
                                length: 4
                            children: []
                            pos: 14432
                            length: 12
                        children: []
                        pos: 14431
                        length: 14
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: FunctionType fnType = type.toMaybeFunctionType();
                        children: []
                        pos: 14456
                        length: 49
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: fnType
                                    children: []
                                    pos: 14518
                                    length: 6
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 14528
                                    length: 4
                                children: []
                                pos: 14518
                                length: 14
                            children: []
                            pos: 14517
                            length: 16
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: |-
                                inferPropertyTypesToMatchConstraint(
                                              retValue.getJSType(), fnType.getReturnType());
                            children: []
                            pos: 14546
                            length: 97
                          pos: 14534
                          length: 119
                        pos: 14514
                        length: 139
                      pos: 14446
                      length: 215
                    pos: 14428
                    length: 233
                  pos: 14359
                  length: 308
                pos: 14337
                length: 330
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 14672
                length: 13
              pos: 14251
              length: 438
          children: []
          pos: 14193
          length: 496
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseCatch
              children: []
              pos: 14854
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 14868
                length: 6
              pos: 14836
              length: 244
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node name = n.getFirstChild();
                children: []
                pos: 14899
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType type = getNativeType(JSTypeNative.UNKNOWN_TYPE);
                children: []
                pos: 14934
                length: 55
              - type: expression_statement
                fields:
                  text: name.setJSType(type);
                children: []
                pos: 14994
                length: 21
              - type: expression_statement
                fields:
                  text: redeclareSimpleVar(scope, name, type);
                children: []
                pos: 15020
                length: 38
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 15063
                length: 13
              pos: 14893
              length: 187
          children: []
          pos: 14836
          length: 244
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseAssign
              children: []
              pos: 15102
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 15117
                length: 6
              pos: 15084
              length: 366
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 15148
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 15183
                length: 30
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 15218
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = left.getJSType();
                children: []
                pos: 15259
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = getJSType(right);
                children: []
                pos: 15299
                length: 36
              - type: expression_statement
                fields:
                  text: n.setJSType(rightType);
                children: []
                pos: 15340
                length: 23
              - type: expression_statement
                fields:
                  text: updateScopeForTypeChange(scope, left, leftType, rightType);
                children: []
                pos: 15369
                length: 59
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 15433
                length: 13
              pos: 15142
              length: 308
          children: []
          pos: 15084
          length: 366
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateScopeForTypeChange
              children: []
              pos: 15584
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 15616
                length: 15
              pos: 15571
              length: 1794
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(resultType);
                children: []
                pos: 15686
                length: 39
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: left.getType()
                        children: []
                        pos: 15738
                        length: 14
                    children: []
                    pos: 15737
                    length: 16
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.NAME:
                                String varName = left.getString();
                                Var var = syntacticScope.getVar(varName);

                                // When looking at VAR initializers for declared VARs, we trust
                                // the declared type over the type it's being initialized to.
                                // This has two purposes:
                                // 1) We avoid re-declaring declared variables so that built-in
                                //    types defined in externs are not redeclared.
                                // 2) When there's a lexical closure like
                                //    /** @type {?string} */ var x = null;
                                //    function f() { x = 'xyz'; }
                                //    the inference will ignore the lexical closure,
                                //    which is just wrong. This bug needs to be fixed eventually.
                                boolean isVarDeclaration = left.hasChildren();
                                if (!isVarDeclaration || var == null || var.isTypeInferred()) {
                                  redeclareSimpleVar(scope, left, resultType);
                                }
                                left.setJSType(isVarDeclaration || leftType == null ?
                                    resultType : null);

                                if (var != null && var.isTypeInferred()) {
                                  JSType oldType = var.getType();
                                  var.setType(oldType == null ?
                                      resultType : oldType.getLeastSupertype(resultType));
                                }
                                break;
                              case Token.GETPROP:
                                String qualifiedName = left.getQualifiedName();
                                if (qualifiedName != null) {
                                  scope.inferQualifiedSlot(left, qualifiedName,
                                      leftType == null ? getNativeType(UNKNOWN_TYPE) : leftType,
                                      resultType);
                                }

                                left.setJSType(resultType);
                                ensurePropertyDefined(left, resultType);
                                break;
                            }
                    children: []
                    pos: 15754
                    length: 1607
                children: []
                pos: 15730
                length: 1631
              pos: 15680
              length: 1685
          children: []
          pos: 15571
          length: 1794
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensurePropertyDefined
              children: []
              pos: 17460
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getprop
                children: []
                pos: 17482
                length: 12
              pos: 17447
              length: 1933
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String propName = getprop.getLastChild().getString();
                children: []
                pos: 17520
                length: 53
              - type: local_variable_declaration
                fields:
                  text: JSType nodeType = getJSType(getprop.getFirstChild());
                children: []
                pos: 17578
                length: 53
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType objectType = ObjectType.cast(
                            nodeType.restrictByNotNullOrUndefined());
                children: []
                pos: 17636
                length: 90
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: objectType
                            children: []
                            pos: 17735
                            length: 10
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 17749
                            length: 4
                        children: []
                        pos: 17735
                        length: 18
                    children: []
                    pos: 17734
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: registry.registerPropertyOnType(propName, nodeType);
                    children: []
                    pos: 17763
                    length: 52
                  pos: 17755
                  length: 66
                pos: 17731
                length: 1645
              pos: 17514
              length: 1866
          children: []
          pos: 17447
          length: 1933
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensurePropertyDeclared
              children: []
              pos: 19664
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getprop
                children: []
                pos: 19687
                length: 12
              pos: 19651
              length: 266
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType ownerType = ObjectType.cast(
                            getJSType(getprop.getFirstChild()).restrictByNotNullOrUndefined());
                children: []
                pos: 19707
                length: 115
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: ownerType
                            children: []
                            pos: 19831
                            length: 9
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 19844
                            length: 4
                        children: []
                        pos: 19831
                        length: 17
                    children: []
                    pos: 19830
                    length: 19
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensurePropertyDeclaredHelper(getprop, ownerType);
                    children: []
                    pos: 19858
                    length: 49
                  pos: 19850
                  length: 63
                pos: 19827
                length: 86
              pos: 19701
              length: 216
          children: []
          pos: 19651
          length: 266
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensurePropertyDeclaredHelper
              children: []
              pos: 20048
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getprop
                children: []
                pos: 20084
                length: 12
              pos: 20032
              length: 834
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String propName = getprop.getLastChild().getString();
                children: []
                pos: 20127
                length: 53
              - type: local_variable_declaration
                fields:
                  text: String qName = getprop.getQualifiedName();
                children: []
                pos: 20185
                length: 42
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: qName
                            children: []
                            pos: 20236
                            length: 5
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 20245
                            length: 4
                        children: []
                        pos: 20236
                        length: 13
                    children: []
                    pos: 20235
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Var var = syntacticScope.getVar(qName);
                    children: []
                    pos: 20259
                    length: 39
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: var
                                    children: []
                                    pos: 20309
                                    length: 3
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 20316
                                    length: 4
                                children: []
                                pos: 20309
                                length: 11
                              right:
                                type: unary_expression
                                fields:
                                  text: "!var.isTypeInferred()"
                                children: []
                                pos: 20324
                                length: 21
                            children: []
                            pos: 20309
                            length: 36
                        children: []
                        pos: 20308
                        length: 38
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: or
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: propName.equals("prototype")
                                    children: []
                                    pos: 20436
                                    length: 28
                                  right:
                                    type: parenthesized_expression
                                    fields:
                                      expression:
                                        type: and
                                        fields:
                                          left:
                                            type: unary_expression
                                            fields:
                                              text: "!objectType.hasOwnProperty(propName)"
                                            children: []
                                            pos: 20559
                                            length: 36
                                          right:
                                            type: parenthesized_expression
                                            fields:
                                              expression:
                                                type: or
                                                fields:
                                                  left:
                                                    type: unary_expression
                                                    fields:
                                                      text: "!objectType.isInstanceType()"
                                                    children: []
                                                    pos: 20613
                                                    length: 28
                                                  right:
                                                    type: parenthesized_expression
                                                    fields:
                                                      expression:
                                                        type: and
                                                        fields:
                                                          left:
                                                            type: method_invocation
                                                            fields:
                                                              text: var.isExtern()
                                                            children: []
                                                            pos: 20663
                                                            length: 14
                                                          right:
                                                            type: unary_expression
                                                            fields:
                                                              text: "!objectType.isNativeObjectType()"
                                                            children: []
                                                            pos: 20681
                                                            length: 32
                                                        children: []
                                                        pos: 20663
                                                        length: 50
                                                    children: []
                                                    pos: 20662
                                                    length: 52
                                                children: []
                                                pos: 20613
                                                length: 101
                                            children: []
                                            pos: 20612
                                            length: 103
                                        children: []
                                        pos: 20559
                                        length: 156
                                    children: []
                                    pos: 20558
                                    length: 158
                                children: []
                                pos: 20436
                                length: 280
                            children: []
                            pos: 20435
                            length: 282
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: return_statement
                            fields:
                              text: |-
                                return objectType.defineDeclaredProperty(
                                              propName, var.getType(), getprop);
                            children: []
                            pos: 20730
                            length: 90
                          pos: 20718
                          length: 112
                        pos: 20432
                        length: 398
                      pos: 20347
                      length: 491
                    pos: 20305
                    length: 533
                  pos: 20251
                  length: 593
                pos: 20232
                length: 612
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 20849
                length: 13
              pos: 20121
              length: 745
          children: []
          pos: 20032
          length: 834
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseName
              children: []
              pos: 20888
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 20901
                length: 6
              pos: 20870
              length: 1420
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String varName = n.getString();
                children: []
                pos: 20932
                length: 31
              - type: local_variable_declaration
                fields:
                  text: Node value = n.getFirstChild();
                children: []
                pos: 20968
                length: 31
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 21004
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: value
                            children: []
                            pos: 21041
                            length: 5
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 21050
                            length: 4
                        children: []
                        pos: 21041
                        length: 13
                    children: []
                    pos: 21040
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: scope = traverse(value, scope);
                    children: []
                    pos: 21064
                    length: 31
                  - type: expression_statement
                    fields:
                      text: |-
                        updateScopeForTypeChange(scope, n, n.getJSType() /* could be null */,
                                  getJSType(value));
                    children: []
                    pos: 21102
                    length: 98
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 21207
                    length: 13
                  pos: 21056
                  length: 170
                pos: 21037
                length: 1208
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 22250
                length: 18
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 22273
                length: 13
              pos: 20926
              length: 1364
          children: []
          pos: 20870
          length: 1420
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseArrayLiteral
              children: []
              pos: 22357
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 22378
                length: 6
              pos: 22339
              length: 171
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 22409
                length: 35
              - type: expression_statement
                fields:
                  text: n.setJSType(getNativeType(ARRAY_TYPE));
                children: []
                pos: 22449
                length: 39
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 22493
                length: 13
              pos: 22403
              length: 107
          children: []
          pos: 22339
          length: 171
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseObjectLiteral
              children: []
              pos: 22532
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 22554
                length: 6
              pos: 22514
              length: 2261
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 22585
                length: 28
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(type);
                children: []
                pos: 22618
                length: 33
              - type: for_statement
                fields:
                  text: |-
                    for (Node name = n.getFirstChild(); name != null; name = name.getNext()) {
                          scope = traverse(name.getFirstChild(), scope);
                        }
                children: []
                pos: 22657
                length: 133
              - type: local_variable_declaration
                fields:
                  text: ObjectType objectType = ObjectType.cast(type);
                children: []
                pos: 23103
                length: 46
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: objectType
                            children: []
                            pos: 23158
                            length: 10
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 23172
                            length: 4
                        children: []
                        pos: 23158
                        length: 18
                    children: []
                    pos: 23157
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 23186
                    length: 13
                  pos: 23178
                  length: 27
                pos: 23154
                length: 51
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean hasLendsName = n.getJSDocInfo() != null &&
                            n.getJSDocInfo().getLendsName() != null;
                children: []
                pos: 23211
                length: 99
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: objectType.hasReferenceName()
                            children: []
                            pos: 23319
                            length: 29
                          right:
                            type: unary_expression
                            fields:
                              text: "!hasLendsName"
                            children: []
                            pos: 23352
                            length: 13
                        children: []
                        pos: 23319
                        length: 46
                    children: []
                    pos: 23318
                    length: 48
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 23375
                    length: 13
                  pos: 23367
                  length: 27
                pos: 23315
                length: 79
              - type: local_variable_declaration
                fields:
                  text: |-
                    String qObjName = NodeUtil.getBestLValueName(
                            NodeUtil.getBestLValue(n));
                children: []
                pos: 23400
                length: 81
              - type: for_statement
                fields:
                  text: |-
                    for (Node name = n.getFirstChild(); name != null;
                             name = name.getNext()) {
                          Node value = name.getFirstChild();
                          String memberName = NodeUtil.getObjectLitKeyName(name);
                          if (memberName != null) {
                            JSType rawValueType =  name.getFirstChild().getJSType();
                            JSType valueType = NodeUtil.getObjectLitKeyTypeFromValueType(
                                name, rawValueType);
                            if (valueType == null) {
                              valueType = getNativeType(UNKNOWN_TYPE);
                            }
                            objectType.defineInferredProperty(memberName, valueType, name);

                            // Do normal flow inference if this is a direct property assignment.
                            if (qObjName != null && name.isStringKey()) {
                              String qKeyName = qObjName + "." + memberName;
                              Var var = syntacticScope.getVar(qKeyName);
                              JSType oldType = var == null ? null : var.getType();
                              if (var != null && var.isTypeInferred()) {
                                var.setType(oldType == null ?
                                    valueType : oldType.getLeastSupertype(oldType));
                              }

                              scope.inferQualifiedSlot(name, qKeyName,
                                  oldType == null ? getNativeType(UNKNOWN_TYPE) : oldType,
                                  valueType);
                            }
                          } else {
                            n.setJSType(getNativeType(UNKNOWN_TYPE));
                          }
                        }
                children: []
                pos: 23486
                length: 1267
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 24758
                length: 13
              pos: 22579
              length: 2196
          children: []
          pos: 22514
          length: 2261
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseAdd
              children: []
              pos: 24797
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 24809
                length: 6
              pos: 24779
              length: 1164
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 24840
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = left.getNext();
                children: []
                pos: 24875
                length: 28
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 24908
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = left.getJSType();
                children: []
                pos: 24949
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = right.getJSType();
                children: []
                pos: 24989
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType type = getNativeType(UNKNOWN_TYPE);
                children: []
                pos: 25032
                length: 42
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: leftType
                                children: []
                                pos: 25083
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 25095
                                length: 4
                            children: []
                            pos: 25083
                            length: 16
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: rightType
                                children: []
                                pos: 25103
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 25116
                                length: 4
                            children: []
                            pos: 25103
                            length: 17
                        children: []
                        pos: 25083
                        length: 37
                    children: []
                    pos: 25082
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: boolean leftIsUnknown = leftType.isUnknownType();
                    children: []
                    pos: 25130
                    length: 49
                  - type: local_variable_declaration
                    fields:
                      text: boolean rightIsUnknown = rightType.isUnknownType();
                    children: []
                    pos: 25186
                    length: 51
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: leftIsUnknown
                                children: []
                                pos: 25248
                                length: 13
                              right:
                                type: identifier
                                fields:
                                  text: rightIsUnknown
                                children: []
                                pos: 25265
                                length: 14
                            children: []
                            pos: 25248
                            length: 31
                        children: []
                        pos: 25247
                        length: 33
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: type = getNativeType(UNKNOWN_TYPE);
                        children: []
                        pos: 25291
                        length: 35
                      pos: 25281
                      length: 53
                    pos: 25244
                    length: 552
                  pos: 25122
                  length: 680
                pos: 25079
                length: 723
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 25807
                length: 18
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.isAssignAdd()
                        children: []
                        pos: 25835
                        length: 15
                    children: []
                    pos: 25834
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: updateScopeForTypeChange(scope, left, leftType, type);
                    children: []
                    pos: 25860
                    length: 54
                  pos: 25852
                  length: 68
                pos: 25831
                length: 89
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 25926
                length: 13
              pos: 24834
              length: 1109
          children: []
          pos: 24779
          length: 1164
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isAddedAsNumber
              children: []
              pos: 25963
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType type
                children: []
                pos: 25979
                length: 11
              pos: 25947
              length: 197
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return type.isSubtype(registry.createUnionType(VOID_TYPE, NULL_TYPE,
                            NUMBER_VALUE_OR_OBJECT_TYPE, BOOLEAN_TYPE, BOOLEAN_OBJECT_TYPE));
                children: []
                pos: 25998
                length: 142
              pos: 25992
              length: 152
          children: []
          pos: 25947
          length: 197
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseHook
              children: []
              pos: 26166
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 26179
                length: 6
              pos: 26148
              length: 1146
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node condition = n.getFirstChild();
                children: []
                pos: 26210
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node trueNode = condition.getNext();
                children: []
                pos: 26250
                length: 36
              - type: local_variable_declaration
                fields:
                  text: Node falseNode = n.getLastChild();
                children: []
                pos: 26291
                length: 34
              - type: expression_statement
                fields:
                  text: scope = traverse(condition, scope);
                children: []
                pos: 26359
                length: 35
              - type: local_variable_declaration
                fields:
                  text: |-
                    FlowScope trueScope = reverseInterpreter.
                            getPreciserScopeKnowingConditionOutcome(
                                condition, scope, true);
                children: []
                pos: 26474
                length: 127
              - type: local_variable_declaration
                fields:
                  text: |-
                    FlowScope falseScope = reverseInterpreter.
                            getPreciserScopeKnowingConditionOutcome(
                                condition, scope, false);
                children: []
                pos: 26606
                length: 129
              - type: expression_statement
                fields:
                  text: traverse(trueNode, trueScope.createChildFlowScope());
                children: []
                pos: 26790
                length: 53
              - type: expression_statement
                fields:
                  text: traverse(falseNode, falseScope.createChildFlowScope());
                children: []
                pos: 26900
                length: 55
              - type: local_variable_declaration
                fields:
                  text: JSType trueType = trueNode.getJSType();
                children: []
                pos: 27012
                length: 39
              - type: local_variable_declaration
                fields:
                  text: JSType falseType = falseNode.getJSType();
                children: []
                pos: 27056
                length: 41
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: trueType
                                children: []
                                pos: 27106
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 27118
                                length: 4
                            children: []
                            pos: 27106
                            length: 16
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: falseType
                                children: []
                                pos: 27126
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 27139
                                length: 4
                            children: []
                            pos: 27126
                            length: 17
                        children: []
                        pos: 27106
                        length: 37
                    children: []
                    pos: 27105
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: n.setJSType(trueType.getLeastSupertype(falseType));
                    children: []
                    pos: 27153
                    length: 51
                  pos: 27145
                  length: 65
                pos: 27102
                length: 146
              - type: return_statement
                fields:
                  text: return scope.createChildFlowScope();
                children: []
                pos: 27254
                length: 36
              pos: 26204
              length: 1090
          children: []
          pos: 26148
          length: 1146
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseCall
              children: []
              pos: 27316
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 27329
                length: 6
              pos: 27298
              length: 667
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 27360
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 27401
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType functionType = getJSType(left).restrictByNotNullOrUndefined();
                children: []
                pos: 27436
                length: 69
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: functionType
                            children: []
                            pos: 27514
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 27530
                            length: 4
                        children: []
                        pos: 27514
                        length: 20
                    children: []
                    pos: 27513
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: functionType.isFunctionType()
                            children: []
                            pos: 27548
                            length: 29
                        children: []
                        pos: 27547
                        length: 31
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: FunctionType fnType = functionType.toMaybeFunctionType();
                        children: []
                        pos: 27589
                        length: 57
                      - type: expression_statement
                        fields:
                          text: n.setJSType(fnType.getReturnType());
                        children: []
                        pos: 27655
                        length: 36
                      - type: expression_statement
                        fields:
                          text: backwardsInferenceFromCallSite(n, fnType);
                        children: []
                        pos: 27700
                        length: 42
                      pos: 27579
                      length: 171
                    pos: 27544
                    length: 341
                  pos: 27536
                  length: 355
                pos: 27510
                length: 381
              - type: expression_statement
                fields:
                  text: scope = tightenTypesAfterAssertions(scope, n);
                children: []
                pos: 27897
                length: 46
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 27948
                length: 13
              pos: 27354
              length: 611
          children: []
          pos: 27298
          length: 667
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: tightenTypesAfterAssertions
              children: []
              pos: 27987
              length: 27
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 28015
                length: 15
              pos: 27969
              length: 1512
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = callNode.getFirstChild();
                children: []
                pos: 28059
                length: 37
              - type: local_variable_declaration
                fields:
                  text: Node firstParam = left.getNext();
                children: []
                pos: 28101
                length: 33
              - type: local_variable_declaration
                fields:
                  text: |-
                    AssertionFunctionSpec assertionFunctionSpec =
                            assertionFunctionsMap.get(left.getQualifiedName());
                children: []
                pos: 28139
                length: 105
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: assertionFunctionSpec
                                children: []
                                pos: 28253
                                length: 21
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 28278
                                length: 4
                            children: []
                            pos: 28253
                            length: 29
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: firstParam
                                children: []
                                pos: 28286
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 28300
                                length: 4
                            children: []
                            pos: 28286
                            length: 18
                        children: []
                        pos: 28253
                        length: 51
                    children: []
                    pos: 28252
                    length: 53
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 28314
                    length: 13
                  pos: 28306
                  length: 27
                pos: 28249
                length: 84
              - type: local_variable_declaration
                fields:
                  text: Node assertedNode = assertionFunctionSpec.getAssertedParam(firstParam);
                children: []
                pos: 28338
                length: 71
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: assertedNode
                            children: []
                            pos: 28418
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 28434
                            length: 4
                        children: []
                        pos: 28418
                        length: 20
                    children: []
                    pos: 28417
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 28448
                    length: 13
                  pos: 28440
                  length: 27
                pos: 28414
                length: 53
              - type: local_variable_declaration
                fields:
                  text: JSTypeNative assertedType = assertionFunctionSpec.getAssertedType();
                children: []
                pos: 28472
                length: 68
              - type: local_variable_declaration
                fields:
                  text: String assertedNodeName = assertedNode.getQualifiedName();
                children: []
                pos: 28545
                length: 58
              - type: local_variable_declaration
                fields:
                  text: JSType narrowed;
                children: []
                pos: 28609
                length: 16
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: assertedType
                            children: []
                            pos: 28702
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 28718
                            length: 4
                        children: []
                        pos: 28702
                        length: 20
                    children: []
                    pos: 28701
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        scope = reverseInterpreter.getPreciserScopeKnowingConditionOutcome(
                                  assertedNode, scope, true);
                    children: []
                    pos: 28789
                    length: 105
                  - type: expression_statement
                    fields:
                      text: narrowed = getJSType(assertedNode).restrictByNotNullOrUndefined();
                    children: []
                    pos: 28951
                    length: 66
                  pos: 28724
                  length: 299
                pos: 28698
                length: 665
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: getJSType(callNode).differsFrom(narrowed)
                        children: []
                        pos: 29373
                        length: 41
                    children: []
                    pos: 29372
                    length: 43
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: callNode.setJSType(narrowed);
                    children: []
                    pos: 29424
                    length: 29
                  pos: 29416
                  length: 43
                pos: 29369
                length: 90
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 29464
                length: 13
              pos: 28053
              length: 1428
          children: []
          pos: 27969
          length: 1512
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: narrowScope
              children: []
              pos: 29503
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 29515
                length: 15
              pos: 29485
              length: 468
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: node.isThis()
                        children: []
                        pos: 29570
                        length: 13
                    children: []
                    pos: 29569
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 29672
                    length: 13
                  pos: 29585
                  length: 106
                pos: 29566
                length: 125
              - type: expression_statement
                fields:
                  text: scope = scope.createChildFlowScope();
                children: []
                pos: 29697
                length: 37
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: node.isGetProp()
                        children: []
                        pos: 29743
                        length: 16
                    children: []
                    pos: 29742
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        scope.inferQualifiedSlot(
                                  node, node.getQualifiedName(), getJSType(node), narrowed);
                    children: []
                    pos: 29769
                    length: 94
                  pos: 29761
                  length: 108
                pos: 29739
                length: 192
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 29936
                length: 13
              pos: 29560
              length: 393
          children: []
          pos: 29485
          length: 468
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: backwardsInferenceFromCallSite
              children: []
              pos: 30892
              length: 30
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 30923
                length: 6
              pos: 30879
              length: 186
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: updateTypeOfParameters(n, fnType);
                children: []
                pos: 30958
                length: 34
              - type: expression_statement
                fields:
                  text: updateTypeOfThisOnClosure(n, fnType);
                children: []
                pos: 30997
                length: 37
              - type: expression_statement
                fields:
                  text: updateBind(n, fnType);
                children: []
                pos: 31039
                length: 22
              pos: 30952
              length: 113
          children: []
          pos: 30879
          length: 186
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateBind
              children: []
              pos: 31249
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 31260
                length: 6
              pos: 31236
              length: 560
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: |-
                    CodingConvention.Bind bind =
                            compiler.getCodingConvention().describeFunctionBind(n, true);
                children: []
                pos: 31295
                length: 98
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: bind
                            children: []
                            pos: 31402
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 31410
                            length: 4
                        children: []
                        pos: 31402
                        length: 12
                    children: []
                    pos: 31401
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 31424
                    length: 7
                  pos: 31416
                  length: 21
                pos: 31398
                length: 39
              - type: local_variable_declaration
                fields:
                  text: |-
                    FunctionType callTargetFn = getJSType(bind.target)
                            .restrictByNotNullOrUndefined().toMaybeFunctionType();
                children: []
                pos: 31443
                length: 113
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: callTargetFn
                            children: []
                            pos: 31565
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 31581
                            length: 4
                        children: []
                        pos: 31565
                        length: 20
                    children: []
                    pos: 31564
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 31595
                    length: 7
                  pos: 31587
                  length: 21
                pos: 31561
                length: 47
              - type: expression_statement
                fields:
                  text: |-
                    n.setJSType(
                            callTargetFn.getBindReturnType(
                                // getBindReturnType expects the 'this' argument to be included.
                                bind.getBoundParameterCount() + 1));
                children: []
                pos: 31614
                length: 178
              pos: 31289
              length: 507
          children: []
          pos: 31236
          length: 560
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateTypeOfParameters
              children: []
              pos: 31973
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 31996
                length: 6
              pos: 31960
              length: 867
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int i = 0;
                children: []
                pos: 32031
                length: 10
              - type: local_variable_declaration
                fields:
                  text: int childCount = n.getChildCount();
                children: []
                pos: 32046
                length: 35
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (Node iParameter : fnType.getParameters()) {
                          if (i + 1 >= childCount) {
                            // TypeCheck#visitParametersList will warn so we bail.
                            return;
                          }

                          JSType iParameterType = getJSType(iParameter);
                          Node iArgument = n.getChildAtIndex(i + 1);
                          JSType iArgumentType = getJSType(iArgument);
                          inferPropertyTypesToMatchConstraint(iArgumentType, iParameterType);

                          if (iParameterType.isFunctionType()) {
                            FunctionType iParameterFnType = iParameterType.toMaybeFunctionType();

                            if (iArgument.isFunction() &&
                                iArgumentType.isFunctionType() &&
                                iArgument.getJSDocInfo() == null) {
                              iArgument.setJSType(iParameterFnType);
                            }
                          }
                          i++;
                        }
                children: []
                pos: 32086
                length: 737
              pos: 32025
              length: 802
          children: []
          pos: 31960
          length: 867
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateTypeOfThisOnClosure
              children: []
              pos: 33035
              length: 25
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 33061
                length: 6
              pos: 33022
              length: 3662
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: fnType.getTemplateTypeName()
                            children: []
                            pos: 33158
                            length: 28
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 33190
                            length: 4
                        children: []
                        pos: 33158
                        length: 36
                    children: []
                    pos: 33157
                    length: 38
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 33204
                    length: 7
                  pos: 33196
                  length: 21
                pos: 33154
                length: 63
              - type: local_variable_declaration
                fields:
                  text: int i = 0;
                children: []
                pos: 33223
                length: 10
              - type: local_variable_declaration
                fields:
                  text: int childCount = n.getChildCount();
                children: []
                pos: 33238
                length: 35
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (Node iParameter : fnType.getParameters()) {
                          JSType iParameterType =
                              getJSType(iParameter).restrictByNotNullOrUndefined();
                          if (iParameterType.isTemplateType()) {
                            // Find the actual type of this argument.
                            ObjectType iArgumentType = null;
                            if (i + 1 < childCount) {
                              Node iArgument = n.getChildAtIndex(i + 1);
                              iArgumentType = getJSType(iArgument)
                                  .restrictByNotNullOrUndefined()
                                  .collapseUnion()
                                  .toObjectType();
                              if (iArgumentType == null) {
                                compiler.report(
                                    JSError.make(NodeUtil.getSourceName(iArgument), iArgument,
                                        TEMPLATE_TYPE_NOT_OBJECT_TYPE,
                                        getJSType(iArgument).toString()));
                                return;
                              }
                            }

                            // Find the parameter whose type is function(this: T, ...)
                            boolean foundTemplateTypeOfThisParameter = false;
                            int j = 0;
                            for (Node jParameter : fnType.getParameters()) {
                              JSType jParameterType =
                                  getJSType(jParameter).restrictByNotNullOrUndefined();
                              if (jParameterType.isFunctionType()) {
                                FunctionType jParameterFnType = jParameterType.toMaybeFunctionType();
                                if (jParameterFnType.getTypeOfThis().equals(iParameterType)) {
                                  foundTemplateTypeOfThisParameter = true;
                                  // Find the actual type of the this argument.
                                  if (j + 1 >= childCount) {
                                    // TypeCheck#visitParameterList will warn so we bail.
                                    return;
                                  }
                                  Node jArgument = n.getChildAtIndex(j + 1);
                                  JSType jArgumentType = getJSType(jArgument);
                                  if (jArgument.isFunction() &&
                                      jArgumentType.isFunctionType()) {
                                    if (iArgumentType != null &&
                                        // null and undefined get filtered out above.
                                        !iArgumentType.isNoType()) {
                                      // If it's an function expression, update the type of this
                                      // using the actual type of T.
                                      FunctionType jArgumentFnType = jArgumentType.toMaybeFunctionType();
                                      if (jArgumentFnType.getTypeOfThis().isUnknownType()) {
                                        // The new type will be picked up when we traverse the inner
                                        // function.
                                        jArgument.setJSType(
                                            registry.createFunctionTypeWithNewThisType(
                                                jArgumentFnType, iArgumentType));
                                      }
                                    } else {
                                      // Warn if the anonymous function literal references this.
                                      if (NodeUtil.referencesThis(
                                              NodeUtil.getFunctionBody(jArgument))) {
                                        compiler.report(JSError.make(NodeUtil.getSourceName(n), n,
                                            FUNCTION_LITERAL_UNDEFINED_THIS));
                                      }
                                    }
                                  }
                                  // TODO(user): Add code to TypeCheck to check that the
                                  // types of the arguments match.
                                }
                              }
                              j++;
                            }

                            if (!foundTemplateTypeOfThisParameter) {
                              compiler.report(JSError.make(NodeUtil.getSourceName(n), n,
                                  TEMPLATE_TYPE_OF_THIS_EXPECTED));
                              return;
                            }
                          }
                          i++;
                        }
                children: []
                pos: 33337
                length: 3343
              pos: 33090
              length: 3594
          children: []
          pos: 33022
          length: 3662
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseNew
              children: []
              pos: 36706
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 36718
                length: 6
              pos: 36688
              length: 1052
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 36749
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node constructor = n.getFirstChild();
                children: []
                pos: 36790
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType constructorType = constructor.getJSType();
                children: []
                pos: 36832
                length: 49
              - type: local_variable_declaration
                fields:
                  text: JSType type = null;
                children: []
                pos: 36886
                length: 19
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: constructorType
                            children: []
                            pos: 36914
                            length: 15
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 36933
                            length: 4
                        children: []
                        pos: 36914
                        length: 23
                    children: []
                    pos: 36913
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: constructorType = constructorType.restrictByNotNullOrUndefined();
                    children: []
                    pos: 36947
                    length: 65
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: constructorType.isUnknownType()
                            children: []
                            pos: 37023
                            length: 31
                        children: []
                        pos: 37022
                        length: 33
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: type = getNativeType(UNKNOWN_TYPE);
                        children: []
                        pos: 37066
                        length: 35
                      pos: 37056
                      length: 53
                    pos: 37019
                    length: 670
                  pos: 36939
                  length: 756
                pos: 36910
                length: 785
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 37700
                length: 18
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 37723
                length: 13
              pos: 36743
              length: 997
          children: []
          pos: 36688
          length: 1052
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseAnd
              children: []
              pos: 37771
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 37783
                length: 6
              pos: 37744
              length: 126
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return traverseShortCircuitingBinOp(n, scope, true);
                children: []
                pos: 37814
                length: 52
              pos: 37808
              length: 62
          children: []
          pos: 37744
          length: 126
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseChildren
              children: []
              pos: 37892
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 37909
                length: 6
              pos: 37874
              length: 195
            body:
              type: block
              fields: {}
              children:
              - type: for_statement
                fields:
                  text: |-
                    for (Node el = n.getFirstChild(); el != null; el = el.getNext()) {
                          scope = traverse(el, scope);
                        }
                children: []
                pos: 37940
                length: 107
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 38052
                length: 13
              pos: 37934
              length: 135
          children: []
          pos: 37874
          length: 195
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseGetElem
              children: []
              pos: 38091
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 38107
                length: 6
              pos: 38073
              length: 415
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 38138
                length: 35
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType objType = ObjectType.cast(
                            getJSType(n.getFirstChild()).restrictByNotNullOrUndefined());
                children: []
                pos: 38178
                length: 107
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: objType
                            children: []
                            pos: 38294
                            length: 7
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 38305
                            length: 4
                        children: []
                        pos: 38294
                        length: 15
                    children: []
                    pos: 38293
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType type = objType.getParameterType();
                    children: []
                    pos: 38319
                    length: 41
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 38371
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 38379
                                length: 4
                            children: []
                            pos: 38371
                            length: 12
                        children: []
                        pos: 38370
                        length: 14
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: n.setJSType(type);
                        children: []
                        pos: 38395
                        length: 18
                      pos: 38385
                      length: 36
                    pos: 38367
                    length: 54
                  pos: 38311
                  length: 116
                pos: 38290
                length: 137
              - type: return_statement
                fields:
                  text: return dereferencePointer(n.getFirstChild(), scope);
                children: []
                pos: 38432
                length: 52
              pos: 38132
              length: 356
          children: []
          pos: 38073
          length: 415
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseGetProp
              children: []
              pos: 38510
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 38526
                length: 6
              pos: 38492
              length: 346
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node objNode = n.getFirstChild();
                children: []
                pos: 38557
                length: 33
              - type: local_variable_declaration
                fields:
                  text: Node property = n.getLastChild();
                children: []
                pos: 38595
                length: 33
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 38633
                length: 35
              - type: expression_statement
                fields:
                  text: |-
                    n.setJSType(
                            getPropertyType(
                                objNode.getJSType(), property.getString(), n, scope));
                children: []
                pos: 38673
                length: 104
              - type: return_statement
                fields:
                  text: return dereferencePointer(n.getFirstChild(), scope);
                children: []
                pos: 38782
                length: 52
              pos: 38551
              length: 287
          children: []
          pos: 38492
          length: 346
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: inferPropertyTypesToMatchConstraint
              children: []
              pos: 39385
              length: 35
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType type
                children: []
                pos: 39428
                length: 11
              pos: 39372
              length: 341
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 39470
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 39478
                                length: 4
                            children: []
                            pos: 39470
                            length: 12
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: constraint
                                children: []
                                pos: 39486
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 39500
                                length: 4
                            children: []
                            pos: 39486
                            length: 18
                        children: []
                        pos: 39470
                        length: 34
                    children: []
                    pos: 39469
                    length: 36
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 39514
                    length: 7
                  pos: 39506
                  length: 21
                pos: 39466
                length: 61
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType constraintObj =
                            ObjectType.cast(constraint.restrictByNotNullOrUndefined());
                children: []
                pos: 39533
                length: 94
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: constraintObj
                            children: []
                            pos: 39636
                            length: 13
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 39653
                            length: 4
                        children: []
                        pos: 39636
                        length: 21
                    children: []
                    pos: 39635
                    length: 23
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: type.matchConstraint(constraintObj);
                    children: []
                    pos: 39667
                    length: 36
                  pos: 39659
                  length: 50
                pos: 39632
                length: 77
              pos: 39460
              length: 253
          children: []
          pos: 39372
          length: 341
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: dereferencePointer
              children: []
              pos: 39837
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 39856
                length: 6
              pos: 39819
              length: 304
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.isQualifiedName()
                        children: []
                        pos: 39891
                        length: 19
                    children: []
                    pos: 39890
                    length: 21
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType type = getJSType(n);
                    children: []
                    pos: 39920
                    length: 27
                  - type: local_variable_declaration
                    fields:
                      text: JSType narrowed = type.restrictByNotNullOrUndefined();
                    children: []
                    pos: 39954
                    length: 54
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 40019
                                length: 4
                              right:
                                type: identifier
                                fields:
                                  text: narrowed
                                children: []
                                pos: 40027
                                length: 8
                            children: []
                            pos: 40019
                            length: 16
                        children: []
                        pos: 40018
                        length: 18
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: scope = narrowScope(scope, n, narrowed);
                        children: []
                        pos: 40047
                        length: 40
                      pos: 40037
                      length: 58
                    pos: 40015
                    length: 80
                  pos: 39912
                  length: 189
                pos: 39887
                length: 214
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 40106
                length: 13
              pos: 39881
              length: 242
          children: []
          pos: 39819
          length: 304
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getPropertyType
              children: []
              pos: 40142
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType objType
                children: []
                pos: 40158
                length: 14
              pos: 40127
              length: 1254
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String qualifiedName = n.getQualifiedName();
                children: []
                pos: 40302
                length: 44
              - type: local_variable_declaration
                fields:
                  text: StaticSlot<JSType> var = scope.getSlot(qualifiedName);
                children: []
                pos: 40351
                length: 54
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: var
                            children: []
                            pos: 40414
                            length: 3
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 40421
                            length: 4
                        children: []
                        pos: 40414
                        length: 11
                    children: []
                    pos: 40413
                    length: 13
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType varType = var.getType();
                    children: []
                    pos: 40435
                    length: 31
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: varType
                                children: []
                                pos: 40477
                                length: 7
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 40488
                                length: 4
                            children: []
                            pos: 40477
                            length: 15
                        children: []
                        pos: 40476
                        length: 17
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: varType.equals(getNativeType(UNKNOWN_TYPE))
                                    children: []
                                    pos: 40508
                                    length: 43
                                  right:
                                    type: not_equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: var
                                        children: []
                                        pos: 40567
                                        length: 3
                                      right:
                                        type: method_invocation
                                        fields:
                                          text: syntacticScope.getSlot(qualifiedName)
                                        children: []
                                        pos: 40574
                                        length: 37
                                    children: []
                                    pos: 40567
                                    length: 44
                                children: []
                                pos: 40508
                                length: 103
                            children: []
                            pos: 40507
                            length: 105
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: return_statement
                            fields:
                              text: return getNativeType(CHECKED_UNKNOWN_TYPE);
                            children: []
                            pos: 40774
                            length: 43
                          pos: 40613
                          length: 214
                        pos: 40504
                        length: 366
                      pos: 40494
                      length: 384
                    pos: 40473
                    length: 405
                  pos: 40427
                  length: 457
                pos: 40410
                length: 474
              - type: local_variable_declaration
                fields:
                  text: JSType propertyType = null;
                children: []
                pos: 40890
                length: 27
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: objType
                            children: []
                            pos: 40926
                            length: 7
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 40937
                            length: 4
                        children: []
                        pos: 40926
                        length: 15
                    children: []
                    pos: 40925
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: propertyType = objType.findPropertyType(propName);
                    children: []
                    pos: 40951
                    length: 50
                  pos: 40943
                  length: 64
                pos: 40922
                length: 85
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: or
                                fields:
                                  left:
                                    type: equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: propertyType
                                        children: []
                                        pos: 41018
                                        length: 12
                                      right:
                                        type: null_literal
                                        fields: {}
                                        children: []
                                        pos: 41034
                                        length: 4
                                    children: []
                                    pos: 41018
                                    length: 20
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: propertyType.isUnknownType()
                                    children: []
                                    pos: 41042
                                    length: 28
                                children: []
                                pos: 41018
                                length: 52
                            children: []
                            pos: 41017
                            length: 54
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: qualifiedName
                                children: []
                                pos: 41083
                                length: 13
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 41100
                                length: 4
                            children: []
                            pos: 41083
                            length: 21
                        children: []
                        pos: 41017
                        length: 87
                    children: []
                    pos: 41016
                    length: 89
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: ObjectType regType = ObjectType.cast(registry.getType(qualifiedName));
                    children: []
                    pos: 41189
                    length: 70
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: regType
                                children: []
                                pos: 41270
                                length: 7
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 41281
                                length: 4
                            children: []
                            pos: 41270
                            length: 15
                        children: []
                        pos: 41269
                        length: 17
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: propertyType = regType.getConstructor();
                        children: []
                        pos: 41297
                        length: 40
                      pos: 41287
                      length: 58
                    pos: 41266
                    length: 79
                  pos: 41106
                  length: 245
                pos: 41013
                length: 338
              - type: return_statement
                fields:
                  text: return propertyType;
                children: []
                pos: 41357
                length: 20
              pos: 40222
              length: 1159
          children: []
          pos: 40127
          length: 1254
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseOr
              children: []
              pos: 41412
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 41423
                length: 6
              pos: 41385
              length: 126
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return traverseShortCircuitingBinOp(n, scope, false);
                children: []
                pos: 41454
                length: 53
              pos: 41448
              length: 63
          children: []
          pos: 41385
          length: 126
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseShortCircuitingBinOp
              children: []
              pos: 41542
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 41578
                length: 6
              pos: 41515
              length: 2359
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 41628
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 41663
                length: 30
              - type: local_variable_declaration
                fields:
                  text: |-
                    BooleanOutcomePair leftLiterals =
                            traverseWithinShortCircuitingBinOp(left,
                                scope.createChildFlowScope());
                children: []
                pos: 41725
                length: 125
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = left.getJSType();
                children: []
                pos: 41855
                length: 35
              - type: local_variable_declaration
                fields:
                  text: |-
                    FlowScope rightScope = reverseInterpreter.
                            getPreciserScopeKnowingConditionOutcome(
                                left, leftLiterals.getOutcomeFlowScope(left.getType(), condition),
                                condition);
                children: []
                pos: 42014
                length: 194
              - type: local_variable_declaration
                fields:
                  text: |-
                    BooleanOutcomePair rightLiterals =
                            traverseWithinShortCircuitingBinOp(
                                right, rightScope.createChildFlowScope());
                children: []
                pos: 42241
                length: 133
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = right.getJSType();
                children: []
                pos: 42379
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType type;
                children: []
                pos: 42422
                length: 12
              - type: local_variable_declaration
                fields:
                  text: BooleanOutcomePair literals;
                children: []
                pos: 42439
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: leftType
                                children: []
                                pos: 42476
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 42488
                                length: 4
                            children: []
                            pos: 42476
                            length: 16
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: rightType
                                children: []
                                pos: 42496
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 42509
                                length: 4
                            children: []
                            pos: 42496
                            length: 17
                        children: []
                        pos: 42476
                        length: 37
                    children: []
                    pos: 42475
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: leftType = leftType.getRestrictedTypeGivenToBooleanOutcome(!condition);
                    children: []
                    pos: 42523
                    length: 71
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: field_access
                                fields:
                                  text: leftLiterals.toBooleanOutcomes
                                children: []
                                pos: 42605
                                length: 30
                              right:
                                type: method_invocation
                                fields:
                                  text: BooleanLiteralSet.get(!condition)
                                children: []
                                pos: 42649
                                length: 33
                            children: []
                            pos: 42605
                            length: 77
                        children: []
                        pos: 42604
                        length: 79
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: type = leftType;
                        children: []
                        pos: 42789
                        length: 16
                      - type: expression_statement
                        fields:
                          text: literals = leftLiterals;
                        children: []
                        pos: 42814
                        length: 24
                      pos: 42684
                      length: 162
                    pos: 42601
                    length: 541
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: equals
                                fields:
                                  left:
                                    type: field_access
                                    fields:
                                      text: literals.booleanValues
                                    children: []
                                    pos: 43275
                                    length: 22
                                  right:
                                    type: field_access
                                    fields:
                                      text: BooleanLiteralSet.EMPTY
                                    children: []
                                    pos: 43301
                                    length: 23
                                children: []
                                pos: 43275
                                length: 49
                              right:
                                type: method_invocation
                                fields:
                                  text: getNativeType(BOOLEAN_TYPE).isSubtype(type)
                                children: []
                                pos: 43338
                                length: 43
                            children: []
                            pos: 43275
                            length: 106
                        children: []
                        pos: 43274
                        length: 108
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: method_invocation
                                fields:
                                  text: type.isUnionType()
                                children: []
                                pos: 43452
                                length: 18
                            children: []
                            pos: 43451
                            length: 20
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: |-
                                type = type.toMaybeUnionType().getRestrictedUnion(
                                              getNativeType(BOOLEAN_TYPE));
                            children: []
                            pos: 43484
                            length: 94
                          pos: 43472
                          length: 116
                        pos: 43448
                        length: 140
                      pos: 43383
                      length: 213
                    pos: 43271
                    length: 325
                  pos: 42515
                  length: 1087
                pos: 42472
                length: 1353
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 43830
                length: 18
              - type: return_statement
                fields:
                  text: return literals;
                children: []
                pos: 43854
                length: 16
              pos: 41622
              length: 2252
          children: []
          pos: 41515
          length: 2359
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseWithinShortCircuitingBinOp
              children: []
              pos: 43905
              length: 34
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 43940
                length: 6
              pos: 43878
              length: 362
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 43985
                        length: 11
                    children: []
                    pos: 43984
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.AND:
                                return traverseAnd(n, scope);

                              case Token.OR:
                                return traverseOr(n, scope);

                              default:
                                scope = traverse(n, scope);
                                return newBooleanOutcomePair(n.getJSType(), scope);
                            }
                    children: []
                    pos: 43998
                    length: 238
                children: []
                pos: 43977
                length: 259
              pos: 43971
              length: 269
          children: []
          pos: 43878
          length: 362
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getBooleanOutcomePair
              children: []
              pos: 44479
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: BooleanOutcomePair left
                children: []
                pos: 44501
                length: 23
              pos: 44460
              length: 416
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return new BooleanOutcomePair(
                            getBooleanOutcomes(left.toBooleanOutcomes, right.toBooleanOutcomes,
                                               condition),
                            getBooleanOutcomes(left.booleanValues, right.booleanValues, condition),
                            left.getJoinedFlowScope(), right.getJoinedFlowScope());
                children: []
                pos: 44583
                length: 289
              pos: 44577
              length: 299
          children: []
          pos: 44460
          length: 416
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getBooleanOutcomes
              children: []
              pos: 45562
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: BooleanLiteralSet left
                children: []
                pos: 45581
                length: 22
              pos: 45537
              length: 201
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return right.union(left.intersection(BooleanLiteralSet.get(!condition)));
                children: []
                pos: 45661
                length: 73
              pos: 45655
              length: 83
          children: []
          pos: 45537
          length: 201
        - type: class_declaration
          fields:
            name:
              type: identifier
              fields:
                text: BooleanOutcomePair
              children: []
              pos: 46045
              length: 18
            body:
              type: class_body
              fields: {}
              children:
              - type: field_declaration
                fields:
                  text: final BooleanLiteralSet toBooleanOutcomes;
                children: []
                pos: 46070
                length: 42
              - type: field_declaration
                fields:
                  text: final BooleanLiteralSet booleanValues;
                children: []
                pos: 46117
                length: 38
              - type: field_declaration
                fields:
                  text: final FlowScope leftScope;
                children: []
                pos: 46236
                length: 26
              - type: field_declaration
                fields:
                  text: final FlowScope rightScope;
                children: []
                pos: 46321
                length: 27
              - type: field_declaration
                fields:
                  text: FlowScope joinedScope = null;
                children: []
                pos: 46430
                length: 29
              - type: constructor_declaration
                fields:
                  text: |-
                    BooleanOutcomePair(
                            BooleanLiteralSet toBooleanOutcomes, BooleanLiteralSet booleanValues,
                            FlowScope leftScope, FlowScope rightScope) {
                          this.toBooleanOutcomes = toBooleanOutcomes;
                          this.booleanValues = booleanValues;
                          this.leftScope = leftScope;
                          this.rightScope = rightScope;
                        }
                children: []
                pos: 46465
                length: 318
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: getJoinedFlowScope
                    children: []
                    pos: 46923
                    length: 18
                  parameters:
                    type: method_parameters
                    fields: {}
                    children: []
                    pos: 46913
                    length: 260
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: equals
                              fields:
                                left:
                                  type: identifier
                                  fields:
                                    text: joinedScope
                                  children: []
                                  pos: 46956
                                  length: 11
                                right:
                                  type: null_literal
                                  fields: {}
                                  children: []
                                  pos: 46971
                                  length: 4
                              children: []
                              pos: 46956
                              length: 19
                          children: []
                          pos: 46955
                          length: 21
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: if_statement
                          fields:
                            condition:
                              type: parenthesized_expression
                              fields:
                                expression:
                                  type: equals
                                  fields:
                                    left:
                                      type: identifier
                                      fields:
                                        text: leftScope
                                      children: []
                                      pos: 46991
                                      length: 9
                                    right:
                                      type: identifier
                                      fields:
                                        text: rightScope
                                      children: []
                                      pos: 47004
                                      length: 10
                                  children: []
                                  pos: 46991
                                  length: 23
                              children: []
                              pos: 46990
                              length: 25
                          children:
                          - type: block
                            fields: {}
                            children:
                            - type: expression_statement
                              fields:
                                text: joinedScope = rightScope;
                              children: []
                              pos: 47028
                              length: 25
                            pos: 47016
                            length: 47
                          pos: 46987
                          length: 146
                        pos: 46977
                        length: 164
                      pos: 46952
                      length: 189
                    - type: return_statement
                      fields:
                        text: return joinedScope;
                      children: []
                      pos: 47148
                      length: 19
                    pos: 46944
                    length: 229
                children: []
                pos: 46913
                length: 260
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: getOutcomeFlowScope
                    children: []
                    pos: 47294
                    length: 19
                  parameters:
                    type: method_parameters
                    fields: {}
                    children:
                    - type: formal_parameter
                      fields:
                        text: int nodeType
                      children: []
                      pos: 47314
                      length: 12
                    pos: 47284
                    length: 312
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: or
                              fields:
                                left:
                                  type: and
                                  fields:
                                    left:
                                      type: equals
                                      fields:
                                        left:
                                          type: identifier
                                          fields:
                                            text: nodeType
                                          children: []
                                          pos: 47357
                                          length: 8
                                        right:
                                          type: field_access
                                          fields:
                                            text: Token.AND
                                          children: []
                                          pos: 47369
                                          length: 9
                                      children: []
                                      pos: 47357
                                      length: 21
                                    right:
                                      type: identifier
                                      fields:
                                        text: outcome
                                      children: []
                                      pos: 47382
                                      length: 7
                                  children: []
                                  pos: 47357
                                  length: 32
                                right:
                                  type: and
                                  fields:
                                    left:
                                      type: equals
                                      fields:
                                        left:
                                          type: identifier
                                          fields:
                                            text: nodeType
                                          children: []
                                          pos: 47403
                                          length: 8
                                        right:
                                          type: field_access
                                          fields:
                                            text: Token.OR
                                          children: []
                                          pos: 47415
                                          length: 8
                                      children: []
                                      pos: 47403
                                      length: 20
                                    right:
                                      type: unary_expression
                                      fields:
                                        text: "!outcome"
                                      children: []
                                      pos: 47427
                                      length: 8
                                  children: []
                                  pos: 47403
                                  length: 32
                              children: []
                              pos: 47357
                              length: 78
                          children: []
                          pos: 47356
                          length: 80
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: return_statement
                          fields:
                            text: return rightScope;
                          children: []
                          pos: 47512
                          length: 18
                        pos: 47437
                        length: 101
                      pos: 47353
                      length: 237
                    pos: 47345
                    length: 251
                children: []
                pos: 47284
                length: 312
              pos: 46025
              length: 1575
          children: []
          pos: 46025
          length: 1575
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: newBooleanOutcomePair
              children: []
              pos: 47631
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType jsType
                children: []
                pos: 47660
                length: 13
              pos: 47604
              length: 478
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: jsType
                            children: []
                            pos: 47706
                            length: 6
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 47716
                            length: 4
                        children: []
                        pos: 47706
                        length: 14
                    children: []
                    pos: 47705
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: |-
                        return new BooleanOutcomePair(
                                  BooleanLiteralSet.BOTH, BooleanLiteralSet.BOTH, flowScope, flowScope);
                    children: []
                    pos: 47730
                    length: 111
                  pos: 47722
                  length: 125
                pos: 47702
                length: 145
              - type: return_statement
                fields:
                  text: |-
                    return new BooleanOutcomePair(jsType.getPossibleToBooleanOutcomes(),
                            registry.getNativeType(BOOLEAN_TYPE).isSubtype(jsType) ?
                                BooleanLiteralSet.BOTH : BooleanLiteralSet.EMPTY,
                            flowScope, flowScope);
                children: []
                pos: 47852
                length: 226
              pos: 47696
              length: 386
          children: []
          pos: 47604
          length: 478
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: redeclareSimpleVar
              children: []
              pos: 48099
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 48125
                length: 15
              pos: 48086
              length: 394
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(nameNode.isName());
                children: []
                pos: 48179
                length: 44
              - type: local_variable_declaration
                fields:
                  text: String varName = nameNode.getString();
                children: []
                pos: 48228
                length: 38
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: varType
                            children: []
                            pos: 48275
                            length: 7
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 48286
                            length: 4
                        children: []
                        pos: 48275
                        length: 15
                    children: []
                    pos: 48274
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: varType = getNativeType(JSTypeNative.UNKNOWN_TYPE);
                    children: []
                    pos: 48300
                    length: 51
                  pos: 48292
                  length: 65
                pos: 48271
                length: 86
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isUnflowable(syntacticScope.getVar(varName))
                        children: []
                        pos: 48366
                        length: 44
                    children: []
                    pos: 48365
                    length: 46
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 48420
                    length: 7
                  pos: 48412
                  length: 21
                pos: 48362
                length: 71
              - type: expression_statement
                fields:
                  text: scope.inferSlotType(varName, varType);
                children: []
                pos: 48438
                length: 38
              pos: 48173
              length: 307
          children: []
          pos: 48086
          length: 394
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isUnflowable
              children: []
              pos: 48500
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Var v
                children: []
                pos: 48513
                length: 5
              pos: 48484
              length: 214
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return v != null && v.isLocal() && v.isMarkedEscaped() &&
                            // It's OK to flow a variable in the scope where it's escaped.
                            v.getScope() == syntacticScope;
                children: []
                pos: 48526
                length: 168
              pos: 48520
              length: 178
          children: []
          pos: 48484
          length: 214
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getJSType
              children: []
              pos: 48823
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 48833
                length: 6
              pos: 48808
              length: 461
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType jsType = n.getJSType();
                children: []
                pos: 48847
                length: 30
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: jsType
                            children: []
                            pos: 48886
                            length: 6
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 48896
                            length: 4
                        children: []
                        pos: 48886
                        length: 14
                    children: []
                    pos: 48885
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return getNativeType(UNKNOWN_TYPE);
                    children: []
                    pos: 49190
                    length: 35
                  pos: 48902
                  length: 329
                pos: 48882
                length: 383
              pos: 48841
              length: 428
          children: []
          pos: 48808
          length: 461
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getNativeType
              children: []
              pos: 49288
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSTypeNative typeId
                children: []
                pos: 49302
                length: 19
              pos: 49273
              length: 98
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return registry.getNativeType(typeId);
                children: []
                pos: 49329
                length: 38
              pos: 49323
              length: 48
          children: []
          pos: 49273
          length: 98
        pos: 2592
        length: 46781
    children: []
    pos: 2592
    length: 46781
  pos: 0
  length: 49374
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: TypeInference
        children: []
        pos: 2598
        length: 13
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType TEMPLATE_TYPE_NOT_OBJECT_TYPE =
                    DiagnosticType.warning(
                    "JSC_TEMPLATE_TYPE_NOT_OBJECT_TYPE",
                    "The template type must be an object type.\nActual: {0}");
          children: []
          pos: 2694
          length: 197
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType TEMPLATE_TYPE_OF_THIS_EXPECTED =
                    DiagnosticType.warning(
                    "JSC_TEMPLATE_TYPE_OF_THIS_EXPECTED",
                    "A function type with the template type as the type of this must be a " +
                    "parameter type");
          children: []
          pos: 2895
          length: 239
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType FUNCTION_LITERAL_UNDEFINED_THIS =
                  DiagnosticType.warning(
                      "JSC_FUNCTION_LITERAL_UNDEFINED_THIS",
                      "Function literal argument refers to undefined this argument");
          children: []
          pos: 3138
          length: 208
        - type: field_declaration
          fields:
            text: private final AbstractCompiler compiler;
          children: []
          pos: 3350
          length: 40
        - type: field_declaration
          fields:
            text: private final JSTypeRegistry registry;
          children: []
          pos: 3393
          length: 38
        - type: field_declaration
          fields:
            text: private final ReverseAbstractInterpreter reverseInterpreter;
          children: []
          pos: 3434
          length: 60
        - type: field_declaration
          fields:
            text: private final Scope syntacticScope;
          children: []
          pos: 3497
          length: 35
        - type: field_declaration
          fields:
            text: private final FlowScope functionScope;
          children: []
          pos: 3535
          length: 38
        - type: field_declaration
          fields:
            text: private final FlowScope bottomScope;
          children: []
          pos: 3576
          length: 36
        - type: field_declaration
          fields:
            text: private final Map<String, AssertionFunctionSpec> assertionFunctionsMap;
          children: []
          pos: 3615
          length: 71
        - type: constructor_declaration
          fields:
            text: |-
              TypeInference(AbstractCompiler compiler, ControlFlowGraph<Node> cfg,
                              ReverseAbstractInterpreter reverseInterpreter,
                              Scope functionScope,
                              Map<String, AssertionFunctionSpec> assertionFunctionsMap) {
                  super(cfg, new LinkedFlowScope.FlowScopeJoinOp());
                  this.compiler = compiler;
                  this.registry = compiler.getTypeRegistry();
                  this.reverseInterpreter = reverseInterpreter;
                  this.syntacticScope = functionScope;
                  this.functionScope = LinkedFlowScope.createEntryLattice(functionScope);
                  this.assertionFunctionsMap = assertionFunctionsMap;

                  // For each local variable declared with the VAR keyword, the entry
                  // type is VOID.
                  Iterator<Var> varIt =
                      functionScope.getDeclarativelyUnboundVarsWithoutTypes();
                  while (varIt.hasNext()) {
                    Var var = varIt.next();
                    if (isUnflowable(var)) {
                      continue;
                    }

                    this.functionScope.inferSlotType(
                        var.getName(), getNativeType(VOID_TYPE));
                  }

                  this.bottomScope = LinkedFlowScope.createEntryLattice(
                      new Scope(functionScope.getRootNode(), functionScope.getTypeOfThis()));
                }
          children: []
          pos: 3690
          length: 1145
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createInitialEstimateLattice
              children: []
              pos: 4861
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 4839
              length: 82
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return bottomScope;
                children: []
                pos: 4898
                length: 19
              pos: 4892
              length: 29
          children: []
          pos: 4839
          length: 82
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createEntryLattice
              children: []
              pos: 4947
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 4925
              length: 74
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return functionScope;
                children: []
                pos: 4974
                length: 21
              pos: 4968
              length: 31
          children: []
          pos: 4925
          length: 74
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: flowThrough
              children: []
              pos: 5025
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 5037
                length: 6
              pos: 5003
              length: 348
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: input
                            children: []
                            pos: 5191
                            length: 5
                          right:
                            type: identifier
                            fields:
                              text: bottomScope
                            children: []
                            pos: 5200
                            length: 11
                        children: []
                        pos: 5191
                        length: 20
                    children: []
                    pos: 5190
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return input;
                    children: []
                    pos: 5221
                    length: 13
                  pos: 5213
                  length: 27
                pos: 5187
                length: 53
              - type: local_variable_declaration
                fields:
                  text: FlowScope output = input.createChildFlowScope();
                children: []
                pos: 5246
                length: 48
              - type: expression_statement
                fields:
                  text: output = traverse(n, output);
                children: []
                pos: 5299
                length: 29
              - type: return_statement
                fields:
                  text: return output;
                children: []
                pos: 5333
                length: 14
              pos: 5062
              length: 289
          children: []
          pos: 5003
          length: 348
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: branchedFlowThrough
              children: []
              pos: 5418
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node source
                children: []
                pos: 5438
                length: 11
              pos: 5355
              length: 4656
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: FlowScope output = flowThrough(source, input);
                children: []
                pos: 5789
                length: 46
              - type: local_variable_declaration
                fields:
                  text: Node condition = null;
                children: []
                pos: 5840
                length: 22
              - type: local_variable_declaration
                fields:
                  text: FlowScope conditionFlowScope = null;
                children: []
                pos: 5867
                length: 36
              - type: local_variable_declaration
                fields:
                  text: BooleanOutcomePair conditionOutcomes = null;
                children: []
                pos: 5908
                length: 44
              - type: local_variable_declaration
                fields:
                  text: List<DiGraphEdge<Node, Branch>> branchEdges = getCfg().getOutEdges(source);
                children: []
                pos: 5958
                length: 75
              - type: local_variable_declaration
                fields:
                  text: List<FlowScope> result = Lists.newArrayListWithCapacity(branchEdges.size());
                children: []
                pos: 6038
                length: 76
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (DiGraphEdge<Node, Branch> branchEdge : branchEdges) {
                          Branch branch = branchEdge.getValue();
                          FlowScope newScope = output;

                          switch (branch) {
                            case ON_TRUE:
                              if (NodeUtil.isForIn(source)) {
                                // item is assigned a property name, so its type should be string.
                                Node item = source.getFirstChild();
                                Node obj = item.getNext();

                                FlowScope informed = traverse(obj, output.createChildFlowScope());

                                if (item.isVar()) {
                                  item = item.getFirstChild();
                                }
                                if (item.isName()) {
                                  JSType iterKeyType = getNativeType(STRING_TYPE);
                                  ObjectType objType = getJSType(obj).dereference();
                                  JSType objIndexType = objType == null ?
                                      null : objType.getIndexType();
                                  if (objIndexType != null && !objIndexType.isUnknownType()) {
                                    JSType narrowedKeyType =
                                        iterKeyType.getGreatestSubtype(objIndexType);
                                    if (!narrowedKeyType.isEmptyType()) {
                                      iterKeyType = narrowedKeyType;
                                    }
                                  }
                                  redeclareSimpleVar(informed, item, iterKeyType);
                                }
                                newScope = informed;
                                break;
                              }

                              // FALL THROUGH

                            case ON_FALSE:
                              if (condition == null) {
                                condition = NodeUtil.getConditionExpression(source);
                                if (condition == null && source.isCase()) {
                                  condition = source;

                                  // conditionFlowScope is cached from previous iterations
                                  // of the loop.
                                  if (conditionFlowScope == null) {
                                    conditionFlowScope = traverse(
                                        condition.getFirstChild(), output.createChildFlowScope());
                                  }
                                }
                              }

                              if (condition != null) {
                                if (condition.isAnd() ||
                                    condition.isOr()) {
                                  // When handling the short-circuiting binary operators,
                                  // the outcome scope on true can be different than the outcome
                                  // scope on false.
                                  //
                                  // TODO(nicksantos): The "right" way to do this is to
                                  // carry the known outcome all the way through the
                                  // recursive traversal, so that we can construct a
                                  // different flow scope based on the outcome. However,
                                  // this would require a bunch of code and a bunch of
                                  // extra computation for an edge case. This seems to be
                                  // a "good enough" approximation.

                                  // conditionOutcomes is cached from previous iterations
                                  // of the loop.
                                  if (conditionOutcomes == null) {
                                    conditionOutcomes = condition.isAnd() ?
                                        traverseAnd(condition, output.createChildFlowScope()) :
                                        traverseOr(condition, output.createChildFlowScope());
                                  }
                                  newScope =
                                      reverseInterpreter.getPreciserScopeKnowingConditionOutcome(
                                          condition,
                                          conditionOutcomes.getOutcomeFlowScope(
                                              condition.getType(), branch == Branch.ON_TRUE),
                                          branch == Branch.ON_TRUE);
                                } else {
                                  // conditionFlowScope is cached from previous iterations
                                  // of the loop.
                                  if (conditionFlowScope == null) {
                                    conditionFlowScope =
                                        traverse(condition, output.createChildFlowScope());
                                  }
                                  newScope =
                                      reverseInterpreter.getPreciserScopeKnowingConditionOutcome(
                                          condition, conditionFlowScope, branch == Branch.ON_TRUE);
                                }
                              }
                              break;
                          }

                          result.add(newScope.optimize());
                        }
                children: []
                pos: 6119
                length: 3869
              - type: return_statement
                fields:
                  text: return result;
                children: []
                pos: 9993
                length: 14
              pos: 5468
              length: 4543
          children: []
          pos: 5355
          length: 4656
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverse
              children: []
              pos: 10033
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 10042
                length: 6
              pos: 10015
              length: 4132
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 10081
                        length: 11
                    children: []
                    pos: 10080
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.ASSIGN:
                                scope = traverseAssign(n, scope);
                                break;

                              case Token.NAME:
                                scope = traverseName(n, scope);
                                break;

                              case Token.GETPROP:
                                scope = traverseGetProp(n, scope);
                                break;

                              case Token.AND:
                                scope = traverseAnd(n, scope).getJoinedFlowScope()
                                    .createChildFlowScope();
                                break;

                              case Token.OR:
                                scope = traverseOr(n, scope).getJoinedFlowScope()
                                    .createChildFlowScope();
                                break;

                              case Token.HOOK:
                                scope = traverseHook(n, scope);
                                break;

                              case Token.OBJECTLIT:
                                scope = traverseObjectLiteral(n, scope);
                                break;

                              case Token.CALL:
                                scope = traverseCall(n, scope);
                                break;

                              case Token.NEW:
                                scope = traverseNew(n, scope);
                                break;

                              case Token.ASSIGN_ADD:
                              case Token.ADD:
                                scope = traverseAdd(n, scope);
                                break;

                              case Token.POS:
                              case Token.NEG:
                                scope = traverse(n.getFirstChild(), scope);  // Find types.
                                n.setJSType(getNativeType(NUMBER_TYPE));
                                break;

                              case Token.ARRAYLIT:
                                scope = traverseArrayLiteral(n, scope);
                                break;

                              case Token.THIS:
                                n.setJSType(scope.getTypeOfThis());
                                break;

                              case Token.ASSIGN_LSH:
                              case Token.ASSIGN_RSH:
                              case Token.LSH:
                              case Token.RSH:
                              case Token.ASSIGN_URSH:
                              case Token.URSH:
                              case Token.ASSIGN_DIV:
                              case Token.ASSIGN_MOD:
                              case Token.ASSIGN_BITAND:
                              case Token.ASSIGN_BITXOR:
                              case Token.ASSIGN_BITOR:
                              case Token.ASSIGN_MUL:
                              case Token.ASSIGN_SUB:
                              case Token.DIV:
                              case Token.MOD:
                              case Token.BITAND:
                              case Token.BITXOR:
                              case Token.BITOR:
                              case Token.MUL:
                              case Token.SUB:
                              case Token.DEC:
                              case Token.INC:
                              case Token.BITNOT:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getNativeType(NUMBER_TYPE));
                                break;

                              case Token.PARAM_LIST:
                                scope = traverse(n.getFirstChild(), scope);
                                n.setJSType(getJSType(n.getFirstChild()));
                                break;

                              case Token.COMMA:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getJSType(n.getLastChild()));
                                break;

                              case Token.TYPEOF:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getNativeType(STRING_TYPE));
                                break;

                              case Token.DELPROP:
                              case Token.LT:
                              case Token.LE:
                              case Token.GT:
                              case Token.GE:
                              case Token.NOT:
                              case Token.EQ:
                              case Token.NE:
                              case Token.SHEQ:
                              case Token.SHNE:
                              case Token.INSTANCEOF:
                              case Token.IN:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getNativeType(BOOLEAN_TYPE));
                                break;

                              case Token.GETELEM:
                                scope = traverseGetElem(n, scope);
                                break;

                              case Token.EXPR_RESULT:
                                scope = traverseChildren(n, scope);
                                if (n.getFirstChild().isGetProp()) {
                                  ensurePropertyDeclared(n.getFirstChild());
                                }
                                break;

                              case Token.SWITCH:
                                scope = traverse(n.getFirstChild(), scope);
                                break;

                              case Token.RETURN:
                                scope = traverseReturn(n, scope);
                                break;

                              case Token.VAR:
                              case Token.THROW:
                                scope = traverseChildren(n, scope);
                                break;

                              case Token.CATCH:
                                scope = traverseCatch(n, scope);
                                break;
                            }
                    children: []
                    pos: 10094
                    length: 3452
                children: []
                pos: 10073
                length: 3473
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!n.isFunction()"
                        children: []
                        pos: 13555
                        length: 15
                    children: []
                    pos: 13554
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSDocInfo info = n.getJSDocInfo();
                    children: []
                    pos: 13580
                    length: 34
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: info
                                    children: []
                                    pos: 13625
                                    length: 4
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 13633
                                    length: 4
                                children: []
                                pos: 13625
                                length: 12
                              right:
                                type: method_invocation
                                fields:
                                  text: info.hasType()
                                children: []
                                pos: 13641
                                length: 14
                            children: []
                            pos: 13625
                            length: 30
                        children: []
                        pos: 13624
                        length: 32
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: JSType castType = info.getType().evaluate(syntacticScope,
                            registry);
                        children: []
                        pos: 13667
                        length: 68
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: n.isQualifiedName()
                                    children: []
                                    pos: 13931
                                    length: 19
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: n.getParent().isExprResult()
                                    children: []
                                    pos: 13966
                                    length: 28
                                children: []
                                pos: 13931
                                length: 63
                            children: []
                            pos: 13930
                            length: 65
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: updateScopeForTypeChange(scope, n, n.getJSType(),
                                castType);
                            children: []
                            pos: 14008
                            length: 60
                          pos: 13996
                          length: 82
                        pos: 13927
                        length: 151
                      - type: expression_statement
                        fields:
                          text: n.setJSType(castType);
                        children: []
                        pos: 14088
                        length: 22
                      pos: 13657
                      length: 461
                    pos: 13621
                    length: 497
                  pos: 13572
                  length: 552
                pos: 13551
                length: 573
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 14130
                length: 13
              pos: 10067
              length: 4080
          children: []
          pos: 10015
          length: 4132
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseReturn
              children: []
              pos: 14211
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 14226
                length: 6
              pos: 14193
              length: 496
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 14257
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node retValue = n.getFirstChild();
                children: []
                pos: 14298
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: retValue
                            children: []
                            pos: 14341
                            length: 8
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 14353
                            length: 4
                        children: []
                        pos: 14341
                        length: 16
                    children: []
                    pos: 14340
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType type = functionScope.getRootNode().getJSType();
                    children: []
                    pos: 14367
                    length: 54
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 14432
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 14440
                                length: 4
                            children: []
                            pos: 14432
                            length: 12
                        children: []
                        pos: 14431
                        length: 14
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: FunctionType fnType = type.toMaybeFunctionType();
                        children: []
                        pos: 14456
                        length: 49
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: fnType
                                    children: []
                                    pos: 14518
                                    length: 6
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 14528
                                    length: 4
                                children: []
                                pos: 14518
                                length: 14
                            children: []
                            pos: 14517
                            length: 16
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: |-
                                inferPropertyTypesToMatchConstraint(
                                              retValue.getJSType(), fnType.getReturnType());
                            children: []
                            pos: 14546
                            length: 97
                          pos: 14534
                          length: 119
                        pos: 14514
                        length: 139
                      pos: 14446
                      length: 215
                    pos: 14428
                    length: 233
                  pos: 14359
                  length: 308
                pos: 14337
                length: 330
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 14672
                length: 13
              pos: 14251
              length: 438
          children: []
          pos: 14193
          length: 496
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseCatch
              children: []
              pos: 14854
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 14868
                length: 6
              pos: 14836
              length: 244
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node name = n.getFirstChild();
                children: []
                pos: 14899
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType type = getNativeType(JSTypeNative.UNKNOWN_TYPE);
                children: []
                pos: 14934
                length: 55
              - type: expression_statement
                fields:
                  text: name.setJSType(type);
                children: []
                pos: 14994
                length: 21
              - type: expression_statement
                fields:
                  text: redeclareSimpleVar(scope, name, type);
                children: []
                pos: 15020
                length: 38
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 15063
                length: 13
              pos: 14893
              length: 187
          children: []
          pos: 14836
          length: 244
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseAssign
              children: []
              pos: 15102
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 15117
                length: 6
              pos: 15084
              length: 366
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 15148
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 15183
                length: 30
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 15218
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = left.getJSType();
                children: []
                pos: 15259
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = getJSType(right);
                children: []
                pos: 15299
                length: 36
              - type: expression_statement
                fields:
                  text: n.setJSType(rightType);
                children: []
                pos: 15340
                length: 23
              - type: expression_statement
                fields:
                  text: updateScopeForTypeChange(scope, left, leftType, rightType);
                children: []
                pos: 15369
                length: 59
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 15433
                length: 13
              pos: 15142
              length: 308
          children: []
          pos: 15084
          length: 366
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateScopeForTypeChange
              children: []
              pos: 15584
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 15616
                length: 15
              pos: 15571
              length: 1794
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(resultType);
                children: []
                pos: 15686
                length: 39
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: left.getType()
                        children: []
                        pos: 15738
                        length: 14
                    children: []
                    pos: 15737
                    length: 16
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.NAME:
                                String varName = left.getString();
                                Var var = syntacticScope.getVar(varName);

                                // When looking at VAR initializers for declared VARs, we trust
                                // the declared type over the type it's being initialized to.
                                // This has two purposes:
                                // 1) We avoid re-declaring declared variables so that built-in
                                //    types defined in externs are not redeclared.
                                // 2) When there's a lexical closure like
                                //    /** @type {?string} */ var x = null;
                                //    function f() { x = 'xyz'; }
                                //    the inference will ignore the lexical closure,
                                //    which is just wrong. This bug needs to be fixed eventually.
                                boolean isVarDeclaration = left.hasChildren();
                                if (!isVarDeclaration || var == null || var.isTypeInferred()) {
                                  redeclareSimpleVar(scope, left, resultType);
                                }
                                left.setJSType(isVarDeclaration || leftType == null ?
                                    resultType : null);

                                if (var != null && var.isTypeInferred()) {
                                  JSType oldType = var.getType();
                                  var.setType(oldType == null ?
                                      resultType : oldType.getLeastSupertype(resultType));
                                }
                                break;
                              case Token.GETPROP:
                                String qualifiedName = left.getQualifiedName();
                                if (qualifiedName != null) {
                                  scope.inferQualifiedSlot(left, qualifiedName,
                                      leftType == null ? getNativeType(UNKNOWN_TYPE) : leftType,
                                      resultType);
                                }

                                left.setJSType(resultType);
                                ensurePropertyDefined(left, resultType);
                                break;
                            }
                    children: []
                    pos: 15754
                    length: 1607
                children: []
                pos: 15730
                length: 1631
              pos: 15680
              length: 1685
          children: []
          pos: 15571
          length: 1794
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensurePropertyDefined
              children: []
              pos: 17460
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getprop
                children: []
                pos: 17482
                length: 12
              pos: 17447
              length: 1933
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String propName = getprop.getLastChild().getString();
                children: []
                pos: 17520
                length: 53
              - type: local_variable_declaration
                fields:
                  text: JSType nodeType = getJSType(getprop.getFirstChild());
                children: []
                pos: 17578
                length: 53
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType objectType = ObjectType.cast(
                            nodeType.restrictByNotNullOrUndefined());
                children: []
                pos: 17636
                length: 90
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: objectType
                            children: []
                            pos: 17735
                            length: 10
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 17749
                            length: 4
                        children: []
                        pos: 17735
                        length: 18
                    children: []
                    pos: 17734
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: registry.registerPropertyOnType(propName, nodeType);
                    children: []
                    pos: 17763
                    length: 52
                  pos: 17755
                  length: 66
                pos: 17731
                length: 1645
              pos: 17514
              length: 1866
          children: []
          pos: 17447
          length: 1933
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensurePropertyDeclared
              children: []
              pos: 19664
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getprop
                children: []
                pos: 19687
                length: 12
              pos: 19651
              length: 266
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType ownerType = ObjectType.cast(
                            getJSType(getprop.getFirstChild()).restrictByNotNullOrUndefined());
                children: []
                pos: 19707
                length: 115
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: ownerType
                            children: []
                            pos: 19831
                            length: 9
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 19844
                            length: 4
                        children: []
                        pos: 19831
                        length: 17
                    children: []
                    pos: 19830
                    length: 19
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensurePropertyDeclaredHelper(getprop, ownerType);
                    children: []
                    pos: 19858
                    length: 49
                  pos: 19850
                  length: 63
                pos: 19827
                length: 86
              pos: 19701
              length: 216
          children: []
          pos: 19651
          length: 266
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensurePropertyDeclaredHelper
              children: []
              pos: 20048
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getprop
                children: []
                pos: 20084
                length: 12
              pos: 20032
              length: 834
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String propName = getprop.getLastChild().getString();
                children: []
                pos: 20127
                length: 53
              - type: local_variable_declaration
                fields:
                  text: String qName = getprop.getQualifiedName();
                children: []
                pos: 20185
                length: 42
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: qName
                            children: []
                            pos: 20236
                            length: 5
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 20245
                            length: 4
                        children: []
                        pos: 20236
                        length: 13
                    children: []
                    pos: 20235
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Var var = syntacticScope.getVar(qName);
                    children: []
                    pos: 20259
                    length: 39
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: var
                                    children: []
                                    pos: 20309
                                    length: 3
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 20316
                                    length: 4
                                children: []
                                pos: 20309
                                length: 11
                              right:
                                type: unary_expression
                                fields:
                                  text: "!var.isTypeInferred()"
                                children: []
                                pos: 20324
                                length: 21
                            children: []
                            pos: 20309
                            length: 36
                        children: []
                        pos: 20308
                        length: 38
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: or
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: propName.equals("prototype")
                                    children: []
                                    pos: 20436
                                    length: 28
                                  right:
                                    type: parenthesized_expression
                                    fields:
                                      expression:
                                        type: and
                                        fields:
                                          left:
                                            type: unary_expression
                                            fields:
                                              text: "!objectType.hasOwnProperty(propName)"
                                            children: []
                                            pos: 20559
                                            length: 36
                                          right:
                                            type: parenthesized_expression
                                            fields:
                                              expression:
                                                type: or
                                                fields:
                                                  left:
                                                    type: unary_expression
                                                    fields:
                                                      text: "!objectType.isInstanceType()"
                                                    children: []
                                                    pos: 20613
                                                    length: 28
                                                  right:
                                                    type: parenthesized_expression
                                                    fields:
                                                      expression:
                                                        type: and
                                                        fields:
                                                          left:
                                                            type: method_invocation
                                                            fields:
                                                              text: var.isExtern()
                                                            children: []
                                                            pos: 20663
                                                            length: 14
                                                          right:
                                                            type: unary_expression
                                                            fields:
                                                              text: "!objectType.isNativeObjectType()"
                                                            children: []
                                                            pos: 20681
                                                            length: 32
                                                        children: []
                                                        pos: 20663
                                                        length: 50
                                                    children: []
                                                    pos: 20662
                                                    length: 52
                                                children: []
                                                pos: 20613
                                                length: 101
                                            children: []
                                            pos: 20612
                                            length: 103
                                        children: []
                                        pos: 20559
                                        length: 156
                                    children: []
                                    pos: 20558
                                    length: 158
                                children: []
                                pos: 20436
                                length: 280
                            children: []
                            pos: 20435
                            length: 282
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: return_statement
                            fields:
                              text: |-
                                return objectType.defineDeclaredProperty(
                                              propName, var.getType(), getprop);
                            children: []
                            pos: 20730
                            length: 90
                          pos: 20718
                          length: 112
                        pos: 20432
                        length: 398
                      pos: 20347
                      length: 491
                    pos: 20305
                    length: 533
                  pos: 20251
                  length: 593
                pos: 20232
                length: 612
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 20849
                length: 13
              pos: 20121
              length: 745
          children: []
          pos: 20032
          length: 834
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseName
              children: []
              pos: 20888
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 20901
                length: 6
              pos: 20870
              length: 1420
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String varName = n.getString();
                children: []
                pos: 20932
                length: 31
              - type: local_variable_declaration
                fields:
                  text: Node value = n.getFirstChild();
                children: []
                pos: 20968
                length: 31
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 21004
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: value
                            children: []
                            pos: 21041
                            length: 5
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 21050
                            length: 4
                        children: []
                        pos: 21041
                        length: 13
                    children: []
                    pos: 21040
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: scope = traverse(value, scope);
                    children: []
                    pos: 21064
                    length: 31
                  - type: expression_statement
                    fields:
                      text: |-
                        updateScopeForTypeChange(scope, n, n.getJSType() /* could be null */,
                                  getJSType(value));
                    children: []
                    pos: 21102
                    length: 98
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 21207
                    length: 13
                  pos: 21056
                  length: 170
                pos: 21037
                length: 1208
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 22250
                length: 18
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 22273
                length: 13
              pos: 20926
              length: 1364
          children: []
          pos: 20870
          length: 1420
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseArrayLiteral
              children: []
              pos: 22357
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 22378
                length: 6
              pos: 22339
              length: 171
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 22409
                length: 35
              - type: expression_statement
                fields:
                  text: n.setJSType(getNativeType(ARRAY_TYPE));
                children: []
                pos: 22449
                length: 39
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 22493
                length: 13
              pos: 22403
              length: 107
          children: []
          pos: 22339
          length: 171
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseObjectLiteral
              children: []
              pos: 22532
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 22554
                length: 6
              pos: 22514
              length: 2261
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 22585
                length: 28
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(type);
                children: []
                pos: 22618
                length: 33
              - type: for_statement
                fields:
                  text: |-
                    for (Node name = n.getFirstChild(); name != null; name = name.getNext()) {
                          scope = traverse(name.getFirstChild(), scope);
                        }
                children: []
                pos: 22657
                length: 133
              - type: local_variable_declaration
                fields:
                  text: ObjectType objectType = ObjectType.cast(type);
                children: []
                pos: 23103
                length: 46
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: objectType
                            children: []
                            pos: 23158
                            length: 10
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 23172
                            length: 4
                        children: []
                        pos: 23158
                        length: 18
                    children: []
                    pos: 23157
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 23186
                    length: 13
                  pos: 23178
                  length: 27
                pos: 23154
                length: 51
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean hasLendsName = n.getJSDocInfo() != null &&
                            n.getJSDocInfo().getLendsName() != null;
                children: []
                pos: 23211
                length: 99
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: objectType.hasReferenceName()
                            children: []
                            pos: 23319
                            length: 29
                          right:
                            type: unary_expression
                            fields:
                              text: "!hasLendsName"
                            children: []
                            pos: 23352
                            length: 13
                        children: []
                        pos: 23319
                        length: 46
                    children: []
                    pos: 23318
                    length: 48
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 23375
                    length: 13
                  pos: 23367
                  length: 27
                pos: 23315
                length: 79
              - type: local_variable_declaration
                fields:
                  text: |-
                    String qObjName = NodeUtil.getBestLValueName(
                            NodeUtil.getBestLValue(n));
                children: []
                pos: 23400
                length: 81
              - type: for_statement
                fields:
                  text: |-
                    for (Node name = n.getFirstChild(); name != null;
                             name = name.getNext()) {
                          Node value = name.getFirstChild();
                          String memberName = NodeUtil.getObjectLitKeyName(name);
                          if (memberName != null) {
                            JSType rawValueType =  name.getFirstChild().getJSType();
                            JSType valueType = NodeUtil.getObjectLitKeyTypeFromValueType(
                                name, rawValueType);
                            if (valueType == null) {
                              valueType = getNativeType(UNKNOWN_TYPE);
                            }
                            objectType.defineInferredProperty(memberName, valueType, name);

                            // Do normal flow inference if this is a direct property assignment.
                            if (qObjName != null && name.isStringKey()) {
                              String qKeyName = qObjName + "." + memberName;
                              Var var = syntacticScope.getVar(qKeyName);
                              JSType oldType = var == null ? null : var.getType();
                              if (var != null && var.isTypeInferred()) {
                                var.setType(oldType == null ?
                                    valueType : oldType.getLeastSupertype(oldType));
                              }

                              scope.inferQualifiedSlot(name, qKeyName,
                                  oldType == null ? getNativeType(UNKNOWN_TYPE) : oldType,
                                  valueType);
                            }
                          } else {
                            n.setJSType(getNativeType(UNKNOWN_TYPE));
                          }
                        }
                children: []
                pos: 23486
                length: 1267
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 24758
                length: 13
              pos: 22579
              length: 2196
          children: []
          pos: 22514
          length: 2261
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseAdd
              children: []
              pos: 24797
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 24809
                length: 6
              pos: 24779
              length: 1164
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 24840
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = left.getNext();
                children: []
                pos: 24875
                length: 28
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 24908
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = left.getJSType();
                children: []
                pos: 24949
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = right.getJSType();
                children: []
                pos: 24989
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType type = getNativeType(UNKNOWN_TYPE);
                children: []
                pos: 25032
                length: 42
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: leftType
                                children: []
                                pos: 25083
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 25095
                                length: 4
                            children: []
                            pos: 25083
                            length: 16
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: rightType
                                children: []
                                pos: 25103
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 25116
                                length: 4
                            children: []
                            pos: 25103
                            length: 17
                        children: []
                        pos: 25083
                        length: 37
                    children: []
                    pos: 25082
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: boolean leftIsUnknown = leftType.isUnknownType();
                    children: []
                    pos: 25130
                    length: 49
                  - type: local_variable_declaration
                    fields:
                      text: boolean rightIsUnknown = rightType.isUnknownType();
                    children: []
                    pos: 25186
                    length: 51
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: leftIsUnknown
                                children: []
                                pos: 25248
                                length: 13
                              right:
                                type: identifier
                                fields:
                                  text: rightIsUnknown
                                children: []
                                pos: 25265
                                length: 14
                            children: []
                            pos: 25248
                            length: 31
                        children: []
                        pos: 25247
                        length: 33
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: type = getNativeType(UNKNOWN_TYPE);
                        children: []
                        pos: 25291
                        length: 35
                      pos: 25281
                      length: 53
                    pos: 25244
                    length: 552
                  pos: 25122
                  length: 680
                pos: 25079
                length: 723
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 25807
                length: 18
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.isAssignAdd()
                        children: []
                        pos: 25835
                        length: 15
                    children: []
                    pos: 25834
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: updateScopeForTypeChange(scope, left, leftType, type);
                    children: []
                    pos: 25860
                    length: 54
                  pos: 25852
                  length: 68
                pos: 25831
                length: 89
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 25926
                length: 13
              pos: 24834
              length: 1109
          children: []
          pos: 24779
          length: 1164
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isAddedAsNumber
              children: []
              pos: 25963
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType type
                children: []
                pos: 25979
                length: 11
              pos: 25947
              length: 197
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return type.isSubtype(registry.createUnionType(VOID_TYPE, NULL_TYPE,
                            NUMBER_VALUE_OR_OBJECT_TYPE, BOOLEAN_TYPE, BOOLEAN_OBJECT_TYPE));
                children: []
                pos: 25998
                length: 142
              pos: 25992
              length: 152
          children: []
          pos: 25947
          length: 197
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseHook
              children: []
              pos: 26166
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 26179
                length: 6
              pos: 26148
              length: 1146
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node condition = n.getFirstChild();
                children: []
                pos: 26210
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node trueNode = condition.getNext();
                children: []
                pos: 26250
                length: 36
              - type: local_variable_declaration
                fields:
                  text: Node falseNode = n.getLastChild();
                children: []
                pos: 26291
                length: 34
              - type: expression_statement
                fields:
                  text: scope = traverse(condition, scope);
                children: []
                pos: 26359
                length: 35
              - type: local_variable_declaration
                fields:
                  text: |-
                    FlowScope trueScope = reverseInterpreter.
                            getPreciserScopeKnowingConditionOutcome(
                                condition, scope, true);
                children: []
                pos: 26474
                length: 127
              - type: local_variable_declaration
                fields:
                  text: |-
                    FlowScope falseScope = reverseInterpreter.
                            getPreciserScopeKnowingConditionOutcome(
                                condition, scope, false);
                children: []
                pos: 26606
                length: 129
              - type: expression_statement
                fields:
                  text: traverse(trueNode, trueScope.createChildFlowScope());
                children: []
                pos: 26790
                length: 53
              - type: expression_statement
                fields:
                  text: traverse(falseNode, falseScope.createChildFlowScope());
                children: []
                pos: 26900
                length: 55
              - type: local_variable_declaration
                fields:
                  text: JSType trueType = trueNode.getJSType();
                children: []
                pos: 27012
                length: 39
              - type: local_variable_declaration
                fields:
                  text: JSType falseType = falseNode.getJSType();
                children: []
                pos: 27056
                length: 41
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: trueType
                                children: []
                                pos: 27106
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 27118
                                length: 4
                            children: []
                            pos: 27106
                            length: 16
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: falseType
                                children: []
                                pos: 27126
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 27139
                                length: 4
                            children: []
                            pos: 27126
                            length: 17
                        children: []
                        pos: 27106
                        length: 37
                    children: []
                    pos: 27105
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: n.setJSType(trueType.getLeastSupertype(falseType));
                    children: []
                    pos: 27153
                    length: 51
                  pos: 27145
                  length: 65
                pos: 27102
                length: 146
              - type: return_statement
                fields:
                  text: return scope.createChildFlowScope();
                children: []
                pos: 27254
                length: 36
              pos: 26204
              length: 1090
          children: []
          pos: 26148
          length: 1146
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseCall
              children: []
              pos: 27316
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 27329
                length: 6
              pos: 27298
              length: 667
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 27360
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 27401
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType functionType = getJSType(left).restrictByNotNullOrUndefined();
                children: []
                pos: 27436
                length: 69
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: functionType
                            children: []
                            pos: 27514
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 27530
                            length: 4
                        children: []
                        pos: 27514
                        length: 20
                    children: []
                    pos: 27513
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: functionType.isFunctionType()
                            children: []
                            pos: 27548
                            length: 29
                        children: []
                        pos: 27547
                        length: 31
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: FunctionType fnType = functionType.toMaybeFunctionType();
                        children: []
                        pos: 27589
                        length: 57
                      - type: expression_statement
                        fields:
                          text: n.setJSType(fnType.getReturnType());
                        children: []
                        pos: 27655
                        length: 36
                      - type: expression_statement
                        fields:
                          text: backwardsInferenceFromCallSite(n, fnType);
                        children: []
                        pos: 27700
                        length: 42
                      pos: 27579
                      length: 171
                    pos: 27544
                    length: 341
                  pos: 27536
                  length: 355
                pos: 27510
                length: 381
              - type: expression_statement
                fields:
                  text: scope = tightenTypesAfterAssertions(scope, n);
                children: []
                pos: 27897
                length: 46
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 27948
                length: 13
              pos: 27354
              length: 611
          children: []
          pos: 27298
          length: 667
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: tightenTypesAfterAssertions
              children: []
              pos: 27987
              length: 27
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 28015
                length: 15
              pos: 27969
              length: 1512
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = callNode.getFirstChild();
                children: []
                pos: 28059
                length: 37
              - type: local_variable_declaration
                fields:
                  text: Node firstParam = left.getNext();
                children: []
                pos: 28101
                length: 33
              - type: local_variable_declaration
                fields:
                  text: |-
                    AssertionFunctionSpec assertionFunctionSpec =
                            assertionFunctionsMap.get(left.getQualifiedName());
                children: []
                pos: 28139
                length: 105
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: assertionFunctionSpec
                                children: []
                                pos: 28253
                                length: 21
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 28278
                                length: 4
                            children: []
                            pos: 28253
                            length: 29
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: firstParam
                                children: []
                                pos: 28286
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 28300
                                length: 4
                            children: []
                            pos: 28286
                            length: 18
                        children: []
                        pos: 28253
                        length: 51
                    children: []
                    pos: 28252
                    length: 53
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 28314
                    length: 13
                  pos: 28306
                  length: 27
                pos: 28249
                length: 84
              - type: local_variable_declaration
                fields:
                  text: Node assertedNode = assertionFunctionSpec.getAssertedParam(firstParam);
                children: []
                pos: 28338
                length: 71
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: assertedNode
                            children: []
                            pos: 28418
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 28434
                            length: 4
                        children: []
                        pos: 28418
                        length: 20
                    children: []
                    pos: 28417
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 28448
                    length: 13
                  pos: 28440
                  length: 27
                pos: 28414
                length: 53
              - type: local_variable_declaration
                fields:
                  text: JSTypeNative assertedType = assertionFunctionSpec.getAssertedType();
                children: []
                pos: 28472
                length: 68
              - type: local_variable_declaration
                fields:
                  text: String assertedNodeName = assertedNode.getQualifiedName();
                children: []
                pos: 28545
                length: 58
              - type: local_variable_declaration
                fields:
                  text: JSType narrowed;
                children: []
                pos: 28609
                length: 16
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: assertedType
                            children: []
                            pos: 28702
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 28718
                            length: 4
                        children: []
                        pos: 28702
                        length: 20
                    children: []
                    pos: 28701
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        scope = reverseInterpreter.getPreciserScopeKnowingConditionOutcome(
                                  assertedNode, scope, true);
                    children: []
                    pos: 28789
                    length: 105
                  - type: expression_statement
                    fields:
                      text: narrowed = getJSType(assertedNode).restrictByNotNullOrUndefined();
                    children: []
                    pos: 28951
                    length: 66
                  pos: 28724
                  length: 299
                pos: 28698
                length: 665
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: getJSType(callNode).differsFrom(narrowed)
                        children: []
                        pos: 29373
                        length: 41
                    children: []
                    pos: 29372
                    length: 43
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: callNode.setJSType(narrowed);
                    children: []
                    pos: 29424
                    length: 29
                  pos: 29416
                  length: 43
                pos: 29369
                length: 90
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 29464
                length: 13
              pos: 28053
              length: 1428
          children: []
          pos: 27969
          length: 1512
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: narrowScope
              children: []
              pos: 29503
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 29515
                length: 15
              pos: 29485
              length: 468
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: node.isThis()
                        children: []
                        pos: 29570
                        length: 13
                    children: []
                    pos: 29569
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 29672
                    length: 13
                  pos: 29585
                  length: 106
                pos: 29566
                length: 125
              - type: expression_statement
                fields:
                  text: scope = scope.createChildFlowScope();
                children: []
                pos: 29697
                length: 37
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: node.isGetProp()
                        children: []
                        pos: 29743
                        length: 16
                    children: []
                    pos: 29742
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        scope.inferQualifiedSlot(
                                  node, node.getQualifiedName(), getJSType(node), narrowed);
                    children: []
                    pos: 29769
                    length: 94
                  pos: 29761
                  length: 108
                pos: 29739
                length: 192
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 29936
                length: 13
              pos: 29560
              length: 393
          children: []
          pos: 29485
          length: 468
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: backwardsInferenceFromCallSite
              children: []
              pos: 30892
              length: 30
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 30923
                length: 6
              pos: 30879
              length: 186
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: updateTypeOfParameters(n, fnType);
                children: []
                pos: 30958
                length: 34
              - type: expression_statement
                fields:
                  text: updateTypeOfThisOnClosure(n, fnType);
                children: []
                pos: 30997
                length: 37
              - type: expression_statement
                fields:
                  text: updateBind(n, fnType);
                children: []
                pos: 31039
                length: 22
              pos: 30952
              length: 113
          children: []
          pos: 30879
          length: 186
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateBind
              children: []
              pos: 31249
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 31260
                length: 6
              pos: 31236
              length: 560
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: |-
                    CodingConvention.Bind bind =
                            compiler.getCodingConvention().describeFunctionBind(n, true);
                children: []
                pos: 31295
                length: 98
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: bind
                            children: []
                            pos: 31402
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 31410
                            length: 4
                        children: []
                        pos: 31402
                        length: 12
                    children: []
                    pos: 31401
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 31424
                    length: 7
                  pos: 31416
                  length: 21
                pos: 31398
                length: 39
              - type: local_variable_declaration
                fields:
                  text: |-
                    FunctionType callTargetFn = getJSType(bind.target)
                            .restrictByNotNullOrUndefined().toMaybeFunctionType();
                children: []
                pos: 31443
                length: 113
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: callTargetFn
                            children: []
                            pos: 31565
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 31581
                            length: 4
                        children: []
                        pos: 31565
                        length: 20
                    children: []
                    pos: 31564
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 31595
                    length: 7
                  pos: 31587
                  length: 21
                pos: 31561
                length: 47
              - type: expression_statement
                fields:
                  text: |-
                    n.setJSType(
                            callTargetFn.getBindReturnType(
                                // getBindReturnType expects the 'this' argument to be included.
                                bind.getBoundParameterCount() + 1));
                children: []
                pos: 31614
                length: 178
              pos: 31289
              length: 507
          children: []
          pos: 31236
          length: 560
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateTypeOfParameters
              children: []
              pos: 31973
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 31996
                length: 6
              pos: 31960
              length: 867
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int i = 0;
                children: []
                pos: 32031
                length: 10
              - type: local_variable_declaration
                fields:
                  text: int childCount = n.getChildCount();
                children: []
                pos: 32046
                length: 35
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (Node iParameter : fnType.getParameters()) {
                          if (i + 1 >= childCount) {
                            // TypeCheck#visitParametersList will warn so we bail.
                            return;
                          }

                          JSType iParameterType = getJSType(iParameter);
                          Node iArgument = n.getChildAtIndex(i + 1);
                          JSType iArgumentType = getJSType(iArgument);
                          inferPropertyTypesToMatchConstraint(iArgumentType, iParameterType);

                          if (iParameterType.isFunctionType()) {
                            FunctionType iParameterFnType = iParameterType.toMaybeFunctionType();

                            if (iArgument.isFunction() &&
                                iArgumentType.isFunctionType() &&
                                iArgument.getJSDocInfo() == null) {
                              iArgument.setJSType(iParameterFnType);
                            }
                          }
                          i++;
                        }
                children: []
                pos: 32086
                length: 737
              pos: 32025
              length: 802
          children: []
          pos: 31960
          length: 867
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateTypeOfThisOnClosure
              children: []
              pos: 33035
              length: 25
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 33061
                length: 6
              pos: 33022
              length: 3662
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: fnType.getTemplateTypeName()
                            children: []
                            pos: 33158
                            length: 28
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 33190
                            length: 4
                        children: []
                        pos: 33158
                        length: 36
                    children: []
                    pos: 33157
                    length: 38
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 33204
                    length: 7
                  pos: 33196
                  length: 21
                pos: 33154
                length: 63
              - type: local_variable_declaration
                fields:
                  text: int i = 0;
                children: []
                pos: 33223
                length: 10
              - type: local_variable_declaration
                fields:
                  text: int childCount = n.getChildCount();
                children: []
                pos: 33238
                length: 35
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (Node iParameter : fnType.getParameters()) {
                          JSType iParameterType =
                              getJSType(iParameter).restrictByNotNullOrUndefined();
                          if (iParameterType.isTemplateType()) {
                            // Find the actual type of this argument.
                            ObjectType iArgumentType = null;
                            if (i + 1 < childCount) {
                              Node iArgument = n.getChildAtIndex(i + 1);
                              iArgumentType = getJSType(iArgument)
                                  .restrictByNotNullOrUndefined()
                                  .collapseUnion()
                                  .toObjectType();
                              if (iArgumentType == null) {
                                compiler.report(
                                    JSError.make(NodeUtil.getSourceName(iArgument), iArgument,
                                        TEMPLATE_TYPE_NOT_OBJECT_TYPE,
                                        getJSType(iArgument).toString()));
                                return;
                              }
                            }

                            // Find the parameter whose type is function(this: T, ...)
                            boolean foundTemplateTypeOfThisParameter = false;
                            int j = 0;
                            for (Node jParameter : fnType.getParameters()) {
                              JSType jParameterType =
                                  getJSType(jParameter).restrictByNotNullOrUndefined();
                              if (jParameterType.isFunctionType()) {
                                FunctionType jParameterFnType = jParameterType.toMaybeFunctionType();
                                if (jParameterFnType.getTypeOfThis().equals(iParameterType)) {
                                  foundTemplateTypeOfThisParameter = true;
                                  // Find the actual type of the this argument.
                                  if (j + 1 >= childCount) {
                                    // TypeCheck#visitParameterList will warn so we bail.
                                    return;
                                  }
                                  Node jArgument = n.getChildAtIndex(j + 1);
                                  JSType jArgumentType = getJSType(jArgument);
                                  if (jArgument.isFunction() &&
                                      jArgumentType.isFunctionType()) {
                                    if (iArgumentType != null &&
                                        // null and undefined get filtered out above.
                                        !iArgumentType.isNoType()) {
                                      // If it's an function expression, update the type of this
                                      // using the actual type of T.
                                      FunctionType jArgumentFnType = jArgumentType.toMaybeFunctionType();
                                      if (jArgumentFnType.getTypeOfThis().isUnknownType()) {
                                        // The new type will be picked up when we traverse the inner
                                        // function.
                                        jArgument.setJSType(
                                            registry.createFunctionTypeWithNewThisType(
                                                jArgumentFnType, iArgumentType));
                                      }
                                    } else {
                                      // Warn if the anonymous function literal references this.
                                      if (NodeUtil.referencesThis(
                                              NodeUtil.getFunctionBody(jArgument))) {
                                        compiler.report(JSError.make(NodeUtil.getSourceName(n), n,
                                            FUNCTION_LITERAL_UNDEFINED_THIS));
                                      }
                                    }
                                  }
                                  // TODO(user): Add code to TypeCheck to check that the
                                  // types of the arguments match.
                                }
                              }
                              j++;
                            }

                            if (!foundTemplateTypeOfThisParameter) {
                              compiler.report(JSError.make(NodeUtil.getSourceName(n), n,
                                  TEMPLATE_TYPE_OF_THIS_EXPECTED));
                              return;
                            }
                          }
                          i++;
                        }
                children: []
                pos: 33337
                length: 3343
              pos: 33090
              length: 3594
          children: []
          pos: 33022
          length: 3662
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseNew
              children: []
              pos: 36706
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 36718
                length: 6
              pos: 36688
              length: 1126
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node constructor = n.getFirstChild();
                children: []
                pos: 36750
                length: 37
              - type: expression_statement
                fields:
                  text: scope = traverse(constructor, scope);
                children: []
                pos: 36792
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType constructorType = constructor.getJSType();
                children: []
                pos: 36834
                length: 49
              - type: local_variable_declaration
                fields:
                  text: JSType type = null;
                children: []
                pos: 36888
                length: 19
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: constructorType
                            children: []
                            pos: 36916
                            length: 15
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 36935
                            length: 4
                        children: []
                        pos: 36916
                        length: 23
                    children: []
                    pos: 36915
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: constructorType = constructorType.restrictByNotNullOrUndefined();
                    children: []
                    pos: 36949
                    length: 65
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: constructorType.isUnknownType()
                            children: []
                            pos: 37025
                            length: 31
                        children: []
                        pos: 37024
                        length: 33
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: type = getNativeType(UNKNOWN_TYPE);
                        children: []
                        pos: 37068
                        length: 35
                      pos: 37058
                      length: 53
                    pos: 37021
                    length: 621
                  pos: 36941
                  length: 707
                pos: 36912
                length: 736
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 37653
                length: 18
              - type: for_statement
                fields:
                  text: |-
                    for (Node arg = constructor.getNext(); arg != null; arg = arg.getNext()) {
                          scope = traverse(arg, scope);
                        }
                children: []
                pos: 37676
                length: 116
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 37797
                length: 13
              pos: 36743
              length: 1071
          children: []
          pos: 36688
          length: 1126
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseAnd
              children: []
              pos: 37845
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 37857
                length: 6
              pos: 37818
              length: 126
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return traverseShortCircuitingBinOp(n, scope, true);
                children: []
                pos: 37888
                length: 52
              pos: 37882
              length: 62
          children: []
          pos: 37818
          length: 126
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseChildren
              children: []
              pos: 37966
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 37983
                length: 6
              pos: 37948
              length: 195
            body:
              type: block
              fields: {}
              children:
              - type: for_statement
                fields:
                  text: |-
                    for (Node el = n.getFirstChild(); el != null; el = el.getNext()) {
                          scope = traverse(el, scope);
                        }
                children: []
                pos: 38014
                length: 107
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 38126
                length: 13
              pos: 38008
              length: 135
          children: []
          pos: 37948
          length: 195
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseGetElem
              children: []
              pos: 38165
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 38181
                length: 6
              pos: 38147
              length: 415
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 38212
                length: 35
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType objType = ObjectType.cast(
                            getJSType(n.getFirstChild()).restrictByNotNullOrUndefined());
                children: []
                pos: 38252
                length: 107
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: objType
                            children: []
                            pos: 38368
                            length: 7
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 38379
                            length: 4
                        children: []
                        pos: 38368
                        length: 15
                    children: []
                    pos: 38367
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType type = objType.getParameterType();
                    children: []
                    pos: 38393
                    length: 41
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 38445
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 38453
                                length: 4
                            children: []
                            pos: 38445
                            length: 12
                        children: []
                        pos: 38444
                        length: 14
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: n.setJSType(type);
                        children: []
                        pos: 38469
                        length: 18
                      pos: 38459
                      length: 36
                    pos: 38441
                    length: 54
                  pos: 38385
                  length: 116
                pos: 38364
                length: 137
              - type: return_statement
                fields:
                  text: return dereferencePointer(n.getFirstChild(), scope);
                children: []
                pos: 38506
                length: 52
              pos: 38206
              length: 356
          children: []
          pos: 38147
          length: 415
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseGetProp
              children: []
              pos: 38584
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 38600
                length: 6
              pos: 38566
              length: 346
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node objNode = n.getFirstChild();
                children: []
                pos: 38631
                length: 33
              - type: local_variable_declaration
                fields:
                  text: Node property = n.getLastChild();
                children: []
                pos: 38669
                length: 33
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 38707
                length: 35
              - type: expression_statement
                fields:
                  text: |-
                    n.setJSType(
                            getPropertyType(
                                objNode.getJSType(), property.getString(), n, scope));
                children: []
                pos: 38747
                length: 104
              - type: return_statement
                fields:
                  text: return dereferencePointer(n.getFirstChild(), scope);
                children: []
                pos: 38856
                length: 52
              pos: 38625
              length: 287
          children: []
          pos: 38566
          length: 346
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: inferPropertyTypesToMatchConstraint
              children: []
              pos: 39459
              length: 35
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType type
                children: []
                pos: 39502
                length: 11
              pos: 39446
              length: 341
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 39544
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 39552
                                length: 4
                            children: []
                            pos: 39544
                            length: 12
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: constraint
                                children: []
                                pos: 39560
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 39574
                                length: 4
                            children: []
                            pos: 39560
                            length: 18
                        children: []
                        pos: 39544
                        length: 34
                    children: []
                    pos: 39543
                    length: 36
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 39588
                    length: 7
                  pos: 39580
                  length: 21
                pos: 39540
                length: 61
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType constraintObj =
                            ObjectType.cast(constraint.restrictByNotNullOrUndefined());
                children: []
                pos: 39607
                length: 94
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: constraintObj
                            children: []
                            pos: 39710
                            length: 13
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 39727
                            length: 4
                        children: []
                        pos: 39710
                        length: 21
                    children: []
                    pos: 39709
                    length: 23
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: type.matchConstraint(constraintObj);
                    children: []
                    pos: 39741
                    length: 36
                  pos: 39733
                  length: 50
                pos: 39706
                length: 77
              pos: 39534
              length: 253
          children: []
          pos: 39446
          length: 341
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: dereferencePointer
              children: []
              pos: 39911
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 39930
                length: 6
              pos: 39893
              length: 304
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.isQualifiedName()
                        children: []
                        pos: 39965
                        length: 19
                    children: []
                    pos: 39964
                    length: 21
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType type = getJSType(n);
                    children: []
                    pos: 39994
                    length: 27
                  - type: local_variable_declaration
                    fields:
                      text: JSType narrowed = type.restrictByNotNullOrUndefined();
                    children: []
                    pos: 40028
                    length: 54
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 40093
                                length: 4
                              right:
                                type: identifier
                                fields:
                                  text: narrowed
                                children: []
                                pos: 40101
                                length: 8
                            children: []
                            pos: 40093
                            length: 16
                        children: []
                        pos: 40092
                        length: 18
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: scope = narrowScope(scope, n, narrowed);
                        children: []
                        pos: 40121
                        length: 40
                      pos: 40111
                      length: 58
                    pos: 40089
                    length: 80
                  pos: 39986
                  length: 189
                pos: 39961
                length: 214
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 40180
                length: 13
              pos: 39955
              length: 242
          children: []
          pos: 39893
          length: 304
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getPropertyType
              children: []
              pos: 40216
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType objType
                children: []
                pos: 40232
                length: 14
              pos: 40201
              length: 1254
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String qualifiedName = n.getQualifiedName();
                children: []
                pos: 40376
                length: 44
              - type: local_variable_declaration
                fields:
                  text: StaticSlot<JSType> var = scope.getSlot(qualifiedName);
                children: []
                pos: 40425
                length: 54
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: var
                            children: []
                            pos: 40488
                            length: 3
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 40495
                            length: 4
                        children: []
                        pos: 40488
                        length: 11
                    children: []
                    pos: 40487
                    length: 13
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType varType = var.getType();
                    children: []
                    pos: 40509
                    length: 31
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: varType
                                children: []
                                pos: 40551
                                length: 7
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 40562
                                length: 4
                            children: []
                            pos: 40551
                            length: 15
                        children: []
                        pos: 40550
                        length: 17
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: and
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: varType.equals(getNativeType(UNKNOWN_TYPE))
                                    children: []
                                    pos: 40582
                                    length: 43
                                  right:
                                    type: not_equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: var
                                        children: []
                                        pos: 40641
                                        length: 3
                                      right:
                                        type: method_invocation
                                        fields:
                                          text: syntacticScope.getSlot(qualifiedName)
                                        children: []
                                        pos: 40648
                                        length: 37
                                    children: []
                                    pos: 40641
                                    length: 44
                                children: []
                                pos: 40582
                                length: 103
                            children: []
                            pos: 40581
                            length: 105
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: return_statement
                            fields:
                              text: return getNativeType(CHECKED_UNKNOWN_TYPE);
                            children: []
                            pos: 40848
                            length: 43
                          pos: 40687
                          length: 214
                        pos: 40578
                        length: 366
                      pos: 40568
                      length: 384
                    pos: 40547
                    length: 405
                  pos: 40501
                  length: 457
                pos: 40484
                length: 474
              - type: local_variable_declaration
                fields:
                  text: JSType propertyType = null;
                children: []
                pos: 40964
                length: 27
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: objType
                            children: []
                            pos: 41000
                            length: 7
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 41011
                            length: 4
                        children: []
                        pos: 41000
                        length: 15
                    children: []
                    pos: 40999
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: propertyType = objType.findPropertyType(propName);
                    children: []
                    pos: 41025
                    length: 50
                  pos: 41017
                  length: 64
                pos: 40996
                length: 85
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: or
                                fields:
                                  left:
                                    type: equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: propertyType
                                        children: []
                                        pos: 41092
                                        length: 12
                                      right:
                                        type: null_literal
                                        fields: {}
                                        children: []
                                        pos: 41108
                                        length: 4
                                    children: []
                                    pos: 41092
                                    length: 20
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: propertyType.isUnknownType()
                                    children: []
                                    pos: 41116
                                    length: 28
                                children: []
                                pos: 41092
                                length: 52
                            children: []
                            pos: 41091
                            length: 54
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: qualifiedName
                                children: []
                                pos: 41157
                                length: 13
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 41174
                                length: 4
                            children: []
                            pos: 41157
                            length: 21
                        children: []
                        pos: 41091
                        length: 87
                    children: []
                    pos: 41090
                    length: 89
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: ObjectType regType = ObjectType.cast(registry.getType(qualifiedName));
                    children: []
                    pos: 41263
                    length: 70
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: regType
                                children: []
                                pos: 41344
                                length: 7
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 41355
                                length: 4
                            children: []
                            pos: 41344
                            length: 15
                        children: []
                        pos: 41343
                        length: 17
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: propertyType = regType.getConstructor();
                        children: []
                        pos: 41371
                        length: 40
                      pos: 41361
                      length: 58
                    pos: 41340
                    length: 79
                  pos: 41180
                  length: 245
                pos: 41087
                length: 338
              - type: return_statement
                fields:
                  text: return propertyType;
                children: []
                pos: 41431
                length: 20
              pos: 40296
              length: 1159
          children: []
          pos: 40201
          length: 1254
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseOr
              children: []
              pos: 41486
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 41497
                length: 6
              pos: 41459
              length: 126
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return traverseShortCircuitingBinOp(n, scope, false);
                children: []
                pos: 41528
                length: 53
              pos: 41522
              length: 63
          children: []
          pos: 41459
          length: 126
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseShortCircuitingBinOp
              children: []
              pos: 41616
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 41652
                length: 6
              pos: 41589
              length: 2359
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 41702
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 41737
                length: 30
              - type: local_variable_declaration
                fields:
                  text: |-
                    BooleanOutcomePair leftLiterals =
                            traverseWithinShortCircuitingBinOp(left,
                                scope.createChildFlowScope());
                children: []
                pos: 41799
                length: 125
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = left.getJSType();
                children: []
                pos: 41929
                length: 35
              - type: local_variable_declaration
                fields:
                  text: |-
                    FlowScope rightScope = reverseInterpreter.
                            getPreciserScopeKnowingConditionOutcome(
                                left, leftLiterals.getOutcomeFlowScope(left.getType(), condition),
                                condition);
                children: []
                pos: 42088
                length: 194
              - type: local_variable_declaration
                fields:
                  text: |-
                    BooleanOutcomePair rightLiterals =
                            traverseWithinShortCircuitingBinOp(
                                right, rightScope.createChildFlowScope());
                children: []
                pos: 42315
                length: 133
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = right.getJSType();
                children: []
                pos: 42453
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType type;
                children: []
                pos: 42496
                length: 12
              - type: local_variable_declaration
                fields:
                  text: BooleanOutcomePair literals;
                children: []
                pos: 42513
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: leftType
                                children: []
                                pos: 42550
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 42562
                                length: 4
                            children: []
                            pos: 42550
                            length: 16
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: rightType
                                children: []
                                pos: 42570
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 42583
                                length: 4
                            children: []
                            pos: 42570
                            length: 17
                        children: []
                        pos: 42550
                        length: 37
                    children: []
                    pos: 42549
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: leftType = leftType.getRestrictedTypeGivenToBooleanOutcome(!condition);
                    children: []
                    pos: 42597
                    length: 71
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: field_access
                                fields:
                                  text: leftLiterals.toBooleanOutcomes
                                children: []
                                pos: 42679
                                length: 30
                              right:
                                type: method_invocation
                                fields:
                                  text: BooleanLiteralSet.get(!condition)
                                children: []
                                pos: 42723
                                length: 33
                            children: []
                            pos: 42679
                            length: 77
                        children: []
                        pos: 42678
                        length: 79
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: type = leftType;
                        children: []
                        pos: 42863
                        length: 16
                      - type: expression_statement
                        fields:
                          text: literals = leftLiterals;
                        children: []
                        pos: 42888
                        length: 24
                      pos: 42758
                      length: 162
                    pos: 42675
                    length: 541
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: equals
                                fields:
                                  left:
                                    type: field_access
                                    fields:
                                      text: literals.booleanValues
                                    children: []
                                    pos: 43349
                                    length: 22
                                  right:
                                    type: field_access
                                    fields:
                                      text: BooleanLiteralSet.EMPTY
                                    children: []
                                    pos: 43375
                                    length: 23
                                children: []
                                pos: 43349
                                length: 49
                              right:
                                type: method_invocation
                                fields:
                                  text: getNativeType(BOOLEAN_TYPE).isSubtype(type)
                                children: []
                                pos: 43412
                                length: 43
                            children: []
                            pos: 43349
                            length: 106
                        children: []
                        pos: 43348
                        length: 108
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: method_invocation
                                fields:
                                  text: type.isUnionType()
                                children: []
                                pos: 43526
                                length: 18
                            children: []
                            pos: 43525
                            length: 20
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: |-
                                type = type.toMaybeUnionType().getRestrictedUnion(
                                              getNativeType(BOOLEAN_TYPE));
                            children: []
                            pos: 43558
                            length: 94
                          pos: 43546
                          length: 116
                        pos: 43522
                        length: 140
                      pos: 43457
                      length: 213
                    pos: 43345
                    length: 325
                  pos: 42589
                  length: 1087
                pos: 42546
                length: 1353
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 43904
                length: 18
              - type: return_statement
                fields:
                  text: return literals;
                children: []
                pos: 43928
                length: 16
              pos: 41696
              length: 2252
          children: []
          pos: 41589
          length: 2359
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseWithinShortCircuitingBinOp
              children: []
              pos: 43979
              length: 34
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 44014
                length: 6
              pos: 43952
              length: 362
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 44059
                        length: 11
                    children: []
                    pos: 44058
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.AND:
                                return traverseAnd(n, scope);

                              case Token.OR:
                                return traverseOr(n, scope);

                              default:
                                scope = traverse(n, scope);
                                return newBooleanOutcomePair(n.getJSType(), scope);
                            }
                    children: []
                    pos: 44072
                    length: 238
                children: []
                pos: 44051
                length: 259
              pos: 44045
              length: 269
          children: []
          pos: 43952
          length: 362
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getBooleanOutcomePair
              children: []
              pos: 44553
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: BooleanOutcomePair left
                children: []
                pos: 44575
                length: 23
              pos: 44534
              length: 416
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return new BooleanOutcomePair(
                            getBooleanOutcomes(left.toBooleanOutcomes, right.toBooleanOutcomes,
                                               condition),
                            getBooleanOutcomes(left.booleanValues, right.booleanValues, condition),
                            left.getJoinedFlowScope(), right.getJoinedFlowScope());
                children: []
                pos: 44657
                length: 289
              pos: 44651
              length: 299
          children: []
          pos: 44534
          length: 416
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getBooleanOutcomes
              children: []
              pos: 45636
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: BooleanLiteralSet left
                children: []
                pos: 45655
                length: 22
              pos: 45611
              length: 201
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return right.union(left.intersection(BooleanLiteralSet.get(!condition)));
                children: []
                pos: 45735
                length: 73
              pos: 45729
              length: 83
          children: []
          pos: 45611
          length: 201
        - type: class_declaration
          fields:
            name:
              type: identifier
              fields:
                text: BooleanOutcomePair
              children: []
              pos: 46119
              length: 18
            body:
              type: class_body
              fields: {}
              children:
              - type: field_declaration
                fields:
                  text: final BooleanLiteralSet toBooleanOutcomes;
                children: []
                pos: 46144
                length: 42
              - type: field_declaration
                fields:
                  text: final BooleanLiteralSet booleanValues;
                children: []
                pos: 46191
                length: 38
              - type: field_declaration
                fields:
                  text: final FlowScope leftScope;
                children: []
                pos: 46310
                length: 26
              - type: field_declaration
                fields:
                  text: final FlowScope rightScope;
                children: []
                pos: 46395
                length: 27
              - type: field_declaration
                fields:
                  text: FlowScope joinedScope = null;
                children: []
                pos: 46504
                length: 29
              - type: constructor_declaration
                fields:
                  text: |-
                    BooleanOutcomePair(
                            BooleanLiteralSet toBooleanOutcomes, BooleanLiteralSet booleanValues,
                            FlowScope leftScope, FlowScope rightScope) {
                          this.toBooleanOutcomes = toBooleanOutcomes;
                          this.booleanValues = booleanValues;
                          this.leftScope = leftScope;
                          this.rightScope = rightScope;
                        }
                children: []
                pos: 46539
                length: 318
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: getJoinedFlowScope
                    children: []
                    pos: 46997
                    length: 18
                  parameters:
                    type: method_parameters
                    fields: {}
                    children: []
                    pos: 46987
                    length: 260
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: equals
                              fields:
                                left:
                                  type: identifier
                                  fields:
                                    text: joinedScope
                                  children: []
                                  pos: 47030
                                  length: 11
                                right:
                                  type: null_literal
                                  fields: {}
                                  children: []
                                  pos: 47045
                                  length: 4
                              children: []
                              pos: 47030
                              length: 19
                          children: []
                          pos: 47029
                          length: 21
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: if_statement
                          fields:
                            condition:
                              type: parenthesized_expression
                              fields:
                                expression:
                                  type: equals
                                  fields:
                                    left:
                                      type: identifier
                                      fields:
                                        text: leftScope
                                      children: []
                                      pos: 47065
                                      length: 9
                                    right:
                                      type: identifier
                                      fields:
                                        text: rightScope
                                      children: []
                                      pos: 47078
                                      length: 10
                                  children: []
                                  pos: 47065
                                  length: 23
                              children: []
                              pos: 47064
                              length: 25
                          children:
                          - type: block
                            fields: {}
                            children:
                            - type: expression_statement
                              fields:
                                text: joinedScope = rightScope;
                              children: []
                              pos: 47102
                              length: 25
                            pos: 47090
                            length: 47
                          pos: 47061
                          length: 146
                        pos: 47051
                        length: 164
                      pos: 47026
                      length: 189
                    - type: return_statement
                      fields:
                        text: return joinedScope;
                      children: []
                      pos: 47222
                      length: 19
                    pos: 47018
                    length: 229
                children: []
                pos: 46987
                length: 260
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: getOutcomeFlowScope
                    children: []
                    pos: 47368
                    length: 19
                  parameters:
                    type: method_parameters
                    fields: {}
                    children:
                    - type: formal_parameter
                      fields:
                        text: int nodeType
                      children: []
                      pos: 47388
                      length: 12
                    pos: 47358
                    length: 312
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: or
                              fields:
                                left:
                                  type: and
                                  fields:
                                    left:
                                      type: equals
                                      fields:
                                        left:
                                          type: identifier
                                          fields:
                                            text: nodeType
                                          children: []
                                          pos: 47431
                                          length: 8
                                        right:
                                          type: field_access
                                          fields:
                                            text: Token.AND
                                          children: []
                                          pos: 47443
                                          length: 9
                                      children: []
                                      pos: 47431
                                      length: 21
                                    right:
                                      type: identifier
                                      fields:
                                        text: outcome
                                      children: []
                                      pos: 47456
                                      length: 7
                                  children: []
                                  pos: 47431
                                  length: 32
                                right:
                                  type: and
                                  fields:
                                    left:
                                      type: equals
                                      fields:
                                        left:
                                          type: identifier
                                          fields:
                                            text: nodeType
                                          children: []
                                          pos: 47477
                                          length: 8
                                        right:
                                          type: field_access
                                          fields:
                                            text: Token.OR
                                          children: []
                                          pos: 47489
                                          length: 8
                                      children: []
                                      pos: 47477
                                      length: 20
                                    right:
                                      type: unary_expression
                                      fields:
                                        text: "!outcome"
                                      children: []
                                      pos: 47501
                                      length: 8
                                  children: []
                                  pos: 47477
                                  length: 32
                              children: []
                              pos: 47431
                              length: 78
                          children: []
                          pos: 47430
                          length: 80
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: return_statement
                          fields:
                            text: return rightScope;
                          children: []
                          pos: 47586
                          length: 18
                        pos: 47511
                        length: 101
                      pos: 47427
                      length: 237
                    pos: 47419
                    length: 251
                children: []
                pos: 47358
                length: 312
              pos: 46099
              length: 1575
          children: []
          pos: 46099
          length: 1575
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: newBooleanOutcomePair
              children: []
              pos: 47705
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType jsType
                children: []
                pos: 47734
                length: 13
              pos: 47678
              length: 478
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: jsType
                            children: []
                            pos: 47780
                            length: 6
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 47790
                            length: 4
                        children: []
                        pos: 47780
                        length: 14
                    children: []
                    pos: 47779
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: |-
                        return new BooleanOutcomePair(
                                  BooleanLiteralSet.BOTH, BooleanLiteralSet.BOTH, flowScope, flowScope);
                    children: []
                    pos: 47804
                    length: 111
                  pos: 47796
                  length: 125
                pos: 47776
                length: 145
              - type: return_statement
                fields:
                  text: |-
                    return new BooleanOutcomePair(jsType.getPossibleToBooleanOutcomes(),
                            registry.getNativeType(BOOLEAN_TYPE).isSubtype(jsType) ?
                                BooleanLiteralSet.BOTH : BooleanLiteralSet.EMPTY,
                            flowScope, flowScope);
                children: []
                pos: 47926
                length: 226
              pos: 47770
              length: 386
          children: []
          pos: 47678
          length: 478
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: redeclareSimpleVar
              children: []
              pos: 48173
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 48199
                length: 15
              pos: 48160
              length: 394
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(nameNode.isName());
                children: []
                pos: 48253
                length: 44
              - type: local_variable_declaration
                fields:
                  text: String varName = nameNode.getString();
                children: []
                pos: 48302
                length: 38
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: varType
                            children: []
                            pos: 48349
                            length: 7
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 48360
                            length: 4
                        children: []
                        pos: 48349
                        length: 15
                    children: []
                    pos: 48348
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: varType = getNativeType(JSTypeNative.UNKNOWN_TYPE);
                    children: []
                    pos: 48374
                    length: 51
                  pos: 48366
                  length: 65
                pos: 48345
                length: 86
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isUnflowable(syntacticScope.getVar(varName))
                        children: []
                        pos: 48440
                        length: 44
                    children: []
                    pos: 48439
                    length: 46
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 48494
                    length: 7
                  pos: 48486
                  length: 21
                pos: 48436
                length: 71
              - type: expression_statement
                fields:
                  text: scope.inferSlotType(varName, varType);
                children: []
                pos: 48512
                length: 38
              pos: 48247
              length: 307
          children: []
          pos: 48160
          length: 394
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isUnflowable
              children: []
              pos: 48574
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Var v
                children: []
                pos: 48587
                length: 5
              pos: 48558
              length: 214
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return v != null && v.isLocal() && v.isMarkedEscaped() &&
                            // It's OK to flow a variable in the scope where it's escaped.
                            v.getScope() == syntacticScope;
                children: []
                pos: 48600
                length: 168
              pos: 48594
              length: 178
          children: []
          pos: 48558
          length: 214
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getJSType
              children: []
              pos: 48897
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 48907
                length: 6
              pos: 48882
              length: 461
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType jsType = n.getJSType();
                children: []
                pos: 48921
                length: 30
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: jsType
                            children: []
                            pos: 48960
                            length: 6
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 48970
                            length: 4
                        children: []
                        pos: 48960
                        length: 14
                    children: []
                    pos: 48959
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return getNativeType(UNKNOWN_TYPE);
                    children: []
                    pos: 49264
                    length: 35
                  pos: 48976
                  length: 329
                pos: 48956
                length: 383
              pos: 48915
              length: 428
          children: []
          pos: 48882
          length: 461
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getNativeType
              children: []
              pos: 49362
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSTypeNative typeId
                children: []
                pos: 49376
                length: 19
              pos: 49347
              length: 98
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return registry.getNativeType(typeId);
                children: []
                pos: 49403
                length: 38
              pos: 49397
              length: 48
          children: []
          pos: 49347
          length: 98
        pos: 2592
        length: 46855
    children: []
    pos: 2592
    length: 46855
  pos: 0
  length: 49448
text_diff: "--- before\n+++ after\n@@ -1033,9 +1033,9 @@\n   }\n \n   private FlowScope
  traverseNew(Node n, FlowScope scope) {\n-    scope = traverseChildren(n, scope);\n
  \n     Node constructor = n.getFirstChild();\n+    scope = traverse(constructor,
  scope);\n     JSType constructorType = constructor.getJSType();\n     JSType type
  = null;\n     if (constructorType != null) {\n@@ -1052,11 +1052,13 @@\n         }\n
  \        if (ct != null && ct.isConstructor()) {\n           type = ct.getInstanceType();\n-
  \         backwardsInferenceFromCallSite(n, ct);\n         }\n       }\n     }\n
  \    n.setJSType(type);\n+    for (Node arg = constructor.getNext(); arg != null;
  arg = arg.getNext()) {\n+      scope = traverse(arg, scope);\n+    }\n     return
  scope;\n   }\n \n"
tree_diff: |+
  New cluster:
  MOVE from block [36743,37740]
  ------------
  ===
  move-tree
  ---
  expression_statement: scope = traverseChildren(n, scope); [36749,36784]
  to
  block [36743,37740]
  at 1

  New cluster:
  UPDATE from scope = traverseChildren(n, scope); to scope = traverse(constructor, scope);
  ------------
  ===
  update-node
  ---
  expression_statement: scope = traverseChildren(n, scope); [36749,36784]
  replace scope = traverseChildren(n, scope); by scope = traverse(constructor, scope);

  New cluster:
  ===
  insert-node
  ---
  for_statement: for (Node arg = constructor.getNext(); arg != null; arg = arg.getNext()) {
        scope = traverse(arg, scope);
      } [37676,37792]
  to
  block [36743,37740]
  at 6
  ------------
  ===
  insert-node
  ---
  for_statement: for (Node arg = constructor.getNext(); arg != null; arg = arg.getNext()) {
        scope = traverse(arg, scope);
      } [37676,37792]
  to
  block [36743,37740]
  at 6

...
