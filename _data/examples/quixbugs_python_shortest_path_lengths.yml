---
language: python
before_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: shortest_path_lengths
        children: []
        pos: 41
        length: 21
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: "n"
          children: []
          pos: 63
          length: 1
        pos: 37
        length: 476
      body:
        type: block
        fields: {}
        children:
        - type: expression_statement
          fields:
            text: 'length_by_path = defaultdict(lambda: float(''inf''))'
          children: []
          pos: 87
          length: 50
        - type: expression_statement
          fields:
            text: 'length_by_path.update({(i, i): 0 for i in range(n)})'
          children: []
          pos: 142
          length: 52
        - type: expression_statement
          fields:
            text: length_by_path.update(length_by_edge)
          children: []
          pos: 199
          length: 37
        - type: for_statement
          fields:
            text: |-
              for k in range(n):
                      for i in range(n):
                          for j in range(n):
                              length_by_path[i, j] = min(
                                  length_by_path[i, j],
                                  length_by_path[i, k] + length_by_path[j, k]
                              )
          children: []
          pos: 242
          length: 244
        - type: return_statement
          fields:
            text: return length_by_path
          children: []
          pos: 492
          length: 21
        pos: 87
        length: 426
    children: []
    pos: 37
    length: 476
  pos: 0
  length: 514
after_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: shortest_path_lengths
        children: []
        pos: 41
        length: 21
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: "n"
          children: []
          pos: 63
          length: 1
        pos: 37
        length: 476
      body:
        type: block
        fields: {}
        children:
        - type: expression_statement
          fields:
            text: 'length_by_path = defaultdict(lambda: float(''inf''))'
          children: []
          pos: 87
          length: 50
        - type: expression_statement
          fields:
            text: 'length_by_path.update({(i, i): 0 for i in range(n)})'
          children: []
          pos: 142
          length: 52
        - type: expression_statement
          fields:
            text: length_by_path.update(length_by_edge)
          children: []
          pos: 199
          length: 37
        - type: for_statement
          fields:
            text: |-
              for k in range(n):
                      for i in range(n):
                          for j in range(n):
                              length_by_path[i, j] = min(
                                  length_by_path[i, j],
                                  length_by_path[i, k] + length_by_path[k, j]
                              )
          children: []
          pos: 242
          length: 244
        - type: return_statement
          fields:
            text: return length_by_path
          children: []
          pos: 492
          length: 21
        pos: 87
        length: 426
    children: []
    pos: 37
    length: 476
  pos: 0
  length: 515
text_diff: "--- before\n+++ after\n@@ -10,7 +10,8 @@\n             for j in range(n):\n
  \                length_by_path[i, j] = min(\n                     length_by_path[i,
  j],\n-                    length_by_path[i, k] + length_by_path[j, k]\n+                    length_by_path[i,
  k] + length_by_path[k, j]\n                 )\n \n     return length_by_path\n+\n"
tree_diff: |+
  New cluster:
  UPDATE from for k in range(n):
          for i in range(n):
              for j in range(n):
                  length_by_path[i, j] = min(
                      length_by_path[i, j],
                      length_by_path[i, k] + length_by_path[j, k]
                  ) to for k in range(n):
          for i in range(n):
              for j in range(n):
                  length_by_path[i, j] = min(
                      length_by_path[i, j],
                      length_by_path[i, k] + length_by_path[k, j]
                  )
  ------------
  ===
  update-node
  ---
  for_statement: for k in range(n):
          for i in range(n):
              for j in range(n):
                  length_by_path[i, j] = min(
                      length_by_path[i, j],
                      length_by_path[i, k] + length_by_path[j, k]
                  ) [242,486]
  replace for k in range(n):
          for i in range(n):
              for j in range(n):
                  length_by_path[i, j] = min(
                      length_by_path[i, j],
                      length_by_path[i, k] + length_by_path[j, k]
                  ) by for k in range(n):
          for i in range(n):
              for j in range(n):
                  length_by_path[i, j] = min(
                      length_by_path[i, j],
                      length_by_path[i, k] + length_by_path[k, j]
                  )

...
