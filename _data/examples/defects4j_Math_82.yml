---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: SimplexSolver
        children: []
        pos: 1166
        length: 13
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private static final double DEFAULT_EPSILON = 1.0e-6;
          children: []
          pos: 1296
          length: 53
        - type: field_declaration
          fields:
            text: protected final double epsilon;
          children: []
          pos: 1424
          length: 31
        - type: constructor_declaration
          fields:
            text: |-
              public SimplexSolver() {
                      this(DEFAULT_EPSILON);
                  }
          children: []
          pos: 1532
          length: 61
        - type: constructor_declaration
          fields:
            text: |-
              public SimplexSolver(final double epsilon) {
                      this.epsilon = epsilon;
                  }
          children: []
          pos: 1769
          length: 82
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getPivotColumn
              children: []
              pos: 2091
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: SimplexTableau tableau
                children: []
                pos: 2106
                length: 22
              pos: 2075
              length: 426
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: double minValue = 0;
                children: []
                pos: 2140
                length: 20
              - type: local_variable_declaration
                fields:
                  text: Integer minPos = null;
                children: []
                pos: 2169
                length: 22
              - type: for_statement
                fields:
                  text: |-
                    for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
                                if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
                                    minValue = tableau.getEntry(0, i);
                                    minPos = i;
                                }
                            }
                children: []
                pos: 2200
                length: 272
              - type: return_statement
                fields:
                  text: return minPos;
                children: []
                pos: 2481
                length: 14
              pos: 2130
              length: 371
          children: []
          pos: 2075
          length: 426
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getPivotRow
              children: []
              pos: 2818
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final int col
                children: []
                pos: 2830
                length: 13
              pos: 2802
              length: 682
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: double minRatio = Double.MAX_VALUE;
                children: []
                pos: 2885
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Integer minRatioPos = null;
                children: []
                pos: 2929
                length: 27
              - type: for_statement
                fields:
                  text: "for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight();
                    i++) {\n            final double rhs = tableau.getEntry(i, tableau.getWidth()
                    - 1);\n            final double entry = tableau.getEntry(i, col);\n
                    \           if (MathUtils.compareTo(entry, 0, epsilon) > 0) {\n
                    \               final double ratio = rhs / entry;\n                if
                    (ratio < minRatio) {\n                    minRatio = ratio;\n
                    \                   minRatioPos = i; \n                }\n            }\n
                    \       }"
                children: []
                pos: 2965
                length: 485
              - type: return_statement
                fields:
                  text: return minRatioPos;
                children: []
                pos: 3459
                length: 19
              pos: 2875
              length: 609
          children: []
          pos: 2802
          length: 682
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: doIteration
              children: []
              pos: 3792
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final SimplexTableau tableau
                children: []
                pos: 3804
                length: 28
              pos: 3777
              length: 788
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: incrementIterationsCounter();
                children: []
                pos: 3882
                length: 29
              - type: local_variable_declaration
                fields:
                  text: Integer pivotCol = getPivotColumn(tableau);
                children: []
                pos: 3921
                length: 43
              - type: local_variable_declaration
                fields:
                  text: Integer pivotRow = getPivotRow(pivotCol, tableau);
                children: []
                pos: 3973
                length: 50
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: pivotRow
                            children: []
                            pos: 4036
                            length: 8
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 4048
                            length: 4
                        children: []
                        pos: 4036
                        length: 16
                    children: []
                    pos: 4035
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new UnboundedSolutionException();
                    children: []
                    pos: 4068
                    length: 39
                  pos: 4054
                  length: 63
                pos: 4032
                length: 85
              - type: local_variable_declaration
                fields:
                  text: double pivotVal = tableau.getEntry(pivotRow, pivotCol);
                children: []
                pos: 4165
                length: 55
              - type: expression_statement
                fields:
                  text: tableau.divideRow(pivotRow, pivotVal);
                children: []
                pos: 4229
                length: 38
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < tableau.getHeight(); i++) {
                                if (i != pivotRow) {
                                    double multiplier = tableau.getEntry(i, pivotCol);
                                    tableau.subtractRow(i, pivotRow, multiplier);
                                }
                            }
                children: []
                pos: 4326
                length: 233
              pos: 3871
              length: 694
          children: []
          pos: 3777
          length: 788
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isPhase1Solved
              children: []
              pos: 4738
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final SimplexTableau tableau
                children: []
                pos: 4753
                length: 28
              pos: 4722
              length: 405
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: tableau.getNumArtificialVariables()
                            children: []
                            pos: 4797
                            length: 35
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 4836
                            length: 1
                        children: []
                        pos: 4797
                        length: 40
                    children: []
                    pos: 4796
                    length: 42
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return true;
                    children: []
                    pos: 4853
                    length: 12
                  pos: 4839
                  length: 36
                pos: 4793
                length: 82
              - type: for_statement
                fields:
                  text: |-
                    for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
                                if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
                                    return false;
                                }
                            }
                children: []
                pos: 4884
                length: 216
              - type: return_statement
                fields:
                  text: return true;
                children: []
                pos: 5109
                length: 12
              pos: 4783
              length: 344
          children: []
          pos: 4722
          length: 405
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isOptimal
              children: []
              pos: 5325
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final SimplexTableau tableau
                children: []
                pos: 5335
                length: 28
              pos: 5310
              length: 399
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: greater_than
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: tableau.getNumArtificialVariables()
                            children: []
                            pos: 5379
                            length: 35
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 5417
                            length: 1
                        children: []
                        pos: 5379
                        length: 39
                    children: []
                    pos: 5378
                    length: 41
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return false;
                    children: []
                    pos: 5434
                    length: 13
                  pos: 5420
                  length: 37
                pos: 5375
                length: 82
              - type: for_statement
                fields:
                  text: |-
                    for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
                                if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
                                    return false;
                                }
                            }
                children: []
                pos: 5466
                length: 216
              - type: return_statement
                fields:
                  text: return true;
                children: []
                pos: 5691
                length: 12
              pos: 5365
              length: 344
          children: []
          pos: 5310
          length: 399
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: solvePhase1
              children: []
              pos: 6042
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final SimplexTableau tableau
                children: []
                pos: 6054
                length: 28
              pos: 6027
              length: 529
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: tableau.getNumArtificialVariables()
                            children: []
                            pos: 6173
                            length: 35
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 6212
                            length: 1
                        children: []
                        pos: 6173
                        length: 40
                    children: []
                    pos: 6172
                    length: 42
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 6229
                    length: 7
                  pos: 6215
                  length: 31
                pos: 6169
                length: 77
              - type: while_statement
                fields:
                  text: |-
                    while (!isPhase1Solved(tableau)) {
                                doIteration(tableau);
                            }
                children: []
                pos: 6256
                length: 78
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!MathUtils.equals(tableau.getEntry(0, tableau.getRhsOffset()),
                            0, epsilon)"
                        children: []
                        pos: 6410
                        length: 74
                    children: []
                    pos: 6409
                    length: 76
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new NoFeasibleSolutionException();
                    children: []
                    pos: 6500
                    length: 40
                  pos: 6486
                  length: 64
                pos: 6406
                length: 144
              pos: 6121
              length: 435
          children: []
          pos: 6027
          length: 529
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: doOptimize
              children: []
              pos: 6627
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6587
              length: 422
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: |-
                    final SimplexTableau tableau =
                                new SimplexTableau(f, constraints, goalType, restrictToNonNegative, epsilon);
                children: []
                pos: 6687
                length: 120
              - type: expression_statement
                fields:
                  text: solvePhase1(tableau);
                children: []
                pos: 6816
                length: 21
              - type: expression_statement
                fields:
                  text: tableau.discardArtificialVariables();
                children: []
                pos: 6846
                length: 37
              - type: while_statement
                fields:
                  text: |-
                    while (!isOptimal(tableau)) {
                                doIteration(tableau);
                            }
                children: []
                pos: 6892
                length: 73
              - type: return_statement
                fields:
                  text: return tableau.getSolution();
                children: []
                pos: 6974
                length: 29
              pos: 6677
              length: 332
          children: []
          pos: 6587
          length: 422
        pos: 1153
        length: 5859
    children: []
    pos: 1153
    length: 5859
  pos: 0
  length: 7013
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: SimplexSolver
        children: []
        pos: 1166
        length: 13
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private static final double DEFAULT_EPSILON = 1.0e-6;
          children: []
          pos: 1296
          length: 53
        - type: field_declaration
          fields:
            text: protected final double epsilon;
          children: []
          pos: 1424
          length: 31
        - type: constructor_declaration
          fields:
            text: |-
              public SimplexSolver() {
                      this(DEFAULT_EPSILON);
                  }
          children: []
          pos: 1532
          length: 61
        - type: constructor_declaration
          fields:
            text: |-
              public SimplexSolver(final double epsilon) {
                      this.epsilon = epsilon;
                  }
          children: []
          pos: 1769
          length: 82
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getPivotColumn
              children: []
              pos: 2091
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: SimplexTableau tableau
                children: []
                pos: 2106
                length: 22
              pos: 2075
              length: 426
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: double minValue = 0;
                children: []
                pos: 2140
                length: 20
              - type: local_variable_declaration
                fields:
                  text: Integer minPos = null;
                children: []
                pos: 2169
                length: 22
              - type: for_statement
                fields:
                  text: |-
                    for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
                                if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {
                                    minValue = tableau.getEntry(0, i);
                                    minPos = i;
                                }
                            }
                children: []
                pos: 2200
                length: 272
              - type: return_statement
                fields:
                  text: return minPos;
                children: []
                pos: 2481
                length: 14
              pos: 2130
              length: 371
          children: []
          pos: 2075
          length: 426
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getPivotRow
              children: []
              pos: 2818
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final int col
                children: []
                pos: 2830
                length: 13
              pos: 2802
              length: 683
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: double minRatio = Double.MAX_VALUE;
                children: []
                pos: 2885
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Integer minRatioPos = null;
                children: []
                pos: 2929
                length: 27
              - type: for_statement
                fields:
                  text: "for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight();
                    i++) {\n            final double rhs = tableau.getEntry(i, tableau.getWidth()
                    - 1);\n            final double entry = tableau.getEntry(i, col);\n
                    \           if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {\n
                    \               final double ratio = rhs / entry;\n                if
                    (ratio < minRatio) {\n                    minRatio = ratio;\n
                    \                   minRatioPos = i; \n                }\n            }\n
                    \       }"
                children: []
                pos: 2965
                length: 486
              - type: return_statement
                fields:
                  text: return minRatioPos;
                children: []
                pos: 3460
                length: 19
              pos: 2875
              length: 610
          children: []
          pos: 2802
          length: 683
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: doIteration
              children: []
              pos: 3793
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final SimplexTableau tableau
                children: []
                pos: 3805
                length: 28
              pos: 3778
              length: 788
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: incrementIterationsCounter();
                children: []
                pos: 3883
                length: 29
              - type: local_variable_declaration
                fields:
                  text: Integer pivotCol = getPivotColumn(tableau);
                children: []
                pos: 3922
                length: 43
              - type: local_variable_declaration
                fields:
                  text: Integer pivotRow = getPivotRow(pivotCol, tableau);
                children: []
                pos: 3974
                length: 50
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: pivotRow
                            children: []
                            pos: 4037
                            length: 8
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 4049
                            length: 4
                        children: []
                        pos: 4037
                        length: 16
                    children: []
                    pos: 4036
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new UnboundedSolutionException();
                    children: []
                    pos: 4069
                    length: 39
                  pos: 4055
                  length: 63
                pos: 4033
                length: 85
              - type: local_variable_declaration
                fields:
                  text: double pivotVal = tableau.getEntry(pivotRow, pivotCol);
                children: []
                pos: 4166
                length: 55
              - type: expression_statement
                fields:
                  text: tableau.divideRow(pivotRow, pivotVal);
                children: []
                pos: 4230
                length: 38
              - type: for_statement
                fields:
                  text: |-
                    for (int i = 0; i < tableau.getHeight(); i++) {
                                if (i != pivotRow) {
                                    double multiplier = tableau.getEntry(i, pivotCol);
                                    tableau.subtractRow(i, pivotRow, multiplier);
                                }
                            }
                children: []
                pos: 4327
                length: 233
              pos: 3872
              length: 694
          children: []
          pos: 3778
          length: 788
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isPhase1Solved
              children: []
              pos: 4739
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final SimplexTableau tableau
                children: []
                pos: 4754
                length: 28
              pos: 4723
              length: 405
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: tableau.getNumArtificialVariables()
                            children: []
                            pos: 4798
                            length: 35
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 4837
                            length: 1
                        children: []
                        pos: 4798
                        length: 40
                    children: []
                    pos: 4797
                    length: 42
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return true;
                    children: []
                    pos: 4854
                    length: 12
                  pos: 4840
                  length: 36
                pos: 4794
                length: 82
              - type: for_statement
                fields:
                  text: |-
                    for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
                                if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
                                    return false;
                                }
                            }
                children: []
                pos: 4885
                length: 216
              - type: return_statement
                fields:
                  text: return true;
                children: []
                pos: 5110
                length: 12
              pos: 4784
              length: 344
          children: []
          pos: 4723
          length: 405
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isOptimal
              children: []
              pos: 5326
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final SimplexTableau tableau
                children: []
                pos: 5336
                length: 28
              pos: 5311
              length: 399
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: greater_than
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: tableau.getNumArtificialVariables()
                            children: []
                            pos: 5380
                            length: 35
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 5418
                            length: 1
                        children: []
                        pos: 5380
                        length: 39
                    children: []
                    pos: 5379
                    length: 41
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return false;
                    children: []
                    pos: 5435
                    length: 13
                  pos: 5421
                  length: 37
                pos: 5376
                length: 82
              - type: for_statement
                fields:
                  text: |-
                    for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
                                if (MathUtils.compareTo(tableau.getEntry(0, i), 0, epsilon) < 0) {
                                    return false;
                                }
                            }
                children: []
                pos: 5467
                length: 216
              - type: return_statement
                fields:
                  text: return true;
                children: []
                pos: 5692
                length: 12
              pos: 5366
              length: 344
          children: []
          pos: 5311
          length: 399
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: solvePhase1
              children: []
              pos: 6043
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final SimplexTableau tableau
                children: []
                pos: 6055
                length: 28
              pos: 6028
              length: 529
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: tableau.getNumArtificialVariables()
                            children: []
                            pos: 6174
                            length: 35
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 6213
                            length: 1
                        children: []
                        pos: 6174
                        length: 40
                    children: []
                    pos: 6173
                    length: 42
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 6230
                    length: 7
                  pos: 6216
                  length: 31
                pos: 6170
                length: 77
              - type: while_statement
                fields:
                  text: |-
                    while (!isPhase1Solved(tableau)) {
                                doIteration(tableau);
                            }
                children: []
                pos: 6257
                length: 78
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!MathUtils.equals(tableau.getEntry(0, tableau.getRhsOffset()),
                            0, epsilon)"
                        children: []
                        pos: 6411
                        length: 74
                    children: []
                    pos: 6410
                    length: 76
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: throw new NoFeasibleSolutionException();
                    children: []
                    pos: 6501
                    length: 40
                  pos: 6487
                  length: 64
                pos: 6407
                length: 144
              pos: 6122
              length: 435
          children: []
          pos: 6028
          length: 529
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: doOptimize
              children: []
              pos: 6628
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6588
              length: 422
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: |-
                    final SimplexTableau tableau =
                                new SimplexTableau(f, constraints, goalType, restrictToNonNegative, epsilon);
                children: []
                pos: 6688
                length: 120
              - type: expression_statement
                fields:
                  text: solvePhase1(tableau);
                children: []
                pos: 6817
                length: 21
              - type: expression_statement
                fields:
                  text: tableau.discardArtificialVariables();
                children: []
                pos: 6847
                length: 37
              - type: while_statement
                fields:
                  text: |-
                    while (!isOptimal(tableau)) {
                                doIteration(tableau);
                            }
                children: []
                pos: 6893
                length: 73
              - type: return_statement
                fields:
                  text: return tableau.getSolution();
                children: []
                pos: 6975
                length: 29
              pos: 6678
              length: 332
          children: []
          pos: 6588
          length: 422
        pos: 1153
        length: 5860
    children: []
    pos: 1153
    length: 5860
  pos: 0
  length: 7014
text_diff: |
  --- before
  +++ after
  @@ -79,7 +79,7 @@
           for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
               final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
               final double entry = tableau.getEntry(i, col);
  -            if (MathUtils.compareTo(entry, 0, epsilon) > 0) {
  +            if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
                   final double ratio = rhs / entry;
                   if (ratio < minRatio) {
                       minRatio = ratio;
tree_diff: "New cluster:\nUPDATE from for (int i = tableau.getNumObjectiveFunctions();
  i < tableau.getHeight(); i++) {\n            final double rhs = tableau.getEntry(i,
  tableau.getWidth() - 1);\n            final double entry = tableau.getEntry(i, col);\n
  \           if (MathUtils.compareTo(entry, 0, epsilon) > 0) {\n                final
  double ratio = rhs / entry;\n                if (ratio < minRatio) {\n                    minRatio
  = ratio;\n                    minRatioPos = i; \n                }\n            }\n
  \       } to for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight();
  i++) {\n            final double rhs = tableau.getEntry(i, tableau.getWidth() -
  1);\n            final double entry = tableau.getEntry(i, col);\n            if
  (MathUtils.compareTo(entry, 0, epsilon) >= 0) {\n                final double ratio
  = rhs / entry;\n                if (ratio < minRatio) {\n                    minRatio
  = ratio;\n                    minRatioPos = i; \n                }\n            }\n
  \       }\n------------\n===\nupdate-node\n---\nfor_statement: for (int i = tableau.getNumObjectiveFunctions();
  i < tableau.getHeight(); i++) {\n            final double rhs = tableau.getEntry(i,
  tableau.getWidth() - 1);\n            final double entry = tableau.getEntry(i, col);\n
  \           if (MathUtils.compareTo(entry, 0, epsilon) > 0) {\n                final
  double ratio = rhs / entry;\n                if (ratio < minRatio) {\n                    minRatio
  = ratio;\n                    minRatioPos = i; \n                }\n            }\n
  \       } [2965,3450]\nreplace for (int i = tableau.getNumObjectiveFunctions();
  i < tableau.getHeight(); i++) {\n            final double rhs = tableau.getEntry(i,
  tableau.getWidth() - 1);\n            final double entry = tableau.getEntry(i, col);\n
  \           if (MathUtils.compareTo(entry, 0, epsilon) > 0) {\n                final
  double ratio = rhs / entry;\n                if (ratio < minRatio) {\n                    minRatio
  = ratio;\n                    minRatioPos = i; \n                }\n            }\n
  \       } by for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight();
  i++) {\n            final double rhs = tableau.getEntry(i, tableau.getWidth() -
  1);\n            final double entry = tableau.getEntry(i, col);\n            if
  (MathUtils.compareTo(entry, 0, epsilon) >= 0) {\n                final double ratio
  = rhs / entry;\n                if (ratio < minRatio) {\n                    minRatio
  = ratio;\n                    minRatioPos = i; \n                }\n            }\n
  \       }\n\n"
