---
language: java
text_diff: |
  --- before
  +++ after
  @@ -79,7 +79,7 @@
           for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
               final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
               final double entry = tableau.getEntry(i, col);
  -            if (MathUtils.compareTo(entry, 0, epsilon) > 0) {
  +            if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
                   final double ratio = rhs / entry;
                   if (ratio < minRatio) {
                       minRatio = ratio;
tree_diff: "New cluster:\nUPDATE from for (int i = tableau.getNumObjectiveFunctions();
  i < tableau.getHeight(); i++) {\n            final double rhs = tableau.getEntry(i,
  tableau.getWidth() - 1);\n            final double entry = tableau.getEntry(i, col);\n
  \           if (MathUtils.compareTo(entry, 0, epsilon) > 0) {\n                final
  double ratio = rhs / entry;\n                if (ratio < minRatio) {\n                    minRatio
  = ratio;\n                    minRatioPos = i; \n                }\n            }\n
  \       } to for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight();
  i++) {\n            final double rhs = tableau.getEntry(i, tableau.getWidth() -
  1);\n            final double entry = tableau.getEntry(i, col);\n            if
  (MathUtils.compareTo(entry, 0, epsilon) >= 0) {\n                final double ratio
  = rhs / entry;\n                if (ratio < minRatio) {\n                    minRatio
  = ratio;\n                    minRatioPos = i; \n                }\n            }\n
  \       }\n------------\n===\nupdate-node\n---\nfor_statement: for (int i = tableau.getNumObjectiveFunctions();
  i < tableau.getHeight(); i++) {\n            final double rhs = tableau.getEntry(i,
  tableau.getWidth() - 1);\n            final double entry = tableau.getEntry(i, col);\n
  \           if (MathUtils.compareTo(entry, 0, epsilon) > 0) {\n                final
  double ratio = rhs / entry;\n                if (ratio < minRatio) {\n                    minRatio
  = ratio;\n                    minRatioPos = i; \n                }\n            }\n
  \       } [2965,3450]\nreplace for (int i = tableau.getNumObjectiveFunctions();
  i < tableau.getHeight(); i++) {\n            final double rhs = tableau.getEntry(i,
  tableau.getWidth() - 1);\n            final double entry = tableau.getEntry(i, col);\n
  \           if (MathUtils.compareTo(entry, 0, epsilon) > 0) {\n                final
  double ratio = rhs / entry;\n                if (ratio < minRatio) {\n                    minRatio
  = ratio;\n                    minRatioPos = i; \n                }\n            }\n
  \       } by for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight();
  i++) {\n            final double rhs = tableau.getEntry(i, tableau.getWidth() -
  1);\n            final double entry = tableau.getEntry(i, col);\n            if
  (MathUtils.compareTo(entry, 0, epsilon) >= 0) {\n                final double ratio
  = rhs / entry;\n                if (ratio < minRatio) {\n                    minRatio
  = ratio;\n                    minRatioPos = i; \n                }\n            }\n
  \       }\n\n"
