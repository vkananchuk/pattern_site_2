---
language: python
before_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: shunting_yard
        children: []
        pos: 4
        length: 13
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: tokens
          children: []
          pos: 18
          length: 6
        pos: 0
        length: 467
      body:
        type: block
        fields: {}
        children:
        - type: expression_statement
          fields:
            text: |-
              precedence = {
                      '+': 1,
                      '-': 1,
                      '*': 2,
                      '/': 2
                  }
          children: []
          pos: 31
          length: 83
        - type: expression_statement
          fields:
            text: rpntokens = []
          children: []
          pos: 120
          length: 14
        - type: expression_statement
          fields:
            text: opstack = []
          children: []
          pos: 139
          length: 12
        - type: for_statement
          fields:
            text: |-
              for token in tokens:
                      if isinstance(token, int):
                          rpntokens.append(token)
                      else:
                          while opstack and precedence[token] <= precedence[opstack[-1]]:
                              rpntokens.append(opstack.pop())
          children: []
          pos: 156
          length: 229
        - type: while_statement
          fields:
            text: |-
              while opstack:
                      rpntokens.append(opstack.pop())
          children: []
          pos: 391
          length: 54
        - type: return_statement
          fields:
            text: return rpntokens
          children: []
          pos: 451
          length: 16
        pos: 31
        length: 436
    children: []
    pos: 0
    length: 467
  pos: 0
  length: 468
after_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: shunting_yard
        children: []
        pos: 4
        length: 13
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: tokens
          children: []
          pos: 18
          length: 6
        pos: 0
        length: 501
      body:
        type: block
        fields: {}
        children:
        - type: expression_statement
          fields:
            text: |-
              precedence = {
                      '+': 1,
                      '-': 1,
                      '*': 2,
                      '/': 2
                  }
          children: []
          pos: 31
          length: 83
        - type: expression_statement
          fields:
            text: rpntokens = []
          children: []
          pos: 120
          length: 14
        - type: expression_statement
          fields:
            text: opstack = []
          children: []
          pos: 139
          length: 12
        - type: for_statement
          fields:
            text: |-
              for token in tokens:
                      if isinstance(token, int):
                          rpntokens.append(token)
                      else:
                          while opstack and precedence[token] <= precedence[opstack[-1]]:
                              rpntokens.append(opstack.pop())
                          opstack.append(token)
          children: []
          pos: 156
          length: 263
        - type: while_statement
          fields:
            text: |-
              while opstack:
                      rpntokens.append(opstack.pop())
          children: []
          pos: 425
          length: 54
        - type: return_statement
          fields:
            text: return rpntokens
          children: []
          pos: 485
          length: 16
        pos: 31
        length: 470
    children: []
    pos: 0
    length: 501
  pos: 0
  length: 503
text_diff: "--- before\n+++ after\n@@ -14,8 +14,10 @@\n         else:\n             while
  opstack and precedence[token] <= precedence[opstack[-1]]:\n                 rpntokens.append(opstack.pop())\n+
  \           opstack.append(token)\n \n     while opstack:\n         rpntokens.append(opstack.pop())\n
  \n     return rpntokens\n+\n"
tree_diff: |+
  New cluster:
  UPDATE from for token in tokens:
          if isinstance(token, int):
              rpntokens.append(token)
          else:
              while opstack and precedence[token] <= precedence[opstack[-1]]:
                  rpntokens.append(opstack.pop()) to for token in tokens:
          if isinstance(token, int):
              rpntokens.append(token)
          else:
              while opstack and precedence[token] <= precedence[opstack[-1]]:
                  rpntokens.append(opstack.pop())
              opstack.append(token)
  ------------
  ===
  update-node
  ---
  for_statement: for token in tokens:
          if isinstance(token, int):
              rpntokens.append(token)
          else:
              while opstack and precedence[token] <= precedence[opstack[-1]]:
                  rpntokens.append(opstack.pop()) [156,385]
  replace for token in tokens:
          if isinstance(token, int):
              rpntokens.append(token)
          else:
              while opstack and precedence[token] <= precedence[opstack[-1]]:
                  rpntokens.append(opstack.pop()) by for token in tokens:
          if isinstance(token, int):
              rpntokens.append(token)
          else:
              while opstack and precedence[token] <= precedence[opstack[-1]]:
                  rpntokens.append(opstack.pop())
              opstack.append(token)

...
