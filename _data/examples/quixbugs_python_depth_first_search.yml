---
language: python
before_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: depth_first_search
        children: []
        pos: 4
        length: 18
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: startnode
          children: []
          pos: 23
          length: 9
        pos: 0
        length: 367
      body:
        type: block
        fields: {}
        children:
        - type: expression_statement
          fields:
            text: nodesvisited = set()
          children: []
          pos: 49
          length: 20
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: search_from
              children: []
              pos: 79
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: identifier
                fields:
                  text: node
                children: []
                pos: 91
                length: 4
              pos: 75
              length: 257
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: in
                    fields:
                      left:
                        type: identifier
                        fields:
                          text: node
                        children: []
                        pos: 109
                        length: 4
                      right:
                        type: identifier
                        fields:
                          text: nodesvisited
                        children: []
                        pos: 117
                        length: 12
                    children: []
                    pos: 109
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return False
                    children: []
                    pos: 143
                    length: 12
                  pos: 143
                  length: 12
                - type: elif_clause
                  fields:
                    condition:
                      type: is
                      fields:
                        left:
                          type: identifier
                          fields:
                            text: node
                          children: []
                          pos: 169
                          length: 4
                        right:
                          type: identifier
                          fields:
                            text: goalnode
                          children: []
                          pos: 177
                          length: 8
                      children: []
                      pos: 169
                      length: 16
                    consequence:
                      type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return True
                        children: []
                        pos: 199
                        length: 11
                      pos: 199
                      length: 11
                  children: []
                  pos: 164
                  length: 46
                - type: else_clause
                  fields:
                    body:
                      type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: |-
                            return any(
                                            search_from(nextnode) for nextnode in node.successors
                                        )
                        children: []
                        pos: 237
                        length: 95
                      pos: 237
                      length: 95
                  children: []
                  pos: 219
                  length: 113
                pos: 106
                length: 226
              pos: 106
              length: 226
          children: []
          pos: 75
          length: 257
        - type: return_statement
          fields:
            text: return search_from(startnode)
          children: []
          pos: 338
          length: 29
        pos: 49
        length: 318
    children: []
    pos: 0
    length: 367
  pos: 0
  length: 368
after_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: depth_first_search
        children: []
        pos: 4
        length: 18
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: startnode
          children: []
          pos: 23
          length: 9
        pos: 0
        length: 402
      body:
        type: block
        fields: {}
        children:
        - type: expression_statement
          fields:
            text: nodesvisited = set()
          children: []
          pos: 49
          length: 20
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: search_from
              children: []
              pos: 79
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: identifier
                fields:
                  text: node
                children: []
                pos: 91
                length: 4
              pos: 75
              length: 292
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: in
                    fields:
                      left:
                        type: identifier
                        fields:
                          text: node
                        children: []
                        pos: 109
                        length: 4
                      right:
                        type: identifier
                        fields:
                          text: nodesvisited
                        children: []
                        pos: 117
                        length: 12
                    children: []
                    pos: 109
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return False
                    children: []
                    pos: 143
                    length: 12
                  pos: 143
                  length: 12
                - type: elif_clause
                  fields:
                    condition:
                      type: is
                      fields:
                        left:
                          type: identifier
                          fields:
                            text: node
                          children: []
                          pos: 169
                          length: 4
                        right:
                          type: identifier
                          fields:
                            text: goalnode
                          children: []
                          pos: 177
                          length: 8
                      children: []
                      pos: 169
                      length: 16
                    consequence:
                      type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return True
                        children: []
                        pos: 199
                        length: 11
                      pos: 199
                      length: 11
                  children: []
                  pos: 164
                  length: 46
                - type: else_clause
                  fields:
                    body:
                      type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: nodesvisited.add(node)
                        children: []
                        pos: 237
                        length: 22
                      - type: return_statement
                        fields:
                          text: |-
                            return any(
                                            search_from(nextnode) for nextnode in node.successors
                                        )
                        children: []
                        pos: 272
                        length: 95
                      pos: 237
                      length: 130
                  children: []
                  pos: 219
                  length: 148
                pos: 106
                length: 261
              pos: 106
              length: 261
          children: []
          pos: 75
          length: 292
        - type: return_statement
          fields:
            text: return search_from(startnode)
          children: []
          pos: 373
          length: 29
        pos: 49
        length: 353
    children: []
    pos: 0
    length: 402
  pos: 0
  length: 403
text_diff: |
  --- before
  +++ after
  @@ -7,6 +7,7 @@
           elif node is goalnode:
               return True
           else:
  +            nodesvisited.add(node)
               return any(
                   search_from(nextnode) for nextnode in node.successors
               )
tree_diff: |+
  New cluster:
  ===
  insert-node
  ---
  expression_statement: nodesvisited.add(node) [237,259]
  to
  block [237,332]
  at 0
  ------------
  ===
  insert-node
  ---
  expression_statement: nodesvisited.add(node) [237,259]
  to
  block [237,332]
  at 0

...
