---
language: python
text_diff: "--- before\n+++ after\n@@ -1,3 +1,4 @@\n+\n def depth_first_search(startnode,
  goalnode):\n     nodesvisited = set()\n \n@@ -7,22 +8,9 @@\n         elif node is
  goalnode:\n             return True\n         else:\n+            nodesvisited.add(node)\n
  \            return any(\n                 search_from(nextnode) for nextnode in
  node.successors\n             )\n \n     return search_from(startnode)\n-\n-\n-\n-\"\"\"\n-Depth-first
  Search\n-\n-\n-Input:\n-    startnode: A digraph node\n-    goalnode: A digraph
  node\n-\n-Output:\n-    Whether goalnode is reachable from startnode\n-\"\"\"\n"
tree_diff: |+
  New cluster:
  ===
  insert-node
  ---
  expression_statement: nodesvisited.add(node) [238,260]
  to
  block [237,332]
  at 0
  ------------
  ===
  insert-node
  ---
  expression_statement: nodesvisited.add(node) [238,260]
  to
  block [237,332]
  at 0

  New cluster:
  ===
  delete-node
  ---
  expression_statement: """
  Depth-first Search


  Input:
      startnode: A digraph node
      goalnode: A digraph node

  Output:
      Whether goalnode is reachable from startnode
  """ [371,523]
  ===
  ------------
  ===
  delete-node
  ---
  expression_statement: """
  Depth-first Search


  Input:
      startnode: A digraph node
      goalnode: A digraph node

  Output:
      Whether goalnode is reachable from startnode
  """ [371,523]
  ===

...
