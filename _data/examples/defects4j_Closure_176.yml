---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: TypeInference
        children: []
        pos: 3115
        length: 13
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType FUNCTION_LITERAL_UNDEFINED_THIS =
                  DiagnosticType.warning(
                      "JSC_FUNCTION_LITERAL_UNDEFINED_THIS",
                      "Function literal argument refers to undefined this argument");
          children: []
          pos: 3278
          length: 208
        - type: field_declaration
          fields:
            text: private final AbstractCompiler compiler;
          children: []
          pos: 3490
          length: 40
        - type: field_declaration
          fields:
            text: private final JSTypeRegistry registry;
          children: []
          pos: 3533
          length: 38
        - type: field_declaration
          fields:
            text: private final ReverseAbstractInterpreter reverseInterpreter;
          children: []
          pos: 3574
          length: 60
        - type: field_declaration
          fields:
            text: private final Scope syntacticScope;
          children: []
          pos: 3637
          length: 35
        - type: field_declaration
          fields:
            text: private final FlowScope functionScope;
          children: []
          pos: 3675
          length: 38
        - type: field_declaration
          fields:
            text: private final FlowScope bottomScope;
          children: []
          pos: 3716
          length: 36
        - type: field_declaration
          fields:
            text: private final Map<String, AssertionFunctionSpec> assertionFunctionsMap;
          children: []
          pos: 3755
          length: 71
        - type: field_declaration
          fields:
            text: private final ObjectType unknownType;
          children: []
          pos: 3851
          length: 37
        - type: constructor_declaration
          fields:
            text: |-
              TypeInference(AbstractCompiler compiler, ControlFlowGraph<Node> cfg,
                              ReverseAbstractInterpreter reverseInterpreter,
                              Scope functionScope,
                              Map<String, AssertionFunctionSpec> assertionFunctionsMap) {
                  super(cfg, new LinkedFlowScope.FlowScopeJoinOp());
                  this.compiler = compiler;
                  this.registry = compiler.getTypeRegistry();
                  this.reverseInterpreter = reverseInterpreter;
                  this.unknownType = registry.getNativeObjectType(UNKNOWN_TYPE);

                  this.syntacticScope = functionScope;
                  inferArguments(functionScope);

                  this.functionScope = LinkedFlowScope.createEntryLattice(functionScope);
                  this.assertionFunctionsMap = assertionFunctionsMap;

                  // For each local variable declared with the VAR keyword, the entry
                  // type is VOID.
                  Iterator<Var> varIt =
                      functionScope.getDeclarativelyUnboundVarsWithoutTypes();
                  while (varIt.hasNext()) {
                    Var var = varIt.next();
                    if (isUnflowable(var)) {
                      continue;
                    }

                    this.functionScope.inferSlotType(
                        var.getName(), getNativeType(VOID_TYPE));
                  }

                  this.bottomScope = LinkedFlowScope.createEntryLattice(
                      Scope.createLatticeBottom(functionScope.getRootNode()));
                }
          children: []
          pos: 3892
          length: 1234
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: inferArguments
              children: []
              pos: 5229
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Scope functionScope
                children: []
                pos: 5244
                length: 19
              pos: 5216
              length: 1514
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node functionNode = functionScope.getRootNode();
                children: []
                pos: 5271
                length: 48
              - type: local_variable_declaration
                fields:
                  text: Node astParameters = functionNode.getFirstChild().getNext();
                children: []
                pos: 5324
                length: 60
              - type: local_variable_declaration
                fields:
                  text: Node iifeArgumentNode = null;
                children: []
                pos: 5389
                length: 29
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: NodeUtil.isCallOrNewTarget(functionNode)
                        children: []
                        pos: 5428
                        length: 40
                    children: []
                    pos: 5427
                    length: 42
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: iifeArgumentNode = functionNode.getNext();
                    children: []
                    pos: 5478
                    length: 42
                  pos: 5470
                  length: 56
                pos: 5424
                length: 102
              - type: local_variable_declaration
                fields:
                  text: |-
                    FunctionType functionType =
                            JSType.toMaybeFunctionType(functionNode.getJSType());
                children: []
                pos: 5532
                length: 89
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: functionType
                            children: []
                            pos: 5630
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 5646
                            length: 4
                        children: []
                        pos: 5630
                        length: 20
                    children: []
                    pos: 5629
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Node parameterTypes = functionType.getParametersNode();
                    children: []
                    pos: 5660
                    length: 55
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: parameterTypes
                                children: []
                                pos: 5726
                                length: 14
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 5744
                                length: 4
                            children: []
                            pos: 5726
                            length: 22
                        children: []
                        pos: 5725
                        length: 24
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: Node parameterTypeNode = parameterTypes.getFirstChild();
                        children: []
                        pos: 5760
                        length: 56
                      - type: enhanced_for_statement
                        fields:
                          text: |-
                            for (Node astParameter : astParameters.children()) {
                                      Var var = functionScope.getVar(astParameter.getString());
                                      Preconditions.checkNotNull(var);
                                      if (var.isTypeInferred() &&
                                          var.getType() == unknownType) {
                                        JSType newType = null;

                                        if (iifeArgumentNode != null) {
                                          newType = iifeArgumentNode.getJSType();
                                        } else if (parameterTypeNode != null) {
                                          newType = parameterTypeNode.getJSType();
                                        }

                                        if (newType != null) {
                                          var.setType(newType);
                                          astParameter.setJSType(newType);
                                        }
                                      }

                                      if (parameterTypeNode != null) {
                                        parameterTypeNode = parameterTypeNode.getNext();
                                      }
                                      if (iifeArgumentNode != null) {
                                        iifeArgumentNode = iifeArgumentNode.getNext();
                                      }
                                    }
                        children: []
                        pos: 5825
                        length: 887
                      pos: 5750
                      length: 970
                    pos: 5722
                    length: 998
                  pos: 5652
                  length: 1074
                pos: 5626
                length: 1100
              pos: 5265
              length: 1465
          children: []
          pos: 5216
          length: 1514
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createInitialEstimateLattice
              children: []
              pos: 6756
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6734
              length: 82
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return bottomScope;
                children: []
                pos: 6793
                length: 19
              pos: 6787
              length: 29
          children: []
          pos: 6734
          length: 82
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createEntryLattice
              children: []
              pos: 6842
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6820
              length: 74
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return functionScope;
                children: []
                pos: 6869
                length: 21
              pos: 6863
              length: 31
          children: []
          pos: 6820
          length: 74
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: flowThrough
              children: []
              pos: 6920
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 6932
                length: 6
              pos: 6898
              length: 348
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: input
                            children: []
                            pos: 7086
                            length: 5
                          right:
                            type: identifier
                            fields:
                              text: bottomScope
                            children: []
                            pos: 7095
                            length: 11
                        children: []
                        pos: 7086
                        length: 20
                    children: []
                    pos: 7085
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return input;
                    children: []
                    pos: 7116
                    length: 13
                  pos: 7108
                  length: 27
                pos: 7082
                length: 53
              - type: local_variable_declaration
                fields:
                  text: FlowScope output = input.createChildFlowScope();
                children: []
                pos: 7141
                length: 48
              - type: expression_statement
                fields:
                  text: output = traverse(n, output);
                children: []
                pos: 7194
                length: 29
              - type: return_statement
                fields:
                  text: return output;
                children: []
                pos: 7228
                length: 14
              pos: 6957
              length: 289
          children: []
          pos: 6898
          length: 348
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: branchedFlowThrough
              children: []
              pos: 7336
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node source
                children: []
                pos: 7356
                length: 11
              pos: 7250
              length: 4755
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: FlowScope output = flowThrough(source, input);
                children: []
                pos: 7708
                length: 46
              - type: local_variable_declaration
                fields:
                  text: Node condition = null;
                children: []
                pos: 7759
                length: 22
              - type: local_variable_declaration
                fields:
                  text: FlowScope conditionFlowScope = null;
                children: []
                pos: 7786
                length: 36
              - type: local_variable_declaration
                fields:
                  text: BooleanOutcomePair conditionOutcomes = null;
                children: []
                pos: 7827
                length: 44
              - type: local_variable_declaration
                fields:
                  text: List<DiGraphEdge<Node, Branch>> branchEdges = getCfg().getOutEdges(source);
                children: []
                pos: 7877
                length: 75
              - type: local_variable_declaration
                fields:
                  text: List<FlowScope> result = Lists.newArrayListWithCapacity(branchEdges.size());
                children: []
                pos: 7957
                length: 76
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (DiGraphEdge<Node, Branch> branchEdge : branchEdges) {
                          Branch branch = branchEdge.getValue();
                          FlowScope newScope = output;

                          switch (branch) {
                            case ON_TRUE:
                              if (NodeUtil.isForIn(source)) {
                                // item is assigned a property name, so its type should be string.
                                Node item = source.getFirstChild();
                                Node obj = item.getNext();

                                FlowScope informed = traverse(obj, output.createChildFlowScope());

                                if (item.isVar()) {
                                  item = item.getFirstChild();
                                }
                                if (item.isName()) {
                                  JSType iterKeyType = getNativeType(STRING_TYPE);
                                  ObjectType objType = getJSType(obj).dereference();
                                  JSType objIndexType = objType == null ?
                                      null : objType.getTemplateTypeMap().getTemplateType(
                                          registry.getObjectIndexKey());
                                  if (objIndexType != null && !objIndexType.isUnknownType()) {
                                    JSType narrowedKeyType =
                                        iterKeyType.getGreatestSubtype(objIndexType);
                                    if (!narrowedKeyType.isEmptyType()) {
                                      iterKeyType = narrowedKeyType;
                                    }
                                  }
                                  redeclareSimpleVar(informed, item, iterKeyType);
                                }
                                newScope = informed;
                                break;
                              }

                              // FALL THROUGH

                            case ON_FALSE:
                              if (condition == null) {
                                condition = NodeUtil.getConditionExpression(source);
                                if (condition == null && source.isCase()) {
                                  condition = source;

                                  // conditionFlowScope is cached from previous iterations
                                  // of the loop.
                                  if (conditionFlowScope == null) {
                                    conditionFlowScope = traverse(
                                        condition.getFirstChild(), output.createChildFlowScope());
                                  }
                                }
                              }

                              if (condition != null) {
                                if (condition.isAnd() ||
                                    condition.isOr()) {
                                  // When handling the short-circuiting binary operators,
                                  // the outcome scope on true can be different than the outcome
                                  // scope on false.
                                  //
                                  // TODO(nicksantos): The "right" way to do this is to
                                  // carry the known outcome all the way through the
                                  // recursive traversal, so that we can construct a
                                  // different flow scope based on the outcome. However,
                                  // this would require a bunch of code and a bunch of
                                  // extra computation for an edge case. This seems to be
                                  // a "good enough" approximation.

                                  // conditionOutcomes is cached from previous iterations
                                  // of the loop.
                                  if (conditionOutcomes == null) {
                                    conditionOutcomes = condition.isAnd() ?
                                        traverseAnd(condition, output.createChildFlowScope()) :
                                        traverseOr(condition, output.createChildFlowScope());
                                  }
                                  newScope =
                                      reverseInterpreter.getPreciserScopeKnowingConditionOutcome(
                                          condition,
                                          conditionOutcomes.getOutcomeFlowScope(
                                              condition.getType(), branch == Branch.ON_TRUE),
                                          branch == Branch.ON_TRUE);
                                } else {
                                  // conditionFlowScope is cached from previous iterations
                                  // of the loop.
                                  if (conditionFlowScope == null) {
                                    conditionFlowScope =
                                        traverse(condition, output.createChildFlowScope());
                                  }
                                  newScope =
                                      reverseInterpreter.getPreciserScopeKnowingConditionOutcome(
                                          condition, conditionFlowScope, branch == Branch.ON_TRUE);
                                }
                              }
                              break;
                          }

                          result.add(newScope.optimize());
                        }
                children: []
                pos: 8038
                length: 3944
              - type: return_statement
                fields:
                  text: return result;
                children: []
                pos: 11987
                length: 14
              pos: 7386
              length: 4619
          children: []
          pos: 7250
          length: 4755
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverse
              children: []
              pos: 12027
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 12036
                length: 6
              pos: 12009
              length: 3810
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 12075
                        length: 11
                    children: []
                    pos: 12074
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.ASSIGN:
                                scope = traverseAssign(n, scope);
                                break;

                              case Token.NAME:
                                scope = traverseName(n, scope);
                                break;

                              case Token.GETPROP:
                                scope = traverseGetProp(n, scope);
                                break;

                              case Token.AND:
                                scope = traverseAnd(n, scope).getJoinedFlowScope()
                                    .createChildFlowScope();
                                break;

                              case Token.OR:
                                scope = traverseOr(n, scope).getJoinedFlowScope()
                                    .createChildFlowScope();
                                break;

                              case Token.HOOK:
                                scope = traverseHook(n, scope);
                                break;

                              case Token.OBJECTLIT:
                                scope = traverseObjectLiteral(n, scope);
                                break;

                              case Token.CALL:
                                scope = traverseCall(n, scope);
                                break;

                              case Token.NEW:
                                scope = traverseNew(n, scope);
                                break;

                              case Token.ASSIGN_ADD:
                              case Token.ADD:
                                scope = traverseAdd(n, scope);
                                break;

                              case Token.POS:
                              case Token.NEG:
                                scope = traverse(n.getFirstChild(), scope);  // Find types.
                                n.setJSType(getNativeType(NUMBER_TYPE));
                                break;

                              case Token.ARRAYLIT:
                                scope = traverseArrayLiteral(n, scope);
                                break;

                              case Token.THIS:
                                n.setJSType(scope.getTypeOfThis());
                                break;

                              case Token.ASSIGN_LSH:
                              case Token.ASSIGN_RSH:
                              case Token.LSH:
                              case Token.RSH:
                              case Token.ASSIGN_URSH:
                              case Token.URSH:
                              case Token.ASSIGN_DIV:
                              case Token.ASSIGN_MOD:
                              case Token.ASSIGN_BITAND:
                              case Token.ASSIGN_BITXOR:
                              case Token.ASSIGN_BITOR:
                              case Token.ASSIGN_MUL:
                              case Token.ASSIGN_SUB:
                              case Token.DIV:
                              case Token.MOD:
                              case Token.BITAND:
                              case Token.BITXOR:
                              case Token.BITOR:
                              case Token.MUL:
                              case Token.SUB:
                              case Token.DEC:
                              case Token.INC:
                              case Token.BITNOT:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getNativeType(NUMBER_TYPE));
                                break;

                              case Token.PARAM_LIST:
                                scope = traverse(n.getFirstChild(), scope);
                                n.setJSType(getJSType(n.getFirstChild()));
                                break;

                              case Token.COMMA:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getJSType(n.getLastChild()));
                                break;

                              case Token.TYPEOF:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getNativeType(STRING_TYPE));
                                break;

                              case Token.DELPROP:
                              case Token.LT:
                              case Token.LE:
                              case Token.GT:
                              case Token.GE:
                              case Token.NOT:
                              case Token.EQ:
                              case Token.NE:
                              case Token.SHEQ:
                              case Token.SHNE:
                              case Token.INSTANCEOF:
                              case Token.IN:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getNativeType(BOOLEAN_TYPE));
                                break;

                              case Token.GETELEM:
                                scope = traverseGetElem(n, scope);
                                break;

                              case Token.EXPR_RESULT:
                                scope = traverseChildren(n, scope);
                                if (n.getFirstChild().isGetProp()) {
                                  ensurePropertyDeclared(n.getFirstChild());
                                }
                                break;

                              case Token.SWITCH:
                                scope = traverse(n.getFirstChild(), scope);
                                break;

                              case Token.RETURN:
                                scope = traverseReturn(n, scope);
                                break;

                              case Token.VAR:
                              case Token.THROW:
                                scope = traverseChildren(n, scope);
                                break;

                              case Token.CATCH:
                                scope = traverseCatch(n, scope);
                                break;

                              case Token.CAST:
                                scope = traverseChildren(n, scope);
                                JSDocInfo info = n.getJSDocInfo();
                                if (info != null && info.hasType()) {
                                  n.setJSType(info.getType().evaluate(syntacticScope, registry));
                                }
                                break;
                            }
                    children: []
                    pos: 12088
                    length: 3708
                children: []
                pos: 12067
                length: 3729
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 15802
                length: 13
              pos: 12061
              length: 3758
          children: []
          pos: 12009
          length: 3810
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseReturn
              children: []
              pos: 15883
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 15898
                length: 6
              pos: 15865
              length: 496
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 15929
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node retValue = n.getFirstChild();
                children: []
                pos: 15970
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: retValue
                            children: []
                            pos: 16013
                            length: 8
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 16025
                            length: 4
                        children: []
                        pos: 16013
                        length: 16
                    children: []
                    pos: 16012
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType type = functionScope.getRootNode().getJSType();
                    children: []
                    pos: 16039
                    length: 54
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 16104
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 16112
                                length: 4
                            children: []
                            pos: 16104
                            length: 12
                        children: []
                        pos: 16103
                        length: 14
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: FunctionType fnType = type.toMaybeFunctionType();
                        children: []
                        pos: 16128
                        length: 49
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: fnType
                                    children: []
                                    pos: 16190
                                    length: 6
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 16200
                                    length: 4
                                children: []
                                pos: 16190
                                length: 14
                            children: []
                            pos: 16189
                            length: 16
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: |-
                                inferPropertyTypesToMatchConstraint(
                                              retValue.getJSType(), fnType.getReturnType());
                            children: []
                            pos: 16218
                            length: 97
                          pos: 16206
                          length: 119
                        pos: 16186
                        length: 139
                      pos: 16118
                      length: 215
                    pos: 16100
                    length: 233
                  pos: 16031
                  length: 308
                pos: 16009
                length: 330
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 16344
                length: 13
              pos: 15923
              length: 438
          children: []
          pos: 15865
          length: 496
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseCatch
              children: []
              pos: 16526
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node catchNode
                children: []
                pos: 16540
                length: 14
              pos: 16508
              length: 548
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node name = catchNode.getFirstChild();
                children: []
                pos: 16579
                length: 38
              - type: local_variable_declaration
                fields:
                  text: JSType type;
                children: []
                pos: 16622
                length: 12
              - type: local_variable_declaration
                fields:
                  text: JSDocInfo info = name.getJSDocInfo();
                children: []
                pos: 16748
                length: 37
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: info
                                children: []
                                pos: 16794
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 16802
                                length: 4
                            children: []
                            pos: 16794
                            length: 12
                          right:
                            type: method_invocation
                            fields:
                              text: info.hasType()
                            children: []
                            pos: 16810
                            length: 14
                        children: []
                        pos: 16794
                        length: 30
                    children: []
                    pos: 16793
                    length: 32
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: type = info.getType().evaluate(syntacticScope, registry);
                    children: []
                    pos: 16834
                    length: 57
                  pos: 16826
                  length: 71
                pos: 16790
                length: 175
              - type: expression_statement
                fields:
                  text: redeclareSimpleVar(scope, name, type);
                children: []
                pos: 16970
                length: 38
              - type: expression_statement
                fields:
                  text: name.setJSType(type);
                children: []
                pos: 17013
                length: 21
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 17039
                length: 13
              pos: 16573
              length: 483
          children: []
          pos: 16508
          length: 548
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseAssign
              children: []
              pos: 17078
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 17093
                length: 6
              pos: 17060
              length: 366
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 17124
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 17159
                length: 30
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 17194
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = left.getJSType();
                children: []
                pos: 17235
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = getJSType(right);
                children: []
                pos: 17275
                length: 36
              - type: expression_statement
                fields:
                  text: n.setJSType(rightType);
                children: []
                pos: 17316
                length: 23
              - type: expression_statement
                fields:
                  text: updateScopeForTypeChange(scope, left, leftType, rightType);
                children: []
                pos: 17345
                length: 59
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 17409
                length: 13
              pos: 17118
              length: 308
          children: []
          pos: 17060
          length: 366
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateScopeForTypeChange
              children: []
              pos: 17560
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 17592
                length: 15
              pos: 17547
              length: 2666
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(resultType);
                children: []
                pos: 17662
                length: 39
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: left.getType()
                        children: []
                        pos: 17714
                        length: 14
                    children: []
                    pos: 17713
                    length: 16
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.NAME:
                                String varName = left.getString();
                                Var var = syntacticScope.getVar(varName);
                                JSType varType = var == null ? null : var.getType();
                                boolean isVarDeclaration = left.hasChildren()
                                    && varType != null && !var.isTypeInferred();

                                // When looking at VAR initializers for declared VARs, we tend
                                // to use the declared type over the type it's being
                                // initialized to in the global scope.
                                //
                                // For example,
                                // /** @param {number} */ var f = goog.abstractMethod;
                                // it's obvious that the programmer wants you to use
                                // the declared function signature, not the inferred signature.
                                //
                                // Or,
                                // /** @type {Object.<string>} */ var x = {};
                                // the one-time anonymous object on the right side
                                // is as narrow as it can possibly be, but we need to make
                                // sure we back-infer the <string> element constraint on
                                // the left hand side, so we use the left hand side.

                                boolean isVarTypeBetter = isVarDeclaration &&
                                    // Makes it easier to check for NPEs.
                                    !resultType.isNullType() && !resultType.isVoidType();

                                // TODO(nicksantos): This might be a better check once we have
                                // back-inference of object/array constraints.  It will probably
                                // introduce more type warnings.  It uses the result type iff it's
                                // strictly narrower than the declared var type.
                                //
                                //boolean isVarTypeBetter = isVarDeclaration &&
                                //    (varType.restrictByNotNullOrUndefined().isSubtype(resultType)
                                //     || !resultType.isSubtype(varType));


                                if (isVarTypeBetter) {
                                  redeclareSimpleVar(scope, left, varType);
                                } else {
                                  redeclareSimpleVar(scope, left, resultType);
                                }
                                left.setJSType(resultType);

                                if (var != null && var.isTypeInferred()) {
                                  JSType oldType = var.getType();
                                  var.setType(oldType == null ?
                                      resultType : oldType.getLeastSupertype(resultType));
                                }
                                break;
                              case Token.GETPROP:
                                String qualifiedName = left.getQualifiedName();
                                if (qualifiedName != null) {
                                  scope.inferQualifiedSlot(left, qualifiedName,
                                      leftType == null ? unknownType : leftType,
                                      resultType);
                                }

                                left.setJSType(resultType);
                                ensurePropertyDefined(left, resultType);
                                break;
                            }
                    children: []
                    pos: 17730
                    length: 2479
                children: []
                pos: 17706
                length: 2503
              pos: 17656
              length: 2557
          children: []
          pos: 17547
          length: 2666
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensurePropertyDefined
              children: []
              pos: 20308
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getprop
                children: []
                pos: 20330
                length: 12
              pos: 20295
              length: 3233
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String propName = getprop.getLastChild().getString();
                children: []
                pos: 20368
                length: 53
              - type: local_variable_declaration
                fields:
                  text: Node obj = getprop.getFirstChild();
                children: []
                pos: 20426
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType nodeType = getJSType(obj);
                children: []
                pos: 20466
                length: 33
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType objectType = ObjectType.cast(
                            nodeType.restrictByNotNullOrUndefined());
                children: []
                pos: 20504
                length: 90
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean propCreationInConstructor = obj.isThis() &&
                            getJSType(syntacticScope.getRootNode()).isConstructor();
                children: []
                pos: 20599
                length: 116
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: objectType
                            children: []
                            pos: 20725
                            length: 10
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 20739
                            length: 4
                        children: []
                        pos: 20725
                        length: 18
                    children: []
                    pos: 20724
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: registry.registerPropertyOnType(propName, nodeType);
                    children: []
                    pos: 20753
                    length: 52
                  pos: 20745
                  length: 66
                pos: 20721
                length: 2803
              pos: 20362
              length: 3166
          children: []
          pos: 20295
          length: 3233
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensurePropertyDeclared
              children: []
              pos: 23812
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getprop
                children: []
                pos: 23835
                length: 12
              pos: 23799
              length: 266
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType ownerType = ObjectType.cast(
                            getJSType(getprop.getFirstChild()).restrictByNotNullOrUndefined());
                children: []
                pos: 23855
                length: 115
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: ownerType
                            children: []
                            pos: 23979
                            length: 9
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 23992
                            length: 4
                        children: []
                        pos: 23979
                        length: 17
                    children: []
                    pos: 23978
                    length: 19
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensurePropertyDeclaredHelper(getprop, ownerType);
                    children: []
                    pos: 24006
                    length: 49
                  pos: 23998
                  length: 63
                pos: 23975
                length: 86
              pos: 23849
              length: 216
          children: []
          pos: 23799
          length: 266
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensurePropertyDeclaredHelper
              children: []
              pos: 24196
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getprop
                children: []
                pos: 24232
                length: 12
              pos: 24180
              length: 834
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String propName = getprop.getLastChild().getString();
                children: []
                pos: 24275
                length: 53
              - type: local_variable_declaration
                fields:
                  text: String qName = getprop.getQualifiedName();
                children: []
                pos: 24333
                length: 42
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: qName
                            children: []
                            pos: 24384
                            length: 5
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 24393
                            length: 4
                        children: []
                        pos: 24384
                        length: 13
                    children: []
                    pos: 24383
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Var var = syntacticScope.getVar(qName);
                    children: []
                    pos: 24407
                    length: 39
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: var
                                    children: []
                                    pos: 24457
                                    length: 3
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 24464
                                    length: 4
                                children: []
                                pos: 24457
                                length: 11
                              right:
                                type: unary_expression
                                fields:
                                  text: "!var.isTypeInferred()"
                                children: []
                                pos: 24472
                                length: 21
                            children: []
                            pos: 24457
                            length: 36
                        children: []
                        pos: 24456
                        length: 38
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: or
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: propName.equals("prototype")
                                    children: []
                                    pos: 24584
                                    length: 28
                                  right:
                                    type: parenthesized_expression
                                    fields:
                                      expression:
                                        type: and
                                        fields:
                                          left:
                                            type: unary_expression
                                            fields:
                                              text: "!objectType.hasOwnProperty(propName)"
                                            children: []
                                            pos: 24707
                                            length: 36
                                          right:
                                            type: parenthesized_expression
                                            fields:
                                              expression:
                                                type: or
                                                fields:
                                                  left:
                                                    type: unary_expression
                                                    fields:
                                                      text: "!objectType.isInstanceType()"
                                                    children: []
                                                    pos: 24761
                                                    length: 28
                                                  right:
                                                    type: parenthesized_expression
                                                    fields:
                                                      expression:
                                                        type: and
                                                        fields:
                                                          left:
                                                            type: method_invocation
                                                            fields:
                                                              text: var.isExtern()
                                                            children: []
                                                            pos: 24811
                                                            length: 14
                                                          right:
                                                            type: unary_expression
                                                            fields:
                                                              text: "!objectType.isNativeObjectType()"
                                                            children: []
                                                            pos: 24829
                                                            length: 32
                                                        children: []
                                                        pos: 24811
                                                        length: 50
                                                    children: []
                                                    pos: 24810
                                                    length: 52
                                                children: []
                                                pos: 24761
                                                length: 101
                                            children: []
                                            pos: 24760
                                            length: 103
                                        children: []
                                        pos: 24707
                                        length: 156
                                    children: []
                                    pos: 24706
                                    length: 158
                                children: []
                                pos: 24584
                                length: 280
                            children: []
                            pos: 24583
                            length: 282
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: return_statement
                            fields:
                              text: |-
                                return objectType.defineDeclaredProperty(
                                              propName, var.getType(), getprop);
                            children: []
                            pos: 24878
                            length: 90
                          pos: 24866
                          length: 112
                        pos: 24580
                        length: 398
                      pos: 24495
                      length: 491
                    pos: 24453
                    length: 533
                  pos: 24399
                  length: 593
                pos: 24380
                length: 612
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 24997
                length: 13
              pos: 24269
              length: 745
          children: []
          pos: 24180
          length: 834
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseName
              children: []
              pos: 25036
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 25049
                length: 6
              pos: 25018
              length: 2002
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String varName = n.getString();
                children: []
                pos: 25080
                length: 31
              - type: local_variable_declaration
                fields:
                  text: Node value = n.getFirstChild();
                children: []
                pos: 25116
                length: 31
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 25152
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: value
                            children: []
                            pos: 25189
                            length: 5
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 25198
                            length: 4
                        children: []
                        pos: 25189
                        length: 13
                    children: []
                    pos: 25188
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: scope = traverse(value, scope);
                    children: []
                    pos: 25212
                    length: 31
                  - type: expression_statement
                    fields:
                      text: |-
                        updateScopeForTypeChange(scope, n, n.getJSType() /* could be null */,
                                  getJSType(value));
                    children: []
                    pos: 25250
                    length: 98
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 25355
                    length: 13
                  pos: 25204
                  length: 170
                pos: 25185
                length: 1790
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 26980
                length: 18
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 27003
                length: 13
              pos: 25074
              length: 1946
          children: []
          pos: 25018
          length: 2002
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseArrayLiteral
              children: []
              pos: 27087
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 27108
                length: 6
              pos: 27069
              length: 171
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 27139
                length: 35
              - type: expression_statement
                fields:
                  text: n.setJSType(getNativeType(ARRAY_TYPE));
                children: []
                pos: 27179
                length: 39
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 27223
                length: 13
              pos: 27133
              length: 107
          children: []
          pos: 27069
          length: 171
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseObjectLiteral
              children: []
              pos: 27262
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 27284
                length: 6
              pos: 27244
              length: 1930
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 27315
                length: 28
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(type);
                children: []
                pos: 27348
                length: 33
              - type: for_statement
                fields:
                  text: |-
                    for (Node name = n.getFirstChild(); name != null; name = name.getNext()) {
                          scope = traverse(name.getFirstChild(), scope);
                        }
                children: []
                pos: 27387
                length: 133
              - type: local_variable_declaration
                fields:
                  text: ObjectType objectType = ObjectType.cast(type);
                children: []
                pos: 27694
                length: 46
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: objectType
                                    children: []
                                    pos: 27749
                                    length: 10
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 27763
                                    length: 4
                                children: []
                                pos: 27749
                                length: 18
                              right:
                                type: method_invocation
                                fields:
                                  text: n.getBooleanProp(Node.REFLECTED_OBJECT)
                                children: []
                                pos: 27779
                                length: 39
                            children: []
                            pos: 27749
                            length: 69
                          right:
                            type: method_invocation
                            fields:
                              text: objectType.isEnumType()
                            children: []
                            pos: 27830
                            length: 23
                        children: []
                        pos: 27749
                        length: 104
                    children: []
                    pos: 27748
                    length: 106
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 27863
                    length: 13
                  pos: 27855
                  length: 27
                pos: 27745
                length: 137
              - type: local_variable_declaration
                fields:
                  text: |-
                    String qObjName = NodeUtil.getBestLValueName(
                            NodeUtil.getBestLValue(n));
                children: []
                pos: 27888
                length: 81
              - type: for_statement
                fields:
                  text: |-
                    for (Node name = n.getFirstChild(); name != null;
                             name = name.getNext()) {
                          String memberName = NodeUtil.getObjectLitKeyName(name);
                          if (memberName != null) {
                            JSType rawValueType =  name.getFirstChild().getJSType();
                            JSType valueType = NodeUtil.getObjectLitKeyTypeFromValueType(
                                name, rawValueType);
                            if (valueType == null) {
                              valueType = unknownType;
                            }
                            objectType.defineInferredProperty(memberName, valueType, name);

                            // Do normal flow inference if this is a direct property assignment.
                            if (qObjName != null && name.isStringKey()) {
                              String qKeyName = qObjName + "." + memberName;
                              Var var = syntacticScope.getVar(qKeyName);
                              JSType oldType = var == null ? null : var.getType();
                              if (var != null && var.isTypeInferred()) {
                                var.setType(oldType == null ?
                                    valueType : oldType.getLeastSupertype(oldType));
                              }

                              scope.inferQualifiedSlot(name, qKeyName,
                                  oldType == null ? unknownType : oldType,
                                  valueType);
                            }
                          } else {
                            n.setJSType(unknownType);
                          }
                        }
                children: []
                pos: 27974
                length: 1178
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 29157
                length: 13
              pos: 27309
              length: 1865
          children: []
          pos: 27244
          length: 1930
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseAdd
              children: []
              pos: 29196
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 29208
                length: 6
              pos: 29178
              length: 1116
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 29239
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = left.getNext();
                children: []
                pos: 29274
                length: 28
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 29307
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = left.getJSType();
                children: []
                pos: 29348
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = right.getJSType();
                children: []
                pos: 29388
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType type = unknownType;
                children: []
                pos: 29431
                length: 26
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: leftType
                                children: []
                                pos: 29466
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 29478
                                length: 4
                            children: []
                            pos: 29466
                            length: 16
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: rightType
                                children: []
                                pos: 29486
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 29499
                                length: 4
                            children: []
                            pos: 29486
                            length: 17
                        children: []
                        pos: 29466
                        length: 37
                    children: []
                    pos: 29465
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: boolean leftIsUnknown = leftType.isUnknownType();
                    children: []
                    pos: 29513
                    length: 49
                  - type: local_variable_declaration
                    fields:
                      text: boolean rightIsUnknown = rightType.isUnknownType();
                    children: []
                    pos: 29569
                    length: 51
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: leftIsUnknown
                                children: []
                                pos: 29631
                                length: 13
                              right:
                                type: identifier
                                fields:
                                  text: rightIsUnknown
                                children: []
                                pos: 29648
                                length: 14
                            children: []
                            pos: 29631
                            length: 31
                        children: []
                        pos: 29630
                        length: 33
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: type = unknownType;
                        children: []
                        pos: 29674
                        length: 19
                      pos: 29664
                      length: 37
                    pos: 29627
                    length: 520
                  pos: 29505
                  length: 648
                pos: 29462
                length: 691
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 30158
                length: 18
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.isAssignAdd()
                        children: []
                        pos: 30186
                        length: 15
                    children: []
                    pos: 30185
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: updateScopeForTypeChange(scope, left, leftType, type);
                    children: []
                    pos: 30211
                    length: 54
                  pos: 30203
                  length: 68
                pos: 30182
                length: 89
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 30277
                length: 13
              pos: 29233
              length: 1061
          children: []
          pos: 29178
          length: 1116
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isAddedAsNumber
              children: []
              pos: 30314
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType type
                children: []
                pos: 30330
                length: 11
              pos: 30298
              length: 197
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return type.isSubtype(registry.createUnionType(VOID_TYPE, NULL_TYPE,
                            NUMBER_VALUE_OR_OBJECT_TYPE, BOOLEAN_TYPE, BOOLEAN_OBJECT_TYPE));
                children: []
                pos: 30349
                length: 142
              pos: 30343
              length: 152
          children: []
          pos: 30298
          length: 197
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseHook
              children: []
              pos: 30517
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 30530
                length: 6
              pos: 30499
              length: 1146
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node condition = n.getFirstChild();
                children: []
                pos: 30561
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node trueNode = condition.getNext();
                children: []
                pos: 30601
                length: 36
              - type: local_variable_declaration
                fields:
                  text: Node falseNode = n.getLastChild();
                children: []
                pos: 30642
                length: 34
              - type: expression_statement
                fields:
                  text: scope = traverse(condition, scope);
                children: []
                pos: 30710
                length: 35
              - type: local_variable_declaration
                fields:
                  text: |-
                    FlowScope trueScope = reverseInterpreter.
                            getPreciserScopeKnowingConditionOutcome(
                                condition, scope, true);
                children: []
                pos: 30825
                length: 127
              - type: local_variable_declaration
                fields:
                  text: |-
                    FlowScope falseScope = reverseInterpreter.
                            getPreciserScopeKnowingConditionOutcome(
                                condition, scope, false);
                children: []
                pos: 30957
                length: 129
              - type: expression_statement
                fields:
                  text: traverse(trueNode, trueScope.createChildFlowScope());
                children: []
                pos: 31141
                length: 53
              - type: expression_statement
                fields:
                  text: traverse(falseNode, falseScope.createChildFlowScope());
                children: []
                pos: 31251
                length: 55
              - type: local_variable_declaration
                fields:
                  text: JSType trueType = trueNode.getJSType();
                children: []
                pos: 31363
                length: 39
              - type: local_variable_declaration
                fields:
                  text: JSType falseType = falseNode.getJSType();
                children: []
                pos: 31407
                length: 41
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: trueType
                                children: []
                                pos: 31457
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 31469
                                length: 4
                            children: []
                            pos: 31457
                            length: 16
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: falseType
                                children: []
                                pos: 31477
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 31490
                                length: 4
                            children: []
                            pos: 31477
                            length: 17
                        children: []
                        pos: 31457
                        length: 37
                    children: []
                    pos: 31456
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: n.setJSType(trueType.getLeastSupertype(falseType));
                    children: []
                    pos: 31504
                    length: 51
                  pos: 31496
                  length: 65
                pos: 31453
                length: 146
              - type: return_statement
                fields:
                  text: return scope.createChildFlowScope();
                children: []
                pos: 31605
                length: 36
              pos: 30555
              length: 1090
          children: []
          pos: 30499
          length: 1146
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseCall
              children: []
              pos: 31667
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 31680
                length: 6
              pos: 31649
              length: 632
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 31711
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 31752
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType functionType = getJSType(left).restrictByNotNullOrUndefined();
                children: []
                pos: 31787
                length: 69
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: functionType.isFunctionType()
                        children: []
                        pos: 31865
                        length: 29
                    children: []
                    pos: 31864
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType fnType = functionType.toMaybeFunctionType();
                    children: []
                    pos: 31904
                    length: 57
                  - type: expression_statement
                    fields:
                      text: n.setJSType(fnType.getReturnType());
                    children: []
                    pos: 31968
                    length: 36
                  - type: expression_statement
                    fields:
                      text: backwardsInferenceFromCallSite(n, fnType);
                    children: []
                    pos: 32011
                    length: 42
                  pos: 31896
                  length: 163
                pos: 31861
                length: 346
              - type: expression_statement
                fields:
                  text: scope = tightenTypesAfterAssertions(scope, n);
                children: []
                pos: 32213
                length: 46
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 32264
                length: 13
              pos: 31705
              length: 576
          children: []
          pos: 31649
          length: 632
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: tightenTypesAfterAssertions
              children: []
              pos: 32303
              length: 27
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 32331
                length: 15
              pos: 32285
              length: 1457
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = callNode.getFirstChild();
                children: []
                pos: 32375
                length: 37
              - type: local_variable_declaration
                fields:
                  text: Node firstParam = left.getNext();
                children: []
                pos: 32417
                length: 33
              - type: local_variable_declaration
                fields:
                  text: |-
                    AssertionFunctionSpec assertionFunctionSpec =
                            assertionFunctionsMap.get(left.getQualifiedName());
                children: []
                pos: 32455
                length: 105
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: assertionFunctionSpec
                                children: []
                                pos: 32569
                                length: 21
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 32594
                                length: 4
                            children: []
                            pos: 32569
                            length: 29
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: firstParam
                                children: []
                                pos: 32602
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 32616
                                length: 4
                            children: []
                            pos: 32602
                            length: 18
                        children: []
                        pos: 32569
                        length: 51
                    children: []
                    pos: 32568
                    length: 53
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 32630
                    length: 13
                  pos: 32622
                  length: 27
                pos: 32565
                length: 84
              - type: local_variable_declaration
                fields:
                  text: Node assertedNode = assertionFunctionSpec.getAssertedParam(firstParam);
                children: []
                pos: 32654
                length: 71
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: assertedNode
                            children: []
                            pos: 32734
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 32750
                            length: 4
                        children: []
                        pos: 32734
                        length: 20
                    children: []
                    pos: 32733
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 32764
                    length: 13
                  pos: 32756
                  length: 27
                pos: 32730
                length: 53
              - type: local_variable_declaration
                fields:
                  text: |-
                    JSType assertedType = assertionFunctionSpec.getAssertedType(
                            callNode, registry);
                children: []
                pos: 32788
                length: 89
              - type: local_variable_declaration
                fields:
                  text: String assertedNodeName = assertedNode.getQualifiedName();
                children: []
                pos: 32882
                length: 58
              - type: local_variable_declaration
                fields:
                  text: JSType narrowed;
                children: []
                pos: 32946
                length: 16
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: assertedType
                            children: []
                            pos: 33039
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 33055
                            length: 4
                        children: []
                        pos: 33039
                        length: 20
                    children: []
                    pos: 33038
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        scope = reverseInterpreter.getPreciserScopeKnowingConditionOutcome(
                                  assertedNode, scope, true);
                    children: []
                    pos: 33126
                    length: 105
                  - type: expression_statement
                    fields:
                      text: narrowed = getJSType(assertedNode).restrictByNotNullOrUndefined();
                    children: []
                    pos: 33288
                    length: 66
                  pos: 33061
                  length: 299
                pos: 33035
                length: 650
              - type: expression_statement
                fields:
                  text: callNode.setJSType(narrowed);
                children: []
                pos: 33691
                length: 29
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 33725
                length: 13
              pos: 32369
              length: 1373
          children: []
          pos: 32285
          length: 1457
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: narrowScope
              children: []
              pos: 33764
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 33776
                length: 15
              pos: 33746
              length: 468
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: node.isThis()
                        children: []
                        pos: 33831
                        length: 13
                    children: []
                    pos: 33830
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 33933
                    length: 13
                  pos: 33846
                  length: 106
                pos: 33827
                length: 125
              - type: expression_statement
                fields:
                  text: scope = scope.createChildFlowScope();
                children: []
                pos: 33958
                length: 37
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: node.isGetProp()
                        children: []
                        pos: 34004
                        length: 16
                    children: []
                    pos: 34003
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        scope.inferQualifiedSlot(
                                  node, node.getQualifiedName(), getJSType(node), narrowed);
                    children: []
                    pos: 34030
                    length: 94
                  pos: 34022
                  length: 108
                pos: 34000
                length: 192
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 34197
                length: 13
              pos: 33821
              length: 393
          children: []
          pos: 33746
          length: 468
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: backwardsInferenceFromCallSite
              children: []
              pos: 35153
              length: 30
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 35184
                length: 6
              pos: 35140
              length: 302
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: boolean updatedFnType = inferTemplatedTypesForCall(n, fnType);
                children: []
                pos: 35219
                length: 62
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: updatedFnType
                        children: []
                        pos: 35290
                        length: 13
                    children: []
                    pos: 35289
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: fnType = n.getFirstChild().getJSType().toMaybeFunctionType();
                    children: []
                    pos: 35313
                    length: 61
                  pos: 35305
                  length: 75
                pos: 35286
                length: 94
              - type: expression_statement
                fields:
                  text: updateTypeOfParameters(n, fnType);
                children: []
                pos: 35385
                length: 34
              - type: expression_statement
                fields:
                  text: updateBind(n);
                children: []
                pos: 35424
                length: 14
              pos: 35213
              length: 229
          children: []
          pos: 35140
          length: 302
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateBind
              children: []
              pos: 35626
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 35637
                length: 6
              pos: 35613
              length: 539
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: |-
                    CodingConvention.Bind bind =
                            compiler.getCodingConvention().describeFunctionBind(n, true);
                children: []
                pos: 35651
                length: 98
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: bind
                            children: []
                            pos: 35758
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 35766
                            length: 4
                        children: []
                        pos: 35758
                        length: 12
                    children: []
                    pos: 35757
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 35780
                    length: 7
                  pos: 35772
                  length: 21
                pos: 35754
                length: 39
              - type: local_variable_declaration
                fields:
                  text: |-
                    FunctionType callTargetFn = getJSType(bind.target)
                            .restrictByNotNullOrUndefined().toMaybeFunctionType();
                children: []
                pos: 35799
                length: 113
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: callTargetFn
                            children: []
                            pos: 35921
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 35937
                            length: 4
                        children: []
                        pos: 35921
                        length: 20
                    children: []
                    pos: 35920
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 35951
                    length: 7
                  pos: 35943
                  length: 21
                pos: 35917
                length: 47
              - type: expression_statement
                fields:
                  text: |-
                    n.setJSType(
                            callTargetFn.getBindReturnType(
                                // getBindReturnType expects the 'this' argument to be included.
                                bind.getBoundParameterCount() + 1));
                children: []
                pos: 35970
                length: 178
              pos: 35645
              length: 507
          children: []
          pos: 35613
          length: 539
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateTypeOfParameters
              children: []
              pos: 36329
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 36352
                length: 6
              pos: 36316
              length: 1061
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int i = 0;
                children: []
                pos: 36387
                length: 10
              - type: local_variable_declaration
                fields:
                  text: int childCount = n.getChildCount();
                children: []
                pos: 36402
                length: 35
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (Node iParameter : fnType.getParameters()) {
                          if (i + 1 >= childCount) {
                            // TypeCheck#visitParametersList will warn so we bail.
                            return;
                          }

                          JSType iParameterType = getJSType(iParameter);
                          Node iArgument = n.getChildAtIndex(i + 1);
                          JSType iArgumentType = getJSType(iArgument);
                          inferPropertyTypesToMatchConstraint(iArgumentType, iParameterType);

                          // TODO(johnlenz): Filter out non-function types
                          // (such as null and undefined) as
                          // we only care about FUNCTION subtypes here.
                          JSType restrictedParameter = iParameterType
                              .restrictByNotNullOrUndefined()
                              .toMaybeFunctionType();
                          if (restrictedParameter != null) {
                            if (iArgument.isFunction() &&
                                iArgumentType.isFunctionType() &&
                                iArgument.getJSDocInfo() == null) {
                              iArgument.setJSType(restrictedParameter);
                            }
                          }
                          i++;
                        }
                children: []
                pos: 36442
                length: 931
              pos: 36381
              length: 996
          children: []
          pos: 36316
          length: 1061
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: inferTemplateTypesFromParameters
              children: []
              pos: 37415
              length: 32
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FunctionType fnType
                children: []
                pos: 37455
                length: 19
              pos: 37381
              length: 863
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: fnType.getTemplateTypeMap().getTemplateKeys().isEmpty()
                        children: []
                        pos: 37497
                        length: 55
                    children: []
                    pos: 37496
                    length: 57
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Collections.emptyMap();
                    children: []
                    pos: 37562
                    length: 30
                  pos: 37554
                  length: 44
                pos: 37493
                length: 105
              - type: local_variable_declaration
                fields:
                  text: Map<TemplateType, JSType> resolvedTypes = Maps.newIdentityHashMap();
                children: []
                pos: 37604
                length: 68
              - type: local_variable_declaration
                fields:
                  text: Set<JSType> seenTypes = Sets.newIdentityHashSet();
                children: []
                pos: 37677
                length: 50
              - type: local_variable_declaration
                fields:
                  text: Node callTarget = call.getFirstChild();
                children: []
                pos: 37733
                length: 39
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: NodeUtil.isGet(callTarget)
                        children: []
                        pos: 37781
                        length: 26
                    children: []
                    pos: 37780
                    length: 28
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Node obj = callTarget.getFirstChild();
                    children: []
                    pos: 37817
                    length: 38
                  - type: expression_statement
                    fields:
                      text: |-
                        maybeResolveTemplatedType(
                                  fnType.getTypeOfThis(),
                                  getJSType(obj),
                                  resolvedTypes,
                                  seenTypes);
                    children: []
                    pos: 37862
                    length: 133
                  pos: 37809
                  length: 192
                pos: 37777
                length: 224
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: call.hasMoreThanOneChild()
                        children: []
                        pos: 38011
                        length: 26
                    children: []
                    pos: 38010
                    length: 28
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        maybeResolveTemplateTypeFromNodes(
                                  fnType.getParameters(),
                                  call.getChildAtIndex(1).siblings(),
                                  resolvedTypes,
                                  seenTypes);
                    children: []
                    pos: 38047
                    length: 161
                  pos: 38039
                  length: 175
                pos: 38007
                length: 207
              - type: return_statement
                fields:
                  text: return resolvedTypes;
                children: []
                pos: 38219
                length: 21
              pos: 37487
              length: 757
          children: []
          pos: 37381
          length: 863
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: maybeResolveTemplatedType
              children: []
              pos: 38261
              length: 25
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType paramType
                children: []
                pos: 38294
                length: 16
              pos: 38248
              length: 3500
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: paramType.isTemplateType()
                        children: []
                        pos: 38414
                        length: 26
                    children: []
                    pos: 38413
                    length: 28
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        resolvedTemplateType(
                                  resolvedTypes, paramType.toMaybeTemplateType(), argType);
                    children: []
                    pos: 38470
                    length: 89
                  pos: 38442
                  length: 123
                pos: 38410
                length: 3334
              pos: 38404
              length: 3344
          children: []
          pos: 38248
          length: 3500
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: maybeResolveTemplateTypeFromNodes
              children: []
              pos: 41765
              length: 33
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Iterable<Node> declParams
                children: []
                pos: 41806
                length: 25
              pos: 41752
              length: 309
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    maybeResolveTemplateTypeFromNodes(
                            declParams.iterator(), callParams.iterator(), resolvedTypes, seenTypes);
                children: []
                pos: 41942
                length: 115
              pos: 41936
              length: 125
          children: []
          pos: 41752
          length: 309
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: maybeResolveTemplateTypeFromNodes
              children: []
              pos: 42078
              length: 33
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Iterator<Node> declParams
                children: []
                pos: 42119
                length: 25
              pos: 42065
              length: 694
            body:
              type: block
              fields: {}
              children:
              - type: while_statement
                fields:
                  text: |-
                    while (declParams.hasNext() && callParams.hasNext()) {
                          Node declParam = declParams.next();
                          maybeResolveTemplatedType(
                              getJSType(declParam),
                              getJSType(callParams.next()),
                              resolvedTypes, seenTypes);
                          if (declParam.isVarArgs()) {
                            while (callParams.hasNext()) {
                              maybeResolveTemplatedType(
                                  getJSType(declParam),
                                  getJSType(callParams.next()),
                                  resolvedTypes, seenTypes);
                            }
                          }
                        }
                children: []
                pos: 42261
                length: 494
              pos: 42255
              length: 504
          children: []
          pos: 42065
          length: 694
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: resolvedTemplateType
              children: []
              pos: 42783
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Map<TemplateType, JSType> map
                children: []
                pos: 42811
                length: 29
              pos: 42763
              length: 391
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType previous = map.get(template);
                children: []
                pos: 42888
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!resolved.isUnknownType()"
                        children: []
                        pos: 42933
                        length: 25
                    children: []
                    pos: 42932
                    length: 27
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: previous
                                children: []
                                pos: 42972
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 42984
                                length: 4
                            children: []
                            pos: 42972
                            length: 16
                        children: []
                        pos: 42971
                        length: 18
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: map.put(template, resolved);
                        children: []
                        pos: 43000
                        length: 28
                      pos: 42990
                      length: 46
                    pos: 42968
                    length: 176
                  pos: 42960
                  length: 190
                pos: 42929
                length: 221
              pos: 42882
              length: 272
          children: []
          pos: 42763
          length: 391
        - type: class_declaration
          fields:
            name:
              type: identifier
              fields:
                text: TemplateTypeReplacer
              children: []
              pos: 43179
              length: 20
            body:
              type: class_body
              fields: {}
              children:
              - type: field_declaration
                fields:
                  text: private final Map<TemplateType, JSType> replacements;
                children: []
                pos: 43234
                length: 53
              - type: field_declaration
                fields:
                  text: private final JSTypeRegistry registry;
                children: []
                pos: 43292
                length: 38
              - type: field_declaration
                fields:
                  text: boolean madeChanges = false;
                children: []
                pos: 43335
                length: 28
              - type: constructor_declaration
                fields:
                  text: |-
                    TemplateTypeReplacer(
                            JSTypeRegistry registry, Map<TemplateType, JSType> replacements) {
                          super(registry, true);
                          this.registry = registry;
                          this.replacements = replacements;
                        }
                children: []
                pos: 43369
                length: 203
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: caseTemplateType
                    children: []
                    pos: 43606
                    length: 16
                  parameters:
                    type: method_parameters
                    fields: {}
                    children:
                    - type: formal_parameter
                      fields:
                        text: TemplateType type
                      children: []
                      pos: 43623
                      length: 17
                    pos: 43578
                    length: 245
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: expression_statement
                      fields:
                        text: madeChanges = true;
                      children: []
                      pos: 43650
                      length: 19
                    - type: local_variable_declaration
                      fields:
                        text: JSType replacement = replacements.get(type);
                      children: []
                      pos: 43676
                      length: 44
                    - type: return_statement
                      fields:
                        text: |-
                          return replacement != null ?
                                    replacement : registry.getNativeType(UNKNOWN_TYPE);
                      children: []
                      pos: 43727
                      length: 90
                    pos: 43642
                    length: 181
                children: []
                pos: 43578
                length: 245
              pos: 43158
              length: 669
          children: []
          pos: 43158
          length: 669
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: inferTemplatedTypesForCall
              children: []
              pos: 44038
              length: 26
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 44072
                length: 6
              pos: 44022
              length: 1077
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: |-
                    final ImmutableList<TemplateType> keys = fnType.getTemplateTypeMap()
                            .getTemplateKeys();
                children: []
                pos: 44107
                length: 96
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: keys.isEmpty()
                        children: []
                        pos: 44212
                        length: 14
                    children: []
                    pos: 44211
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return false;
                    children: []
                    pos: 44236
                    length: 13
                  pos: 44228
                  length: 27
                pos: 44208
                length: 47
              - type: local_variable_declaration
                fields:
                  text: |-
                    Map<TemplateType, JSType> inferred = Maps.filterKeys(
                            inferTemplateTypesFromParameters(fnType, n),
                            new Predicate<TemplateType>() {

                              @Override
                              public boolean apply(TemplateType key) {
                                return keys.contains(key);
                              }}
                            );
                children: []
                pos: 44300
                length: 281
              - type: local_variable_declaration
                fields:
                  text: |-
                    TemplateTypeReplacer replacer = new TemplateTypeReplacer(
                            registry, inferred);
                children: []
                pos: 44692
                length: 86
              - type: local_variable_declaration
                fields:
                  text: Node callTarget = n.getFirstChild();
                children: []
                pos: 44783
                length: 36
              - type: local_variable_declaration
                fields:
                  text: |-
                    FunctionType replacementFnType = fnType.visit(replacer)
                            .toMaybeFunctionType();
                children: []
                pos: 44825
                length: 87
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(replacementFnType);
                children: []
                pos: 44917
                length: 46
              - type: expression_statement
                fields:
                  text: callTarget.setJSType(replacementFnType);
                children: []
                pos: 44969
                length: 40
              - type: expression_statement
                fields:
                  text: n.setJSType(replacementFnType.getReturnType());
                children: []
                pos: 45014
                length: 47
              - type: return_statement
                fields:
                  text: return replacer.madeChanges;
                children: []
                pos: 45067
                length: 28
              pos: 44101
              length: 998
          children: []
          pos: 44022
          length: 1077
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseNew
              children: []
              pos: 45121
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 45133
                length: 6
              pos: 45103
              length: 1497
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 45164
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node constructor = n.getFirstChild();
                children: []
                pos: 45205
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType constructorType = constructor.getJSType();
                children: []
                pos: 45247
                length: 49
              - type: local_variable_declaration
                fields:
                  text: JSType type = null;
                children: []
                pos: 45301
                length: 19
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: constructorType
                            children: []
                            pos: 45329
                            length: 15
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 45348
                            length: 4
                        children: []
                        pos: 45329
                        length: 23
                    children: []
                    pos: 45328
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: constructorType = constructorType.restrictByNotNullOrUndefined();
                    children: []
                    pos: 45362
                    length: 65
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: constructorType.isUnknownType()
                            children: []
                            pos: 45438
                            length: 31
                        children: []
                        pos: 45437
                        length: 33
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: type = unknownType;
                        children: []
                        pos: 45481
                        length: 19
                      pos: 45471
                      length: 37
                    pos: 45434
                    length: 1115
                  pos: 45354
                  length: 1201
                pos: 45325
                length: 1230
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 46560
                length: 18
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 46583
                length: 13
              pos: 45158
              length: 1442
          children: []
          pos: 45103
          length: 1497
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseAnd
              children: []
              pos: 46631
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 46643
                length: 6
              pos: 46604
              length: 126
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return traverseShortCircuitingBinOp(n, scope, true);
                children: []
                pos: 46674
                length: 52
              pos: 46668
              length: 62
          children: []
          pos: 46604
          length: 126
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseChildren
              children: []
              pos: 46752
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 46769
                length: 6
              pos: 46734
              length: 195
            body:
              type: block
              fields: {}
              children:
              - type: for_statement
                fields:
                  text: |-
                    for (Node el = n.getFirstChild(); el != null; el = el.getNext()) {
                          scope = traverse(el, scope);
                        }
                children: []
                pos: 46800
                length: 107
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 46912
                length: 13
              pos: 46794
              length: 135
          children: []
          pos: 46734
          length: 195
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseGetElem
              children: []
              pos: 46951
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 46967
                length: 6
              pos: 46933
              length: 446
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 46998
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType type = getJSType(n.getFirstChild()).restrictByNotNullOrUndefined();
                children: []
                pos: 47038
                length: 74
              - type: local_variable_declaration
                fields:
                  text: TemplateTypeMap typeMap = type.getTemplateTypeMap();
                children: []
                pos: 47117
                length: 52
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: typeMap.hasTemplateType(registry.getObjectElementKey())
                        children: []
                        pos: 47178
                        length: 55
                    children: []
                    pos: 47177
                    length: 57
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: n.setJSType(typeMap.getTemplateType(registry.getObjectElementKey()));
                    children: []
                    pos: 47243
                    length: 69
                  pos: 47235
                  length: 83
                pos: 47174
                length: 144
              - type: return_statement
                fields:
                  text: return dereferencePointer(n.getFirstChild(), scope);
                children: []
                pos: 47323
                length: 52
              pos: 46992
              length: 387
          children: []
          pos: 46933
          length: 446
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseGetProp
              children: []
              pos: 47401
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 47417
                length: 6
              pos: 47383
              length: 347
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node objNode = n.getFirstChild();
                children: []
                pos: 47448
                length: 33
              - type: local_variable_declaration
                fields:
                  text: Node property = n.getLastChild();
                children: []
                pos: 47486
                length: 33
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 47524
                length: 35
              - type: expression_statement
                fields:
                  text: |-
                    n.setJSType(
                            getPropertyType(
                                objNode.getJSType(), property.getString(), n, scope));
                children: []
                pos: 47565
                length: 104
              - type: return_statement
                fields:
                  text: return dereferencePointer(n.getFirstChild(), scope);
                children: []
                pos: 47674
                length: 52
              pos: 47442
              length: 288
          children: []
          pos: 47383
          length: 347
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: inferPropertyTypesToMatchConstraint
              children: []
              pos: 48284
              length: 35
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType type
                children: []
                pos: 48327
                length: 11
              pos: 48264
              length: 205
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 48369
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 48377
                                length: 4
                            children: []
                            pos: 48369
                            length: 12
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: constraint
                                children: []
                                pos: 48385
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 48399
                                length: 4
                            children: []
                            pos: 48385
                            length: 18
                        children: []
                        pos: 48369
                        length: 34
                    children: []
                    pos: 48368
                    length: 36
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 48413
                    length: 7
                  pos: 48405
                  length: 21
                pos: 48365
                length: 61
              - type: expression_statement
                fields:
                  text: type.matchConstraint(constraint);
                children: []
                pos: 48432
                length: 33
              pos: 48359
              length: 110
          children: []
          pos: 48264
          length: 205
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: dereferencePointer
              children: []
              pos: 48593
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 48612
                length: 6
              pos: 48575
              length: 304
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.isQualifiedName()
                        children: []
                        pos: 48647
                        length: 19
                    children: []
                    pos: 48646
                    length: 21
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType type = getJSType(n);
                    children: []
                    pos: 48676
                    length: 27
                  - type: local_variable_declaration
                    fields:
                      text: JSType narrowed = type.restrictByNotNullOrUndefined();
                    children: []
                    pos: 48710
                    length: 54
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 48775
                                length: 4
                              right:
                                type: identifier
                                fields:
                                  text: narrowed
                                children: []
                                pos: 48783
                                length: 8
                            children: []
                            pos: 48775
                            length: 16
                        children: []
                        pos: 48774
                        length: 18
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: scope = narrowScope(scope, n, narrowed);
                        children: []
                        pos: 48803
                        length: 40
                      pos: 48793
                      length: 58
                    pos: 48771
                    length: 80
                  pos: 48668
                  length: 189
                pos: 48643
                length: 214
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 48862
                length: 13
              pos: 48637
              length: 242
          children: []
          pos: 48575
          length: 304
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getPropertyType
              children: []
              pos: 48898
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType objType
                children: []
                pos: 48914
                length: 14
              pos: 48883
              length: 2428
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType propertyType = null;
                children: []
                pos: 49365
                length: 27
              - type: local_variable_declaration
                fields:
                  text: boolean isLocallyInferred = false;
                children: []
                pos: 49397
                length: 34
              - type: local_variable_declaration
                fields:
                  text: String qualifiedName = n.getQualifiedName();
                children: []
                pos: 49511
                length: 44
              - type: local_variable_declaration
                fields:
                  text: StaticSlot<JSType> var = scope.getSlot(qualifiedName);
                children: []
                pos: 49560
                length: 54
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: var
                            children: []
                            pos: 49623
                            length: 3
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 49630
                            length: 4
                        children: []
                        pos: 49623
                        length: 11
                    children: []
                    pos: 49622
                    length: 13
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType varType = var.getType();
                    children: []
                    pos: 49644
                    length: 31
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: varType
                                children: []
                                pos: 49686
                                length: 7
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 49697
                                length: 4
                            children: []
                            pos: 49686
                            length: 15
                        children: []
                        pos: 49685
                        length: 17
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: boolean isDeclared = !var.isTypeInferred();
                        children: []
                        pos: 49713
                        length: 43
                      - type: expression_statement
                        fields:
                          text: isLocallyInferred = (var != syntacticScope.getSlot(qualifiedName));
                        children: []
                        pos: 49765
                        length: 67
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: or
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: isDeclared
                                    children: []
                                    pos: 49845
                                    length: 10
                                  right:
                                    type: identifier
                                    fields:
                                      text: isLocallyInferred
                                    children: []
                                    pos: 49859
                                    length: 17
                                children: []
                                pos: 49845
                                length: 31
                            children: []
                            pos: 49844
                            length: 33
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: propertyType = varType;
                            children: []
                            pos: 49890
                            length: 23
                          pos: 49878
                          length: 45
                        pos: 49841
                        length: 82
                      pos: 49703
                      length: 228
                    pos: 49682
                    length: 249
                  pos: 49636
                  length: 301
                pos: 49619
                length: 318
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: propertyType
                                children: []
                                pos: 49947
                                length: 12
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 49963
                                length: 4
                            children: []
                            pos: 49947
                            length: 20
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: objType
                                children: []
                                pos: 49971
                                length: 7
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 49982
                                length: 4
                            children: []
                            pos: 49971
                            length: 15
                        children: []
                        pos: 49947
                        length: 39
                    children: []
                    pos: 49946
                    length: 41
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType foundType = objType.findPropertyType(propName);
                    children: []
                    pos: 49996
                    length: 54
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: foundType
                                children: []
                                pos: 50061
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 50074
                                length: 4
                            children: []
                            pos: 50061
                            length: 17
                        children: []
                        pos: 50060
                        length: 19
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: propertyType = foundType;
                        children: []
                        pos: 50090
                        length: 25
                      pos: 50080
                      length: 43
                    pos: 50057
                    length: 66
                  pos: 49988
                  length: 141
                pos: 49943
                length: 186
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: propertyType
                                children: []
                                pos: 50139
                                length: 12
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 50155
                                length: 4
                            children: []
                            pos: 50139
                            length: 20
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: objType
                                children: []
                                pos: 50163
                                length: 7
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 50174
                                length: 4
                            children: []
                            pos: 50163
                            length: 15
                        children: []
                        pos: 50139
                        length: 39
                    children: []
                    pos: 50138
                    length: 41
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType restrictedObjType = objType.restrictByNotNullOrUndefined();
                    children: []
                    pos: 50188
                    length: 66
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: unary_expression
                                fields:
                                  text: "!restrictedObjType.getTemplateTypeMap().isEmpty()"
                                children: []
                                pos: 50265
                                length: 49
                              right:
                                type: method_invocation
                                fields:
                                  text: propertyType.hasAnyTemplateTypes()
                                children: []
                                pos: 50328
                                length: 34
                            children: []
                            pos: 50265
                            length: 97
                        children: []
                        pos: 50264
                        length: 99
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: TemplateTypeMap typeMap = restrictedObjType.getTemplateTypeMap();
                        children: []
                        pos: 50374
                        length: 65
                      - type: local_variable_declaration
                        fields:
                          text: |-
                            TemplateTypeMapReplacer replacer = new TemplateTypeMapReplacer(
                                        registry, typeMap);
                        children: []
                        pos: 50448
                        length: 95
                      - type: expression_statement
                        fields:
                          text: propertyType = propertyType.visit(replacer);
                        children: []
                        pos: 50552
                        length: 44
                      pos: 50364
                      length: 240
                    pos: 50261
                    length: 343
                  pos: 50180
                  length: 430
                pos: 50135
                length: 475
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: or
                                fields:
                                  left:
                                    type: equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: propertyType
                                        children: []
                                        pos: 50621
                                        length: 12
                                      right:
                                        type: null_literal
                                        fields: {}
                                        children: []
                                        pos: 50637
                                        length: 4
                                    children: []
                                    pos: 50621
                                    length: 20
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: propertyType.isUnknownType()
                                    children: []
                                    pos: 50645
                                    length: 28
                                children: []
                                pos: 50621
                                length: 52
                            children: []
                            pos: 50620
                            length: 54
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: qualifiedName
                                children: []
                                pos: 50686
                                length: 13
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 50703
                                length: 4
                            children: []
                            pos: 50686
                            length: 21
                        children: []
                        pos: 50620
                        length: 87
                    children: []
                    pos: 50619
                    length: 89
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: ObjectType regType = ObjectType.cast(registry.getType(qualifiedName));
                    children: []
                    pos: 50792
                    length: 70
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: regType
                                children: []
                                pos: 50873
                                length: 7
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 50884
                                length: 4
                            children: []
                            pos: 50873
                            length: 15
                        children: []
                        pos: 50872
                        length: 17
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: propertyType = regType.getConstructor();
                        children: []
                        pos: 50900
                        length: 40
                      pos: 50890
                      length: 58
                    pos: 50869
                    length: 79
                  pos: 50709
                  length: 245
                pos: 50616
                length: 338
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: propertyType
                            children: []
                            pos: 50964
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 50980
                            length: 4
                        children: []
                        pos: 50964
                        length: 20
                    children: []
                    pos: 50963
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return unknownType;
                    children: []
                    pos: 50994
                    length: 19
                  pos: 50986
                  length: 33
                pos: 50960
                length: 347
              pos: 48978
              length: 2333
          children: []
          pos: 48883
          length: 2428
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseOr
              children: []
              pos: 51342
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 51353
                length: 6
              pos: 51315
              length: 126
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return traverseShortCircuitingBinOp(n, scope, false);
                children: []
                pos: 51384
                length: 53
              pos: 51378
              length: 63
          children: []
          pos: 51315
          length: 126
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseShortCircuitingBinOp
              children: []
              pos: 51472
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 51508
                length: 6
              pos: 51445
              length: 2359
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 51558
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 51593
                length: 30
              - type: local_variable_declaration
                fields:
                  text: |-
                    BooleanOutcomePair leftLiterals =
                            traverseWithinShortCircuitingBinOp(left,
                                scope.createChildFlowScope());
                children: []
                pos: 51655
                length: 125
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = left.getJSType();
                children: []
                pos: 51785
                length: 35
              - type: local_variable_declaration
                fields:
                  text: |-
                    FlowScope rightScope = reverseInterpreter.
                            getPreciserScopeKnowingConditionOutcome(
                                left, leftLiterals.getOutcomeFlowScope(left.getType(), condition),
                                condition);
                children: []
                pos: 51944
                length: 194
              - type: local_variable_declaration
                fields:
                  text: |-
                    BooleanOutcomePair rightLiterals =
                            traverseWithinShortCircuitingBinOp(
                                right, rightScope.createChildFlowScope());
                children: []
                pos: 52171
                length: 133
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = right.getJSType();
                children: []
                pos: 52309
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType type;
                children: []
                pos: 52352
                length: 12
              - type: local_variable_declaration
                fields:
                  text: BooleanOutcomePair literals;
                children: []
                pos: 52369
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: leftType
                                children: []
                                pos: 52406
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 52418
                                length: 4
                            children: []
                            pos: 52406
                            length: 16
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: rightType
                                children: []
                                pos: 52426
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 52439
                                length: 4
                            children: []
                            pos: 52426
                            length: 17
                        children: []
                        pos: 52406
                        length: 37
                    children: []
                    pos: 52405
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: leftType = leftType.getRestrictedTypeGivenToBooleanOutcome(!condition);
                    children: []
                    pos: 52453
                    length: 71
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: field_access
                                fields:
                                  text: leftLiterals.toBooleanOutcomes
                                children: []
                                pos: 52535
                                length: 30
                              right:
                                type: method_invocation
                                fields:
                                  text: BooleanLiteralSet.get(!condition)
                                children: []
                                pos: 52579
                                length: 33
                            children: []
                            pos: 52535
                            length: 77
                        children: []
                        pos: 52534
                        length: 79
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: type = leftType;
                        children: []
                        pos: 52719
                        length: 16
                      - type: expression_statement
                        fields:
                          text: literals = leftLiterals;
                        children: []
                        pos: 52744
                        length: 24
                      pos: 52614
                      length: 162
                    pos: 52531
                    length: 541
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: equals
                                fields:
                                  left:
                                    type: field_access
                                    fields:
                                      text: literals.booleanValues
                                    children: []
                                    pos: 53205
                                    length: 22
                                  right:
                                    type: field_access
                                    fields:
                                      text: BooleanLiteralSet.EMPTY
                                    children: []
                                    pos: 53231
                                    length: 23
                                children: []
                                pos: 53205
                                length: 49
                              right:
                                type: method_invocation
                                fields:
                                  text: getNativeType(BOOLEAN_TYPE).isSubtype(type)
                                children: []
                                pos: 53268
                                length: 43
                            children: []
                            pos: 53205
                            length: 106
                        children: []
                        pos: 53204
                        length: 108
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: method_invocation
                                fields:
                                  text: type.isUnionType()
                                children: []
                                pos: 53382
                                length: 18
                            children: []
                            pos: 53381
                            length: 20
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: |-
                                type = type.toMaybeUnionType().getRestrictedUnion(
                                              getNativeType(BOOLEAN_TYPE));
                            children: []
                            pos: 53414
                            length: 94
                          pos: 53402
                          length: 116
                        pos: 53378
                        length: 140
                      pos: 53313
                      length: 213
                    pos: 53201
                    length: 325
                  pos: 52445
                  length: 1087
                pos: 52402
                length: 1353
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 53760
                length: 18
              - type: return_statement
                fields:
                  text: return literals;
                children: []
                pos: 53784
                length: 16
              pos: 51552
              length: 2252
          children: []
          pos: 51445
          length: 2359
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseWithinShortCircuitingBinOp
              children: []
              pos: 53835
              length: 34
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 53870
                length: 6
              pos: 53808
              length: 362
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 53915
                        length: 11
                    children: []
                    pos: 53914
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.AND:
                                return traverseAnd(n, scope);

                              case Token.OR:
                                return traverseOr(n, scope);

                              default:
                                scope = traverse(n, scope);
                                return newBooleanOutcomePair(n.getJSType(), scope);
                            }
                    children: []
                    pos: 53928
                    length: 238
                children: []
                pos: 53907
                length: 259
              pos: 53901
              length: 269
          children: []
          pos: 53808
          length: 362
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getBooleanOutcomePair
              children: []
              pos: 54409
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: BooleanOutcomePair left
                children: []
                pos: 54431
                length: 23
              pos: 54390
              length: 416
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return new BooleanOutcomePair(
                            getBooleanOutcomes(left.toBooleanOutcomes, right.toBooleanOutcomes,
                                               condition),
                            getBooleanOutcomes(left.booleanValues, right.booleanValues, condition),
                            left.getJoinedFlowScope(), right.getJoinedFlowScope());
                children: []
                pos: 54513
                length: 289
              pos: 54507
              length: 299
          children: []
          pos: 54390
          length: 416
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getBooleanOutcomes
              children: []
              pos: 55492
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: BooleanLiteralSet left
                children: []
                pos: 55511
                length: 22
              pos: 55467
              length: 201
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return right.union(left.intersection(BooleanLiteralSet.get(!condition)));
                children: []
                pos: 55591
                length: 73
              pos: 55585
              length: 83
          children: []
          pos: 55467
          length: 201
        - type: class_declaration
          fields:
            name:
              type: identifier
              fields:
                text: BooleanOutcomePair
              children: []
              pos: 55975
              length: 18
            body:
              type: class_body
              fields: {}
              children:
              - type: field_declaration
                fields:
                  text: final BooleanLiteralSet toBooleanOutcomes;
                children: []
                pos: 56000
                length: 42
              - type: field_declaration
                fields:
                  text: final BooleanLiteralSet booleanValues;
                children: []
                pos: 56047
                length: 38
              - type: field_declaration
                fields:
                  text: final FlowScope leftScope;
                children: []
                pos: 56166
                length: 26
              - type: field_declaration
                fields:
                  text: final FlowScope rightScope;
                children: []
                pos: 56251
                length: 27
              - type: field_declaration
                fields:
                  text: FlowScope joinedScope = null;
                children: []
                pos: 56360
                length: 29
              - type: constructor_declaration
                fields:
                  text: |-
                    BooleanOutcomePair(
                            BooleanLiteralSet toBooleanOutcomes, BooleanLiteralSet booleanValues,
                            FlowScope leftScope, FlowScope rightScope) {
                          this.toBooleanOutcomes = toBooleanOutcomes;
                          this.booleanValues = booleanValues;
                          this.leftScope = leftScope;
                          this.rightScope = rightScope;
                        }
                children: []
                pos: 56395
                length: 318
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: getJoinedFlowScope
                    children: []
                    pos: 56853
                    length: 18
                  parameters:
                    type: method_parameters
                    fields: {}
                    children: []
                    pos: 56843
                    length: 260
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: equals
                              fields:
                                left:
                                  type: identifier
                                  fields:
                                    text: joinedScope
                                  children: []
                                  pos: 56886
                                  length: 11
                                right:
                                  type: null_literal
                                  fields: {}
                                  children: []
                                  pos: 56901
                                  length: 4
                              children: []
                              pos: 56886
                              length: 19
                          children: []
                          pos: 56885
                          length: 21
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: if_statement
                          fields:
                            condition:
                              type: parenthesized_expression
                              fields:
                                expression:
                                  type: equals
                                  fields:
                                    left:
                                      type: identifier
                                      fields:
                                        text: leftScope
                                      children: []
                                      pos: 56921
                                      length: 9
                                    right:
                                      type: identifier
                                      fields:
                                        text: rightScope
                                      children: []
                                      pos: 56934
                                      length: 10
                                  children: []
                                  pos: 56921
                                  length: 23
                              children: []
                              pos: 56920
                              length: 25
                          children:
                          - type: block
                            fields: {}
                            children:
                            - type: expression_statement
                              fields:
                                text: joinedScope = rightScope;
                              children: []
                              pos: 56958
                              length: 25
                            pos: 56946
                            length: 47
                          pos: 56917
                          length: 146
                        pos: 56907
                        length: 164
                      pos: 56882
                      length: 189
                    - type: return_statement
                      fields:
                        text: return joinedScope;
                      children: []
                      pos: 57078
                      length: 19
                    pos: 56874
                    length: 229
                children: []
                pos: 56843
                length: 260
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: getOutcomeFlowScope
                    children: []
                    pos: 57224
                    length: 19
                  parameters:
                    type: method_parameters
                    fields: {}
                    children:
                    - type: formal_parameter
                      fields:
                        text: int nodeType
                      children: []
                      pos: 57244
                      length: 12
                    pos: 57214
                    length: 312
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: or
                              fields:
                                left:
                                  type: and
                                  fields:
                                    left:
                                      type: equals
                                      fields:
                                        left:
                                          type: identifier
                                          fields:
                                            text: nodeType
                                          children: []
                                          pos: 57287
                                          length: 8
                                        right:
                                          type: field_access
                                          fields:
                                            text: Token.AND
                                          children: []
                                          pos: 57299
                                          length: 9
                                      children: []
                                      pos: 57287
                                      length: 21
                                    right:
                                      type: identifier
                                      fields:
                                        text: outcome
                                      children: []
                                      pos: 57312
                                      length: 7
                                  children: []
                                  pos: 57287
                                  length: 32
                                right:
                                  type: and
                                  fields:
                                    left:
                                      type: equals
                                      fields:
                                        left:
                                          type: identifier
                                          fields:
                                            text: nodeType
                                          children: []
                                          pos: 57333
                                          length: 8
                                        right:
                                          type: field_access
                                          fields:
                                            text: Token.OR
                                          children: []
                                          pos: 57345
                                          length: 8
                                      children: []
                                      pos: 57333
                                      length: 20
                                    right:
                                      type: unary_expression
                                      fields:
                                        text: "!outcome"
                                      children: []
                                      pos: 57357
                                      length: 8
                                  children: []
                                  pos: 57333
                                  length: 32
                              children: []
                              pos: 57287
                              length: 78
                          children: []
                          pos: 57286
                          length: 80
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: return_statement
                          fields:
                            text: return rightScope;
                          children: []
                          pos: 57442
                          length: 18
                        pos: 57367
                        length: 101
                      pos: 57283
                      length: 237
                    pos: 57275
                    length: 251
                children: []
                pos: 57214
                length: 312
              pos: 55955
              length: 1575
          children: []
          pos: 55955
          length: 1575
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: newBooleanOutcomePair
              children: []
              pos: 57561
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType jsType
                children: []
                pos: 57590
                length: 13
              pos: 57534
              length: 478
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: jsType
                            children: []
                            pos: 57636
                            length: 6
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 57646
                            length: 4
                        children: []
                        pos: 57636
                        length: 14
                    children: []
                    pos: 57635
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: |-
                        return new BooleanOutcomePair(
                                  BooleanLiteralSet.BOTH, BooleanLiteralSet.BOTH, flowScope, flowScope);
                    children: []
                    pos: 57660
                    length: 111
                  pos: 57652
                  length: 125
                pos: 57632
                length: 145
              - type: return_statement
                fields:
                  text: |-
                    return new BooleanOutcomePair(jsType.getPossibleToBooleanOutcomes(),
                            registry.getNativeType(BOOLEAN_TYPE).isSubtype(jsType) ?
                                BooleanLiteralSet.BOTH : BooleanLiteralSet.EMPTY,
                            flowScope, flowScope);
                children: []
                pos: 57782
                length: 226
              pos: 57626
              length: 386
          children: []
          pos: 57534
          length: 478
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: redeclareSimpleVar
              children: []
              pos: 58029
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 58055
                length: 15
              pos: 58016
              length: 394
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(nameNode.isName());
                children: []
                pos: 58109
                length: 44
              - type: local_variable_declaration
                fields:
                  text: String varName = nameNode.getString();
                children: []
                pos: 58158
                length: 38
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: varType
                            children: []
                            pos: 58205
                            length: 7
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 58216
                            length: 4
                        children: []
                        pos: 58205
                        length: 15
                    children: []
                    pos: 58204
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: varType = getNativeType(JSTypeNative.UNKNOWN_TYPE);
                    children: []
                    pos: 58230
                    length: 51
                  pos: 58222
                  length: 65
                pos: 58201
                length: 86
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isUnflowable(syntacticScope.getVar(varName))
                        children: []
                        pos: 58296
                        length: 44
                    children: []
                    pos: 58295
                    length: 46
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 58350
                    length: 7
                  pos: 58342
                  length: 21
                pos: 58292
                length: 71
              - type: expression_statement
                fields:
                  text: scope.inferSlotType(varName, varType);
                children: []
                pos: 58368
                length: 38
              pos: 58103
              length: 307
          children: []
          pos: 58016
          length: 394
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isUnflowable
              children: []
              pos: 58430
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Var v
                children: []
                pos: 58443
                length: 5
              pos: 58414
              length: 214
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return v != null && v.isLocal() && v.isMarkedEscaped() &&
                            // It's OK to flow a variable in the scope where it's escaped.
                            v.getScope() == syntacticScope;
                children: []
                pos: 58456
                length: 168
              pos: 58450
              length: 178
          children: []
          pos: 58414
          length: 214
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getJSType
              children: []
              pos: 58753
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 58763
                length: 6
              pos: 58738
              length: 445
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType jsType = n.getJSType();
                children: []
                pos: 58777
                length: 30
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: jsType
                            children: []
                            pos: 58816
                            length: 6
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 58826
                            length: 4
                        children: []
                        pos: 58816
                        length: 14
                    children: []
                    pos: 58815
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return unknownType;
                    children: []
                    pos: 59120
                    length: 19
                  pos: 58832
                  length: 313
                pos: 58812
                length: 367
              pos: 58771
              length: 412
          children: []
          pos: 58738
          length: 445
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getNativeType
              children: []
              pos: 59202
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSTypeNative typeId
                children: []
                pos: 59216
                length: 19
              pos: 59187
              length: 98
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return registry.getNativeType(typeId);
                children: []
                pos: 59243
                length: 38
              pos: 59237
              length: 48
          children: []
          pos: 59187
          length: 98
        pos: 3109
        length: 56178
    children: []
    pos: 3109
    length: 56178
  pos: 0
  length: 59288
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: TypeInference
        children: []
        pos: 3115
        length: 13
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: |-
              static final DiagnosticType FUNCTION_LITERAL_UNDEFINED_THIS =
                  DiagnosticType.warning(
                      "JSC_FUNCTION_LITERAL_UNDEFINED_THIS",
                      "Function literal argument refers to undefined this argument");
          children: []
          pos: 3278
          length: 208
        - type: field_declaration
          fields:
            text: private final AbstractCompiler compiler;
          children: []
          pos: 3490
          length: 40
        - type: field_declaration
          fields:
            text: private final JSTypeRegistry registry;
          children: []
          pos: 3533
          length: 38
        - type: field_declaration
          fields:
            text: private final ReverseAbstractInterpreter reverseInterpreter;
          children: []
          pos: 3574
          length: 60
        - type: field_declaration
          fields:
            text: private final Scope syntacticScope;
          children: []
          pos: 3637
          length: 35
        - type: field_declaration
          fields:
            text: private final FlowScope functionScope;
          children: []
          pos: 3675
          length: 38
        - type: field_declaration
          fields:
            text: private final FlowScope bottomScope;
          children: []
          pos: 3716
          length: 36
        - type: field_declaration
          fields:
            text: private final Map<String, AssertionFunctionSpec> assertionFunctionsMap;
          children: []
          pos: 3755
          length: 71
        - type: field_declaration
          fields:
            text: private final ObjectType unknownType;
          children: []
          pos: 3851
          length: 37
        - type: constructor_declaration
          fields:
            text: |-
              TypeInference(AbstractCompiler compiler, ControlFlowGraph<Node> cfg,
                              ReverseAbstractInterpreter reverseInterpreter,
                              Scope functionScope,
                              Map<String, AssertionFunctionSpec> assertionFunctionsMap) {
                  super(cfg, new LinkedFlowScope.FlowScopeJoinOp());
                  this.compiler = compiler;
                  this.registry = compiler.getTypeRegistry();
                  this.reverseInterpreter = reverseInterpreter;
                  this.unknownType = registry.getNativeObjectType(UNKNOWN_TYPE);

                  this.syntacticScope = functionScope;
                  inferArguments(functionScope);

                  this.functionScope = LinkedFlowScope.createEntryLattice(functionScope);
                  this.assertionFunctionsMap = assertionFunctionsMap;

                  // For each local variable declared with the VAR keyword, the entry
                  // type is VOID.
                  Iterator<Var> varIt =
                      functionScope.getDeclarativelyUnboundVarsWithoutTypes();
                  while (varIt.hasNext()) {
                    Var var = varIt.next();
                    if (isUnflowable(var)) {
                      continue;
                    }

                    this.functionScope.inferSlotType(
                        var.getName(), getNativeType(VOID_TYPE));
                  }

                  this.bottomScope = LinkedFlowScope.createEntryLattice(
                      Scope.createLatticeBottom(functionScope.getRootNode()));
                }
          children: []
          pos: 3892
          length: 1234
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: inferArguments
              children: []
              pos: 5229
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Scope functionScope
                children: []
                pos: 5244
                length: 19
              pos: 5216
              length: 1514
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node functionNode = functionScope.getRootNode();
                children: []
                pos: 5271
                length: 48
              - type: local_variable_declaration
                fields:
                  text: Node astParameters = functionNode.getFirstChild().getNext();
                children: []
                pos: 5324
                length: 60
              - type: local_variable_declaration
                fields:
                  text: Node iifeArgumentNode = null;
                children: []
                pos: 5389
                length: 29
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: NodeUtil.isCallOrNewTarget(functionNode)
                        children: []
                        pos: 5428
                        length: 40
                    children: []
                    pos: 5427
                    length: 42
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: iifeArgumentNode = functionNode.getNext();
                    children: []
                    pos: 5478
                    length: 42
                  pos: 5470
                  length: 56
                pos: 5424
                length: 102
              - type: local_variable_declaration
                fields:
                  text: |-
                    FunctionType functionType =
                            JSType.toMaybeFunctionType(functionNode.getJSType());
                children: []
                pos: 5532
                length: 89
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: functionType
                            children: []
                            pos: 5630
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 5646
                            length: 4
                        children: []
                        pos: 5630
                        length: 20
                    children: []
                    pos: 5629
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Node parameterTypes = functionType.getParametersNode();
                    children: []
                    pos: 5660
                    length: 55
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: parameterTypes
                                children: []
                                pos: 5726
                                length: 14
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 5744
                                length: 4
                            children: []
                            pos: 5726
                            length: 22
                        children: []
                        pos: 5725
                        length: 24
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: Node parameterTypeNode = parameterTypes.getFirstChild();
                        children: []
                        pos: 5760
                        length: 56
                      - type: enhanced_for_statement
                        fields:
                          text: |-
                            for (Node astParameter : astParameters.children()) {
                                      Var var = functionScope.getVar(astParameter.getString());
                                      Preconditions.checkNotNull(var);
                                      if (var.isTypeInferred() &&
                                          var.getType() == unknownType) {
                                        JSType newType = null;

                                        if (iifeArgumentNode != null) {
                                          newType = iifeArgumentNode.getJSType();
                                        } else if (parameterTypeNode != null) {
                                          newType = parameterTypeNode.getJSType();
                                        }

                                        if (newType != null) {
                                          var.setType(newType);
                                          astParameter.setJSType(newType);
                                        }
                                      }

                                      if (parameterTypeNode != null) {
                                        parameterTypeNode = parameterTypeNode.getNext();
                                      }
                                      if (iifeArgumentNode != null) {
                                        iifeArgumentNode = iifeArgumentNode.getNext();
                                      }
                                    }
                        children: []
                        pos: 5825
                        length: 887
                      pos: 5750
                      length: 970
                    pos: 5722
                    length: 998
                  pos: 5652
                  length: 1074
                pos: 5626
                length: 1100
              pos: 5265
              length: 1465
          children: []
          pos: 5216
          length: 1514
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createInitialEstimateLattice
              children: []
              pos: 6756
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6734
              length: 82
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return bottomScope;
                children: []
                pos: 6793
                length: 19
              pos: 6787
              length: 29
          children: []
          pos: 6734
          length: 82
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createEntryLattice
              children: []
              pos: 6842
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6820
              length: 74
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return functionScope;
                children: []
                pos: 6869
                length: 21
              pos: 6863
              length: 31
          children: []
          pos: 6820
          length: 74
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: flowThrough
              children: []
              pos: 6920
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 6932
                length: 6
              pos: 6898
              length: 348
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: input
                            children: []
                            pos: 7086
                            length: 5
                          right:
                            type: identifier
                            fields:
                              text: bottomScope
                            children: []
                            pos: 7095
                            length: 11
                        children: []
                        pos: 7086
                        length: 20
                    children: []
                    pos: 7085
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return input;
                    children: []
                    pos: 7116
                    length: 13
                  pos: 7108
                  length: 27
                pos: 7082
                length: 53
              - type: local_variable_declaration
                fields:
                  text: FlowScope output = input.createChildFlowScope();
                children: []
                pos: 7141
                length: 48
              - type: expression_statement
                fields:
                  text: output = traverse(n, output);
                children: []
                pos: 7194
                length: 29
              - type: return_statement
                fields:
                  text: return output;
                children: []
                pos: 7228
                length: 14
              pos: 6957
              length: 289
          children: []
          pos: 6898
          length: 348
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: branchedFlowThrough
              children: []
              pos: 7336
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node source
                children: []
                pos: 7356
                length: 11
              pos: 7250
              length: 4755
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: FlowScope output = flowThrough(source, input);
                children: []
                pos: 7708
                length: 46
              - type: local_variable_declaration
                fields:
                  text: Node condition = null;
                children: []
                pos: 7759
                length: 22
              - type: local_variable_declaration
                fields:
                  text: FlowScope conditionFlowScope = null;
                children: []
                pos: 7786
                length: 36
              - type: local_variable_declaration
                fields:
                  text: BooleanOutcomePair conditionOutcomes = null;
                children: []
                pos: 7827
                length: 44
              - type: local_variable_declaration
                fields:
                  text: List<DiGraphEdge<Node, Branch>> branchEdges = getCfg().getOutEdges(source);
                children: []
                pos: 7877
                length: 75
              - type: local_variable_declaration
                fields:
                  text: List<FlowScope> result = Lists.newArrayListWithCapacity(branchEdges.size());
                children: []
                pos: 7957
                length: 76
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (DiGraphEdge<Node, Branch> branchEdge : branchEdges) {
                          Branch branch = branchEdge.getValue();
                          FlowScope newScope = output;

                          switch (branch) {
                            case ON_TRUE:
                              if (NodeUtil.isForIn(source)) {
                                // item is assigned a property name, so its type should be string.
                                Node item = source.getFirstChild();
                                Node obj = item.getNext();

                                FlowScope informed = traverse(obj, output.createChildFlowScope());

                                if (item.isVar()) {
                                  item = item.getFirstChild();
                                }
                                if (item.isName()) {
                                  JSType iterKeyType = getNativeType(STRING_TYPE);
                                  ObjectType objType = getJSType(obj).dereference();
                                  JSType objIndexType = objType == null ?
                                      null : objType.getTemplateTypeMap().getTemplateType(
                                          registry.getObjectIndexKey());
                                  if (objIndexType != null && !objIndexType.isUnknownType()) {
                                    JSType narrowedKeyType =
                                        iterKeyType.getGreatestSubtype(objIndexType);
                                    if (!narrowedKeyType.isEmptyType()) {
                                      iterKeyType = narrowedKeyType;
                                    }
                                  }
                                  redeclareSimpleVar(informed, item, iterKeyType);
                                }
                                newScope = informed;
                                break;
                              }

                              // FALL THROUGH

                            case ON_FALSE:
                              if (condition == null) {
                                condition = NodeUtil.getConditionExpression(source);
                                if (condition == null && source.isCase()) {
                                  condition = source;

                                  // conditionFlowScope is cached from previous iterations
                                  // of the loop.
                                  if (conditionFlowScope == null) {
                                    conditionFlowScope = traverse(
                                        condition.getFirstChild(), output.createChildFlowScope());
                                  }
                                }
                              }

                              if (condition != null) {
                                if (condition.isAnd() ||
                                    condition.isOr()) {
                                  // When handling the short-circuiting binary operators,
                                  // the outcome scope on true can be different than the outcome
                                  // scope on false.
                                  //
                                  // TODO(nicksantos): The "right" way to do this is to
                                  // carry the known outcome all the way through the
                                  // recursive traversal, so that we can construct a
                                  // different flow scope based on the outcome. However,
                                  // this would require a bunch of code and a bunch of
                                  // extra computation for an edge case. This seems to be
                                  // a "good enough" approximation.

                                  // conditionOutcomes is cached from previous iterations
                                  // of the loop.
                                  if (conditionOutcomes == null) {
                                    conditionOutcomes = condition.isAnd() ?
                                        traverseAnd(condition, output.createChildFlowScope()) :
                                        traverseOr(condition, output.createChildFlowScope());
                                  }
                                  newScope =
                                      reverseInterpreter.getPreciserScopeKnowingConditionOutcome(
                                          condition,
                                          conditionOutcomes.getOutcomeFlowScope(
                                              condition.getType(), branch == Branch.ON_TRUE),
                                          branch == Branch.ON_TRUE);
                                } else {
                                  // conditionFlowScope is cached from previous iterations
                                  // of the loop.
                                  if (conditionFlowScope == null) {
                                    conditionFlowScope =
                                        traverse(condition, output.createChildFlowScope());
                                  }
                                  newScope =
                                      reverseInterpreter.getPreciserScopeKnowingConditionOutcome(
                                          condition, conditionFlowScope, branch == Branch.ON_TRUE);
                                }
                              }
                              break;
                          }

                          result.add(newScope.optimize());
                        }
                children: []
                pos: 8038
                length: 3944
              - type: return_statement
                fields:
                  text: return result;
                children: []
                pos: 11987
                length: 14
              pos: 7386
              length: 4619
          children: []
          pos: 7250
          length: 4755
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverse
              children: []
              pos: 12027
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 12036
                length: 6
              pos: 12009
              length: 3810
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 12075
                        length: 11
                    children: []
                    pos: 12074
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.ASSIGN:
                                scope = traverseAssign(n, scope);
                                break;

                              case Token.NAME:
                                scope = traverseName(n, scope);
                                break;

                              case Token.GETPROP:
                                scope = traverseGetProp(n, scope);
                                break;

                              case Token.AND:
                                scope = traverseAnd(n, scope).getJoinedFlowScope()
                                    .createChildFlowScope();
                                break;

                              case Token.OR:
                                scope = traverseOr(n, scope).getJoinedFlowScope()
                                    .createChildFlowScope();
                                break;

                              case Token.HOOK:
                                scope = traverseHook(n, scope);
                                break;

                              case Token.OBJECTLIT:
                                scope = traverseObjectLiteral(n, scope);
                                break;

                              case Token.CALL:
                                scope = traverseCall(n, scope);
                                break;

                              case Token.NEW:
                                scope = traverseNew(n, scope);
                                break;

                              case Token.ASSIGN_ADD:
                              case Token.ADD:
                                scope = traverseAdd(n, scope);
                                break;

                              case Token.POS:
                              case Token.NEG:
                                scope = traverse(n.getFirstChild(), scope);  // Find types.
                                n.setJSType(getNativeType(NUMBER_TYPE));
                                break;

                              case Token.ARRAYLIT:
                                scope = traverseArrayLiteral(n, scope);
                                break;

                              case Token.THIS:
                                n.setJSType(scope.getTypeOfThis());
                                break;

                              case Token.ASSIGN_LSH:
                              case Token.ASSIGN_RSH:
                              case Token.LSH:
                              case Token.RSH:
                              case Token.ASSIGN_URSH:
                              case Token.URSH:
                              case Token.ASSIGN_DIV:
                              case Token.ASSIGN_MOD:
                              case Token.ASSIGN_BITAND:
                              case Token.ASSIGN_BITXOR:
                              case Token.ASSIGN_BITOR:
                              case Token.ASSIGN_MUL:
                              case Token.ASSIGN_SUB:
                              case Token.DIV:
                              case Token.MOD:
                              case Token.BITAND:
                              case Token.BITXOR:
                              case Token.BITOR:
                              case Token.MUL:
                              case Token.SUB:
                              case Token.DEC:
                              case Token.INC:
                              case Token.BITNOT:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getNativeType(NUMBER_TYPE));
                                break;

                              case Token.PARAM_LIST:
                                scope = traverse(n.getFirstChild(), scope);
                                n.setJSType(getJSType(n.getFirstChild()));
                                break;

                              case Token.COMMA:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getJSType(n.getLastChild()));
                                break;

                              case Token.TYPEOF:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getNativeType(STRING_TYPE));
                                break;

                              case Token.DELPROP:
                              case Token.LT:
                              case Token.LE:
                              case Token.GT:
                              case Token.GE:
                              case Token.NOT:
                              case Token.EQ:
                              case Token.NE:
                              case Token.SHEQ:
                              case Token.SHNE:
                              case Token.INSTANCEOF:
                              case Token.IN:
                                scope = traverseChildren(n, scope);
                                n.setJSType(getNativeType(BOOLEAN_TYPE));
                                break;

                              case Token.GETELEM:
                                scope = traverseGetElem(n, scope);
                                break;

                              case Token.EXPR_RESULT:
                                scope = traverseChildren(n, scope);
                                if (n.getFirstChild().isGetProp()) {
                                  ensurePropertyDeclared(n.getFirstChild());
                                }
                                break;

                              case Token.SWITCH:
                                scope = traverse(n.getFirstChild(), scope);
                                break;

                              case Token.RETURN:
                                scope = traverseReturn(n, scope);
                                break;

                              case Token.VAR:
                              case Token.THROW:
                                scope = traverseChildren(n, scope);
                                break;

                              case Token.CATCH:
                                scope = traverseCatch(n, scope);
                                break;

                              case Token.CAST:
                                scope = traverseChildren(n, scope);
                                JSDocInfo info = n.getJSDocInfo();
                                if (info != null && info.hasType()) {
                                  n.setJSType(info.getType().evaluate(syntacticScope, registry));
                                }
                                break;
                            }
                    children: []
                    pos: 12088
                    length: 3708
                children: []
                pos: 12067
                length: 3729
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 15802
                length: 13
              pos: 12061
              length: 3758
          children: []
          pos: 12009
          length: 3810
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseReturn
              children: []
              pos: 15883
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 15898
                length: 6
              pos: 15865
              length: 496
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 15929
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node retValue = n.getFirstChild();
                children: []
                pos: 15970
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: retValue
                            children: []
                            pos: 16013
                            length: 8
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 16025
                            length: 4
                        children: []
                        pos: 16013
                        length: 16
                    children: []
                    pos: 16012
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType type = functionScope.getRootNode().getJSType();
                    children: []
                    pos: 16039
                    length: 54
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 16104
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 16112
                                length: 4
                            children: []
                            pos: 16104
                            length: 12
                        children: []
                        pos: 16103
                        length: 14
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: FunctionType fnType = type.toMaybeFunctionType();
                        children: []
                        pos: 16128
                        length: 49
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: fnType
                                    children: []
                                    pos: 16190
                                    length: 6
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 16200
                                    length: 4
                                children: []
                                pos: 16190
                                length: 14
                            children: []
                            pos: 16189
                            length: 16
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: |-
                                inferPropertyTypesToMatchConstraint(
                                              retValue.getJSType(), fnType.getReturnType());
                            children: []
                            pos: 16218
                            length: 97
                          pos: 16206
                          length: 119
                        pos: 16186
                        length: 139
                      pos: 16118
                      length: 215
                    pos: 16100
                    length: 233
                  pos: 16031
                  length: 308
                pos: 16009
                length: 330
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 16344
                length: 13
              pos: 15923
              length: 438
          children: []
          pos: 15865
          length: 496
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseCatch
              children: []
              pos: 16526
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node catchNode
                children: []
                pos: 16540
                length: 14
              pos: 16508
              length: 548
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node name = catchNode.getFirstChild();
                children: []
                pos: 16579
                length: 38
              - type: local_variable_declaration
                fields:
                  text: JSType type;
                children: []
                pos: 16622
                length: 12
              - type: local_variable_declaration
                fields:
                  text: JSDocInfo info = name.getJSDocInfo();
                children: []
                pos: 16748
                length: 37
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: info
                                children: []
                                pos: 16794
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 16802
                                length: 4
                            children: []
                            pos: 16794
                            length: 12
                          right:
                            type: method_invocation
                            fields:
                              text: info.hasType()
                            children: []
                            pos: 16810
                            length: 14
                        children: []
                        pos: 16794
                        length: 30
                    children: []
                    pos: 16793
                    length: 32
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: type = info.getType().evaluate(syntacticScope, registry);
                    children: []
                    pos: 16834
                    length: 57
                  pos: 16826
                  length: 71
                pos: 16790
                length: 175
              - type: expression_statement
                fields:
                  text: redeclareSimpleVar(scope, name, type);
                children: []
                pos: 16970
                length: 38
              - type: expression_statement
                fields:
                  text: name.setJSType(type);
                children: []
                pos: 17013
                length: 21
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 17039
                length: 13
              pos: 16573
              length: 483
          children: []
          pos: 16508
          length: 548
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseAssign
              children: []
              pos: 17078
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 17093
                length: 6
              pos: 17060
              length: 366
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 17124
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 17159
                length: 30
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 17194
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = left.getJSType();
                children: []
                pos: 17235
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = getJSType(right);
                children: []
                pos: 17275
                length: 36
              - type: expression_statement
                fields:
                  text: n.setJSType(rightType);
                children: []
                pos: 17316
                length: 23
              - type: expression_statement
                fields:
                  text: updateScopeForTypeChange(scope, left, leftType, rightType);
                children: []
                pos: 17345
                length: 59
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 17409
                length: 13
              pos: 17118
              length: 308
          children: []
          pos: 17060
          length: 366
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateScopeForTypeChange
              children: []
              pos: 17560
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 17592
                length: 15
              pos: 17547
              length: 2510
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(resultType);
                children: []
                pos: 17662
                length: 39
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: left.getType()
                        children: []
                        pos: 17714
                        length: 14
                    children: []
                    pos: 17713
                    length: 16
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.NAME:
                                String varName = left.getString();
                                Var var = syntacticScope.getVar(varName);
                                boolean isVarDeclaration = left.hasChildren();

                                // When looking at VAR initializers for declared VARs, we tend
                                // to use the declared type over the type it's being
                                // initialized to in the global scope.
                                //
                                // For example,
                                // /** @param {number} */ var f = goog.abstractMethod;
                                // it's obvious that the programmer wants you to use
                                // the declared function signature, not the inferred signature.
                                //
                                // Or,
                                // /** @type {Object.<string>} */ var x = {};
                                // the one-time anonymous object on the right side
                                // is as narrow as it can possibly be, but we need to make
                                // sure we back-infer the <string> element constraint on
                                // the left hand side, so we use the left hand side.

                                boolean isVarTypeBetter = !isVarDeclaration || var == null || var.isTypeInferred();
                                    // Makes it easier to check for NPEs.

                                // TODO(nicksantos): This might be a better check once we have
                                // back-inference of object/array constraints.  It will probably
                                // introduce more type warnings.  It uses the result type iff it's
                                // strictly narrower than the declared var type.
                                //
                                //boolean isVarTypeBetter = isVarDeclaration &&
                                //    (varType.restrictByNotNullOrUndefined().isSubtype(resultType)
                                //     || !resultType.isSubtype(varType));


                                if (isVarTypeBetter) {
                                  redeclareSimpleVar(scope, left, resultType);
                                }
                                left.setJSType(isVarDeclaration || leftType == null ?
                                    resultType : null);

                                if (var != null && var.isTypeInferred()) {
                                  JSType oldType = var.getType();
                                  var.setType(oldType == null ?
                                      resultType : oldType.getLeastSupertype(resultType));
                                }
                                break;
                              case Token.GETPROP:
                                String qualifiedName = left.getQualifiedName();
                                if (qualifiedName != null) {
                                  scope.inferQualifiedSlot(left, qualifiedName,
                                      leftType == null ? unknownType : leftType,
                                      resultType);
                                }

                                left.setJSType(resultType);
                                ensurePropertyDefined(left, resultType);
                                break;
                            }
                    children: []
                    pos: 17730
                    length: 2323
                children: []
                pos: 17706
                length: 2347
              pos: 17656
              length: 2401
          children: []
          pos: 17547
          length: 2510
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensurePropertyDefined
              children: []
              pos: 20152
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getprop
                children: []
                pos: 20174
                length: 12
              pos: 20139
              length: 3233
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String propName = getprop.getLastChild().getString();
                children: []
                pos: 20212
                length: 53
              - type: local_variable_declaration
                fields:
                  text: Node obj = getprop.getFirstChild();
                children: []
                pos: 20270
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType nodeType = getJSType(obj);
                children: []
                pos: 20310
                length: 33
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType objectType = ObjectType.cast(
                            nodeType.restrictByNotNullOrUndefined());
                children: []
                pos: 20348
                length: 90
              - type: local_variable_declaration
                fields:
                  text: |-
                    boolean propCreationInConstructor = obj.isThis() &&
                            getJSType(syntacticScope.getRootNode()).isConstructor();
                children: []
                pos: 20443
                length: 116
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: objectType
                            children: []
                            pos: 20569
                            length: 10
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 20583
                            length: 4
                        children: []
                        pos: 20569
                        length: 18
                    children: []
                    pos: 20568
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: registry.registerPropertyOnType(propName, nodeType);
                    children: []
                    pos: 20597
                    length: 52
                  pos: 20589
                  length: 66
                pos: 20565
                length: 2803
              pos: 20206
              length: 3166
          children: []
          pos: 20139
          length: 3233
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensurePropertyDeclared
              children: []
              pos: 23656
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getprop
                children: []
                pos: 23679
                length: 12
              pos: 23643
              length: 266
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: |-
                    ObjectType ownerType = ObjectType.cast(
                            getJSType(getprop.getFirstChild()).restrictByNotNullOrUndefined());
                children: []
                pos: 23699
                length: 115
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: ownerType
                            children: []
                            pos: 23823
                            length: 9
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 23836
                            length: 4
                        children: []
                        pos: 23823
                        length: 17
                    children: []
                    pos: 23822
                    length: 19
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ensurePropertyDeclaredHelper(getprop, ownerType);
                    children: []
                    pos: 23850
                    length: 49
                  pos: 23842
                  length: 63
                pos: 23819
                length: 86
              pos: 23693
              length: 216
          children: []
          pos: 23643
          length: 266
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: ensurePropertyDeclaredHelper
              children: []
              pos: 24040
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node getprop
                children: []
                pos: 24076
                length: 12
              pos: 24024
              length: 834
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String propName = getprop.getLastChild().getString();
                children: []
                pos: 24119
                length: 53
              - type: local_variable_declaration
                fields:
                  text: String qName = getprop.getQualifiedName();
                children: []
                pos: 24177
                length: 42
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: qName
                            children: []
                            pos: 24228
                            length: 5
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 24237
                            length: 4
                        children: []
                        pos: 24228
                        length: 13
                    children: []
                    pos: 24227
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Var var = syntacticScope.getVar(qName);
                    children: []
                    pos: 24251
                    length: 39
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: not_equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: var
                                    children: []
                                    pos: 24301
                                    length: 3
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 24308
                                    length: 4
                                children: []
                                pos: 24301
                                length: 11
                              right:
                                type: unary_expression
                                fields:
                                  text: "!var.isTypeInferred()"
                                children: []
                                pos: 24316
                                length: 21
                            children: []
                            pos: 24301
                            length: 36
                        children: []
                        pos: 24300
                        length: 38
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: or
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: propName.equals("prototype")
                                    children: []
                                    pos: 24428
                                    length: 28
                                  right:
                                    type: parenthesized_expression
                                    fields:
                                      expression:
                                        type: and
                                        fields:
                                          left:
                                            type: unary_expression
                                            fields:
                                              text: "!objectType.hasOwnProperty(propName)"
                                            children: []
                                            pos: 24551
                                            length: 36
                                          right:
                                            type: parenthesized_expression
                                            fields:
                                              expression:
                                                type: or
                                                fields:
                                                  left:
                                                    type: unary_expression
                                                    fields:
                                                      text: "!objectType.isInstanceType()"
                                                    children: []
                                                    pos: 24605
                                                    length: 28
                                                  right:
                                                    type: parenthesized_expression
                                                    fields:
                                                      expression:
                                                        type: and
                                                        fields:
                                                          left:
                                                            type: method_invocation
                                                            fields:
                                                              text: var.isExtern()
                                                            children: []
                                                            pos: 24655
                                                            length: 14
                                                          right:
                                                            type: unary_expression
                                                            fields:
                                                              text: "!objectType.isNativeObjectType()"
                                                            children: []
                                                            pos: 24673
                                                            length: 32
                                                        children: []
                                                        pos: 24655
                                                        length: 50
                                                    children: []
                                                    pos: 24654
                                                    length: 52
                                                children: []
                                                pos: 24605
                                                length: 101
                                            children: []
                                            pos: 24604
                                            length: 103
                                        children: []
                                        pos: 24551
                                        length: 156
                                    children: []
                                    pos: 24550
                                    length: 158
                                children: []
                                pos: 24428
                                length: 280
                            children: []
                            pos: 24427
                            length: 282
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: return_statement
                            fields:
                              text: |-
                                return objectType.defineDeclaredProperty(
                                              propName, var.getType(), getprop);
                            children: []
                            pos: 24722
                            length: 90
                          pos: 24710
                          length: 112
                        pos: 24424
                        length: 398
                      pos: 24339
                      length: 491
                    pos: 24297
                    length: 533
                  pos: 24243
                  length: 593
                pos: 24224
                length: 612
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 24841
                length: 13
              pos: 24113
              length: 745
          children: []
          pos: 24024
          length: 834
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseName
              children: []
              pos: 24880
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 24893
                length: 6
              pos: 24862
              length: 2002
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: String varName = n.getString();
                children: []
                pos: 24924
                length: 31
              - type: local_variable_declaration
                fields:
                  text: Node value = n.getFirstChild();
                children: []
                pos: 24960
                length: 31
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 24996
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: value
                            children: []
                            pos: 25033
                            length: 5
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 25042
                            length: 4
                        children: []
                        pos: 25033
                        length: 13
                    children: []
                    pos: 25032
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: scope = traverse(value, scope);
                    children: []
                    pos: 25056
                    length: 31
                  - type: expression_statement
                    fields:
                      text: |-
                        updateScopeForTypeChange(scope, n, n.getJSType() /* could be null */,
                                  getJSType(value));
                    children: []
                    pos: 25094
                    length: 98
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 25199
                    length: 13
                  pos: 25048
                  length: 170
                pos: 25029
                length: 1790
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 26824
                length: 18
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 26847
                length: 13
              pos: 24918
              length: 1946
          children: []
          pos: 24862
          length: 2002
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseArrayLiteral
              children: []
              pos: 26931
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 26952
                length: 6
              pos: 26913
              length: 171
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 26983
                length: 35
              - type: expression_statement
                fields:
                  text: n.setJSType(getNativeType(ARRAY_TYPE));
                children: []
                pos: 27023
                length: 39
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 27067
                length: 13
              pos: 26977
              length: 107
          children: []
          pos: 26913
          length: 171
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseObjectLiteral
              children: []
              pos: 27106
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 27128
                length: 6
              pos: 27088
              length: 1930
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType type = n.getJSType();
                children: []
                pos: 27159
                length: 28
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(type);
                children: []
                pos: 27192
                length: 33
              - type: for_statement
                fields:
                  text: |-
                    for (Node name = n.getFirstChild(); name != null; name = name.getNext()) {
                          scope = traverse(name.getFirstChild(), scope);
                        }
                children: []
                pos: 27231
                length: 133
              - type: local_variable_declaration
                fields:
                  text: ObjectType objectType = ObjectType.cast(type);
                children: []
                pos: 27538
                length: 46
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: equals
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: objectType
                                    children: []
                                    pos: 27593
                                    length: 10
                                  right:
                                    type: null_literal
                                    fields: {}
                                    children: []
                                    pos: 27607
                                    length: 4
                                children: []
                                pos: 27593
                                length: 18
                              right:
                                type: method_invocation
                                fields:
                                  text: n.getBooleanProp(Node.REFLECTED_OBJECT)
                                children: []
                                pos: 27623
                                length: 39
                            children: []
                            pos: 27593
                            length: 69
                          right:
                            type: method_invocation
                            fields:
                              text: objectType.isEnumType()
                            children: []
                            pos: 27674
                            length: 23
                        children: []
                        pos: 27593
                        length: 104
                    children: []
                    pos: 27592
                    length: 106
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 27707
                    length: 13
                  pos: 27699
                  length: 27
                pos: 27589
                length: 137
              - type: local_variable_declaration
                fields:
                  text: |-
                    String qObjName = NodeUtil.getBestLValueName(
                            NodeUtil.getBestLValue(n));
                children: []
                pos: 27732
                length: 81
              - type: for_statement
                fields:
                  text: |-
                    for (Node name = n.getFirstChild(); name != null;
                             name = name.getNext()) {
                          String memberName = NodeUtil.getObjectLitKeyName(name);
                          if (memberName != null) {
                            JSType rawValueType =  name.getFirstChild().getJSType();
                            JSType valueType = NodeUtil.getObjectLitKeyTypeFromValueType(
                                name, rawValueType);
                            if (valueType == null) {
                              valueType = unknownType;
                            }
                            objectType.defineInferredProperty(memberName, valueType, name);

                            // Do normal flow inference if this is a direct property assignment.
                            if (qObjName != null && name.isStringKey()) {
                              String qKeyName = qObjName + "." + memberName;
                              Var var = syntacticScope.getVar(qKeyName);
                              JSType oldType = var == null ? null : var.getType();
                              if (var != null && var.isTypeInferred()) {
                                var.setType(oldType == null ?
                                    valueType : oldType.getLeastSupertype(oldType));
                              }

                              scope.inferQualifiedSlot(name, qKeyName,
                                  oldType == null ? unknownType : oldType,
                                  valueType);
                            }
                          } else {
                            n.setJSType(unknownType);
                          }
                        }
                children: []
                pos: 27818
                length: 1178
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 29001
                length: 13
              pos: 27153
              length: 1865
          children: []
          pos: 27088
          length: 1930
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseAdd
              children: []
              pos: 29040
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 29052
                length: 6
              pos: 29022
              length: 1116
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 29083
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = left.getNext();
                children: []
                pos: 29118
                length: 28
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 29151
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = left.getJSType();
                children: []
                pos: 29192
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = right.getJSType();
                children: []
                pos: 29232
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType type = unknownType;
                children: []
                pos: 29275
                length: 26
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: leftType
                                children: []
                                pos: 29310
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 29322
                                length: 4
                            children: []
                            pos: 29310
                            length: 16
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: rightType
                                children: []
                                pos: 29330
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 29343
                                length: 4
                            children: []
                            pos: 29330
                            length: 17
                        children: []
                        pos: 29310
                        length: 37
                    children: []
                    pos: 29309
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: boolean leftIsUnknown = leftType.isUnknownType();
                    children: []
                    pos: 29357
                    length: 49
                  - type: local_variable_declaration
                    fields:
                      text: boolean rightIsUnknown = rightType.isUnknownType();
                    children: []
                    pos: 29413
                    length: 51
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: leftIsUnknown
                                children: []
                                pos: 29475
                                length: 13
                              right:
                                type: identifier
                                fields:
                                  text: rightIsUnknown
                                children: []
                                pos: 29492
                                length: 14
                            children: []
                            pos: 29475
                            length: 31
                        children: []
                        pos: 29474
                        length: 33
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: type = unknownType;
                        children: []
                        pos: 29518
                        length: 19
                      pos: 29508
                      length: 37
                    pos: 29471
                    length: 520
                  pos: 29349
                  length: 648
                pos: 29306
                length: 691
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 30002
                length: 18
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.isAssignAdd()
                        children: []
                        pos: 30030
                        length: 15
                    children: []
                    pos: 30029
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: updateScopeForTypeChange(scope, left, leftType, type);
                    children: []
                    pos: 30055
                    length: 54
                  pos: 30047
                  length: 68
                pos: 30026
                length: 89
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 30121
                length: 13
              pos: 29077
              length: 1061
          children: []
          pos: 29022
          length: 1116
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isAddedAsNumber
              children: []
              pos: 30158
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType type
                children: []
                pos: 30174
                length: 11
              pos: 30142
              length: 197
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return type.isSubtype(registry.createUnionType(VOID_TYPE, NULL_TYPE,
                            NUMBER_VALUE_OR_OBJECT_TYPE, BOOLEAN_TYPE, BOOLEAN_OBJECT_TYPE));
                children: []
                pos: 30193
                length: 142
              pos: 30187
              length: 152
          children: []
          pos: 30142
          length: 197
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseHook
              children: []
              pos: 30361
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 30374
                length: 6
              pos: 30343
              length: 1146
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node condition = n.getFirstChild();
                children: []
                pos: 30405
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node trueNode = condition.getNext();
                children: []
                pos: 30445
                length: 36
              - type: local_variable_declaration
                fields:
                  text: Node falseNode = n.getLastChild();
                children: []
                pos: 30486
                length: 34
              - type: expression_statement
                fields:
                  text: scope = traverse(condition, scope);
                children: []
                pos: 30554
                length: 35
              - type: local_variable_declaration
                fields:
                  text: |-
                    FlowScope trueScope = reverseInterpreter.
                            getPreciserScopeKnowingConditionOutcome(
                                condition, scope, true);
                children: []
                pos: 30669
                length: 127
              - type: local_variable_declaration
                fields:
                  text: |-
                    FlowScope falseScope = reverseInterpreter.
                            getPreciserScopeKnowingConditionOutcome(
                                condition, scope, false);
                children: []
                pos: 30801
                length: 129
              - type: expression_statement
                fields:
                  text: traverse(trueNode, trueScope.createChildFlowScope());
                children: []
                pos: 30985
                length: 53
              - type: expression_statement
                fields:
                  text: traverse(falseNode, falseScope.createChildFlowScope());
                children: []
                pos: 31095
                length: 55
              - type: local_variable_declaration
                fields:
                  text: JSType trueType = trueNode.getJSType();
                children: []
                pos: 31207
                length: 39
              - type: local_variable_declaration
                fields:
                  text: JSType falseType = falseNode.getJSType();
                children: []
                pos: 31251
                length: 41
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: trueType
                                children: []
                                pos: 31301
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 31313
                                length: 4
                            children: []
                            pos: 31301
                            length: 16
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: falseType
                                children: []
                                pos: 31321
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 31334
                                length: 4
                            children: []
                            pos: 31321
                            length: 17
                        children: []
                        pos: 31301
                        length: 37
                    children: []
                    pos: 31300
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: n.setJSType(trueType.getLeastSupertype(falseType));
                    children: []
                    pos: 31348
                    length: 51
                  pos: 31340
                  length: 65
                pos: 31297
                length: 146
              - type: return_statement
                fields:
                  text: return scope.createChildFlowScope();
                children: []
                pos: 31449
                length: 36
              pos: 30399
              length: 1090
          children: []
          pos: 30343
          length: 1146
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseCall
              children: []
              pos: 31511
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 31524
                length: 6
              pos: 31493
              length: 632
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 31555
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 31596
                length: 30
              - type: local_variable_declaration
                fields:
                  text: JSType functionType = getJSType(left).restrictByNotNullOrUndefined();
                children: []
                pos: 31631
                length: 69
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: functionType.isFunctionType()
                        children: []
                        pos: 31709
                        length: 29
                    children: []
                    pos: 31708
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: FunctionType fnType = functionType.toMaybeFunctionType();
                    children: []
                    pos: 31748
                    length: 57
                  - type: expression_statement
                    fields:
                      text: n.setJSType(fnType.getReturnType());
                    children: []
                    pos: 31812
                    length: 36
                  - type: expression_statement
                    fields:
                      text: backwardsInferenceFromCallSite(n, fnType);
                    children: []
                    pos: 31855
                    length: 42
                  pos: 31740
                  length: 163
                pos: 31705
                length: 346
              - type: expression_statement
                fields:
                  text: scope = tightenTypesAfterAssertions(scope, n);
                children: []
                pos: 32057
                length: 46
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 32108
                length: 13
              pos: 31549
              length: 576
          children: []
          pos: 31493
          length: 632
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: tightenTypesAfterAssertions
              children: []
              pos: 32147
              length: 27
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 32175
                length: 15
              pos: 32129
              length: 1457
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = callNode.getFirstChild();
                children: []
                pos: 32219
                length: 37
              - type: local_variable_declaration
                fields:
                  text: Node firstParam = left.getNext();
                children: []
                pos: 32261
                length: 33
              - type: local_variable_declaration
                fields:
                  text: |-
                    AssertionFunctionSpec assertionFunctionSpec =
                            assertionFunctionsMap.get(left.getQualifiedName());
                children: []
                pos: 32299
                length: 105
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: assertionFunctionSpec
                                children: []
                                pos: 32413
                                length: 21
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 32438
                                length: 4
                            children: []
                            pos: 32413
                            length: 29
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: firstParam
                                children: []
                                pos: 32446
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 32460
                                length: 4
                            children: []
                            pos: 32446
                            length: 18
                        children: []
                        pos: 32413
                        length: 51
                    children: []
                    pos: 32412
                    length: 53
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 32474
                    length: 13
                  pos: 32466
                  length: 27
                pos: 32409
                length: 84
              - type: local_variable_declaration
                fields:
                  text: Node assertedNode = assertionFunctionSpec.getAssertedParam(firstParam);
                children: []
                pos: 32498
                length: 71
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: assertedNode
                            children: []
                            pos: 32578
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 32594
                            length: 4
                        children: []
                        pos: 32578
                        length: 20
                    children: []
                    pos: 32577
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 32608
                    length: 13
                  pos: 32600
                  length: 27
                pos: 32574
                length: 53
              - type: local_variable_declaration
                fields:
                  text: |-
                    JSType assertedType = assertionFunctionSpec.getAssertedType(
                            callNode, registry);
                children: []
                pos: 32632
                length: 89
              - type: local_variable_declaration
                fields:
                  text: String assertedNodeName = assertedNode.getQualifiedName();
                children: []
                pos: 32726
                length: 58
              - type: local_variable_declaration
                fields:
                  text: JSType narrowed;
                children: []
                pos: 32790
                length: 16
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: assertedType
                            children: []
                            pos: 32883
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 32899
                            length: 4
                        children: []
                        pos: 32883
                        length: 20
                    children: []
                    pos: 32882
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        scope = reverseInterpreter.getPreciserScopeKnowingConditionOutcome(
                                  assertedNode, scope, true);
                    children: []
                    pos: 32970
                    length: 105
                  - type: expression_statement
                    fields:
                      text: narrowed = getJSType(assertedNode).restrictByNotNullOrUndefined();
                    children: []
                    pos: 33132
                    length: 66
                  pos: 32905
                  length: 299
                pos: 32879
                length: 650
              - type: expression_statement
                fields:
                  text: callNode.setJSType(narrowed);
                children: []
                pos: 33535
                length: 29
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 33569
                length: 13
              pos: 32213
              length: 1373
          children: []
          pos: 32129
          length: 1457
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: narrowScope
              children: []
              pos: 33608
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 33620
                length: 15
              pos: 33590
              length: 468
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: node.isThis()
                        children: []
                        pos: 33675
                        length: 13
                    children: []
                    pos: 33674
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return scope;
                    children: []
                    pos: 33777
                    length: 13
                  pos: 33690
                  length: 106
                pos: 33671
                length: 125
              - type: expression_statement
                fields:
                  text: scope = scope.createChildFlowScope();
                children: []
                pos: 33802
                length: 37
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: node.isGetProp()
                        children: []
                        pos: 33848
                        length: 16
                    children: []
                    pos: 33847
                    length: 18
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        scope.inferQualifiedSlot(
                                  node, node.getQualifiedName(), getJSType(node), narrowed);
                    children: []
                    pos: 33874
                    length: 94
                  pos: 33866
                  length: 108
                pos: 33844
                length: 192
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 34041
                length: 13
              pos: 33665
              length: 393
          children: []
          pos: 33590
          length: 468
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: backwardsInferenceFromCallSite
              children: []
              pos: 34997
              length: 30
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 35028
                length: 6
              pos: 34984
              length: 302
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: boolean updatedFnType = inferTemplatedTypesForCall(n, fnType);
                children: []
                pos: 35063
                length: 62
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: updatedFnType
                        children: []
                        pos: 35134
                        length: 13
                    children: []
                    pos: 35133
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: fnType = n.getFirstChild().getJSType().toMaybeFunctionType();
                    children: []
                    pos: 35157
                    length: 61
                  pos: 35149
                  length: 75
                pos: 35130
                length: 94
              - type: expression_statement
                fields:
                  text: updateTypeOfParameters(n, fnType);
                children: []
                pos: 35229
                length: 34
              - type: expression_statement
                fields:
                  text: updateBind(n);
                children: []
                pos: 35268
                length: 14
              pos: 35057
              length: 229
          children: []
          pos: 34984
          length: 302
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateBind
              children: []
              pos: 35470
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 35481
                length: 6
              pos: 35457
              length: 539
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: |-
                    CodingConvention.Bind bind =
                            compiler.getCodingConvention().describeFunctionBind(n, true);
                children: []
                pos: 35495
                length: 98
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: bind
                            children: []
                            pos: 35602
                            length: 4
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 35610
                            length: 4
                        children: []
                        pos: 35602
                        length: 12
                    children: []
                    pos: 35601
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 35624
                    length: 7
                  pos: 35616
                  length: 21
                pos: 35598
                length: 39
              - type: local_variable_declaration
                fields:
                  text: |-
                    FunctionType callTargetFn = getJSType(bind.target)
                            .restrictByNotNullOrUndefined().toMaybeFunctionType();
                children: []
                pos: 35643
                length: 113
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: callTargetFn
                            children: []
                            pos: 35765
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 35781
                            length: 4
                        children: []
                        pos: 35765
                        length: 20
                    children: []
                    pos: 35764
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 35795
                    length: 7
                  pos: 35787
                  length: 21
                pos: 35761
                length: 47
              - type: expression_statement
                fields:
                  text: |-
                    n.setJSType(
                            callTargetFn.getBindReturnType(
                                // getBindReturnType expects the 'this' argument to be included.
                                bind.getBoundParameterCount() + 1));
                children: []
                pos: 35814
                length: 178
              pos: 35489
              length: 507
          children: []
          pos: 35457
          length: 539
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: updateTypeOfParameters
              children: []
              pos: 36173
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 36196
                length: 6
              pos: 36160
              length: 1061
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int i = 0;
                children: []
                pos: 36231
                length: 10
              - type: local_variable_declaration
                fields:
                  text: int childCount = n.getChildCount();
                children: []
                pos: 36246
                length: 35
              - type: enhanced_for_statement
                fields:
                  text: |-
                    for (Node iParameter : fnType.getParameters()) {
                          if (i + 1 >= childCount) {
                            // TypeCheck#visitParametersList will warn so we bail.
                            return;
                          }

                          JSType iParameterType = getJSType(iParameter);
                          Node iArgument = n.getChildAtIndex(i + 1);
                          JSType iArgumentType = getJSType(iArgument);
                          inferPropertyTypesToMatchConstraint(iArgumentType, iParameterType);

                          // TODO(johnlenz): Filter out non-function types
                          // (such as null and undefined) as
                          // we only care about FUNCTION subtypes here.
                          JSType restrictedParameter = iParameterType
                              .restrictByNotNullOrUndefined()
                              .toMaybeFunctionType();
                          if (restrictedParameter != null) {
                            if (iArgument.isFunction() &&
                                iArgumentType.isFunctionType() &&
                                iArgument.getJSDocInfo() == null) {
                              iArgument.setJSType(restrictedParameter);
                            }
                          }
                          i++;
                        }
                children: []
                pos: 36286
                length: 931
              pos: 36225
              length: 996
          children: []
          pos: 36160
          length: 1061
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: inferTemplateTypesFromParameters
              children: []
              pos: 37259
              length: 32
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FunctionType fnType
                children: []
                pos: 37299
                length: 19
              pos: 37225
              length: 863
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: fnType.getTemplateTypeMap().getTemplateKeys().isEmpty()
                        children: []
                        pos: 37341
                        length: 55
                    children: []
                    pos: 37340
                    length: 57
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Collections.emptyMap();
                    children: []
                    pos: 37406
                    length: 30
                  pos: 37398
                  length: 44
                pos: 37337
                length: 105
              - type: local_variable_declaration
                fields:
                  text: Map<TemplateType, JSType> resolvedTypes = Maps.newIdentityHashMap();
                children: []
                pos: 37448
                length: 68
              - type: local_variable_declaration
                fields:
                  text: Set<JSType> seenTypes = Sets.newIdentityHashSet();
                children: []
                pos: 37521
                length: 50
              - type: local_variable_declaration
                fields:
                  text: Node callTarget = call.getFirstChild();
                children: []
                pos: 37577
                length: 39
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: NodeUtil.isGet(callTarget)
                        children: []
                        pos: 37625
                        length: 26
                    children: []
                    pos: 37624
                    length: 28
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Node obj = callTarget.getFirstChild();
                    children: []
                    pos: 37661
                    length: 38
                  - type: expression_statement
                    fields:
                      text: |-
                        maybeResolveTemplatedType(
                                  fnType.getTypeOfThis(),
                                  getJSType(obj),
                                  resolvedTypes,
                                  seenTypes);
                    children: []
                    pos: 37706
                    length: 133
                  pos: 37653
                  length: 192
                pos: 37621
                length: 224
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: call.hasMoreThanOneChild()
                        children: []
                        pos: 37855
                        length: 26
                    children: []
                    pos: 37854
                    length: 28
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        maybeResolveTemplateTypeFromNodes(
                                  fnType.getParameters(),
                                  call.getChildAtIndex(1).siblings(),
                                  resolvedTypes,
                                  seenTypes);
                    children: []
                    pos: 37891
                    length: 161
                  pos: 37883
                  length: 175
                pos: 37851
                length: 207
              - type: return_statement
                fields:
                  text: return resolvedTypes;
                children: []
                pos: 38063
                length: 21
              pos: 37331
              length: 757
          children: []
          pos: 37225
          length: 863
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: maybeResolveTemplatedType
              children: []
              pos: 38105
              length: 25
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType paramType
                children: []
                pos: 38138
                length: 16
              pos: 38092
              length: 3500
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: paramType.isTemplateType()
                        children: []
                        pos: 38258
                        length: 26
                    children: []
                    pos: 38257
                    length: 28
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: |-
                        resolvedTemplateType(
                                  resolvedTypes, paramType.toMaybeTemplateType(), argType);
                    children: []
                    pos: 38314
                    length: 89
                  pos: 38286
                  length: 123
                pos: 38254
                length: 3334
              pos: 38248
              length: 3344
          children: []
          pos: 38092
          length: 3500
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: maybeResolveTemplateTypeFromNodes
              children: []
              pos: 41609
              length: 33
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Iterable<Node> declParams
                children: []
                pos: 41650
                length: 25
              pos: 41596
              length: 309
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: |-
                    maybeResolveTemplateTypeFromNodes(
                            declParams.iterator(), callParams.iterator(), resolvedTypes, seenTypes);
                children: []
                pos: 41786
                length: 115
              pos: 41780
              length: 125
          children: []
          pos: 41596
          length: 309
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: maybeResolveTemplateTypeFromNodes
              children: []
              pos: 41922
              length: 33
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Iterator<Node> declParams
                children: []
                pos: 41963
                length: 25
              pos: 41909
              length: 694
            body:
              type: block
              fields: {}
              children:
              - type: while_statement
                fields:
                  text: |-
                    while (declParams.hasNext() && callParams.hasNext()) {
                          Node declParam = declParams.next();
                          maybeResolveTemplatedType(
                              getJSType(declParam),
                              getJSType(callParams.next()),
                              resolvedTypes, seenTypes);
                          if (declParam.isVarArgs()) {
                            while (callParams.hasNext()) {
                              maybeResolveTemplatedType(
                                  getJSType(declParam),
                                  getJSType(callParams.next()),
                                  resolvedTypes, seenTypes);
                            }
                          }
                        }
                children: []
                pos: 42105
                length: 494
              pos: 42099
              length: 504
          children: []
          pos: 41909
          length: 694
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: resolvedTemplateType
              children: []
              pos: 42627
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Map<TemplateType, JSType> map
                children: []
                pos: 42655
                length: 29
              pos: 42607
              length: 391
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType previous = map.get(template);
                children: []
                pos: 42732
                length: 36
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!resolved.isUnknownType()"
                        children: []
                        pos: 42777
                        length: 25
                    children: []
                    pos: 42776
                    length: 27
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: previous
                                children: []
                                pos: 42816
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 42828
                                length: 4
                            children: []
                            pos: 42816
                            length: 16
                        children: []
                        pos: 42815
                        length: 18
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: map.put(template, resolved);
                        children: []
                        pos: 42844
                        length: 28
                      pos: 42834
                      length: 46
                    pos: 42812
                    length: 176
                  pos: 42804
                  length: 190
                pos: 42773
                length: 221
              pos: 42726
              length: 272
          children: []
          pos: 42607
          length: 391
        - type: class_declaration
          fields:
            name:
              type: identifier
              fields:
                text: TemplateTypeReplacer
              children: []
              pos: 43023
              length: 20
            body:
              type: class_body
              fields: {}
              children:
              - type: field_declaration
                fields:
                  text: private final Map<TemplateType, JSType> replacements;
                children: []
                pos: 43078
                length: 53
              - type: field_declaration
                fields:
                  text: private final JSTypeRegistry registry;
                children: []
                pos: 43136
                length: 38
              - type: field_declaration
                fields:
                  text: boolean madeChanges = false;
                children: []
                pos: 43179
                length: 28
              - type: constructor_declaration
                fields:
                  text: |-
                    TemplateTypeReplacer(
                            JSTypeRegistry registry, Map<TemplateType, JSType> replacements) {
                          super(registry, true);
                          this.registry = registry;
                          this.replacements = replacements;
                        }
                children: []
                pos: 43213
                length: 203
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: caseTemplateType
                    children: []
                    pos: 43450
                    length: 16
                  parameters:
                    type: method_parameters
                    fields: {}
                    children:
                    - type: formal_parameter
                      fields:
                        text: TemplateType type
                      children: []
                      pos: 43467
                      length: 17
                    pos: 43422
                    length: 245
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: expression_statement
                      fields:
                        text: madeChanges = true;
                      children: []
                      pos: 43494
                      length: 19
                    - type: local_variable_declaration
                      fields:
                        text: JSType replacement = replacements.get(type);
                      children: []
                      pos: 43520
                      length: 44
                    - type: return_statement
                      fields:
                        text: |-
                          return replacement != null ?
                                    replacement : registry.getNativeType(UNKNOWN_TYPE);
                      children: []
                      pos: 43571
                      length: 90
                    pos: 43486
                    length: 181
                children: []
                pos: 43422
                length: 245
              pos: 43002
              length: 669
          children: []
          pos: 43002
          length: 669
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: inferTemplatedTypesForCall
              children: []
              pos: 43882
              length: 26
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 43916
                length: 6
              pos: 43866
              length: 1077
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: |-
                    final ImmutableList<TemplateType> keys = fnType.getTemplateTypeMap()
                            .getTemplateKeys();
                children: []
                pos: 43951
                length: 96
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: keys.isEmpty()
                        children: []
                        pos: 44056
                        length: 14
                    children: []
                    pos: 44055
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return false;
                    children: []
                    pos: 44080
                    length: 13
                  pos: 44072
                  length: 27
                pos: 44052
                length: 47
              - type: local_variable_declaration
                fields:
                  text: |-
                    Map<TemplateType, JSType> inferred = Maps.filterKeys(
                            inferTemplateTypesFromParameters(fnType, n),
                            new Predicate<TemplateType>() {

                              @Override
                              public boolean apply(TemplateType key) {
                                return keys.contains(key);
                              }}
                            );
                children: []
                pos: 44144
                length: 281
              - type: local_variable_declaration
                fields:
                  text: |-
                    TemplateTypeReplacer replacer = new TemplateTypeReplacer(
                            registry, inferred);
                children: []
                pos: 44536
                length: 86
              - type: local_variable_declaration
                fields:
                  text: Node callTarget = n.getFirstChild();
                children: []
                pos: 44627
                length: 36
              - type: local_variable_declaration
                fields:
                  text: |-
                    FunctionType replacementFnType = fnType.visit(replacer)
                            .toMaybeFunctionType();
                children: []
                pos: 44669
                length: 87
              - type: expression_statement
                fields:
                  text: Preconditions.checkNotNull(replacementFnType);
                children: []
                pos: 44761
                length: 46
              - type: expression_statement
                fields:
                  text: callTarget.setJSType(replacementFnType);
                children: []
                pos: 44813
                length: 40
              - type: expression_statement
                fields:
                  text: n.setJSType(replacementFnType.getReturnType());
                children: []
                pos: 44858
                length: 47
              - type: return_statement
                fields:
                  text: return replacer.madeChanges;
                children: []
                pos: 44911
                length: 28
              pos: 43945
              length: 998
          children: []
          pos: 43866
          length: 1077
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseNew
              children: []
              pos: 44965
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 44977
                length: 6
              pos: 44947
              length: 1497
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 45008
                length: 35
              - type: local_variable_declaration
                fields:
                  text: Node constructor = n.getFirstChild();
                children: []
                pos: 45049
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType constructorType = constructor.getJSType();
                children: []
                pos: 45091
                length: 49
              - type: local_variable_declaration
                fields:
                  text: JSType type = null;
                children: []
                pos: 45145
                length: 19
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: constructorType
                            children: []
                            pos: 45173
                            length: 15
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 45192
                            length: 4
                        children: []
                        pos: 45173
                        length: 23
                    children: []
                    pos: 45172
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: constructorType = constructorType.restrictByNotNullOrUndefined();
                    children: []
                    pos: 45206
                    length: 65
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: method_invocation
                            fields:
                              text: constructorType.isUnknownType()
                            children: []
                            pos: 45282
                            length: 31
                        children: []
                        pos: 45281
                        length: 33
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: type = unknownType;
                        children: []
                        pos: 45325
                        length: 19
                      pos: 45315
                      length: 37
                    pos: 45278
                    length: 1115
                  pos: 45198
                  length: 1201
                pos: 45169
                length: 1230
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 46404
                length: 18
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 46427
                length: 13
              pos: 45002
              length: 1442
          children: []
          pos: 44947
          length: 1497
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseAnd
              children: []
              pos: 46475
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 46487
                length: 6
              pos: 46448
              length: 126
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return traverseShortCircuitingBinOp(n, scope, true);
                children: []
                pos: 46518
                length: 52
              pos: 46512
              length: 62
          children: []
          pos: 46448
          length: 126
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseChildren
              children: []
              pos: 46596
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 46613
                length: 6
              pos: 46578
              length: 195
            body:
              type: block
              fields: {}
              children:
              - type: for_statement
                fields:
                  text: |-
                    for (Node el = n.getFirstChild(); el != null; el = el.getNext()) {
                          scope = traverse(el, scope);
                        }
                children: []
                pos: 46644
                length: 107
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 46756
                length: 13
              pos: 46638
              length: 135
          children: []
          pos: 46578
          length: 195
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseGetElem
              children: []
              pos: 46795
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 46811
                length: 6
              pos: 46777
              length: 446
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 46842
                length: 35
              - type: local_variable_declaration
                fields:
                  text: JSType type = getJSType(n.getFirstChild()).restrictByNotNullOrUndefined();
                children: []
                pos: 46882
                length: 74
              - type: local_variable_declaration
                fields:
                  text: TemplateTypeMap typeMap = type.getTemplateTypeMap();
                children: []
                pos: 46961
                length: 52
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: typeMap.hasTemplateType(registry.getObjectElementKey())
                        children: []
                        pos: 47022
                        length: 55
                    children: []
                    pos: 47021
                    length: 57
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: n.setJSType(typeMap.getTemplateType(registry.getObjectElementKey()));
                    children: []
                    pos: 47087
                    length: 69
                  pos: 47079
                  length: 83
                pos: 47018
                length: 144
              - type: return_statement
                fields:
                  text: return dereferencePointer(n.getFirstChild(), scope);
                children: []
                pos: 47167
                length: 52
              pos: 46836
              length: 387
          children: []
          pos: 46777
          length: 446
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseGetProp
              children: []
              pos: 47245
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 47261
                length: 6
              pos: 47227
              length: 347
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node objNode = n.getFirstChild();
                children: []
                pos: 47292
                length: 33
              - type: local_variable_declaration
                fields:
                  text: Node property = n.getLastChild();
                children: []
                pos: 47330
                length: 33
              - type: expression_statement
                fields:
                  text: scope = traverseChildren(n, scope);
                children: []
                pos: 47368
                length: 35
              - type: expression_statement
                fields:
                  text: |-
                    n.setJSType(
                            getPropertyType(
                                objNode.getJSType(), property.getString(), n, scope));
                children: []
                pos: 47409
                length: 104
              - type: return_statement
                fields:
                  text: return dereferencePointer(n.getFirstChild(), scope);
                children: []
                pos: 47518
                length: 52
              pos: 47286
              length: 288
          children: []
          pos: 47227
          length: 347
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: inferPropertyTypesToMatchConstraint
              children: []
              pos: 48128
              length: 35
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType type
                children: []
                pos: 48171
                length: 11
              pos: 48108
              length: 205
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 48213
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 48221
                                length: 4
                            children: []
                            pos: 48213
                            length: 12
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: constraint
                                children: []
                                pos: 48229
                                length: 10
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 48243
                                length: 4
                            children: []
                            pos: 48229
                            length: 18
                        children: []
                        pos: 48213
                        length: 34
                    children: []
                    pos: 48212
                    length: 36
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 48257
                    length: 7
                  pos: 48249
                  length: 21
                pos: 48209
                length: 61
              - type: expression_statement
                fields:
                  text: type.matchConstraint(constraint);
                children: []
                pos: 48276
                length: 33
              pos: 48203
              length: 110
          children: []
          pos: 48108
          length: 205
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: dereferencePointer
              children: []
              pos: 48437
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 48456
                length: 6
              pos: 48419
              length: 304
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.isQualifiedName()
                        children: []
                        pos: 48491
                        length: 19
                    children: []
                    pos: 48490
                    length: 21
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType type = getJSType(n);
                    children: []
                    pos: 48520
                    length: 27
                  - type: local_variable_declaration
                    fields:
                      text: JSType narrowed = type.restrictByNotNullOrUndefined();
                    children: []
                    pos: 48554
                    length: 54
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: type
                                children: []
                                pos: 48619
                                length: 4
                              right:
                                type: identifier
                                fields:
                                  text: narrowed
                                children: []
                                pos: 48627
                                length: 8
                            children: []
                            pos: 48619
                            length: 16
                        children: []
                        pos: 48618
                        length: 18
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: scope = narrowScope(scope, n, narrowed);
                        children: []
                        pos: 48647
                        length: 40
                      pos: 48637
                      length: 58
                    pos: 48615
                    length: 80
                  pos: 48512
                  length: 189
                pos: 48487
                length: 214
              - type: return_statement
                fields:
                  text: return scope;
                children: []
                pos: 48706
                length: 13
              pos: 48481
              length: 242
          children: []
          pos: 48419
          length: 304
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getPropertyType
              children: []
              pos: 48742
              length: 15
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType objType
                children: []
                pos: 48758
                length: 14
              pos: 48727
              length: 2428
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType propertyType = null;
                children: []
                pos: 49209
                length: 27
              - type: local_variable_declaration
                fields:
                  text: boolean isLocallyInferred = false;
                children: []
                pos: 49241
                length: 34
              - type: local_variable_declaration
                fields:
                  text: String qualifiedName = n.getQualifiedName();
                children: []
                pos: 49355
                length: 44
              - type: local_variable_declaration
                fields:
                  text: StaticSlot<JSType> var = scope.getSlot(qualifiedName);
                children: []
                pos: 49404
                length: 54
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: var
                            children: []
                            pos: 49467
                            length: 3
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 49474
                            length: 4
                        children: []
                        pos: 49467
                        length: 11
                    children: []
                    pos: 49466
                    length: 13
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType varType = var.getType();
                    children: []
                    pos: 49488
                    length: 31
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: varType
                                children: []
                                pos: 49530
                                length: 7
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 49541
                                length: 4
                            children: []
                            pos: 49530
                            length: 15
                        children: []
                        pos: 49529
                        length: 17
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: boolean isDeclared = !var.isTypeInferred();
                        children: []
                        pos: 49557
                        length: 43
                      - type: expression_statement
                        fields:
                          text: isLocallyInferred = (var != syntacticScope.getSlot(qualifiedName));
                        children: []
                        pos: 49609
                        length: 67
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: or
                                fields:
                                  left:
                                    type: identifier
                                    fields:
                                      text: isDeclared
                                    children: []
                                    pos: 49689
                                    length: 10
                                  right:
                                    type: identifier
                                    fields:
                                      text: isLocallyInferred
                                    children: []
                                    pos: 49703
                                    length: 17
                                children: []
                                pos: 49689
                                length: 31
                            children: []
                            pos: 49688
                            length: 33
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: propertyType = varType;
                            children: []
                            pos: 49734
                            length: 23
                          pos: 49722
                          length: 45
                        pos: 49685
                        length: 82
                      pos: 49547
                      length: 228
                    pos: 49526
                    length: 249
                  pos: 49480
                  length: 301
                pos: 49463
                length: 318
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: propertyType
                                children: []
                                pos: 49791
                                length: 12
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 49807
                                length: 4
                            children: []
                            pos: 49791
                            length: 20
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: objType
                                children: []
                                pos: 49815
                                length: 7
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 49826
                                length: 4
                            children: []
                            pos: 49815
                            length: 15
                        children: []
                        pos: 49791
                        length: 39
                    children: []
                    pos: 49790
                    length: 41
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType foundType = objType.findPropertyType(propName);
                    children: []
                    pos: 49840
                    length: 54
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: foundType
                                children: []
                                pos: 49905
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 49918
                                length: 4
                            children: []
                            pos: 49905
                            length: 17
                        children: []
                        pos: 49904
                        length: 19
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: propertyType = foundType;
                        children: []
                        pos: 49934
                        length: 25
                      pos: 49924
                      length: 43
                    pos: 49901
                    length: 66
                  pos: 49832
                  length: 141
                pos: 49787
                length: 186
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: propertyType
                                children: []
                                pos: 49983
                                length: 12
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 49999
                                length: 4
                            children: []
                            pos: 49983
                            length: 20
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: objType
                                children: []
                                pos: 50007
                                length: 7
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 50018
                                length: 4
                            children: []
                            pos: 50007
                            length: 15
                        children: []
                        pos: 49983
                        length: 39
                    children: []
                    pos: 49982
                    length: 41
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: JSType restrictedObjType = objType.restrictByNotNullOrUndefined();
                    children: []
                    pos: 50032
                    length: 66
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: unary_expression
                                fields:
                                  text: "!restrictedObjType.getTemplateTypeMap().isEmpty()"
                                children: []
                                pos: 50109
                                length: 49
                              right:
                                type: method_invocation
                                fields:
                                  text: propertyType.hasAnyTemplateTypes()
                                children: []
                                pos: 50172
                                length: 34
                            children: []
                            pos: 50109
                            length: 97
                        children: []
                        pos: 50108
                        length: 99
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: TemplateTypeMap typeMap = restrictedObjType.getTemplateTypeMap();
                        children: []
                        pos: 50218
                        length: 65
                      - type: local_variable_declaration
                        fields:
                          text: |-
                            TemplateTypeMapReplacer replacer = new TemplateTypeMapReplacer(
                                        registry, typeMap);
                        children: []
                        pos: 50292
                        length: 95
                      - type: expression_statement
                        fields:
                          text: propertyType = propertyType.visit(replacer);
                        children: []
                        pos: 50396
                        length: 44
                      pos: 50208
                      length: 240
                    pos: 50105
                    length: 343
                  pos: 50024
                  length: 430
                pos: 49979
                length: 475
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: or
                                fields:
                                  left:
                                    type: equals
                                    fields:
                                      left:
                                        type: identifier
                                        fields:
                                          text: propertyType
                                        children: []
                                        pos: 50465
                                        length: 12
                                      right:
                                        type: null_literal
                                        fields: {}
                                        children: []
                                        pos: 50481
                                        length: 4
                                    children: []
                                    pos: 50465
                                    length: 20
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: propertyType.isUnknownType()
                                    children: []
                                    pos: 50489
                                    length: 28
                                children: []
                                pos: 50465
                                length: 52
                            children: []
                            pos: 50464
                            length: 54
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: qualifiedName
                                children: []
                                pos: 50530
                                length: 13
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 50547
                                length: 4
                            children: []
                            pos: 50530
                            length: 21
                        children: []
                        pos: 50464
                        length: 87
                    children: []
                    pos: 50463
                    length: 89
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: ObjectType regType = ObjectType.cast(registry.getType(qualifiedName));
                    children: []
                    pos: 50636
                    length: 70
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: regType
                                children: []
                                pos: 50717
                                length: 7
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 50728
                                length: 4
                            children: []
                            pos: 50717
                            length: 15
                        children: []
                        pos: 50716
                        length: 17
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: propertyType = regType.getConstructor();
                        children: []
                        pos: 50744
                        length: 40
                      pos: 50734
                      length: 58
                    pos: 50713
                    length: 79
                  pos: 50553
                  length: 245
                pos: 50460
                length: 338
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: propertyType
                            children: []
                            pos: 50808
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 50824
                            length: 4
                        children: []
                        pos: 50808
                        length: 20
                    children: []
                    pos: 50807
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return unknownType;
                    children: []
                    pos: 50838
                    length: 19
                  pos: 50830
                  length: 33
                pos: 50804
                length: 347
              pos: 48822
              length: 2333
          children: []
          pos: 48727
          length: 2428
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseOr
              children: []
              pos: 51186
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 51197
                length: 6
              pos: 51159
              length: 126
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return traverseShortCircuitingBinOp(n, scope, false);
                children: []
                pos: 51228
                length: 53
              pos: 51222
              length: 63
          children: []
          pos: 51159
          length: 126
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseShortCircuitingBinOp
              children: []
              pos: 51316
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 51352
                length: 6
              pos: 51289
              length: 2359
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Node left = n.getFirstChild();
                children: []
                pos: 51402
                length: 30
              - type: local_variable_declaration
                fields:
                  text: Node right = n.getLastChild();
                children: []
                pos: 51437
                length: 30
              - type: local_variable_declaration
                fields:
                  text: |-
                    BooleanOutcomePair leftLiterals =
                            traverseWithinShortCircuitingBinOp(left,
                                scope.createChildFlowScope());
                children: []
                pos: 51499
                length: 125
              - type: local_variable_declaration
                fields:
                  text: JSType leftType = left.getJSType();
                children: []
                pos: 51629
                length: 35
              - type: local_variable_declaration
                fields:
                  text: |-
                    FlowScope rightScope = reverseInterpreter.
                            getPreciserScopeKnowingConditionOutcome(
                                left, leftLiterals.getOutcomeFlowScope(left.getType(), condition),
                                condition);
                children: []
                pos: 51788
                length: 194
              - type: local_variable_declaration
                fields:
                  text: |-
                    BooleanOutcomePair rightLiterals =
                            traverseWithinShortCircuitingBinOp(
                                right, rightScope.createChildFlowScope());
                children: []
                pos: 52015
                length: 133
              - type: local_variable_declaration
                fields:
                  text: JSType rightType = right.getJSType();
                children: []
                pos: 52153
                length: 37
              - type: local_variable_declaration
                fields:
                  text: JSType type;
                children: []
                pos: 52196
                length: 12
              - type: local_variable_declaration
                fields:
                  text: BooleanOutcomePair literals;
                children: []
                pos: 52213
                length: 28
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: leftType
                                children: []
                                pos: 52250
                                length: 8
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 52262
                                length: 4
                            children: []
                            pos: 52250
                            length: 16
                          right:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: rightType
                                children: []
                                pos: 52270
                                length: 9
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 52283
                                length: 4
                            children: []
                            pos: 52270
                            length: 17
                        children: []
                        pos: 52250
                        length: 37
                    children: []
                    pos: 52249
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: leftType = leftType.getRestrictedTypeGivenToBooleanOutcome(!condition);
                    children: []
                    pos: 52297
                    length: 71
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: field_access
                                fields:
                                  text: leftLiterals.toBooleanOutcomes
                                children: []
                                pos: 52379
                                length: 30
                              right:
                                type: method_invocation
                                fields:
                                  text: BooleanLiteralSet.get(!condition)
                                children: []
                                pos: 52423
                                length: 33
                            children: []
                            pos: 52379
                            length: 77
                        children: []
                        pos: 52378
                        length: 79
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: expression_statement
                        fields:
                          text: type = leftType;
                        children: []
                        pos: 52563
                        length: 16
                      - type: expression_statement
                        fields:
                          text: literals = leftLiterals;
                        children: []
                        pos: 52588
                        length: 24
                      pos: 52458
                      length: 162
                    pos: 52375
                    length: 541
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: equals
                                fields:
                                  left:
                                    type: field_access
                                    fields:
                                      text: literals.booleanValues
                                    children: []
                                    pos: 53049
                                    length: 22
                                  right:
                                    type: field_access
                                    fields:
                                      text: BooleanLiteralSet.EMPTY
                                    children: []
                                    pos: 53075
                                    length: 23
                                children: []
                                pos: 53049
                                length: 49
                              right:
                                type: method_invocation
                                fields:
                                  text: getNativeType(BOOLEAN_TYPE).isSubtype(type)
                                children: []
                                pos: 53112
                                length: 43
                            children: []
                            pos: 53049
                            length: 106
                        children: []
                        pos: 53048
                        length: 108
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: method_invocation
                                fields:
                                  text: type.isUnionType()
                                children: []
                                pos: 53226
                                length: 18
                            children: []
                            pos: 53225
                            length: 20
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: expression_statement
                            fields:
                              text: |-
                                type = type.toMaybeUnionType().getRestrictedUnion(
                                              getNativeType(BOOLEAN_TYPE));
                            children: []
                            pos: 53258
                            length: 94
                          pos: 53246
                          length: 116
                        pos: 53222
                        length: 140
                      pos: 53157
                      length: 213
                    pos: 53045
                    length: 325
                  pos: 52289
                  length: 1087
                pos: 52246
                length: 1353
              - type: expression_statement
                fields:
                  text: n.setJSType(type);
                children: []
                pos: 53604
                length: 18
              - type: return_statement
                fields:
                  text: return literals;
                children: []
                pos: 53628
                length: 16
              pos: 51396
              length: 2252
          children: []
          pos: 51289
          length: 2359
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: traverseWithinShortCircuitingBinOp
              children: []
              pos: 53679
              length: 34
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 53714
                length: 6
              pos: 53652
              length: 362
            body:
              type: block
              fields: {}
              children:
              - type: switch_expression
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: n.getType()
                        children: []
                        pos: 53759
                        length: 11
                    children: []
                    pos: 53758
                    length: 13
                  body:
                    type: switch_block
                    fields:
                      text: |-
                        {
                              case Token.AND:
                                return traverseAnd(n, scope);

                              case Token.OR:
                                return traverseOr(n, scope);

                              default:
                                scope = traverse(n, scope);
                                return newBooleanOutcomePair(n.getJSType(), scope);
                            }
                    children: []
                    pos: 53772
                    length: 238
                children: []
                pos: 53751
                length: 259
              pos: 53745
              length: 269
          children: []
          pos: 53652
          length: 362
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getBooleanOutcomePair
              children: []
              pos: 54253
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: BooleanOutcomePair left
                children: []
                pos: 54275
                length: 23
              pos: 54234
              length: 416
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return new BooleanOutcomePair(
                            getBooleanOutcomes(left.toBooleanOutcomes, right.toBooleanOutcomes,
                                               condition),
                            getBooleanOutcomes(left.booleanValues, right.booleanValues, condition),
                            left.getJoinedFlowScope(), right.getJoinedFlowScope());
                children: []
                pos: 54357
                length: 289
              pos: 54351
              length: 299
          children: []
          pos: 54234
          length: 416
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getBooleanOutcomes
              children: []
              pos: 55336
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: BooleanLiteralSet left
                children: []
                pos: 55355
                length: 22
              pos: 55311
              length: 201
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return right.union(left.intersection(BooleanLiteralSet.get(!condition)));
                children: []
                pos: 55435
                length: 73
              pos: 55429
              length: 83
          children: []
          pos: 55311
          length: 201
        - type: class_declaration
          fields:
            name:
              type: identifier
              fields:
                text: BooleanOutcomePair
              children: []
              pos: 55819
              length: 18
            body:
              type: class_body
              fields: {}
              children:
              - type: field_declaration
                fields:
                  text: final BooleanLiteralSet toBooleanOutcomes;
                children: []
                pos: 55844
                length: 42
              - type: field_declaration
                fields:
                  text: final BooleanLiteralSet booleanValues;
                children: []
                pos: 55891
                length: 38
              - type: field_declaration
                fields:
                  text: final FlowScope leftScope;
                children: []
                pos: 56010
                length: 26
              - type: field_declaration
                fields:
                  text: final FlowScope rightScope;
                children: []
                pos: 56095
                length: 27
              - type: field_declaration
                fields:
                  text: FlowScope joinedScope = null;
                children: []
                pos: 56204
                length: 29
              - type: constructor_declaration
                fields:
                  text: |-
                    BooleanOutcomePair(
                            BooleanLiteralSet toBooleanOutcomes, BooleanLiteralSet booleanValues,
                            FlowScope leftScope, FlowScope rightScope) {
                          this.toBooleanOutcomes = toBooleanOutcomes;
                          this.booleanValues = booleanValues;
                          this.leftScope = leftScope;
                          this.rightScope = rightScope;
                        }
                children: []
                pos: 56239
                length: 318
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: getJoinedFlowScope
                    children: []
                    pos: 56697
                    length: 18
                  parameters:
                    type: method_parameters
                    fields: {}
                    children: []
                    pos: 56687
                    length: 260
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: equals
                              fields:
                                left:
                                  type: identifier
                                  fields:
                                    text: joinedScope
                                  children: []
                                  pos: 56730
                                  length: 11
                                right:
                                  type: null_literal
                                  fields: {}
                                  children: []
                                  pos: 56745
                                  length: 4
                              children: []
                              pos: 56730
                              length: 19
                          children: []
                          pos: 56729
                          length: 21
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: if_statement
                          fields:
                            condition:
                              type: parenthesized_expression
                              fields:
                                expression:
                                  type: equals
                                  fields:
                                    left:
                                      type: identifier
                                      fields:
                                        text: leftScope
                                      children: []
                                      pos: 56765
                                      length: 9
                                    right:
                                      type: identifier
                                      fields:
                                        text: rightScope
                                      children: []
                                      pos: 56778
                                      length: 10
                                  children: []
                                  pos: 56765
                                  length: 23
                              children: []
                              pos: 56764
                              length: 25
                          children:
                          - type: block
                            fields: {}
                            children:
                            - type: expression_statement
                              fields:
                                text: joinedScope = rightScope;
                              children: []
                              pos: 56802
                              length: 25
                            pos: 56790
                            length: 47
                          pos: 56761
                          length: 146
                        pos: 56751
                        length: 164
                      pos: 56726
                      length: 189
                    - type: return_statement
                      fields:
                        text: return joinedScope;
                      children: []
                      pos: 56922
                      length: 19
                    pos: 56718
                    length: 229
                children: []
                pos: 56687
                length: 260
              - type: method_declaration
                fields:
                  name:
                    type: identifier
                    fields:
                      text: getOutcomeFlowScope
                    children: []
                    pos: 57068
                    length: 19
                  parameters:
                    type: method_parameters
                    fields: {}
                    children:
                    - type: formal_parameter
                      fields:
                        text: int nodeType
                      children: []
                      pos: 57088
                      length: 12
                    pos: 57058
                    length: 312
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: if_statement
                      fields:
                        condition:
                          type: parenthesized_expression
                          fields:
                            expression:
                              type: or
                              fields:
                                left:
                                  type: and
                                  fields:
                                    left:
                                      type: equals
                                      fields:
                                        left:
                                          type: identifier
                                          fields:
                                            text: nodeType
                                          children: []
                                          pos: 57131
                                          length: 8
                                        right:
                                          type: field_access
                                          fields:
                                            text: Token.AND
                                          children: []
                                          pos: 57143
                                          length: 9
                                      children: []
                                      pos: 57131
                                      length: 21
                                    right:
                                      type: identifier
                                      fields:
                                        text: outcome
                                      children: []
                                      pos: 57156
                                      length: 7
                                  children: []
                                  pos: 57131
                                  length: 32
                                right:
                                  type: and
                                  fields:
                                    left:
                                      type: equals
                                      fields:
                                        left:
                                          type: identifier
                                          fields:
                                            text: nodeType
                                          children: []
                                          pos: 57177
                                          length: 8
                                        right:
                                          type: field_access
                                          fields:
                                            text: Token.OR
                                          children: []
                                          pos: 57189
                                          length: 8
                                      children: []
                                      pos: 57177
                                      length: 20
                                    right:
                                      type: unary_expression
                                      fields:
                                        text: "!outcome"
                                      children: []
                                      pos: 57201
                                      length: 8
                                  children: []
                                  pos: 57177
                                  length: 32
                              children: []
                              pos: 57131
                              length: 78
                          children: []
                          pos: 57130
                          length: 80
                      children:
                      - type: block
                        fields: {}
                        children:
                        - type: return_statement
                          fields:
                            text: return rightScope;
                          children: []
                          pos: 57286
                          length: 18
                        pos: 57211
                        length: 101
                      pos: 57127
                      length: 237
                    pos: 57119
                    length: 251
                children: []
                pos: 57058
                length: 312
              pos: 55799
              length: 1575
          children: []
          pos: 55799
          length: 1575
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: newBooleanOutcomePair
              children: []
              pos: 57405
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSType jsType
                children: []
                pos: 57434
                length: 13
              pos: 57378
              length: 478
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: jsType
                            children: []
                            pos: 57480
                            length: 6
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 57490
                            length: 4
                        children: []
                        pos: 57480
                        length: 14
                    children: []
                    pos: 57479
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: |-
                        return new BooleanOutcomePair(
                                  BooleanLiteralSet.BOTH, BooleanLiteralSet.BOTH, flowScope, flowScope);
                    children: []
                    pos: 57504
                    length: 111
                  pos: 57496
                  length: 125
                pos: 57476
                length: 145
              - type: return_statement
                fields:
                  text: |-
                    return new BooleanOutcomePair(jsType.getPossibleToBooleanOutcomes(),
                            registry.getNativeType(BOOLEAN_TYPE).isSubtype(jsType) ?
                                BooleanLiteralSet.BOTH : BooleanLiteralSet.EMPTY,
                            flowScope, flowScope);
                children: []
                pos: 57626
                length: 226
              pos: 57470
              length: 386
          children: []
          pos: 57378
          length: 478
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: redeclareSimpleVar
              children: []
              pos: 57873
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: FlowScope scope
                children: []
                pos: 57899
                length: 15
              pos: 57860
              length: 394
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: Preconditions.checkState(nameNode.isName());
                children: []
                pos: 57953
                length: 44
              - type: local_variable_declaration
                fields:
                  text: String varName = nameNode.getString();
                children: []
                pos: 58002
                length: 38
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: varType
                            children: []
                            pos: 58049
                            length: 7
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 58060
                            length: 4
                        children: []
                        pos: 58049
                        length: 15
                    children: []
                    pos: 58048
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: varType = getNativeType(JSTypeNative.UNKNOWN_TYPE);
                    children: []
                    pos: 58074
                    length: 51
                  pos: 58066
                  length: 65
                pos: 58045
                length: 86
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isUnflowable(syntacticScope.getVar(varName))
                        children: []
                        pos: 58140
                        length: 44
                    children: []
                    pos: 58139
                    length: 46
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return;
                    children: []
                    pos: 58194
                    length: 7
                  pos: 58186
                  length: 21
                pos: 58136
                length: 71
              - type: expression_statement
                fields:
                  text: scope.inferSlotType(varName, varType);
                children: []
                pos: 58212
                length: 38
              pos: 57947
              length: 307
          children: []
          pos: 57860
          length: 394
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isUnflowable
              children: []
              pos: 58274
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Var v
                children: []
                pos: 58287
                length: 5
              pos: 58258
              length: 214
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return v != null && v.isLocal() && v.isMarkedEscaped() &&
                            // It's OK to flow a variable in the scope where it's escaped.
                            v.getScope() == syntacticScope;
                children: []
                pos: 58300
                length: 168
              pos: 58294
              length: 178
          children: []
          pos: 58258
          length: 214
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getJSType
              children: []
              pos: 58597
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Node n
                children: []
                pos: 58607
                length: 6
              pos: 58582
              length: 445
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JSType jsType = n.getJSType();
                children: []
                pos: 58621
                length: 30
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: jsType
                            children: []
                            pos: 58660
                            length: 6
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 58670
                            length: 4
                        children: []
                        pos: 58660
                        length: 14
                    children: []
                    pos: 58659
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return unknownType;
                    children: []
                    pos: 58964
                    length: 19
                  pos: 58676
                  length: 313
                pos: 58656
                length: 367
              pos: 58615
              length: 412
          children: []
          pos: 58582
          length: 445
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getNativeType
              children: []
              pos: 59046
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JSTypeNative typeId
                children: []
                pos: 59060
                length: 19
              pos: 59031
              length: 98
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return registry.getNativeType(typeId);
                children: []
                pos: 59087
                length: 38
              pos: 59081
              length: 48
          children: []
          pos: 59031
          length: 98
        pos: 3109
        length: 56022
    children: []
    pos: 3109
    length: 56022
  pos: 0
  length: 59132
text_diff: "--- before\n+++ after\n@@ -527,9 +527,7 @@\n       case Token.NAME:\n
  \        String varName = left.getString();\n         Var var = syntacticScope.getVar(varName);\n-
  \       JSType varType = var == null ? null : var.getType();\n-        boolean isVarDeclaration
  = left.hasChildren()\n-            && varType != null && !var.isTypeInferred();\n+
  \       boolean isVarDeclaration = left.hasChildren();\n \n         // When looking
  at VAR initializers for declared VARs, we tend\n         // to use the declared
  type over the type it's being\n@@ -547,9 +545,8 @@\n         // sure we back-infer
  the <string> element constraint on\n         // the left hand side, so we use the
  left hand side.\n \n-        boolean isVarTypeBetter = isVarDeclaration &&\n+        boolean
  isVarTypeBetter = !isVarDeclaration || var == null || var.isTypeInferred();\n             //
  Makes it easier to check for NPEs.\n-            !resultType.isNullType() && !resultType.isVoidType();\n
  \n         // TODO(nicksantos): This might be a better check once we have\n         //
  back-inference of object/array constraints.  It will probably\n@@ -562,11 +559,10
  @@\n \n \n         if (isVarTypeBetter) {\n-          redeclareSimpleVar(scope,
  left, varType);\n-        } else {\n           redeclareSimpleVar(scope, left, resultType);\n
  \        }\n-        left.setJSType(resultType);\n+        left.setJSType(isVarDeclaration
  || leftType == null ?\n+            resultType : null);\n \n         if (var !=
  null && var.isTypeInferred()) {\n           JSType oldType = var.getType();\n"
tree_diff: |+
  New cluster:
  UPDATE from {
        case Token.NAME:
          String varName = left.getString();
          Var var = syntacticScope.getVar(varName);
          JSType varType = var == null ? null : var.getType();
          boolean isVarDeclaration = left.hasChildren()
              && varType != null && !var.isTypeInferred();

          // When looking at VAR initializers for declared VARs, we tend
          // to use the declared type over the type it's being
          // initialized to in the global scope.
          //
          // For example,
          // /** @param {number} */ var f = goog.abstractMethod;
          // it's obvious that the programmer wants you to use
          // the declared function signature, not the inferred signature.
          //
          // Or,
          // /** @type {Object.<string>} */ var x = {};
          // the one-time anonymous object on the right side
          // is as narrow as it can possibly be, but we need to make
          // sure we back-infer the <string> element constraint on
          // the left hand side, so we use the left hand side.

          boolean isVarTypeBetter = isVarDeclaration &&
              // Makes it easier to check for NPEs.
              !resultType.isNullType() && !resultType.isVoidType();

          // TODO(nicksantos): This might be a better check once we have
          // back-inference of object/array constraints.  It will probably
          // introduce more type warnings.  It uses the result type iff it's
          // strictly narrower than the declared var type.
          //
          //boolean isVarTypeBetter = isVarDeclaration &&
          //    (varType.restrictByNotNullOrUndefined().isSubtype(resultType)
          //     || !resultType.isSubtype(varType));


          if (isVarTypeBetter) {
            redeclareSimpleVar(scope, left, varType);
          } else {
            redeclareSimpleVar(scope, left, resultType);
          }
          left.setJSType(resultType);

          if (var != null && var.isTypeInferred()) {
            JSType oldType = var.getType();
            var.setType(oldType == null ?
                resultType : oldType.getLeastSupertype(resultType));
          }
          break;
        case Token.GETPROP:
          String qualifiedName = left.getQualifiedName();
          if (qualifiedName != null) {
            scope.inferQualifiedSlot(left, qualifiedName,
                leftType == null ? unknownType : leftType,
                resultType);
          }

          left.setJSType(resultType);
          ensurePropertyDefined(left, resultType);
          break;
      } to {
        case Token.NAME:
          String varName = left.getString();
          Var var = syntacticScope.getVar(varName);
          boolean isVarDeclaration = left.hasChildren();

          // When looking at VAR initializers for declared VARs, we tend
          // to use the declared type over the type it's being
          // initialized to in the global scope.
          //
          // For example,
          // /** @param {number} */ var f = goog.abstractMethod;
          // it's obvious that the programmer wants you to use
          // the declared function signature, not the inferred signature.
          //
          // Or,
          // /** @type {Object.<string>} */ var x = {};
          // the one-time anonymous object on the right side
          // is as narrow as it can possibly be, but we need to make
          // sure we back-infer the <string> element constraint on
          // the left hand side, so we use the left hand side.

          boolean isVarTypeBetter = !isVarDeclaration || var == null || var.isTypeInferred();
              // Makes it easier to check for NPEs.

          // TODO(nicksantos): This might be a better check once we have
          // back-inference of object/array constraints.  It will probably
          // introduce more type warnings.  It uses the result type iff it's
          // strictly narrower than the declared var type.
          //
          //boolean isVarTypeBetter = isVarDeclaration &&
          //    (varType.restrictByNotNullOrUndefined().isSubtype(resultType)
          //     || !resultType.isSubtype(varType));


          if (isVarTypeBetter) {
            redeclareSimpleVar(scope, left, resultType);
          }
          left.setJSType(isVarDeclaration || leftType == null ?
              resultType : null);

          if (var != null && var.isTypeInferred()) {
            JSType oldType = var.getType();
            var.setType(oldType == null ?
                resultType : oldType.getLeastSupertype(resultType));
          }
          break;
        case Token.GETPROP:
          String qualifiedName = left.getQualifiedName();
          if (qualifiedName != null) {
            scope.inferQualifiedSlot(left, qualifiedName,
                leftType == null ? unknownType : leftType,
                resultType);
          }

          left.setJSType(resultType);
          ensurePropertyDefined(left, resultType);
          break;
      }
  ------------
  ===
  update-node
  ---
  switch_block: {
        case Token.NAME:
          String varName = left.getString();
          Var var = syntacticScope.getVar(varName);
          JSType varType = var == null ? null : var.getType();
          boolean isVarDeclaration = left.hasChildren()
              && varType != null && !var.isTypeInferred();

          // When looking at VAR initializers for declared VARs, we tend
          // to use the declared type over the type it's being
          // initialized to in the global scope.
          //
          // For example,
          // /** @param {number} */ var f = goog.abstractMethod;
          // it's obvious that the programmer wants you to use
          // the declared function signature, not the inferred signature.
          //
          // Or,
          // /** @type {Object.<string>} */ var x = {};
          // the one-time anonymous object on the right side
          // is as narrow as it can possibly be, but we need to make
          // sure we back-infer the <string> element constraint on
          // the left hand side, so we use the left hand side.

          boolean isVarTypeBetter = isVarDeclaration &&
              // Makes it easier to check for NPEs.
              !resultType.isNullType() && !resultType.isVoidType();

          // TODO(nicksantos): This might be a better check once we have
          // back-inference of object/array constraints.  It will probably
          // introduce more type warnings.  It uses the result type iff it's
          // strictly narrower than the declared var type.
          //
          //boolean isVarTypeBetter = isVarDeclaration &&
          //    (varType.restrictByNotNullOrUndefined().isSubtype(resultType)
          //     || !resultType.isSubtype(varType));


          if (isVarTypeBetter) {
            redeclareSimpleVar(scope, left, varType);
          } else {
            redeclareSimpleVar(scope, left, resultType);
          }
          left.setJSType(resultType);

          if (var != null && var.isTypeInferred()) {
            JSType oldType = var.getType();
            var.setType(oldType == null ?
                resultType : oldType.getLeastSupertype(resultType));
          }
          break;
        case Token.GETPROP:
          String qualifiedName = left.getQualifiedName();
          if (qualifiedName != null) {
            scope.inferQualifiedSlot(left, qualifiedName,
                leftType == null ? unknownType : leftType,
                resultType);
          }

          left.setJSType(resultType);
          ensurePropertyDefined(left, resultType);
          break;
      } [17730,20209]
  replace {
        case Token.NAME:
          String varName = left.getString();
          Var var = syntacticScope.getVar(varName);
          JSType varType = var == null ? null : var.getType();
          boolean isVarDeclaration = left.hasChildren()
              && varType != null && !var.isTypeInferred();

          // When looking at VAR initializers for declared VARs, we tend
          // to use the declared type over the type it's being
          // initialized to in the global scope.
          //
          // For example,
          // /** @param {number} */ var f = goog.abstractMethod;
          // it's obvious that the programmer wants you to use
          // the declared function signature, not the inferred signature.
          //
          // Or,
          // /** @type {Object.<string>} */ var x = {};
          // the one-time anonymous object on the right side
          // is as narrow as it can possibly be, but we need to make
          // sure we back-infer the <string> element constraint on
          // the left hand side, so we use the left hand side.

          boolean isVarTypeBetter = isVarDeclaration &&
              // Makes it easier to check for NPEs.
              !resultType.isNullType() && !resultType.isVoidType();

          // TODO(nicksantos): This might be a better check once we have
          // back-inference of object/array constraints.  It will probably
          // introduce more type warnings.  It uses the result type iff it's
          // strictly narrower than the declared var type.
          //
          //boolean isVarTypeBetter = isVarDeclaration &&
          //    (varType.restrictByNotNullOrUndefined().isSubtype(resultType)
          //     || !resultType.isSubtype(varType));


          if (isVarTypeBetter) {
            redeclareSimpleVar(scope, left, varType);
          } else {
            redeclareSimpleVar(scope, left, resultType);
          }
          left.setJSType(resultType);

          if (var != null && var.isTypeInferred()) {
            JSType oldType = var.getType();
            var.setType(oldType == null ?
                resultType : oldType.getLeastSupertype(resultType));
          }
          break;
        case Token.GETPROP:
          String qualifiedName = left.getQualifiedName();
          if (qualifiedName != null) {
            scope.inferQualifiedSlot(left, qualifiedName,
                leftType == null ? unknownType : leftType,
                resultType);
          }

          left.setJSType(resultType);
          ensurePropertyDefined(left, resultType);
          break;
      } by {
        case Token.NAME:
          String varName = left.getString();
          Var var = syntacticScope.getVar(varName);
          boolean isVarDeclaration = left.hasChildren();

          // When looking at VAR initializers for declared VARs, we tend
          // to use the declared type over the type it's being
          // initialized to in the global scope.
          //
          // For example,
          // /** @param {number} */ var f = goog.abstractMethod;
          // it's obvious that the programmer wants you to use
          // the declared function signature, not the inferred signature.
          //
          // Or,
          // /** @type {Object.<string>} */ var x = {};
          // the one-time anonymous object on the right side
          // is as narrow as it can possibly be, but we need to make
          // sure we back-infer the <string> element constraint on
          // the left hand side, so we use the left hand side.

          boolean isVarTypeBetter = !isVarDeclaration || var == null || var.isTypeInferred();
              // Makes it easier to check for NPEs.

          // TODO(nicksantos): This might be a better check once we have
          // back-inference of object/array constraints.  It will probably
          // introduce more type warnings.  It uses the result type iff it's
          // strictly narrower than the declared var type.
          //
          //boolean isVarTypeBetter = isVarDeclaration &&
          //    (varType.restrictByNotNullOrUndefined().isSubtype(resultType)
          //     || !resultType.isSubtype(varType));


          if (isVarTypeBetter) {
            redeclareSimpleVar(scope, left, resultType);
          }
          left.setJSType(isVarDeclaration || leftType == null ?
              resultType : null);

          if (var != null && var.isTypeInferred()) {
            JSType oldType = var.getType();
            var.setType(oldType == null ?
                resultType : oldType.getLeastSupertype(resultType));
          }
          break;
        case Token.GETPROP:
          String qualifiedName = left.getQualifiedName();
          if (qualifiedName != null) {
            scope.inferQualifiedSlot(left, qualifiedName,
                leftType == null ? unknownType : leftType,
                resultType);
          }

          left.setJSType(resultType);
          ensurePropertyDefined(left, resultType);
          break;
      }

...
