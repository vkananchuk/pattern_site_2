---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: StringArrayDeserializer
        children: []
        pos: 633
        length: 23
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private static final long serialVersionUID = -7589512013334920693L;
          children: []
          pos: 739
          length: 67
        - type: field_declaration
          fields:
            text: public final static StringArrayDeserializer instance = new StringArrayDeserializer();
          children: []
          pos: 812
          length: 85
        - type: field_declaration
          fields:
            text: protected JsonDeserializer<String> _elementDeserializer;
          children: []
          pos: 998
          length: 56
        - type: constructor_declaration
          fields:
            text: |-
              public StringArrayDeserializer() {
                      super(String[].class);
                      _elementDeserializer = null;
                  }
          children: []
          pos: 1060
          length: 108
        - type: constructor_declaration
          fields:
            text: |-
              @SuppressWarnings("unchecked")
                  protected StringArrayDeserializer(JsonDeserializer<?> deser) {
                      super(String[].class);
                      _elementDeserializer = (JsonDeserializer<String>) deser;
                  }
          children: []
          pos: 1174
          length: 199
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: deserialize
              children: []
              pos: 1412
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser jp
                children: []
                pos: 1424
                length: 13
              pos: 1382
              length: 1634
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!jp.isExpectedStartArrayToken()"
                        children: []
                        pos: 1562
                        length: 31
                    children: []
                    pos: 1561
                    length: 33
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return handleNonArray(jp, ctxt);
                    children: []
                    pos: 1609
                    length: 32
                  pos: 1595
                  length: 56
                pos: 1558
                length: 93
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: _elementDeserializer
                            children: []
                            pos: 1664
                            length: 20
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 1688
                            length: 4
                        children: []
                        pos: 1664
                        length: 28
                    children: []
                    pos: 1663
                    length: 30
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return _deserializeCustom(jp, ctxt);
                    children: []
                    pos: 1708
                    length: 36
                  pos: 1694
                  length: 60
                pos: 1660
                length: 94
              - type: local_variable_declaration
                fields:
                  text: final ObjectBuffer buffer = ctxt.leaseObjectBuffer();
                children: []
                pos: 1764
                length: 53
              - type: local_variable_declaration
                fields:
                  text: Object[] chunk = buffer.resetAndStart();
                children: []
                pos: 1826
                length: 40
              - type: local_variable_declaration
                fields:
                  text: int ix = 0;
                children: []
                pos: 1876
                length: 11
              - type: local_variable_declaration
                fields:
                  text: JsonToken t;
                children: []
                pos: 1896
                length: 12
              - type: try_statement
                fields:
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: while_statement
                      fields:
                        text: |-
                          while ((t = jp.nextToken()) != JsonToken.END_ARRAY) {
                                          // Ok: no need to convert Strings, but must recognize nulls
                                          String value;
                                          if (t == JsonToken.VALUE_STRING) {
                                              value = jp.getText();
                                          } else if (t == JsonToken.VALUE_NULL) {
                                              value = null; // since we have established that '_elementDeserializer == null' earlier
                                          } else {
                                              value = _parseString(jp, ctxt);
                                          }
                                          if (ix >= chunk.length) {
                                              chunk = buffer.appendCompletedChunk(chunk);
                                              ix = 0;
                                          }
                                          chunk[ix++] = value;
                                      }
                      children: []
                      pos: 1936
                      length: 713
                    pos: 1922
                    length: 737
                  excepts:
                    type: excepts
                    fields: {}
                    children:
                    - type: catch_clause
                      fields:
                        text: |-
                          catch (Exception e) {
                                      // note: pass String.class, not String[].class, as we need element type for error info
                                      throw JsonMappingException.wrapWithPath(e, String.class, ix);
                                  }
                      children: []
                      pos: 2660
                      length: 204
                    pos: 1918
                    length: 946
                children: []
                pos: 1918
                length: 946
              - type: local_variable_declaration
                fields:
                  text: String[] result = buffer.completeAndClearBuffer(chunk, ix,
                    String.class);
                children: []
                pos: 2873
                length: 73
              - type: expression_statement
                fields:
                  text: ctxt.returnObjectBuffer(buffer);
                children: []
                pos: 2955
                length: 32
              - type: return_statement
                fields:
                  text: return result;
                children: []
                pos: 2996
                length: 14
              pos: 1491
              length: 1525
          children: []
          pos: 1382
          length: 1634
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: _deserializeCustom
              children: []
              pos: 3147
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser jp
                children: []
                pos: 3166
                length: 13
              pos: 3122
              length: 1182
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final ObjectBuffer buffer = ctxt.leaseObjectBuffer();
                children: []
                pos: 3243
                length: 53
              - type: local_variable_declaration
                fields:
                  text: Object[] chunk = buffer.resetAndStart();
                children: []
                pos: 3305
                length: 40
              - type: local_variable_declaration
                fields:
                  text: final JsonDeserializer<String> deser = _elementDeserializer;
                children: []
                pos: 3354
                length: 60
              - type: local_variable_declaration
                fields:
                  text: int ix = 0;
                children: []
                pos: 3432
                length: 11
              - type: local_variable_declaration
                fields:
                  text: JsonToken t;
                children: []
                pos: 3452
                length: 12
              - type: try_statement
                fields:
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: while_statement
                      fields:
                        text: |-
                          while ((t = jp.nextToken()) != JsonToken.END_ARRAY) {
                                          // Ok: no need to convert Strings, but must recognize nulls
                                          String value = (t == JsonToken.VALUE_NULL) ? deser.getNullValue() : deser.deserialize(jp, ctxt);
                                          if (ix >= chunk.length) {
                                              chunk = buffer.appendCompletedChunk(chunk);
                                              ix = 0;
                                          }
                                          chunk[ix++] = value;
                                      }
                      children: []
                      pos: 3492
                      length: 445
                    pos: 3478
                    length: 469
                  excepts:
                    type: excepts
                    fields: {}
                    children:
                    - type: catch_clause
                      fields:
                        text: |-
                          catch (Exception e) {
                                      // note: pass String.class, not String[].class, as we need element type for error info
                                      throw JsonMappingException.wrapWithPath(e, String.class, ix);
                                  }
                      children: []
                      pos: 3948
                      length: 204
                    pos: 3474
                    length: 678
                children: []
                pos: 3474
                length: 678
              - type: local_variable_declaration
                fields:
                  text: String[] result = buffer.completeAndClearBuffer(chunk, ix,
                    String.class);
                children: []
                pos: 4161
                length: 73
              - type: expression_statement
                fields:
                  text: ctxt.returnObjectBuffer(buffer);
                children: []
                pos: 4243
                length: 32
              - type: return_statement
                fields:
                  text: return result;
                children: []
                pos: 4284
                length: 14
              pos: 3233
              length: 1071
          children: []
          pos: 3122
          length: 1182
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: deserializeWithType
              children: []
              pos: 4342
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser jp
                children: []
                pos: 4362
                length: 13
              pos: 4314
              length: 222
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return typeDeserializer.deserializeTypedFromArray(jp, ctxt);
                children: []
                pos: 4470
                length: 60
              pos: 4460
              length: 76
          children: []
          pos: 4314
          length: 222
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: handleNonArray
              children: []
              pos: 4565
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser jp
                children: []
                pos: 4580
                length: 13
              pos: 4542
              length: 809
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!ctxt.isEnabled(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY)"
                        children: []
                        pos: 4723
                        length: 68
                    children: []
                    pos: 4722
                    length: 70
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: equals
                                    fields:
                                      left:
                                        type: method_invocation
                                        fields:
                                          text: jp.getCurrentToken()
                                        children: []
                                        pos: 4873
                                        length: 20
                                      right:
                                        type: field_access
                                        fields:
                                          text: JsonToken.VALUE_STRING
                                        children: []
                                        pos: 4897
                                        length: 22
                                    children: []
                                    pos: 4873
                                    length: 46
                                children: []
                                pos: 4872
                                length: 48
                              right:
                                type: method_invocation
                                fields:
                                  text: ctxt.isEnabled(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT)
                                children: []
                                pos: 4944
                                length: 73
                            children: []
                            pos: 4872
                            length: 145
                        children: []
                        pos: 4871
                        length: 147
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: String str = jp.getText();
                        children: []
                        pos: 5037
                        length: 26
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: equals
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: str.length()
                                    children: []
                                    pos: 5084
                                    length: 12
                                  right:
                                    type: decimal_integer_literal
                                    fields:
                                      text: '0'
                                    children: []
                                    pos: 5100
                                    length: 1
                                children: []
                                pos: 5084
                                length: 17
                            children: []
                            pos: 5083
                            length: 19
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: return_statement
                            fields:
                              text: return null;
                            children: []
                            pos: 5125
                            length: 12
                          pos: 5103
                          length: 52
                        pos: 5080
                        length: 75
                      pos: 5019
                      length: 150
                    pos: 4868
                    length: 301
                  - type: throw_statement
                    fields:
                      text: throw ctxt.mappingException(_valueClass);
                    children: []
                    pos: 5182
                    length: 41
                  pos: 4793
                  length: 440
                pos: 4719
                length: 514
              - type: return_statement
                fields:
                  text: 'return new String[] { (jp.getCurrentToken() == JsonToken.VALUE_NULL)
                    ? null : _parseString(jp, ctxt) };'
                children: []
                pos: 5242
                length: 103
              pos: 4647
              length: 704
          children: []
          pos: 4542
          length: 809
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createContextual
              children: []
              pos: 5571
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: DeserializationContext ctxt
                children: []
                pos: 5588
                length: 27
              pos: 5530
              length: 945
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JsonDeserializer<?> deser = _elementDeserializer;
                children: []
                pos: 5682
                length: 49
              - type: expression_statement
                fields:
                  text: deser = findConvertingContentDeserializer(ctxt, property,
                    deser);
                children: []
                pos: 5786
                length: 65
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: deser
                            children: []
                            pos: 5864
                            length: 5
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 5873
                            length: 4
                        children: []
                        pos: 5864
                        length: 13
                    children: []
                    pos: 5863
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: deser = ctxt.findContextualValueDeserializer(ctxt.constructType(String.class),
                        property);
                    children: []
                    pos: 5893
                    length: 89
                  pos: 5879
                  length: 113
                pos: 5860
                length: 283
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: deser
                                children: []
                                pos: 6249
                                length: 5
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 6258
                                length: 4
                            children: []
                            pos: 6249
                            length: 13
                          right:
                            type: method_invocation
                            fields:
                              text: this.isDefaultDeserializer(deser)
                            children: []
                            pos: 6266
                            length: 33
                        children: []
                        pos: 6249
                        length: 50
                    children: []
                    pos: 6248
                    length: 52
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: deser = null;
                    children: []
                    pos: 6315
                    length: 13
                  pos: 6301
                  length: 37
                pos: 6245
                length: 93
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: _elementDeserializer
                            children: []
                            pos: 6351
                            length: 20
                          right:
                            type: identifier
                            fields:
                              text: deser
                            children: []
                            pos: 6375
                            length: 5
                        children: []
                        pos: 6351
                        length: 29
                    children: []
                    pos: 6350
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return new StringArrayDeserializer(deser);
                    children: []
                    pos: 6396
                    length: 42
                  pos: 6382
                  length: 66
                pos: 6347
                length: 101
              - type: return_statement
                fields:
                  text: return this;
                children: []
                pos: 6457
                length: 12
              pos: 5672
              length: 803
          children: []
          pos: 5530
          length: 945
        pos: 598
        length: 5879
    children: []
    pos: 598
    length: 5879
  pos: 0
  length: 6478
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: StringArrayDeserializer
        children: []
        pos: 633
        length: 23
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private static final long serialVersionUID = -7589512013334920693L;
          children: []
          pos: 739
          length: 67
        - type: field_declaration
          fields:
            text: public final static StringArrayDeserializer instance = new StringArrayDeserializer();
          children: []
          pos: 812
          length: 85
        - type: field_declaration
          fields:
            text: protected JsonDeserializer<String> _elementDeserializer;
          children: []
          pos: 998
          length: 56
        - type: constructor_declaration
          fields:
            text: |-
              public StringArrayDeserializer() {
                      super(String[].class);
                      _elementDeserializer = null;
                  }
          children: []
          pos: 1060
          length: 108
        - type: constructor_declaration
          fields:
            text: |-
              @SuppressWarnings("unchecked")
                  protected StringArrayDeserializer(JsonDeserializer<?> deser) {
                      super(String[].class);
                      _elementDeserializer = (JsonDeserializer<String>) deser;
                  }
          children: []
          pos: 1174
          length: 199
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: deserialize
              children: []
              pos: 1412
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser jp
                children: []
                pos: 1424
                length: 13
              pos: 1382
              length: 1504
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!jp.isExpectedStartArrayToken()"
                        children: []
                        pos: 1562
                        length: 31
                    children: []
                    pos: 1561
                    length: 33
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return handleNonArray(jp, ctxt);
                    children: []
                    pos: 1609
                    length: 32
                  pos: 1595
                  length: 56
                pos: 1558
                length: 93
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: _elementDeserializer
                            children: []
                            pos: 1664
                            length: 20
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 1688
                            length: 4
                        children: []
                        pos: 1664
                        length: 28
                    children: []
                    pos: 1663
                    length: 30
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return _deserializeCustom(jp, ctxt);
                    children: []
                    pos: 1708
                    length: 36
                  pos: 1694
                  length: 60
                pos: 1660
                length: 94
              - type: local_variable_declaration
                fields:
                  text: final ObjectBuffer buffer = ctxt.leaseObjectBuffer();
                children: []
                pos: 1764
                length: 53
              - type: local_variable_declaration
                fields:
                  text: Object[] chunk = buffer.resetAndStart();
                children: []
                pos: 1826
                length: 40
              - type: local_variable_declaration
                fields:
                  text: int ix = 0;
                children: []
                pos: 1876
                length: 11
              - type: local_variable_declaration
                fields:
                  text: JsonToken t;
                children: []
                pos: 1896
                length: 12
              - type: while_statement
                fields:
                  text: |-
                    while ((t = jp.nextToken()) != JsonToken.END_ARRAY) {
                                    // Ok: no need to convert Strings, but must recognize nulls
                                    String value;
                                    if (t == JsonToken.VALUE_STRING) {
                                        value = jp.getText();
                                    } else if (t == JsonToken.VALUE_NULL) {
                                        value = null; // since we have established that '_elementDeserializer == null' earlier
                                    } else {
                                        value = _parseString(jp, ctxt);
                                    }
                                    if (ix >= chunk.length) {
                                        chunk = buffer.appendCompletedChunk(chunk);
                                        ix = 0;
                                    }
                                    chunk[ix++] = value;
                                }
                children: []
                pos: 1922
                length: 713
              - type: local_variable_declaration
                fields:
                  text: String[] result = buffer.completeAndClearBuffer(chunk, ix,
                    String.class);
                children: []
                pos: 2743
                length: 73
              - type: expression_statement
                fields:
                  text: ctxt.returnObjectBuffer(buffer);
                children: []
                pos: 2825
                length: 32
              - type: return_statement
                fields:
                  text: return result;
                children: []
                pos: 2866
                length: 14
              pos: 1491
              length: 1395
          children: []
          pos: 1382
          length: 1504
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: _deserializeCustom
              children: []
              pos: 3017
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser jp
                children: []
                pos: 3036
                length: 13
              pos: 2992
              length: 1052
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final ObjectBuffer buffer = ctxt.leaseObjectBuffer();
                children: []
                pos: 3113
                length: 53
              - type: local_variable_declaration
                fields:
                  text: Object[] chunk = buffer.resetAndStart();
                children: []
                pos: 3175
                length: 40
              - type: local_variable_declaration
                fields:
                  text: final JsonDeserializer<String> deser = _elementDeserializer;
                children: []
                pos: 3224
                length: 60
              - type: local_variable_declaration
                fields:
                  text: int ix = 0;
                children: []
                pos: 3302
                length: 11
              - type: local_variable_declaration
                fields:
                  text: JsonToken t;
                children: []
                pos: 3322
                length: 12
              - type: while_statement
                fields:
                  text: |-
                    while ((t = jp.nextToken()) != JsonToken.END_ARRAY) {
                                    // Ok: no need to convert Strings, but must recognize nulls
                                    String value = (t == JsonToken.VALUE_NULL) ? deser.getNullValue() : deser.deserialize(jp, ctxt);
                                    if (ix >= chunk.length) {
                                        chunk = buffer.appendCompletedChunk(chunk);
                                        ix = 0;
                                    }
                                    chunk[ix++] = value;
                                }
                children: []
                pos: 3348
                length: 445
              - type: local_variable_declaration
                fields:
                  text: String[] result = buffer.completeAndClearBuffer(chunk, ix,
                    String.class);
                children: []
                pos: 3901
                length: 73
              - type: expression_statement
                fields:
                  text: ctxt.returnObjectBuffer(buffer);
                children: []
                pos: 3983
                length: 32
              - type: return_statement
                fields:
                  text: return result;
                children: []
                pos: 4024
                length: 14
              pos: 3103
              length: 941
          children: []
          pos: 2992
          length: 1052
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: deserializeWithType
              children: []
              pos: 4082
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser jp
                children: []
                pos: 4102
                length: 13
              pos: 4054
              length: 222
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return typeDeserializer.deserializeTypedFromArray(jp, ctxt);
                children: []
                pos: 4210
                length: 60
              pos: 4200
              length: 76
          children: []
          pos: 4054
          length: 222
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: handleNonArray
              children: []
              pos: 4305
              length: 14
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser jp
                children: []
                pos: 4320
                length: 13
              pos: 4282
              length: 809
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!ctxt.isEnabled(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY)"
                        children: []
                        pos: 4463
                        length: 68
                    children: []
                    pos: 4462
                    length: 70
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: and
                            fields:
                              left:
                                type: parenthesized_expression
                                fields:
                                  expression:
                                    type: equals
                                    fields:
                                      left:
                                        type: method_invocation
                                        fields:
                                          text: jp.getCurrentToken()
                                        children: []
                                        pos: 4613
                                        length: 20
                                      right:
                                        type: field_access
                                        fields:
                                          text: JsonToken.VALUE_STRING
                                        children: []
                                        pos: 4637
                                        length: 22
                                    children: []
                                    pos: 4613
                                    length: 46
                                children: []
                                pos: 4612
                                length: 48
                              right:
                                type: method_invocation
                                fields:
                                  text: ctxt.isEnabled(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT)
                                children: []
                                pos: 4684
                                length: 73
                            children: []
                            pos: 4612
                            length: 145
                        children: []
                        pos: 4611
                        length: 147
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: local_variable_declaration
                        fields:
                          text: String str = jp.getText();
                        children: []
                        pos: 4777
                        length: 26
                      - type: if_statement
                        fields:
                          condition:
                            type: parenthesized_expression
                            fields:
                              expression:
                                type: equals
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: str.length()
                                    children: []
                                    pos: 4824
                                    length: 12
                                  right:
                                    type: decimal_integer_literal
                                    fields:
                                      text: '0'
                                    children: []
                                    pos: 4840
                                    length: 1
                                children: []
                                pos: 4824
                                length: 17
                            children: []
                            pos: 4823
                            length: 19
                        children:
                        - type: block
                          fields: {}
                          children:
                          - type: return_statement
                            fields:
                              text: return null;
                            children: []
                            pos: 4865
                            length: 12
                          pos: 4843
                          length: 52
                        pos: 4820
                        length: 75
                      pos: 4759
                      length: 150
                    pos: 4608
                    length: 301
                  - type: throw_statement
                    fields:
                      text: throw ctxt.mappingException(_valueClass);
                    children: []
                    pos: 4922
                    length: 41
                  pos: 4533
                  length: 440
                pos: 4459
                length: 514
              - type: return_statement
                fields:
                  text: 'return new String[] { (jp.getCurrentToken() == JsonToken.VALUE_NULL)
                    ? null : _parseString(jp, ctxt) };'
                children: []
                pos: 4982
                length: 103
              pos: 4387
              length: 704
          children: []
          pos: 4282
          length: 809
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createContextual
              children: []
              pos: 5311
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: DeserializationContext ctxt
                children: []
                pos: 5328
                length: 27
              pos: 5270
              length: 945
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JsonDeserializer<?> deser = _elementDeserializer;
                children: []
                pos: 5422
                length: 49
              - type: expression_statement
                fields:
                  text: deser = findConvertingContentDeserializer(ctxt, property,
                    deser);
                children: []
                pos: 5526
                length: 65
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: deser
                            children: []
                            pos: 5604
                            length: 5
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 5613
                            length: 4
                        children: []
                        pos: 5604
                        length: 13
                    children: []
                    pos: 5603
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: deser = ctxt.findContextualValueDeserializer(ctxt.constructType(String.class),
                        property);
                    children: []
                    pos: 5633
                    length: 89
                  pos: 5619
                  length: 113
                pos: 5600
                length: 283
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: deser
                                children: []
                                pos: 5989
                                length: 5
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 5998
                                length: 4
                            children: []
                            pos: 5989
                            length: 13
                          right:
                            type: method_invocation
                            fields:
                              text: this.isDefaultDeserializer(deser)
                            children: []
                            pos: 6006
                            length: 33
                        children: []
                        pos: 5989
                        length: 50
                    children: []
                    pos: 5988
                    length: 52
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: deser = null;
                    children: []
                    pos: 6055
                    length: 13
                  pos: 6041
                  length: 37
                pos: 5985
                length: 93
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: _elementDeserializer
                            children: []
                            pos: 6091
                            length: 20
                          right:
                            type: identifier
                            fields:
                              text: deser
                            children: []
                            pos: 6115
                            length: 5
                        children: []
                        pos: 6091
                        length: 29
                    children: []
                    pos: 6090
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return new StringArrayDeserializer(deser);
                    children: []
                    pos: 6136
                    length: 42
                  pos: 6122
                  length: 66
                pos: 6087
                length: 101
              - type: return_statement
                fields:
                  text: return this;
                children: []
                pos: 6197
                length: 12
              pos: 5412
              length: 803
          children: []
          pos: 5270
          length: 945
        pos: 598
        length: 5619
    children: []
    pos: 598
    length: 5619
  pos: 0
  length: 6218
text_diff: "--- before\n+++ after\n@@ -56,7 +56,6 @@\n         int ix = 0;\n         JsonToken
  t;\n \n-        try {\n             while ((t = jp.nextToken()) != JsonToken.END_ARRAY)
  {\n                 // Ok: no need to convert Strings, but must recognize nulls\n
  \                String value;\n@@ -73,10 +72,7 @@\n                 }\n                 chunk[ix++]
  = value;\n             }\n-        } catch (Exception e) {\n             // note:
  pass String.class, not String[].class, as we need element type for error info\n-
  \           throw JsonMappingException.wrapWithPath(e, String.class, ix);\n-        }\n
  \        String[] result = buffer.completeAndClearBuffer(chunk, ix, String.class);\n
  \        ctxt.returnObjectBuffer(buffer);\n         return result;\n@@ -94,7 +90,6
  @@\n         int ix = 0;\n         JsonToken t;\n \n-        try {\n             while
  ((t = jp.nextToken()) != JsonToken.END_ARRAY) {\n                 // Ok: no need
  to convert Strings, but must recognize nulls\n                 String value = (t
  == JsonToken.VALUE_NULL) ? deser.getNullValue() : deser.deserialize(jp, ctxt);\n@@
  -104,10 +99,7 @@\n                 }\n                 chunk[ix++] = value;\n             }\n-
  \       } catch (Exception e) {\n             // note: pass String.class, not String[].class,
  as we need element type for error info\n-            throw JsonMappingException.wrapWithPath(e,
  String.class, ix);\n-        }\n         String[] result = buffer.completeAndClearBuffer(chunk,
  ix, String.class);\n         ctxt.returnObjectBuffer(buffer);\n         return result;\n"
tree_diff: |+
  New cluster:
  ===
  insert-node
  ---
  while_statement: while ((t = jp.nextToken()) != JsonToken.END_ARRAY) {
                  // Ok: no need to convert Strings, but must recognize nulls
                  String value;
                  if (t == JsonToken.VALUE_STRING) {
                      value = jp.getText();
                  } else if (t == JsonToken.VALUE_NULL) {
                      value = null; // since we have established that '_elementDeserializer == null' earlier
                  } else {
                      value = _parseString(jp, ctxt);
                  }
                  if (ix >= chunk.length) {
                      chunk = buffer.appendCompletedChunk(chunk);
                      ix = 0;
                  }
                  chunk[ix++] = value;
              } [1922,2635]
  to
  block [1491,3016]
  at 6
  ------------
  ===
  insert-node
  ---
  while_statement: while ((t = jp.nextToken()) != JsonToken.END_ARRAY) {
                  // Ok: no need to convert Strings, but must recognize nulls
                  String value;
                  if (t == JsonToken.VALUE_STRING) {
                      value = jp.getText();
                  } else if (t == JsonToken.VALUE_NULL) {
                      value = null; // since we have established that '_elementDeserializer == null' earlier
                  } else {
                      value = _parseString(jp, ctxt);
                  }
                  if (ix >= chunk.length) {
                      chunk = buffer.appendCompletedChunk(chunk);
                      ix = 0;
                  }
                  chunk[ix++] = value;
              } [1922,2635]
  to
  block [1491,3016]
  at 6

  New cluster:
  ===
  insert-node
  ---
  while_statement: while ((t = jp.nextToken()) != JsonToken.END_ARRAY) {
                  // Ok: no need to convert Strings, but must recognize nulls
                  String value = (t == JsonToken.VALUE_NULL) ? deser.getNullValue() : deser.deserialize(jp, ctxt);
                  if (ix >= chunk.length) {
                      chunk = buffer.appendCompletedChunk(chunk);
                      ix = 0;
                  }
                  chunk[ix++] = value;
              } [3348,3793]
  to
  block [3233,4304]
  at 5
  ------------
  ===
  insert-node
  ---
  while_statement: while ((t = jp.nextToken()) != JsonToken.END_ARRAY) {
                  // Ok: no need to convert Strings, but must recognize nulls
                  String value = (t == JsonToken.VALUE_NULL) ? deser.getNullValue() : deser.deserialize(jp, ctxt);
                  if (ix >= chunk.length) {
                      chunk = buffer.appendCompletedChunk(chunk);
                      ix = 0;
                  }
                  chunk[ix++] = value;
              } [3348,3793]
  to
  block [3233,4304]
  at 5

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  try_statement [1918,2864]
      block [1922,2659]
          while_statement: while ((t = jp.nextToken()) != JsonToken.END_ARRAY) {
                  // Ok: no need to convert Strings, but must recognize nulls
                  String value;
                  if (t == JsonToken.VALUE_STRING) {
                      value = jp.getText();
                  } else if (t == JsonToken.VALUE_NULL) {
                      value = null; // since we have established that '_elementDeserializer == null' earlier
                  } else {
                      value = _parseString(jp, ctxt);
                  }
                  if (ix >= chunk.length) {
                      chunk = buffer.appendCompletedChunk(chunk);
                      ix = 0;
                  }
                  chunk[ix++] = value;
              } [1936,2649]
      excepts [1918,2864]
          catch_clause: catch (Exception e) {
              // note: pass String.class, not String[].class, as we need element type for error info
              throw JsonMappingException.wrapWithPath(e, String.class, ix);
          } [2660,2864]

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  try_statement [3474,4152]
      block [3478,3947]
          while_statement: while ((t = jp.nextToken()) != JsonToken.END_ARRAY) {
                  // Ok: no need to convert Strings, but must recognize nulls
                  String value = (t == JsonToken.VALUE_NULL) ? deser.getNullValue() : deser.deserialize(jp, ctxt);
                  if (ix >= chunk.length) {
                      chunk = buffer.appendCompletedChunk(chunk);
                      ix = 0;
                  }
                  chunk[ix++] = value;
              } [3492,3937]
      excepts [3474,4152]
          catch_clause: catch (Exception e) {
              // note: pass String.class, not String[].class, as we need element type for error info
              throw JsonMappingException.wrapWithPath(e, String.class, ix);
          } [3948,4152]

...
