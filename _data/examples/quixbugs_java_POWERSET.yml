---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: POWERSET
        children: []
        pos: 191
        length: 8
      body:
        type: class_body
        fields: {}
        children:
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: powerset
              children: []
              pos: 241
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: ArrayList arr
                children: []
                pos: 250
                length: 13
              pos: 206
              length: 744
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!arr.isEmpty()"
                        children: []
                        pos: 279
                        length: 14
                    children: []
                    pos: 278
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Object first = arr.get(0);
                    children: []
                    pos: 309
                    length: 26
                  - type: expression_statement
                    fields:
                      text: arr.remove(0);
                    children: []
                    pos: 348
                    length: 14
                  - type: local_variable_declaration
                    fields:
                      text: ArrayList rest = arr;
                    children: []
                    pos: 375
                    length: 21
                  - type: local_variable_declaration
                    fields:
                      text: ArrayList<ArrayList> rest_subsets = powerset(rest);
                    children: []
                    pos: 409
                    length: 51
                  - type: local_variable_declaration
                    fields:
                      text: ArrayList<ArrayList> output = new ArrayList<ArrayList>(100);
                    children: []
                    pos: 474
                    length: 60
                  - type: local_variable_declaration
                    fields:
                      text: ArrayList to_add = new ArrayList(100);
                    children: []
                    pos: 547
                    length: 38
                  - type: expression_statement
                    fields:
                      text: to_add.add(first);
                    children: []
                    pos: 598
                    length: 18
                  - type: enhanced_for_statement
                    fields:
                      text: |-
                        for (ArrayList subset : rest_subsets) {
                                        to_add.addAll(subset);
                                    }
                    children: []
                    pos: 629
                    length: 92
                  - type: expression_statement
                    fields:
                      text: output.add(to_add);
                    children: []
                    pos: 734
                    length: 19
                  - type: return_statement
                    fields:
                      text: return output;
                    children: []
                    pos: 767
                    length: 14
                  pos: 295
                  length: 496
                pos: 275
                length: 669
              pos: 265
              length: 685
          children: []
          pos: 206
          length: 744
        pos: 178
        length: 774
    children: []
    pos: 178
    length: 774
  pos: 0
  length: 953
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: POWERSET
        children: []
        pos: 200
        length: 8
      body:
        type: class_body
        fields: {}
        children:
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: powerset
              children: []
              pos: 250
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: ArrayList arr
                children: []
                pos: 259
                length: 13
              pos: 215
              length: 868
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!arr.isEmpty()"
                        children: []
                        pos: 288
                        length: 14
                    children: []
                    pos: 287
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Object first = arr.get(0);
                    children: []
                    pos: 318
                    length: 26
                  - type: expression_statement
                    fields:
                      text: arr.remove(0);
                    children: []
                    pos: 357
                    length: 14
                  - type: local_variable_declaration
                    fields:
                      text: ArrayList rest = arr;
                    children: []
                    pos: 384
                    length: 21
                  - type: local_variable_declaration
                    fields:
                      text: ArrayList<ArrayList> rest_subsets = powerset(rest);
                    children: []
                    pos: 418
                    length: 51
                  - type: local_variable_declaration
                    fields:
                      text: ArrayList<ArrayList> output = new ArrayList<ArrayList>(100);
                    children: []
                    pos: 483
                    length: 60
                  - type: local_variable_declaration
                    fields:
                      text: ArrayList to_add = new ArrayList(100);
                    children: []
                    pos: 556
                    length: 38
                  - type: enhanced_for_statement
                    fields:
                      text: |-
                        for (ArrayList subset : rest_subsets) {
                                        ArrayList r = new ArrayList();
                                        r.add(first);
                                        r.addAll(subset);
                                        to_add.add(r);
                                    }
                    children: []
                    pos: 608
                    length: 195
                  - type: expression_statement
                    fields:
                      text: output.addAll(to_add);
                    children: []
                    pos: 817
                    length: 22
                  - type: expression_statement
                    fields:
                      text: rest_subsets.addAll(output);
                    children: []
                    pos: 852
                    length: 28
                  - type: return_statement
                    fields:
                      text: return rest_subsets;
                    children: []
                    pos: 894
                    length: 20
                  pos: 304
                  length: 620
                pos: 284
                length: 793
              pos: 274
              length: 809
          children: []
          pos: 215
          length: 868
        pos: 187
        length: 898
    children: []
    pos: 187
    length: 898
  pos: 0
  length: 1088
text_diff: "--- before\n+++ after\n@@ -1,4 +1,5 @@\n-package java_programs;\n+package
  correct_java_programs;\n+\n import java.util.*;\n \n /*\n@@ -20,13 +21,18 @@\n \n
  \            ArrayList<ArrayList> output = new ArrayList<ArrayList>(100);\n             ArrayList
  to_add = new ArrayList(100);\n-            to_add.add(first);\n+\n             for
  (ArrayList subset : rest_subsets) {\n-                to_add.addAll(subset);\n+
  \               ArrayList r = new ArrayList();\n+                r.add(first);\n+
  \               r.addAll(subset);\n+                to_add.add(r);\n             }\n-
  \           output.add(to_add);\n \n-            return output;\n+            output.addAll(to_add);\n+
  \           rest_subsets.addAll(output);\n+\n+            return rest_subsets;\n
  \        } else {\n             ArrayList empty_set = new ArrayList<ArrayList>();\n
  \            empty_set.add(new ArrayList());\n@@ -34,3 +40,5 @@\n         }\n     }\n
  }\n+\n+\n"
tree_diff: |+
  New cluster:
  MOVE from block [295,791]
  ------------
  ===
  move-tree
  ---
  expression_statement: to_add.add(first); [598,616]
  to
  block [295,791]
  at 8

  New cluster:
  UPDATE from for (ArrayList subset : rest_subsets) {
                  to_add.addAll(subset);
              } to for (ArrayList subset : rest_subsets) {
                  ArrayList r = new ArrayList();
                  r.add(first);
                  r.addAll(subset);
                  to_add.add(r);
              }
  ------------
  ===
  update-node
  ---
  enhanced_for_statement: for (ArrayList subset : rest_subsets) {
                  to_add.addAll(subset);
              } [629,721]
  replace for (ArrayList subset : rest_subsets) {
                  to_add.addAll(subset);
              } by for (ArrayList subset : rest_subsets) {
                  ArrayList r = new ArrayList();
                  r.add(first);
                  r.addAll(subset);
                  to_add.add(r);
              }

  New cluster:
  UPDATE from output.add(to_add); to output.addAll(to_add);
  ------------
  ===
  update-node
  ---
  expression_statement: output.add(to_add); [734,753]
  replace output.add(to_add); by output.addAll(to_add);

  New cluster:
  UPDATE from to_add.add(first); to rest_subsets.addAll(output);
  ------------
  ===
  update-node
  ---
  expression_statement: to_add.add(first); [598,616]
  replace to_add.add(first); by rest_subsets.addAll(output);

  New cluster:
  UPDATE from return output; to return rest_subsets;
  ------------
  ===
  update-node
  ---
  return_statement: return output; [767,781]
  replace return output; by return rest_subsets;

...
