---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: Complex
        children: []
        pos: 2266
        length: 7
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: public static final Complex I = new Complex(0.0, 1.0);
          children: []
          pos: 2397
          length: 54
        - type: field_declaration
          fields:
            text: public static final Complex NaN = new Complex(Double.NaN, Double.NaN);
          children: []
          pos: 2547
          length: 70
        - type: field_declaration
          fields:
            text: public static final Complex INF = new Complex(Double.POSITIVE_INFINITY,
              Double.POSITIVE_INFINITY);
          children: []
          pos: 2716
          length: 98
        - type: field_declaration
          fields:
            text: public static final Complex ONE = new Complex(1.0, 0.0);
          children: []
          pos: 2873
          length: 56
        - type: field_declaration
          fields:
            text: public static final Complex ZERO = new Complex(0.0, 0.0);
          children: []
          pos: 2988
          length: 57
        - type: field_declaration
          fields:
            text: private static final long serialVersionUID = -6195664516687396620L;
          children: []
          pos: 3094
          length: 67
        - type: field_declaration
          fields:
            text: private final double imaginary;
          children: []
          pos: 3198
          length: 31
        - type: field_declaration
          fields:
            text: private final double real;
          children: []
          pos: 3260
          length: 26
        - type: field_declaration
          fields:
            text: private final transient boolean isNaN;
          children: []
          pos: 3354
          length: 38
        - type: field_declaration
          fields:
            text: private final transient boolean isInfinite;
          children: []
          pos: 3456
          length: 43
        - type: field_declaration
          fields:
            text: private final transient boolean isZero;
          children: []
          pos: 3559
          length: 39
        - type: constructor_declaration
          fields:
            text: |-
              public Complex(double real) {
                      this(real, 0.0);
                  }
          children: []
          pos: 3714
          length: 60
        - type: constructor_declaration
          fields:
            text: |-
              public Complex(double real, double imaginary) {
                      this.real = real;
                      this.imaginary = imaginary;

                      isNaN = Double.isNaN(real) || Double.isNaN(imaginary);
                      isInfinite = !isNaN &&
                          (Double.isInfinite(real) || Double.isInfinite(imaginary));
                      isZero = real == 0 && imaginary == 0;
                  }
          children: []
          pos: 3940
          length: 327
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: abs
              children: []
              pos: 4595
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 4581
              length: 664
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 4615
                        length: 5
                    children: []
                    pos: 4614
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Double.NaN;
                    children: []
                    pos: 4636
                    length: 18
                  pos: 4622
                  length: 42
                pos: 4611
                length: 53
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isInfinite()
                        children: []
                        pos: 4677
                        length: 12
                    children: []
                    pos: 4676
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Double.POSITIVE_INFINITY;
                    children: []
                    pos: 4705
                    length: 32
                  pos: 4691
                  length: 56
                pos: 4673
                length: 74
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(real)
                            children: []
                            pos: 4760
                            length: 18
                          right:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(imaginary)
                            children: []
                            pos: 4781
                            length: 23
                        children: []
                        pos: 4760
                        length: 44
                    children: []
                    pos: 4759
                    length: 46
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: imaginary
                                children: []
                                pos: 4824
                                length: 9
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 4837
                                length: 3
                            children: []
                            pos: 4824
                            length: 16
                        children: []
                        pos: 4823
                        length: 18
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return FastMath.abs(real);
                        children: []
                        pos: 4860
                        length: 26
                      pos: 4842
                      length: 58
                    pos: 4820
                    length: 80
                  - type: local_variable_declaration
                    fields:
                      text: double q = real / imaginary;
                    children: []
                    pos: 4913
                    length: 28
                  - type: return_statement
                    fields:
                      text: return FastMath.abs(imaginary) * FastMath.sqrt(1 + q *
                        q);
                    children: []
                    pos: 4954
                    length: 58
                  pos: 4806
                  length: 216
                pos: 4756
                length: 483
              pos: 4601
              length: 644
          children: []
          pos: 4581
          length: 664
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: add
              children: []
              pos: 5987
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex addend
                children: []
                pos: 5991
                length: 14
              pos: 5972
              length: 302
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(addend);
                children: []
                pos: 6046
                length: 31
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 6090
                            length: 5
                          right:
                            type: field_access
                            fields:
                              text: addend.isNaN
                            children: []
                            pos: 6099
                            length: 12
                        children: []
                        pos: 6090
                        length: 21
                    children: []
                    pos: 6089
                    length: 23
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 6127
                    length: 11
                  pos: 6113
                  length: 35
                pos: 6086
                length: 62
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real + addend.getReal(),
                                                 imaginary + addend.getImaginary());
                children: []
                pos: 6158
                length: 110
              pos: 6036
              length: 238
          children: []
          pos: 5972
          length: 302
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: add
              children: []
              pos: 6576
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double addend
                children: []
                pos: 6580
                length: 13
              pos: 6561
              length: 177
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 6609
                            length: 5
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isNaN(addend)
                            children: []
                            pos: 6618
                            length: 20
                        children: []
                        pos: 6609
                        length: 29
                    children: []
                    pos: 6608
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 6654
                    length: 11
                  pos: 6640
                  length: 35
                pos: 6605
                length: 70
              - type: return_statement
                fields:
                  text: return createComplex(real + addend, imaginary);
                children: []
                pos: 6685
                length: 47
              pos: 6595
              length: 143
          children: []
          pos: 6561
          length: 177
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: conjugate
              children: []
              pos: 7358
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 7343
              length: 138
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 7384
                        length: 5
                    children: []
                    pos: 7383
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 7405
                    length: 11
                  pos: 7391
                  length: 35
                pos: 7380
                length: 46
              - type: return_statement
                fields:
                  text: return createComplex(real, -imaginary);
                children: []
                pos: 7436
                length: 39
              pos: 7370
              length: 111
          children: []
          pos: 7343
          length: 138
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: divide
              children: []
              pos: 9361
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex divisor
                children: []
                pos: 9368
                length: 15
              pos: 9346
              length: 979
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(divisor);
                children: []
                pos: 9432
                length: 32
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 9477
                            length: 5
                          right:
                            type: field_access
                            fields:
                              text: divisor.isNaN
                            children: []
                            pos: 9486
                            length: 13
                        children: []
                        pos: 9477
                        length: 22
                    children: []
                    pos: 9476
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 9515
                    length: 11
                  pos: 9501
                  length: 35
                pos: 9473
                length: 63
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: field_access
                        fields:
                          text: divisor.isZero
                        children: []
                        pos: 9550
                        length: 14
                    children: []
                    pos: 9549
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 9638
                    length: 11
                  pos: 9566
                  length: 93
                pos: 9546
                length: 113
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: divisor.isInfinite()
                            children: []
                            pos: 9673
                            length: 20
                          right:
                            type: unary_expression
                            fields:
                              text: "!isInfinite()"
                            children: []
                            pos: 9697
                            length: 13
                        children: []
                        pos: 9673
                        length: 37
                    children: []
                    pos: 9672
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return ZERO;
                    children: []
                    pos: 9726
                    length: 12
                  pos: 9712
                  length: 36
                pos: 9669
                length: 79
              - type: local_variable_declaration
                fields:
                  text: final double c = divisor.getReal();
                children: []
                pos: 9758
                length: 35
              - type: local_variable_declaration
                fields:
                  text: final double d = divisor.getImaginary();
                children: []
                pos: 9802
                length: 40
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(c)
                            children: []
                            pos: 9856
                            length: 15
                          right:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(d)
                            children: []
                            pos: 9874
                            length: 15
                        children: []
                        pos: 9856
                        length: 33
                    children: []
                    pos: 9855
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: double q = c / d;
                    children: []
                    pos: 9905
                    length: 17
                  - type: local_variable_declaration
                    fields:
                      text: double denominator = c * q + d;
                    children: []
                    pos: 9935
                    length: 31
                  - type: return_statement
                    fields:
                      text: |-
                        return createComplex((real * q + imaginary) / denominator,
                                        (imaginary * q - real) / denominator);
                    children: []
                    pos: 9979
                    length: 113
                  pos: 9891
                  length: 211
                pos: 9852
                length: 467
              pos: 9422
              length: 903
          children: []
          pos: 9346
          length: 979
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: divide
              children: []
              pos: 10646
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double divisor
                children: []
                pos: 10653
                length: 14
              pos: 10631
              length: 442
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 10683
                            length: 5
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isNaN(divisor)
                            children: []
                            pos: 10692
                            length: 21
                        children: []
                        pos: 10683
                        length: 30
                    children: []
                    pos: 10682
                    length: 32
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 10729
                    length: 11
                  pos: 10715
                  length: 35
                pos: 10679
                length: 71
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: divisor
                            children: []
                            pos: 10763
                            length: 7
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: 0d
                            children: []
                            pos: 10774
                            length: 2
                        children: []
                        pos: 10763
                        length: 13
                    children: []
                    pos: 10762
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 10850
                    length: 11
                  pos: 10778
                  length: 93
                pos: 10759
                length: 112
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: Double.isInfinite(divisor)
                        children: []
                        pos: 10884
                        length: 26
                    children: []
                    pos: 10883
                    length: 28
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: 'return !isInfinite() ? ZERO : NaN;'
                    children: []
                    pos: 10926
                    length: 34
                  pos: 10912
                  length: 58
                pos: 10880
                length: 90
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real / divisor,
                                                 imaginary  / divisor);
                children: []
                pos: 10979
                length: 88
              pos: 10669
              length: 404
          children: []
          pos: 10631
          length: 442
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: equals
              children: []
              pos: 11827
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Object other
                children: []
                pos: 11834
                length: 12
              pos: 11798
              length: 395
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: this
                            fields: {}
                            children: []
                            pos: 11862
                            length: 4
                          right:
                            type: identifier
                            fields:
                              text: other
                            children: []
                            pos: 11870
                            length: 5
                        children: []
                        pos: 11862
                        length: 13
                    children: []
                    pos: 11861
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return true;
                    children: []
                    pos: 11891
                    length: 12
                  pos: 11877
                  length: 36
                pos: 11858
                length: 55
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: other instanceof Complex
                        children: []
                        pos: 11926
                        length: 24
                    children: []
                    pos: 11925
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Complex c = (Complex)other;
                    children: []
                    pos: 11965
                    length: 27
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: field_access
                            fields:
                              text: c.isNaN
                            children: []
                            pos: 12009
                            length: 7
                        children: []
                        pos: 12008
                        length: 9
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return isNaN;
                        children: []
                        pos: 12036
                        length: 13
                      pos: 12018
                      length: 45
                    pos: 12005
                    length: 150
                  pos: 11951
                  length: 214
                pos: 11922
                length: 243
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 12174
                length: 13
              pos: 11848
              length: 345
          children: []
          pos: 11798
          length: 395
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: hashCode
              children: []
              pos: 12451
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 12426
              length: 185
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 12476
                        length: 5
                    children: []
                    pos: 12475
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return 7;
                    children: []
                    pos: 12497
                    length: 9
                  pos: 12483
                  length: 33
                pos: 12472
                length: 44
              - type: return_statement
                fields:
                  text: |-
                    return 37 * (17 * MathUtils.hash(imaginary) +
                                MathUtils.hash(real));
                children: []
                pos: 12525
                length: 80
              pos: 12462
              length: 149
          children: []
          pos: 12426
          length: 185
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getImaginary
              children: []
              pos: 12723
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 12709
              length: 62
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return imaginary;
                children: []
                pos: 12748
                length: 17
              pos: 12738
              length: 33
          children: []
          pos: 12709
          length: 62
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getReal
              children: []
              pos: 12873
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 12859
              length: 52
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return real;
                children: []
                pos: 12893
                length: 12
              pos: 12883
              length: 28
          children: []
          pos: 12859
          length: 52
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isNaN
              children: []
              pos: 13151
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 13136
              length: 52
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return isNaN;
                children: []
                pos: 13169
                length: 13
              pos: 13159
              length: 29
          children: []
          pos: 13136
          length: 52
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isInfinite
              children: []
              pos: 13584
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 13569
              length: 62
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return isInfinite;
                children: []
                pos: 13607
                length: 18
              pos: 13597
              length: 34
          children: []
          pos: 13569
          length: 62
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: multiply
              children: []
              pos: 14670
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex factor
                children: []
                pos: 14679
                length: 14
              pos: 14655
              length: 642
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(factor);
                children: []
                pos: 14742
                length: 31
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 14786
                            length: 5
                          right:
                            type: field_access
                            fields:
                              text: factor.isNaN
                            children: []
                            pos: 14795
                            length: 12
                        children: []
                        pos: 14786
                        length: 21
                    children: []
                    pos: 14785
                    length: 23
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 14823
                    length: 11
                  pos: 14809
                  length: 35
                pos: 14782
                length: 62
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: or
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: Double.isInfinite(real)
                                    children: []
                                    pos: 14857
                                    length: 23
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: Double.isInfinite(imaginary)
                                    children: []
                                    pos: 14896
                                    length: 28
                                children: []
                                pos: 14857
                                length: 67
                              right:
                                type: method_invocation
                                fields:
                                  text: Double.isInfinite(factor.real)
                                children: []
                                pos: 14940
                                length: 30
                            children: []
                            pos: 14857
                            length: 113
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isInfinite(factor.imaginary)
                            children: []
                            pos: 14986
                            length: 35
                        children: []
                        pos: 14857
                        length: 164
                    children: []
                    pos: 14856
                    length: 166
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return INF;
                    children: []
                    pos: 15109
                    length: 11
                  pos: 15023
                  length: 107
                pos: 14853
                length: 277
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real * factor.real - imaginary * factor.imaginary,
                                                 real * factor.imaginary + imaginary * factor.real);
                children: []
                pos: 15139
                length: 152
              pos: 14732
              length: 565
          children: []
          pos: 14655
          length: 642
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: multiply
              children: []
              pos: 15608
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double factor
                children: []
                pos: 15617
                length: 13
              pos: 15593
              length: 420
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 15646
                            length: 5
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isNaN(factor)
                            children: []
                            pos: 15655
                            length: 20
                        children: []
                        pos: 15646
                        length: 29
                    children: []
                    pos: 15645
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 15691
                    length: 11
                  pos: 15677
                  length: 35
                pos: 15642
                length: 70
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: Double.isInfinite(real)
                                children: []
                                pos: 15725
                                length: 23
                              right:
                                type: method_invocation
                                fields:
                                  text: Double.isInfinite(imaginary)
                                children: []
                                pos: 15764
                                length: 28
                            children: []
                            pos: 15725
                            length: 67
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isInfinite(factor)
                            children: []
                            pos: 15808
                            length: 25
                        children: []
                        pos: 15725
                        length: 108
                    children: []
                    pos: 15724
                    length: 110
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return INF;
                    children: []
                    pos: 15921
                    length: 11
                  pos: 15835
                  length: 107
                pos: 15721
                length: 221
              - type: return_statement
                fields:
                  text: return createComplex(real * factor, imaginary * factor);
                children: []
                pos: 15951
                length: 56
              pos: 15632
              length: 381
          children: []
          pos: 15593
          length: 420
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: negate
              children: []
              pos: 16269
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 16254
              length: 136
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 16292
                        length: 5
                    children: []
                    pos: 16291
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 16313
                    length: 11
                  pos: 16299
                  length: 35
                pos: 16288
                length: 46
              - type: return_statement
                fields:
                  text: return createComplex(-real, -imaginary);
                children: []
                pos: 16344
                length: 40
              pos: 16278
              length: 112
          children: []
          pos: 16254
          length: 136
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: subtract
              children: []
              pos: 17139
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex subtrahend
                children: []
                pos: 17148
                length: 18
              pos: 17124
              length: 335
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(subtrahend);
                children: []
                pos: 17215
                length: 35
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 17263
                            length: 5
                          right:
                            type: field_access
                            fields:
                              text: subtrahend.isNaN
                            children: []
                            pos: 17272
                            length: 16
                        children: []
                        pos: 17263
                        length: 25
                    children: []
                    pos: 17262
                    length: 27
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 17304
                    length: 11
                  pos: 17290
                  length: 35
                pos: 17259
                length: 66
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real - subtrahend.getReal(),
                                                 imaginary - subtrahend.getImaginary());
                children: []
                pos: 17335
                length: 118
              pos: 17205
              length: 254
          children: []
          pos: 17124
          length: 335
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: subtract
              children: []
              pos: 17736
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double subtrahend
                children: []
                pos: 17745
                length: 17
              pos: 17721
              length: 193
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 17778
                            length: 5
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isNaN(subtrahend)
                            children: []
                            pos: 17787
                            length: 24
                        children: []
                        pos: 17778
                        length: 33
                    children: []
                    pos: 17777
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 17827
                    length: 11
                  pos: 17813
                  length: 35
                pos: 17774
                length: 74
              - type: return_statement
                fields:
                  text: return createComplex(real - subtrahend, imaginary);
                children: []
                pos: 17857
                length: 51
              pos: 17764
              length: 150
          children: []
          pos: 17721
          length: 193
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: acos
              children: []
              pos: 18458
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 18443
              length: 177
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 18479
                        length: 5
                    children: []
                    pos: 18478
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 18500
                    length: 11
                  pos: 18486
                  length: 35
                pos: 18475
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return this.add(this.sqrt1z().multiply(I)).log()
                                .multiply(I.negate());
                children: []
                pos: 18531
                length: 83
              pos: 18465
              length: 155
          children: []
          pos: 18443
          length: 177
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: asin
              children: []
              pos: 19155
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 19140
              length: 172
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 19176
                        length: 5
                    children: []
                    pos: 19175
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 19197
                    length: 11
                  pos: 19183
                  length: 35
                pos: 19172
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return sqrt1z().add(this.multiply(I)).log()
                                .multiply(I.negate());
                children: []
                pos: 19228
                length: 78
              pos: 19162
              length: 150
          children: []
          pos: 19140
          length: 172
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: atan
              children: []
              pos: 19843
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 19828
              length: 201
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 19864
                        length: 5
                    children: []
                    pos: 19863
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 19885
                    length: 11
                  pos: 19871
                  length: 35
                pos: 19860
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return this.add(I).divide(I.subtract(this)).log()
                                .multiply(I.divide(createComplex(2.0, 0.0)));
                children: []
                pos: 19916
                length: 107
              pos: 19850
              length: 179
          children: []
          pos: 19828
          length: 201
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: cos
              children: []
              pos: 21136
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 21121
              length: 240
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 21156
                        length: 5
                    children: []
                    pos: 21155
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 21177
                    length: 11
                  pos: 21163
                  length: 35
                pos: 21152
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.cos(real) * MathUtils.cosh(imaginary),
                                                 -FastMath.sin(real) * MathUtils.sinh(imaginary));
                children: []
                pos: 21208
                length: 147
              pos: 21142
              length: 219
          children: []
          pos: 21121
          length: 240
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: cosh
              children: []
              pos: 22505
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 22490
              length: 240
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 22526
                        length: 5
                    children: []
                    pos: 22525
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 22547
                    length: 11
                  pos: 22533
                  length: 35
                pos: 22522
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(MathUtils.cosh(real) * FastMath.cos(imaginary),
                                                 MathUtils.sinh(real) * FastMath.sin(imaginary));
                children: []
                pos: 22578
                length: 146
              pos: 22512
              length: 218
          children: []
          pos: 22490
          length: 240
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: exp
              children: []
              pos: 23868
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 23853
              length: 259
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 23888
                        length: 5
                    children: []
                    pos: 23887
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 23909
                    length: 11
                  pos: 23895
                  length: 35
                pos: 23884
                length: 46
              - type: local_variable_declaration
                fields:
                  text: double expReal = FastMath.exp(real);
                children: []
                pos: 23940
                length: 36
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(expReal *  FastMath.cos(imaginary),
                                                 expReal * FastMath.sin(imaginary));
                children: []
                pos: 23985
                length: 121
              pos: 23874
              length: 238
          children: []
          pos: 23853
          length: 259
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: log
              children: []
              pos: 25481
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 25466
              length: 197
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 25501
                        length: 5
                    children: []
                    pos: 25500
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 25522
                    length: 11
                  pos: 25508
                  length: 35
                pos: 25497
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.log(abs()),
                                                 FastMath.atan2(imaginary, real));
                children: []
                pos: 25553
                length: 104
              pos: 25487
              length: 176
          children: []
          pos: 25466
          length: 197
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: pow
              children: []
              pos: 26415
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex x
                children: []
                pos: 26419
                length: 9
              pos: 26400
              length: 154
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(x);
                children: []
                pos: 26477
                length: 26
              - type: return_statement
                fields:
                  text: return this.log().multiply(x).exp();
                children: []
                pos: 26512
                length: 36
              pos: 26467
              length: 87
          children: []
          pos: 26400
          length: 154
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: pow
              children: []
              pos: 26825
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double x
                children: []
                pos: 26829
                length: 8
              pos: 26810
              length: 81
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return this.log().multiply(x).exp();
                children: []
                pos: 26849
                length: 36
              pos: 26839
              length: 52
          children: []
          pos: 26810
          length: 81
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sin
              children: []
              pos: 28000
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 27985
              length: 239
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 28020
                        length: 5
                    children: []
                    pos: 28019
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 28041
                    length: 11
                  pos: 28027
                  length: 35
                pos: 28016
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.sin(real) * MathUtils.cosh(imaginary),
                                                 FastMath.cos(real) * MathUtils.sinh(imaginary));
                children: []
                pos: 28072
                length: 146
              pos: 28006
              length: 218
          children: []
          pos: 27985
          length: 239
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sinh
              children: []
              pos: 29357
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 29342
              length: 223
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 29378
                        length: 5
                    children: []
                    pos: 29377
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 29399
                    length: 11
                  pos: 29385
                  length: 35
                pos: 29374
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(MathUtils.sinh(real) * FastMath.cos(imaginary),
                                MathUtils.cosh(real) * FastMath.sin(imaginary));
                children: []
                pos: 29430
                length: 129
              pos: 29364
              length: 201
          children: []
          pos: 29342
          length: 223
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sqrt
              children: []
              pos: 30936
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 30921
              length: 511
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 30957
                        length: 5
                    children: []
                    pos: 30956
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 30978
                    length: 11
                  pos: 30964
                  length: 35
                pos: 30953
                length: 46
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: real
                                children: []
                                pos: 31013
                                length: 4
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 31021
                                length: 3
                            children: []
                            pos: 31013
                            length: 11
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: imaginary
                                children: []
                                pos: 31028
                                length: 9
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 31041
                                length: 3
                            children: []
                            pos: 31028
                            length: 16
                        children: []
                        pos: 31013
                        length: 31
                    children: []
                    pos: 31012
                    length: 33
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return createComplex(0.0, 0.0);
                    children: []
                    pos: 31060
                    length: 31
                  pos: 31046
                  length: 55
                pos: 31009
                length: 92
              - type: local_variable_declaration
                fields:
                  text: double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
                children: []
                pos: 31111
                length: 61
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: greater_or_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: real
                            children: []
                            pos: 31185
                            length: 4
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: '0.0'
                            children: []
                            pos: 31193
                            length: 3
                        children: []
                        pos: 31185
                        length: 11
                    children: []
                    pos: 31184
                    length: 13
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return createComplex(t, imaginary / (2.0 * t));
                    children: []
                    pos: 31212
                    length: 47
                  pos: 31198
                  length: 71
                pos: 31181
                length: 245
              pos: 30943
              length: 489
          children: []
          pos: 30921
          length: 511
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sqrt1z
              children: []
              pos: 32119
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 32104
              length: 108
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
                children: []
                pos: 32138
                length: 68
              pos: 32128
              length: 84
          children: []
          pos: 32104
          length: 108
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: tan
              children: []
              pos: 33401
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 33386
              length: 350
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 33421
                        length: 5
                    children: []
                    pos: 33420
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 33442
                    length: 11
                  pos: 33428
                  length: 35
                pos: 33417
                length: 46
              - type: local_variable_declaration
                fields:
                  text: double real2 = 2.0 * real;
                children: []
                pos: 33473
                length: 26
              - type: local_variable_declaration
                fields:
                  text: double imaginary2 = 2.0 * imaginary;
                children: []
                pos: 33508
                length: 36
              - type: local_variable_declaration
                fields:
                  text: double d = FastMath.cos(real2) + MathUtils.cosh(imaginary2);
                children: []
                pos: 33553
                length: 60
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.sin(real2) / d,
                                                 MathUtils.sinh(imaginary2) / d);
                children: []
                pos: 33623
                length: 107
              pos: 33407
              length: 329
          children: []
          pos: 33386
          length: 350
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: tanh
              children: []
              pos: 34932
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 34917
              length: 351
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 34953
                        length: 5
                    children: []
                    pos: 34952
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 34974
                    length: 11
                  pos: 34960
                  length: 35
                pos: 34949
                length: 46
              - type: local_variable_declaration
                fields:
                  text: double real2 = 2.0 * real;
                children: []
                pos: 35005
                length: 26
              - type: local_variable_declaration
                fields:
                  text: double imaginary2 = 2.0 * imaginary;
                children: []
                pos: 35040
                length: 36
              - type: local_variable_declaration
                fields:
                  text: double d = MathUtils.cosh(real2) + FastMath.cos(imaginary2);
                children: []
                pos: 35085
                length: 60
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(MathUtils.sinh(real2) / d,
                                                 FastMath.sin(imaginary2) / d);
                children: []
                pos: 35155
                length: 107
              pos: 34939
              length: 329
          children: []
          pos: 34917
          length: 351
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getArgument
              children: []
              pos: 36116
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 36102
              length: 93
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return FastMath.atan2(getImaginary(), getReal());
                children: []
                pos: 36140
                length: 49
              pos: 36130
              length: 65
          children: []
          pos: 36102
          length: 93
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: nthRoot
              children: []
              pos: 37138
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int n
                children: []
                pos: 37146
                length: 5
              pos: 37117
              length: 1170
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_or_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: "n"
                            children: []
                            pos: 37168
                            length: 1
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 37173
                            length: 1
                        children: []
                        pos: 37168
                        length: 6
                    children: []
                    pos: 37167
                    length: 8
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: |-
                        throw new NotPositiveException(LocalizedFormats.CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N,
                                                                   n);
                    children: []
                    pos: 37190
                    length: 134
                  pos: 37176
                  length: 158
                pos: 37164
                length: 170
              - type: local_variable_declaration
                fields:
                  text: final List<Complex> result = new ArrayList<Complex>();
                children: []
                pos: 37344
                length: 54
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 37412
                        length: 5
                    children: []
                    pos: 37411
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: result.add(NaN);
                    children: []
                    pos: 37433
                    length: 16
                  - type: return_statement
                    fields:
                      text: return result;
                    children: []
                    pos: 37462
                    length: 14
                  pos: 37419
                  length: 67
                pos: 37408
                length: 78
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isInfinite()
                        children: []
                        pos: 37499
                        length: 12
                    children: []
                    pos: 37498
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: result.add(INF);
                    children: []
                    pos: 37527
                    length: 16
                  - type: return_statement
                    fields:
                      text: return result;
                    children: []
                    pos: 37556
                    length: 14
                  pos: 37513
                  length: 67
                pos: 37495
                length: 85
              - type: local_variable_declaration
                fields:
                  text: final double nthRootOfAbs = FastMath.pow(abs(), 1.0 / n);
                children: []
                pos: 37665
                length: 57
              - type: local_variable_declaration
                fields:
                  text: final double nthPhi = getArgument() / n;
                children: []
                pos: 37802
                length: 40
              - type: local_variable_declaration
                fields:
                  text: final double slice = 2 * FastMath.PI / n;
                children: []
                pos: 37851
                length: 41
              - type: local_variable_declaration
                fields:
                  text: double innerPart = nthPhi;
                children: []
                pos: 37901
                length: 26
              - type: for_statement
                fields:
                  text: |-
                    for (int k = 0; k < n ; k++) {
                                // inner part
                                final double realPart = nthRootOfAbs *  FastMath.cos(innerPart);
                                final double imaginaryPart = nthRootOfAbs *  FastMath.sin(innerPart);
                                result.add(createComplex(realPart, imaginaryPart));
                                innerPart += slice;
                            }
                children: []
                pos: 37936
                length: 321
              - type: return_statement
                fields:
                  text: return result;
                children: []
                pos: 38267
                length: 14
              pos: 37153
              length: 1134
          children: []
          pos: 37117
          length: 1170
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createComplex
              children: []
              pos: 38580
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double realPart
                children: []
                pos: 38594
                length: 15
              pos: 38562
              length: 167
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return new Complex(realPart, imaginaryPart);
                children: []
                pos: 38679
                length: 44
              pos: 38669
              length: 60
          children: []
          pos: 38562
          length: 167
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: valueOf
              children: []
              pos: 38960
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double realPart
                children: []
                pos: 38968
                length: 15
              pos: 38938
              length: 278
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: Double.isNaN(realPart)
                            children: []
                            pos: 39055
                            length: 22
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isNaN(imaginaryPart)
                            children: []
                            pos: 39093
                            length: 27
                        children: []
                        pos: 39055
                        length: 65
                    children: []
                    pos: 39054
                    length: 67
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 39136
                    length: 11
                  pos: 39122
                  length: 35
                pos: 39051
                length: 106
              - type: return_statement
                fields:
                  text: return new Complex(realPart, imaginaryPart);
                children: []
                pos: 39166
                length: 44
              pos: 39041
              length: 175
          children: []
          pos: 38938
          length: 278
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: valueOf
              children: []
              pos: 39393
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double realPart
                children: []
                pos: 39401
                length: 15
              pos: 39371
              length: 164
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: Double.isNaN(realPart)
                        children: []
                        pos: 39432
                        length: 22
                    children: []
                    pos: 39431
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 39470
                    length: 11
                  pos: 39456
                  length: 35
                pos: 39428
                length: 63
              - type: return_statement
                fields:
                  text: return new Complex(realPart);
                children: []
                pos: 39500
                length: 29
              pos: 39418
              length: 117
          children: []
          pos: 39371
          length: 164
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: readResolve
              children: []
              pos: 39830
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 39807
              length: 91
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return createComplex(real, imaginary);
                children: []
                pos: 39854
                length: 38
              pos: 39844
              length: 54
          children: []
          pos: 39807
          length: 91
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getField
              children: []
              pos: 39949
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 39929
              length: 81
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return ComplexField.getInstance();
                children: []
                pos: 39970
                length: 34
              pos: 39960
              length: 50
          children: []
          pos: 39929
          length: 81
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: toString
              children: []
              pos: 40069
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 40041
              length: 98
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return "(" + real + ", " + imaginary + ")";
                children: []
                pos: 40090
                length: 43
              pos: 40080
              length: 59
          children: []
          pos: 40041
          length: 98
        pos: 2253
        length: 37888
    children: []
    pos: 2253
    length: 37888
  pos: 0
  length: 40142
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: Complex
        children: []
        pos: 2266
        length: 7
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: public static final Complex I = new Complex(0.0, 1.0);
          children: []
          pos: 2397
          length: 54
        - type: field_declaration
          fields:
            text: public static final Complex NaN = new Complex(Double.NaN, Double.NaN);
          children: []
          pos: 2547
          length: 70
        - type: field_declaration
          fields:
            text: public static final Complex INF = new Complex(Double.POSITIVE_INFINITY,
              Double.POSITIVE_INFINITY);
          children: []
          pos: 2716
          length: 98
        - type: field_declaration
          fields:
            text: public static final Complex ONE = new Complex(1.0, 0.0);
          children: []
          pos: 2873
          length: 56
        - type: field_declaration
          fields:
            text: public static final Complex ZERO = new Complex(0.0, 0.0);
          children: []
          pos: 2988
          length: 57
        - type: field_declaration
          fields:
            text: private static final long serialVersionUID = -6195664516687396620L;
          children: []
          pos: 3094
          length: 67
        - type: field_declaration
          fields:
            text: private final double imaginary;
          children: []
          pos: 3198
          length: 31
        - type: field_declaration
          fields:
            text: private final double real;
          children: []
          pos: 3260
          length: 26
        - type: field_declaration
          fields:
            text: private final transient boolean isNaN;
          children: []
          pos: 3354
          length: 38
        - type: field_declaration
          fields:
            text: private final transient boolean isInfinite;
          children: []
          pos: 3456
          length: 43
        - type: field_declaration
          fields:
            text: private final transient boolean isZero;
          children: []
          pos: 3559
          length: 39
        - type: constructor_declaration
          fields:
            text: |-
              public Complex(double real) {
                      this(real, 0.0);
                  }
          children: []
          pos: 3714
          length: 60
        - type: constructor_declaration
          fields:
            text: |-
              public Complex(double real, double imaginary) {
                      this.real = real;
                      this.imaginary = imaginary;

                      isNaN = Double.isNaN(real) || Double.isNaN(imaginary);
                      isInfinite = !isNaN &&
                          (Double.isInfinite(real) || Double.isInfinite(imaginary));
                      isZero = real == 0 && imaginary == 0;
                  }
          children: []
          pos: 3940
          length: 327
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: abs
              children: []
              pos: 4595
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 4581
              length: 664
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 4615
                        length: 5
                    children: []
                    pos: 4614
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Double.NaN;
                    children: []
                    pos: 4636
                    length: 18
                  pos: 4622
                  length: 42
                pos: 4611
                length: 53
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isInfinite()
                        children: []
                        pos: 4677
                        length: 12
                    children: []
                    pos: 4676
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Double.POSITIVE_INFINITY;
                    children: []
                    pos: 4705
                    length: 32
                  pos: 4691
                  length: 56
                pos: 4673
                length: 74
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(real)
                            children: []
                            pos: 4760
                            length: 18
                          right:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(imaginary)
                            children: []
                            pos: 4781
                            length: 23
                        children: []
                        pos: 4760
                        length: 44
                    children: []
                    pos: 4759
                    length: 46
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: imaginary
                                children: []
                                pos: 4824
                                length: 9
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 4837
                                length: 3
                            children: []
                            pos: 4824
                            length: 16
                        children: []
                        pos: 4823
                        length: 18
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return FastMath.abs(real);
                        children: []
                        pos: 4860
                        length: 26
                      pos: 4842
                      length: 58
                    pos: 4820
                    length: 80
                  - type: local_variable_declaration
                    fields:
                      text: double q = real / imaginary;
                    children: []
                    pos: 4913
                    length: 28
                  - type: return_statement
                    fields:
                      text: return FastMath.abs(imaginary) * FastMath.sqrt(1 + q *
                        q);
                    children: []
                    pos: 4954
                    length: 58
                  pos: 4806
                  length: 216
                pos: 4756
                length: 483
              pos: 4601
              length: 644
          children: []
          pos: 4581
          length: 664
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: add
              children: []
              pos: 5987
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex addend
                children: []
                pos: 5991
                length: 14
              pos: 5972
              length: 302
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(addend);
                children: []
                pos: 6046
                length: 31
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 6090
                            length: 5
                          right:
                            type: field_access
                            fields:
                              text: addend.isNaN
                            children: []
                            pos: 6099
                            length: 12
                        children: []
                        pos: 6090
                        length: 21
                    children: []
                    pos: 6089
                    length: 23
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 6127
                    length: 11
                  pos: 6113
                  length: 35
                pos: 6086
                length: 62
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real + addend.getReal(),
                                                 imaginary + addend.getImaginary());
                children: []
                pos: 6158
                length: 110
              pos: 6036
              length: 238
          children: []
          pos: 5972
          length: 302
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: add
              children: []
              pos: 6576
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double addend
                children: []
                pos: 6580
                length: 13
              pos: 6561
              length: 177
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 6609
                            length: 5
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isNaN(addend)
                            children: []
                            pos: 6618
                            length: 20
                        children: []
                        pos: 6609
                        length: 29
                    children: []
                    pos: 6608
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 6654
                    length: 11
                  pos: 6640
                  length: 35
                pos: 6605
                length: 70
              - type: return_statement
                fields:
                  text: return createComplex(real + addend, imaginary);
                children: []
                pos: 6685
                length: 47
              pos: 6595
              length: 143
          children: []
          pos: 6561
          length: 177
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: conjugate
              children: []
              pos: 7358
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 7343
              length: 138
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 7384
                        length: 5
                    children: []
                    pos: 7383
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 7405
                    length: 11
                  pos: 7391
                  length: 35
                pos: 7380
                length: 46
              - type: return_statement
                fields:
                  text: return createComplex(real, -imaginary);
                children: []
                pos: 7436
                length: 39
              pos: 7370
              length: 111
          children: []
          pos: 7343
          length: 138
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: divide
              children: []
              pos: 9361
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex divisor
                children: []
                pos: 9368
                length: 15
              pos: 9346
              length: 994
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(divisor);
                children: []
                pos: 9432
                length: 32
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 9477
                            length: 5
                          right:
                            type: field_access
                            fields:
                              text: divisor.isNaN
                            children: []
                            pos: 9486
                            length: 13
                        children: []
                        pos: 9477
                        length: 22
                    children: []
                    pos: 9476
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 9515
                    length: 11
                  pos: 9501
                  length: 35
                pos: 9473
                length: 63
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: field_access
                        fields:
                          text: divisor.isZero
                        children: []
                        pos: 9550
                        length: 14
                    children: []
                    pos: 9549
                    length: 16
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: 'return isZero ? NaN : INF;'
                    children: []
                    pos: 9638
                    length: 26
                  pos: 9566
                  length: 108
                pos: 9546
                length: 128
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: divisor.isInfinite()
                            children: []
                            pos: 9688
                            length: 20
                          right:
                            type: unary_expression
                            fields:
                              text: "!isInfinite()"
                            children: []
                            pos: 9712
                            length: 13
                        children: []
                        pos: 9688
                        length: 37
                    children: []
                    pos: 9687
                    length: 39
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return ZERO;
                    children: []
                    pos: 9741
                    length: 12
                  pos: 9727
                  length: 36
                pos: 9684
                length: 79
              - type: local_variable_declaration
                fields:
                  text: final double c = divisor.getReal();
                children: []
                pos: 9773
                length: 35
              - type: local_variable_declaration
                fields:
                  text: final double d = divisor.getImaginary();
                children: []
                pos: 9817
                length: 40
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(c)
                            children: []
                            pos: 9871
                            length: 15
                          right:
                            type: method_invocation
                            fields:
                              text: FastMath.abs(d)
                            children: []
                            pos: 9889
                            length: 15
                        children: []
                        pos: 9871
                        length: 33
                    children: []
                    pos: 9870
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: double q = c / d;
                    children: []
                    pos: 9920
                    length: 17
                  - type: local_variable_declaration
                    fields:
                      text: double denominator = c * q + d;
                    children: []
                    pos: 9950
                    length: 31
                  - type: return_statement
                    fields:
                      text: |-
                        return createComplex((real * q + imaginary) / denominator,
                                        (imaginary * q - real) / denominator);
                    children: []
                    pos: 9994
                    length: 113
                  pos: 9906
                  length: 211
                pos: 9867
                length: 467
              pos: 9422
              length: 918
          children: []
          pos: 9346
          length: 994
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: divide
              children: []
              pos: 10661
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double divisor
                children: []
                pos: 10668
                length: 14
              pos: 10646
              length: 457
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 10698
                            length: 5
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isNaN(divisor)
                            children: []
                            pos: 10707
                            length: 21
                        children: []
                        pos: 10698
                        length: 30
                    children: []
                    pos: 10697
                    length: 32
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 10744
                    length: 11
                  pos: 10730
                  length: 35
                pos: 10694
                length: 71
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: divisor
                            children: []
                            pos: 10778
                            length: 7
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: 0d
                            children: []
                            pos: 10789
                            length: 2
                        children: []
                        pos: 10778
                        length: 13
                    children: []
                    pos: 10777
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: 'return isZero ? NaN : INF;'
                    children: []
                    pos: 10865
                    length: 26
                  pos: 10793
                  length: 108
                pos: 10774
                length: 127
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: Double.isInfinite(divisor)
                        children: []
                        pos: 10914
                        length: 26
                    children: []
                    pos: 10913
                    length: 28
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: 'return !isInfinite() ? ZERO : NaN;'
                    children: []
                    pos: 10956
                    length: 34
                  pos: 10942
                  length: 58
                pos: 10910
                length: 90
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real / divisor,
                                                 imaginary  / divisor);
                children: []
                pos: 11009
                length: 88
              pos: 10684
              length: 419
          children: []
          pos: 10646
          length: 457
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: equals
              children: []
              pos: 11857
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Object other
                children: []
                pos: 11864
                length: 12
              pos: 11828
              length: 395
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: this
                            fields: {}
                            children: []
                            pos: 11892
                            length: 4
                          right:
                            type: identifier
                            fields:
                              text: other
                            children: []
                            pos: 11900
                            length: 5
                        children: []
                        pos: 11892
                        length: 13
                    children: []
                    pos: 11891
                    length: 15
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return true;
                    children: []
                    pos: 11921
                    length: 12
                  pos: 11907
                  length: 36
                pos: 11888
                length: 55
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: other instanceof Complex
                        children: []
                        pos: 11956
                        length: 24
                    children: []
                    pos: 11955
                    length: 26
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Complex c = (Complex)other;
                    children: []
                    pos: 11995
                    length: 27
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: field_access
                            fields:
                              text: c.isNaN
                            children: []
                            pos: 12039
                            length: 7
                        children: []
                        pos: 12038
                        length: 9
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return isNaN;
                        children: []
                        pos: 12066
                        length: 13
                      pos: 12048
                      length: 45
                    pos: 12035
                    length: 150
                  pos: 11981
                  length: 214
                pos: 11952
                length: 243
              - type: return_statement
                fields:
                  text: return false;
                children: []
                pos: 12204
                length: 13
              pos: 11878
              length: 345
          children: []
          pos: 11828
          length: 395
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: hashCode
              children: []
              pos: 12481
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 12456
              length: 185
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 12506
                        length: 5
                    children: []
                    pos: 12505
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return 7;
                    children: []
                    pos: 12527
                    length: 9
                  pos: 12513
                  length: 33
                pos: 12502
                length: 44
              - type: return_statement
                fields:
                  text: |-
                    return 37 * (17 * MathUtils.hash(imaginary) +
                                MathUtils.hash(real));
                children: []
                pos: 12555
                length: 80
              pos: 12492
              length: 149
          children: []
          pos: 12456
          length: 185
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getImaginary
              children: []
              pos: 12753
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 12739
              length: 62
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return imaginary;
                children: []
                pos: 12778
                length: 17
              pos: 12768
              length: 33
          children: []
          pos: 12739
          length: 62
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getReal
              children: []
              pos: 12903
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 12889
              length: 52
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return real;
                children: []
                pos: 12923
                length: 12
              pos: 12913
              length: 28
          children: []
          pos: 12889
          length: 52
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isNaN
              children: []
              pos: 13181
              length: 5
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 13166
              length: 52
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return isNaN;
                children: []
                pos: 13199
                length: 13
              pos: 13189
              length: 29
          children: []
          pos: 13166
          length: 52
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: isInfinite
              children: []
              pos: 13614
              length: 10
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 13599
              length: 62
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return isInfinite;
                children: []
                pos: 13637
                length: 18
              pos: 13627
              length: 34
          children: []
          pos: 13599
          length: 62
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: multiply
              children: []
              pos: 14700
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex factor
                children: []
                pos: 14709
                length: 14
              pos: 14685
              length: 642
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(factor);
                children: []
                pos: 14772
                length: 31
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 14816
                            length: 5
                          right:
                            type: field_access
                            fields:
                              text: factor.isNaN
                            children: []
                            pos: 14825
                            length: 12
                        children: []
                        pos: 14816
                        length: 21
                    children: []
                    pos: 14815
                    length: 23
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 14853
                    length: 11
                  pos: 14839
                  length: 35
                pos: 14812
                length: 62
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: or
                                fields:
                                  left:
                                    type: method_invocation
                                    fields:
                                      text: Double.isInfinite(real)
                                    children: []
                                    pos: 14887
                                    length: 23
                                  right:
                                    type: method_invocation
                                    fields:
                                      text: Double.isInfinite(imaginary)
                                    children: []
                                    pos: 14926
                                    length: 28
                                children: []
                                pos: 14887
                                length: 67
                              right:
                                type: method_invocation
                                fields:
                                  text: Double.isInfinite(factor.real)
                                children: []
                                pos: 14970
                                length: 30
                            children: []
                            pos: 14887
                            length: 113
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isInfinite(factor.imaginary)
                            children: []
                            pos: 15016
                            length: 35
                        children: []
                        pos: 14887
                        length: 164
                    children: []
                    pos: 14886
                    length: 166
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return INF;
                    children: []
                    pos: 15139
                    length: 11
                  pos: 15053
                  length: 107
                pos: 14883
                length: 277
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real * factor.real - imaginary * factor.imaginary,
                                                 real * factor.imaginary + imaginary * factor.real);
                children: []
                pos: 15169
                length: 152
              pos: 14762
              length: 565
          children: []
          pos: 14685
          length: 642
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: multiply
              children: []
              pos: 15638
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double factor
                children: []
                pos: 15647
                length: 13
              pos: 15623
              length: 420
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 15676
                            length: 5
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isNaN(factor)
                            children: []
                            pos: 15685
                            length: 20
                        children: []
                        pos: 15676
                        length: 29
                    children: []
                    pos: 15675
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 15721
                    length: 11
                  pos: 15707
                  length: 35
                pos: 15672
                length: 70
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: or
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: Double.isInfinite(real)
                                children: []
                                pos: 15755
                                length: 23
                              right:
                                type: method_invocation
                                fields:
                                  text: Double.isInfinite(imaginary)
                                children: []
                                pos: 15794
                                length: 28
                            children: []
                            pos: 15755
                            length: 67
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isInfinite(factor)
                            children: []
                            pos: 15838
                            length: 25
                        children: []
                        pos: 15755
                        length: 108
                    children: []
                    pos: 15754
                    length: 110
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return INF;
                    children: []
                    pos: 15951
                    length: 11
                  pos: 15865
                  length: 107
                pos: 15751
                length: 221
              - type: return_statement
                fields:
                  text: return createComplex(real * factor, imaginary * factor);
                children: []
                pos: 15981
                length: 56
              pos: 15662
              length: 381
          children: []
          pos: 15623
          length: 420
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: negate
              children: []
              pos: 16299
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 16284
              length: 136
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 16322
                        length: 5
                    children: []
                    pos: 16321
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 16343
                    length: 11
                  pos: 16329
                  length: 35
                pos: 16318
                length: 46
              - type: return_statement
                fields:
                  text: return createComplex(-real, -imaginary);
                children: []
                pos: 16374
                length: 40
              pos: 16308
              length: 112
          children: []
          pos: 16284
          length: 136
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: subtract
              children: []
              pos: 17169
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex subtrahend
                children: []
                pos: 17178
                length: 18
              pos: 17154
              length: 335
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(subtrahend);
                children: []
                pos: 17245
                length: 35
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 17293
                            length: 5
                          right:
                            type: field_access
                            fields:
                              text: subtrahend.isNaN
                            children: []
                            pos: 17302
                            length: 16
                        children: []
                        pos: 17293
                        length: 25
                    children: []
                    pos: 17292
                    length: 27
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 17334
                    length: 11
                  pos: 17320
                  length: 35
                pos: 17289
                length: 66
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(real - subtrahend.getReal(),
                                                 imaginary - subtrahend.getImaginary());
                children: []
                pos: 17365
                length: 118
              pos: 17235
              length: 254
          children: []
          pos: 17154
          length: 335
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: subtract
              children: []
              pos: 17766
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double subtrahend
                children: []
                pos: 17775
                length: 17
              pos: 17751
              length: 193
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: isNaN
                            children: []
                            pos: 17808
                            length: 5
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isNaN(subtrahend)
                            children: []
                            pos: 17817
                            length: 24
                        children: []
                        pos: 17808
                        length: 33
                    children: []
                    pos: 17807
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 17857
                    length: 11
                  pos: 17843
                  length: 35
                pos: 17804
                length: 74
              - type: return_statement
                fields:
                  text: return createComplex(real - subtrahend, imaginary);
                children: []
                pos: 17887
                length: 51
              pos: 17794
              length: 150
          children: []
          pos: 17751
          length: 193
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: acos
              children: []
              pos: 18488
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 18473
              length: 177
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 18509
                        length: 5
                    children: []
                    pos: 18508
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 18530
                    length: 11
                  pos: 18516
                  length: 35
                pos: 18505
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return this.add(this.sqrt1z().multiply(I)).log()
                                .multiply(I.negate());
                children: []
                pos: 18561
                length: 83
              pos: 18495
              length: 155
          children: []
          pos: 18473
          length: 177
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: asin
              children: []
              pos: 19185
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 19170
              length: 172
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 19206
                        length: 5
                    children: []
                    pos: 19205
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 19227
                    length: 11
                  pos: 19213
                  length: 35
                pos: 19202
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return sqrt1z().add(this.multiply(I)).log()
                                .multiply(I.negate());
                children: []
                pos: 19258
                length: 78
              pos: 19192
              length: 150
          children: []
          pos: 19170
          length: 172
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: atan
              children: []
              pos: 19873
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 19858
              length: 201
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 19894
                        length: 5
                    children: []
                    pos: 19893
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 19915
                    length: 11
                  pos: 19901
                  length: 35
                pos: 19890
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return this.add(I).divide(I.subtract(this)).log()
                                .multiply(I.divide(createComplex(2.0, 0.0)));
                children: []
                pos: 19946
                length: 107
              pos: 19880
              length: 179
          children: []
          pos: 19858
          length: 201
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: cos
              children: []
              pos: 21166
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 21151
              length: 240
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 21186
                        length: 5
                    children: []
                    pos: 21185
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 21207
                    length: 11
                  pos: 21193
                  length: 35
                pos: 21182
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.cos(real) * MathUtils.cosh(imaginary),
                                                 -FastMath.sin(real) * MathUtils.sinh(imaginary));
                children: []
                pos: 21238
                length: 147
              pos: 21172
              length: 219
          children: []
          pos: 21151
          length: 240
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: cosh
              children: []
              pos: 22535
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 22520
              length: 240
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 22556
                        length: 5
                    children: []
                    pos: 22555
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 22577
                    length: 11
                  pos: 22563
                  length: 35
                pos: 22552
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(MathUtils.cosh(real) * FastMath.cos(imaginary),
                                                 MathUtils.sinh(real) * FastMath.sin(imaginary));
                children: []
                pos: 22608
                length: 146
              pos: 22542
              length: 218
          children: []
          pos: 22520
          length: 240
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: exp
              children: []
              pos: 23898
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 23883
              length: 259
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 23918
                        length: 5
                    children: []
                    pos: 23917
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 23939
                    length: 11
                  pos: 23925
                  length: 35
                pos: 23914
                length: 46
              - type: local_variable_declaration
                fields:
                  text: double expReal = FastMath.exp(real);
                children: []
                pos: 23970
                length: 36
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(expReal *  FastMath.cos(imaginary),
                                                 expReal * FastMath.sin(imaginary));
                children: []
                pos: 24015
                length: 121
              pos: 23904
              length: 238
          children: []
          pos: 23883
          length: 259
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: log
              children: []
              pos: 25511
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 25496
              length: 197
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 25531
                        length: 5
                    children: []
                    pos: 25530
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 25552
                    length: 11
                  pos: 25538
                  length: 35
                pos: 25527
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.log(abs()),
                                                 FastMath.atan2(imaginary, real));
                children: []
                pos: 25583
                length: 104
              pos: 25517
              length: 176
          children: []
          pos: 25496
          length: 197
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: pow
              children: []
              pos: 26445
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Complex x
                children: []
                pos: 26449
                length: 9
              pos: 26430
              length: 154
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: MathUtils.checkNotNull(x);
                children: []
                pos: 26507
                length: 26
              - type: return_statement
                fields:
                  text: return this.log().multiply(x).exp();
                children: []
                pos: 26542
                length: 36
              pos: 26497
              length: 87
          children: []
          pos: 26430
          length: 154
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: pow
              children: []
              pos: 26855
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double x
                children: []
                pos: 26859
                length: 8
              pos: 26840
              length: 81
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return this.log().multiply(x).exp();
                children: []
                pos: 26879
                length: 36
              pos: 26869
              length: 52
          children: []
          pos: 26840
          length: 81
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sin
              children: []
              pos: 28030
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 28015
              length: 239
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 28050
                        length: 5
                    children: []
                    pos: 28049
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 28071
                    length: 11
                  pos: 28057
                  length: 35
                pos: 28046
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.sin(real) * MathUtils.cosh(imaginary),
                                                 FastMath.cos(real) * MathUtils.sinh(imaginary));
                children: []
                pos: 28102
                length: 146
              pos: 28036
              length: 218
          children: []
          pos: 28015
          length: 239
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sinh
              children: []
              pos: 29387
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 29372
              length: 223
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 29408
                        length: 5
                    children: []
                    pos: 29407
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 29429
                    length: 11
                  pos: 29415
                  length: 35
                pos: 29404
                length: 46
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(MathUtils.sinh(real) * FastMath.cos(imaginary),
                                MathUtils.cosh(real) * FastMath.sin(imaginary));
                children: []
                pos: 29460
                length: 129
              pos: 29394
              length: 201
          children: []
          pos: 29372
          length: 223
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sqrt
              children: []
              pos: 30966
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 30951
              length: 511
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 30987
                        length: 5
                    children: []
                    pos: 30986
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 31008
                    length: 11
                  pos: 30994
                  length: 35
                pos: 30983
                length: 46
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: and
                        fields:
                          left:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: real
                                children: []
                                pos: 31043
                                length: 4
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 31051
                                length: 3
                            children: []
                            pos: 31043
                            length: 11
                          right:
                            type: equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: imaginary
                                children: []
                                pos: 31058
                                length: 9
                              right:
                                type: decimal_floating_point_literal
                                fields:
                                  text: '0.0'
                                children: []
                                pos: 31071
                                length: 3
                            children: []
                            pos: 31058
                            length: 16
                        children: []
                        pos: 31043
                        length: 31
                    children: []
                    pos: 31042
                    length: 33
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return createComplex(0.0, 0.0);
                    children: []
                    pos: 31090
                    length: 31
                  pos: 31076
                  length: 55
                pos: 31039
                length: 92
              - type: local_variable_declaration
                fields:
                  text: double t = FastMath.sqrt((FastMath.abs(real) + abs()) / 2.0);
                children: []
                pos: 31141
                length: 61
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: greater_or_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: real
                            children: []
                            pos: 31215
                            length: 4
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: '0.0'
                            children: []
                            pos: 31223
                            length: 3
                        children: []
                        pos: 31215
                        length: 11
                    children: []
                    pos: 31214
                    length: 13
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return createComplex(t, imaginary / (2.0 * t));
                    children: []
                    pos: 31242
                    length: 47
                  pos: 31228
                  length: 71
                pos: 31211
                length: 245
              pos: 30973
              length: 489
          children: []
          pos: 30951
          length: 511
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: sqrt1z
              children: []
              pos: 32149
              length: 6
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 32134
              length: 108
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();
                children: []
                pos: 32168
                length: 68
              pos: 32158
              length: 84
          children: []
          pos: 32134
          length: 108
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: tan
              children: []
              pos: 33431
              length: 3
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 33416
              length: 350
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 33451
                        length: 5
                    children: []
                    pos: 33450
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 33472
                    length: 11
                  pos: 33458
                  length: 35
                pos: 33447
                length: 46
              - type: local_variable_declaration
                fields:
                  text: double real2 = 2.0 * real;
                children: []
                pos: 33503
                length: 26
              - type: local_variable_declaration
                fields:
                  text: double imaginary2 = 2.0 * imaginary;
                children: []
                pos: 33538
                length: 36
              - type: local_variable_declaration
                fields:
                  text: double d = FastMath.cos(real2) + MathUtils.cosh(imaginary2);
                children: []
                pos: 33583
                length: 60
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(FastMath.sin(real2) / d,
                                                 MathUtils.sinh(imaginary2) / d);
                children: []
                pos: 33653
                length: 107
              pos: 33437
              length: 329
          children: []
          pos: 33416
          length: 350
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: tanh
              children: []
              pos: 34962
              length: 4
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 34947
              length: 351
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 34983
                        length: 5
                    children: []
                    pos: 34982
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 35004
                    length: 11
                  pos: 34990
                  length: 35
                pos: 34979
                length: 46
              - type: local_variable_declaration
                fields:
                  text: double real2 = 2.0 * real;
                children: []
                pos: 35035
                length: 26
              - type: local_variable_declaration
                fields:
                  text: double imaginary2 = 2.0 * imaginary;
                children: []
                pos: 35070
                length: 36
              - type: local_variable_declaration
                fields:
                  text: double d = MathUtils.cosh(real2) + FastMath.cos(imaginary2);
                children: []
                pos: 35115
                length: 60
              - type: return_statement
                fields:
                  text: |-
                    return createComplex(MathUtils.sinh(real2) / d,
                                                 FastMath.sin(imaginary2) / d);
                children: []
                pos: 35185
                length: 107
              pos: 34969
              length: 329
          children: []
          pos: 34947
          length: 351
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getArgument
              children: []
              pos: 36146
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 36132
              length: 93
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return FastMath.atan2(getImaginary(), getReal());
                children: []
                pos: 36170
                length: 49
              pos: 36160
              length: 65
          children: []
          pos: 36132
          length: 93
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: nthRoot
              children: []
              pos: 37168
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int n
                children: []
                pos: 37176
                length: 5
              pos: 37147
              length: 1170
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_or_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: "n"
                            children: []
                            pos: 37198
                            length: 1
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 37203
                            length: 1
                        children: []
                        pos: 37198
                        length: 6
                    children: []
                    pos: 37197
                    length: 8
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: |-
                        throw new NotPositiveException(LocalizedFormats.CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N,
                                                                   n);
                    children: []
                    pos: 37220
                    length: 134
                  pos: 37206
                  length: 158
                pos: 37194
                length: 170
              - type: local_variable_declaration
                fields:
                  text: final List<Complex> result = new ArrayList<Complex>();
                children: []
                pos: 37374
                length: 54
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: isNaN
                        children: []
                        pos: 37442
                        length: 5
                    children: []
                    pos: 37441
                    length: 7
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: result.add(NaN);
                    children: []
                    pos: 37463
                    length: 16
                  - type: return_statement
                    fields:
                      text: return result;
                    children: []
                    pos: 37492
                    length: 14
                  pos: 37449
                  length: 67
                pos: 37438
                length: 78
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: isInfinite()
                        children: []
                        pos: 37529
                        length: 12
                    children: []
                    pos: 37528
                    length: 14
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: result.add(INF);
                    children: []
                    pos: 37557
                    length: 16
                  - type: return_statement
                    fields:
                      text: return result;
                    children: []
                    pos: 37586
                    length: 14
                  pos: 37543
                  length: 67
                pos: 37525
                length: 85
              - type: local_variable_declaration
                fields:
                  text: final double nthRootOfAbs = FastMath.pow(abs(), 1.0 / n);
                children: []
                pos: 37695
                length: 57
              - type: local_variable_declaration
                fields:
                  text: final double nthPhi = getArgument() / n;
                children: []
                pos: 37832
                length: 40
              - type: local_variable_declaration
                fields:
                  text: final double slice = 2 * FastMath.PI / n;
                children: []
                pos: 37881
                length: 41
              - type: local_variable_declaration
                fields:
                  text: double innerPart = nthPhi;
                children: []
                pos: 37931
                length: 26
              - type: for_statement
                fields:
                  text: |-
                    for (int k = 0; k < n ; k++) {
                                // inner part
                                final double realPart = nthRootOfAbs *  FastMath.cos(innerPart);
                                final double imaginaryPart = nthRootOfAbs *  FastMath.sin(innerPart);
                                result.add(createComplex(realPart, imaginaryPart));
                                innerPart += slice;
                            }
                children: []
                pos: 37966
                length: 321
              - type: return_statement
                fields:
                  text: return result;
                children: []
                pos: 38297
                length: 14
              pos: 37183
              length: 1134
          children: []
          pos: 37147
          length: 1170
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: createComplex
              children: []
              pos: 38610
              length: 13
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double realPart
                children: []
                pos: 38624
                length: 15
              pos: 38592
              length: 167
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return new Complex(realPart, imaginaryPart);
                children: []
                pos: 38709
                length: 44
              pos: 38699
              length: 60
          children: []
          pos: 38592
          length: 167
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: valueOf
              children: []
              pos: 38990
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double realPart
                children: []
                pos: 38998
                length: 15
              pos: 38968
              length: 278
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: or
                        fields:
                          left:
                            type: method_invocation
                            fields:
                              text: Double.isNaN(realPart)
                            children: []
                            pos: 39085
                            length: 22
                          right:
                            type: method_invocation
                            fields:
                              text: Double.isNaN(imaginaryPart)
                            children: []
                            pos: 39123
                            length: 27
                        children: []
                        pos: 39085
                        length: 65
                    children: []
                    pos: 39084
                    length: 67
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 39166
                    length: 11
                  pos: 39152
                  length: 35
                pos: 39081
                length: 106
              - type: return_statement
                fields:
                  text: return new Complex(realPart, imaginaryPart);
                children: []
                pos: 39196
                length: 44
              pos: 39071
              length: 175
          children: []
          pos: 38968
          length: 278
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: valueOf
              children: []
              pos: 39423
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double realPart
                children: []
                pos: 39431
                length: 15
              pos: 39401
              length: 164
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: method_invocation
                        fields:
                          text: Double.isNaN(realPart)
                        children: []
                        pos: 39462
                        length: 22
                    children: []
                    pos: 39461
                    length: 24
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return NaN;
                    children: []
                    pos: 39500
                    length: 11
                  pos: 39486
                  length: 35
                pos: 39458
                length: 63
              - type: return_statement
                fields:
                  text: return new Complex(realPart);
                children: []
                pos: 39530
                length: 29
              pos: 39448
              length: 117
          children: []
          pos: 39401
          length: 164
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: readResolve
              children: []
              pos: 39860
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 39837
              length: 91
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return createComplex(real, imaginary);
                children: []
                pos: 39884
                length: 38
              pos: 39874
              length: 54
          children: []
          pos: 39837
          length: 91
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getField
              children: []
              pos: 39979
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 39959
              length: 81
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return ComplexField.getInstance();
                children: []
                pos: 40000
                length: 34
              pos: 39990
              length: 50
          children: []
          pos: 39959
          length: 81
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: toString
              children: []
              pos: 40099
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 40071
              length: 98
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return "(" + real + ", " + imaginary + ")";
                children: []
                pos: 40120
                length: 43
              pos: 40110
              length: 59
          children: []
          pos: 40071
          length: 98
        pos: 2253
        length: 37918
    children: []
    pos: 2253
    length: 37918
  pos: 0
  length: 40172
text_diff: "--- before\n+++ after\n@@ -257,7 +257,7 @@\n \n         if (divisor.isZero)
  {\n             // return isZero ? NaN : INF; // See MATH-657\n-            return
  NaN;\n+            return isZero ? NaN : INF;\n         }\n \n         if (divisor.isInfinite()
  && !isInfinite()) {\n@@ -294,7 +294,7 @@\n         }\n         if (divisor == 0d)
  {\n             // return isZero ? NaN : INF; // See MATH-657\n-            return
  NaN;\n+            return isZero ? NaN : INF;\n         }\n         if (Double.isInfinite(divisor))
  {\n             return !isInfinite() ? ZERO : NaN;\n"
tree_diff: |+
  New cluster:
  UPDATE from return NaN; to return isZero ? NaN : INF;
  ------------
  ===
  update-node
  ---
  return_statement: return NaN; [10850,10861]
  replace return NaN; by return isZero ? NaN : INF;
  ===
  update-node
  ---
  return_statement: return NaN; [9638,9649]
  replace return NaN; by return isZero ? NaN : INF;

...
