---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: BITCOUNT
        children: []
        pos: 170
        length: 8
      body:
        type: class_body
        fields: {}
        children:
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: bitcount
              children: []
              pos: 203
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int n
                children: []
                pos: 212
                length: 5
              pos: 185
              length: 149
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int count = 0;
                children: []
                pos: 225
                length: 14
              - type: while_statement
                fields:
                  text: |-
                    while (n != 0) {
                            n = (n ^ (n - 1));
                            count++;
                        }
                children: []
                pos: 244
                length: 66
              - type: return_statement
                fields:
                  text: return count;
                children: []
                pos: 315
                length: 13
              pos: 219
              length: 115
          children: []
          pos: 185
          length: 149
        pos: 157
        length: 179
    children: []
    pos: 157
    length: 179
  pos: 0
  length: 337
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: BITCOUNT
        children: []
        pos: 179
        length: 8
      body:
        type: class_body
        fields: {}
        children:
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: bitcount
              children: []
              pos: 212
              length: 8
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int n
                children: []
                pos: 221
                length: 5
              pos: 194
              length: 149
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: int count = 0;
                children: []
                pos: 234
                length: 14
              - type: while_statement
                fields:
                  text: |-
                    while (n != 0) {
                            n = (n & (n - 1));
                            count++;
                        }
                children: []
                pos: 253
                length: 66
              - type: return_statement
                fields:
                  text: return count;
                children: []
                pos: 324
                length: 13
              pos: 228
              length: 115
          children: []
          pos: 194
          length: 149
        pos: 166
        length: 179
    children: []
    pos: 166
    length: 179
  pos: 0
  length: 346
text_diff: |
  --- before
  +++ after
  @@ -1,4 +1,5 @@
  -package java_programs;
  +package correct_java_programs;
  +
   /*
    * To change this template, choose Tools | Templates
    * and open the template in the editor.
  @@ -12,7 +13,7 @@
       public static int bitcount(int n) {
       int count = 0;
       while (n != 0) {
  -        n = (n ^ (n - 1));
  +        n = (n & (n - 1));
           count++;
       }
       return count;
tree_diff: |+
  New cluster:
  UPDATE from while (n != 0) {
          n = (n ^ (n - 1));
          count++;
      } to while (n != 0) {
          n = (n & (n - 1));
          count++;
      }
  ------------
  ===
  update-node
  ---
  while_statement: while (n != 0) {
          n = (n ^ (n - 1));
          count++;
      } [244,310]
  replace while (n != 0) {
          n = (n ^ (n - 1));
          count++;
      } by while (n != 0) {
          n = (n & (n - 1));
          count++;
      }

...
