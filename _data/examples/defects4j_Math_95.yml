---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: FDistributionImpl
        children: []
        pos: 1118
        length: 17
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private static final long serialVersionUID = -8516354193418641566L;
          children: []
          pos: 1273
          length: 67
        - type: field_declaration
          fields:
            text: private double numeratorDegreesOfFreedom;
          children: []
          pos: 1389
          length: 41
        - type: field_declaration
          fields:
            text: private double denominatorDegreesOfFreedom;
          children: []
          pos: 1479
          length: 43
        - type: constructor_declaration
          fields:
            text: |-
              public FDistributionImpl(double numeratorDegreesOfFreedom,
                          double denominatorDegreesOfFreedom) {
                      super();
                      setNumeratorDegreesOfFreedom(numeratorDegreesOfFreedom);
                      setDenominatorDegreesOfFreedom(denominatorDegreesOfFreedom);
                  }
          children: []
          pos: 1767
          length: 265
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: cumulativeProbability
              children: []
              pos: 2601
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double x
                children: []
                pos: 2623
                length: 8
              pos: 2587
              length: 426
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: double ret;
                children: []
                pos: 2664
                length: 11
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_or_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: x
                            children: []
                            pos: 2688
                            length: 1
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: '0.0'
                            children: []
                            pos: 2693
                            length: 3
                        children: []
                        pos: 2688
                        length: 8
                    children: []
                    pos: 2687
                    length: 10
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ret = 0.0;
                    children: []
                    pos: 2712
                    length: 10
                  pos: 2698
                  length: 34
                pos: 2684
                length: 303
              - type: return_statement
                fields:
                  text: return ret;
                children: []
                pos: 2996
                length: 11
              pos: 2654
              length: 359
          children: []
          pos: 2587
          length: 426
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: inverseCumulativeProbability
              children: []
              pos: 3619
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final double p
                children: []
                pos: 3648
                length: 14
              pos: 3605
              length: 282
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: p
                            children: []
                            pos: 3708
                            length: 1
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 3713
                            length: 1
                        children: []
                        pos: 3708
                        length: 6
                    children: []
                    pos: 3707
                    length: 8
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return 0d;
                    children: []
                    pos: 3730
                    length: 10
                  pos: 3716
                  length: 34
                pos: 3704
                length: 46
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: p
                            children: []
                            pos: 3763
                            length: 1
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '1'
                            children: []
                            pos: 3768
                            length: 1
                        children: []
                        pos: 3763
                        length: 6
                    children: []
                    pos: 3762
                    length: 8
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Double.POSITIVE_INFINITY;
                    children: []
                    pos: 3785
                    length: 32
                  pos: 3771
                  length: 56
                pos: 3759
                length: 68
              - type: return_statement
                fields:
                  text: return super.inverseCumulativeProbability(p);
                children: []
                pos: 3836
                length: 45
              pos: 3694
              length: 193
          children: []
          pos: 3605
          length: 282
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getDomainLowerBound
              children: []
              pos: 4322
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double p
                children: []
                pos: 4342
                length: 8
              pos: 4305
              length: 74
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return 0.0;
                children: []
                pos: 4362
                length: 11
              pos: 4352
              length: 27
          children: []
          pos: 4305
          length: 74
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getDomainUpperBound
              children: []
              pos: 4806
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double p
                children: []
                pos: 4826
                length: 8
              pos: 4789
              length: 87
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return Double.MAX_VALUE;
                children: []
                pos: 4846
                length: 24
              pos: 4836
              length: 40
          children: []
          pos: 4789
          length: 87
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getInitialDomain
              children: []
              pos: 5224
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double p
                children: []
                pos: 5241
                length: 8
              pos: 5207
              length: 240
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: double ret = 1.0;
                children: []
                pos: 5261
                length: 17
              - type: local_variable_declaration
                fields:
                  text: double d = getDenominatorDegreesOfFreedom();
                children: []
                pos: 5287
                length: 44
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: greater_than
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: d
                            children: []
                            pos: 5344
                            length: 1
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: '2.0'
                            children: []
                            pos: 5348
                            length: 3
                        children: []
                        pos: 5344
                        length: 7
                    children: []
                    pos: 5343
                    length: 9
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ret = d / (d - 2.0);
                    children: []
                    pos: 5391
                    length: 20
                  pos: 5353
                  length: 68
                pos: 5340
                length: 81
              - type: return_statement
                fields:
                  text: return ret;
                children: []
                pos: 5430
                length: 11
              pos: 5251
              length: 196
          children: []
          pos: 5207
          length: 240
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: setNumeratorDegreesOfFreedom
              children: []
              pos: 5707
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double degreesOfFreedom
                children: []
                pos: 5736
                length: 23
              pos: 5695
              length: 286
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_or_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: degreesOfFreedom
                            children: []
                            pos: 5775
                            length: 16
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: '0.0'
                            children: []
                            pos: 5795
                            length: 3
                        children: []
                        pos: 5775
                        length: 23
                    children: []
                    pos: 5774
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: |-
                        throw new IllegalArgumentException(
                                        "degrees of freedom must be positive.");
                    children: []
                    pos: 5814
                    length: 92
                  pos: 5800
                  length: 116
                pos: 5771
                length: 145
              - type: expression_statement
                fields:
                  text: this.numeratorDegreesOfFreedom = degreesOfFreedom;
                children: []
                pos: 5925
                length: 50
              pos: 5761
              length: 220
          children: []
          pos: 5695
          length: 286
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getNumeratorDegreesOfFreedom
              children: []
              pos: 6118
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6104
              length: 94
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return numeratorDegreesOfFreedom;
                children: []
                pos: 6159
                length: 33
              pos: 6149
              length: 49
          children: []
          pos: 6104
          length: 94
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: setDenominatorDegreesOfFreedom
              children: []
              pos: 6462
              length: 30
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double degreesOfFreedom
                children: []
                pos: 6493
                length: 23
              pos: 6450
              length: 290
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_or_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: degreesOfFreedom
                            children: []
                            pos: 6532
                            length: 16
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: '0.0'
                            children: []
                            pos: 6552
                            length: 3
                        children: []
                        pos: 6532
                        length: 23
                    children: []
                    pos: 6531
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: |-
                        throw new IllegalArgumentException(
                                        "degrees of freedom must be positive.");
                    children: []
                    pos: 6571
                    length: 92
                  pos: 6557
                  length: 116
                pos: 6528
                length: 145
              - type: expression_statement
                fields:
                  text: this.denominatorDegreesOfFreedom = degreesOfFreedom;
                children: []
                pos: 6682
                length: 52
              pos: 6518
              length: 222
          children: []
          pos: 6450
          length: 290
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getDenominatorDegreesOfFreedom
              children: []
              pos: 6881
              length: 30
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6867
              length: 98
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return denominatorDegreesOfFreedom;
                children: []
                pos: 6924
                length: 35
              pos: 6914
              length: 51
          children: []
          pos: 6867
          length: 98
        pos: 1105
        length: 5862
    children: []
    pos: 1105
    length: 5862
  pos: 0
  length: 6968
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: FDistributionImpl
        children: []
        pos: 1118
        length: 17
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private static final long serialVersionUID = -8516354193418641566L;
          children: []
          pos: 1273
          length: 67
        - type: field_declaration
          fields:
            text: private double numeratorDegreesOfFreedom;
          children: []
          pos: 1389
          length: 41
        - type: field_declaration
          fields:
            text: private double denominatorDegreesOfFreedom;
          children: []
          pos: 1479
          length: 43
        - type: constructor_declaration
          fields:
            text: |-
              public FDistributionImpl(double numeratorDegreesOfFreedom,
                          double denominatorDegreesOfFreedom) {
                      super();
                      setNumeratorDegreesOfFreedom(numeratorDegreesOfFreedom);
                      setDenominatorDegreesOfFreedom(denominatorDegreesOfFreedom);
                  }
          children: []
          pos: 1767
          length: 265
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: cumulativeProbability
              children: []
              pos: 2601
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double x
                children: []
                pos: 2623
                length: 8
              pos: 2587
              length: 426
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: double ret;
                children: []
                pos: 2664
                length: 11
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_or_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: x
                            children: []
                            pos: 2688
                            length: 1
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: '0.0'
                            children: []
                            pos: 2693
                            length: 3
                        children: []
                        pos: 2688
                        length: 8
                    children: []
                    pos: 2687
                    length: 10
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ret = 0.0;
                    children: []
                    pos: 2712
                    length: 10
                  pos: 2698
                  length: 34
                pos: 2684
                length: 303
              - type: return_statement
                fields:
                  text: return ret;
                children: []
                pos: 2996
                length: 11
              pos: 2654
              length: 359
          children: []
          pos: 2587
          length: 426
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: inverseCumulativeProbability
              children: []
              pos: 3619
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final double p
                children: []
                pos: 3648
                length: 14
              pos: 3605
              length: 282
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: p
                            children: []
                            pos: 3708
                            length: 1
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 3713
                            length: 1
                        children: []
                        pos: 3708
                        length: 6
                    children: []
                    pos: 3707
                    length: 8
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return 0d;
                    children: []
                    pos: 3730
                    length: 10
                  pos: 3716
                  length: 34
                pos: 3704
                length: 46
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: p
                            children: []
                            pos: 3763
                            length: 1
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '1'
                            children: []
                            pos: 3768
                            length: 1
                        children: []
                        pos: 3763
                        length: 6
                    children: []
                    pos: 3762
                    length: 8
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Double.POSITIVE_INFINITY;
                    children: []
                    pos: 3785
                    length: 32
                  pos: 3771
                  length: 56
                pos: 3759
                length: 68
              - type: return_statement
                fields:
                  text: return super.inverseCumulativeProbability(p);
                children: []
                pos: 3836
                length: 45
              pos: 3694
              length: 193
          children: []
          pos: 3605
          length: 282
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getDomainLowerBound
              children: []
              pos: 4322
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double p
                children: []
                pos: 4342
                length: 8
              pos: 4305
              length: 74
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return 0.0;
                children: []
                pos: 4362
                length: 11
              pos: 4352
              length: 27
          children: []
          pos: 4305
          length: 74
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getDomainUpperBound
              children: []
              pos: 4806
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double p
                children: []
                pos: 4826
                length: 8
              pos: 4789
              length: 87
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return Double.MAX_VALUE;
                children: []
                pos: 4846
                length: 24
              pos: 4836
              length: 40
          children: []
          pos: 4789
          length: 87
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getInitialDomain
              children: []
              pos: 5224
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double p
                children: []
                pos: 5241
                length: 8
              pos: 5207
              length: 201
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: double ret;
                children: []
                pos: 5261
                length: 11
              - type: local_variable_declaration
                fields:
                  text: double d = getDenominatorDegreesOfFreedom();
                children: []
                pos: 5281
                length: 44
              - type: expression_statement
                fields:
                  text: ret = d / (d - 2.0);
                children: []
                pos: 5362
                length: 20
              - type: return_statement
                fields:
                  text: return ret;
                children: []
                pos: 5391
                length: 11
              pos: 5251
              length: 157
          children: []
          pos: 5207
          length: 201
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: setNumeratorDegreesOfFreedom
              children: []
              pos: 5668
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double degreesOfFreedom
                children: []
                pos: 5697
                length: 23
              pos: 5656
              length: 286
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_or_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: degreesOfFreedom
                            children: []
                            pos: 5736
                            length: 16
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: '0.0'
                            children: []
                            pos: 5756
                            length: 3
                        children: []
                        pos: 5736
                        length: 23
                    children: []
                    pos: 5735
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: |-
                        throw new IllegalArgumentException(
                                        "degrees of freedom must be positive.");
                    children: []
                    pos: 5775
                    length: 92
                  pos: 5761
                  length: 116
                pos: 5732
                length: 145
              - type: expression_statement
                fields:
                  text: this.numeratorDegreesOfFreedom = degreesOfFreedom;
                children: []
                pos: 5886
                length: 50
              pos: 5722
              length: 220
          children: []
          pos: 5656
          length: 286
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getNumeratorDegreesOfFreedom
              children: []
              pos: 6079
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6065
              length: 94
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return numeratorDegreesOfFreedom;
                children: []
                pos: 6120
                length: 33
              pos: 6110
              length: 49
          children: []
          pos: 6065
          length: 94
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: setDenominatorDegreesOfFreedom
              children: []
              pos: 6423
              length: 30
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double degreesOfFreedom
                children: []
                pos: 6454
                length: 23
              pos: 6411
              length: 290
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_or_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: degreesOfFreedom
                            children: []
                            pos: 6493
                            length: 16
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: '0.0'
                            children: []
                            pos: 6513
                            length: 3
                        children: []
                        pos: 6493
                        length: 23
                    children: []
                    pos: 6492
                    length: 25
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: |-
                        throw new IllegalArgumentException(
                                        "degrees of freedom must be positive.");
                    children: []
                    pos: 6532
                    length: 92
                  pos: 6518
                  length: 116
                pos: 6489
                length: 145
              - type: expression_statement
                fields:
                  text: this.denominatorDegreesOfFreedom = degreesOfFreedom;
                children: []
                pos: 6643
                length: 52
              pos: 6479
              length: 222
          children: []
          pos: 6411
          length: 290
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getDenominatorDegreesOfFreedom
              children: []
              pos: 6842
              length: 30
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 6828
              length: 98
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return denominatorDegreesOfFreedom;
                children: []
                pos: 6885
                length: 35
              pos: 6875
              length: 51
          children: []
          pos: 6828
          length: 98
        pos: 1105
        length: 5823
    children: []
    pos: 1105
    length: 5823
  pos: 0
  length: 6929
text_diff: "--- before\n+++ after\n@@ -141,12 +141,10 @@\n      * @return initial
  domain value\n      */\n     protected double getInitialDomain(double p) {\n-        double
  ret = 1.0;\n+        double ret;\n         double d = getDenominatorDegreesOfFreedom();\n-
  \       if (d > 2.0) {\n             // use mean\n             ret = d / (d - 2.0);\n-
  \       }\n         return ret;\n     }\n     \n"
tree_diff: |+
  New cluster:
  UPDATE from double ret = 1.0; to double ret;
  ------------
  ===
  update-node
  ---
  local_variable_declaration: double ret = 1.0; [5261,5278]
  replace double ret = 1.0; by double ret;

  New cluster:
  ===
  insert-node
  ---
  expression_statement: ret = d / (d - 2.0); [5362,5382]
  to
  block [5251,5447]
  at 2
  ------------
  ===
  insert-node
  ---
  expression_statement: ret = d / (d - 2.0); [5362,5382]
  to
  block [5251,5447]
  at 2

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  if_statement [5340,5421]
      parenthesized_expression [5343,5352]
          greater_than [5344,5351]
              identifier: d [5344,5345]
              decimal_floating_point_literal: 2.0 [5348,5351]
      block [5353,5421]
          expression_statement: ret = d / (d - 2.0); [5391,5411]

...
