---
language: python
before_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: next_permutation
        children: []
        pos: 4
        length: 16
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: perm
          children: []
          pos: 21
          length: 4
        pos: 0
        length: 406
      body:
        type: block
        fields: {}
        children:
        - type: for_statement
          fields:
            text: |-
              for i in range(len(perm) - 2, -1, -1):
                      if perm[i] < perm[i + 1]:
                          for j in range(len(perm) - 1, i, -1):
                              if perm[j] < perm[i]:
                                  next_perm = list(perm)
                                  next_perm[i], next_perm[j] = perm[j], perm[i]
                                  next_perm[i + 1:] = reversed(next_perm[i + 1:])
                                  return next_perm
          children: []
          pos: 32
          length: 374
        pos: 32
        length: 374
    children: []
    pos: 0
    length: 406
  pos: 0
  length: 407
after_tree:
  type: child
  fields: {}
  children:
  - type: method_declaration
    fields:
      name:
        type: identifier
        fields:
          text: next_permutation
        children: []
        pos: 4
        length: 16
      parameters:
        type: method_parameters
        fields: {}
        children:
        - type: identifier
          fields:
            text: perm
          children: []
          pos: 21
          length: 4
        pos: 0
        length: 406
      body:
        type: block
        fields: {}
        children:
        - type: for_statement
          fields:
            text: |-
              for i in range(len(perm) - 2, -1, -1):
                      if perm[i] < perm[i + 1]:
                          for j in range(len(perm) - 1, i, -1):
                              if perm[i] < perm[j]:
                                  next_perm = list(perm)
                                  next_perm[i], next_perm[j] = perm[j], perm[i]
                                  next_perm[i + 1:] = reversed(next_perm[i + 1:])
                                  return next_perm
          children: []
          pos: 32
          length: 374
        pos: 32
        length: 374
    children: []
    pos: 0
    length: 406
  pos: 0
  length: 407
text_diff: |
  --- before
  +++ after
  @@ -2,7 +2,7 @@
       for i in range(len(perm) - 2, -1, -1):
           if perm[i] < perm[i + 1]:
               for j in range(len(perm) - 1, i, -1):
  -                if perm[j] < perm[i]:
  +                if perm[i] < perm[j]:
                       next_perm = list(perm)
                       next_perm[i], next_perm[j] = perm[j], perm[i]
                       next_perm[i + 1:] = reversed(next_perm[i + 1:])
tree_diff: |+
  New cluster:
  UPDATE from for i in range(len(perm) - 2, -1, -1):
          if perm[i] < perm[i + 1]:
              for j in range(len(perm) - 1, i, -1):
                  if perm[j] < perm[i]:
                      next_perm = list(perm)
                      next_perm[i], next_perm[j] = perm[j], perm[i]
                      next_perm[i + 1:] = reversed(next_perm[i + 1:])
                      return next_perm to for i in range(len(perm) - 2, -1, -1):
          if perm[i] < perm[i + 1]:
              for j in range(len(perm) - 1, i, -1):
                  if perm[i] < perm[j]:
                      next_perm = list(perm)
                      next_perm[i], next_perm[j] = perm[j], perm[i]
                      next_perm[i + 1:] = reversed(next_perm[i + 1:])
                      return next_perm
  ------------
  ===
  update-node
  ---
  for_statement: for i in range(len(perm) - 2, -1, -1):
          if perm[i] < perm[i + 1]:
              for j in range(len(perm) - 1, i, -1):
                  if perm[j] < perm[i]:
                      next_perm = list(perm)
                      next_perm[i], next_perm[j] = perm[j], perm[i]
                      next_perm[i + 1:] = reversed(next_perm[i + 1:])
                      return next_perm [32,406]
  replace for i in range(len(perm) - 2, -1, -1):
          if perm[i] < perm[i + 1]:
              for j in range(len(perm) - 1, i, -1):
                  if perm[j] < perm[i]:
                      next_perm = list(perm)
                      next_perm[i], next_perm[j] = perm[j], perm[i]
                      next_perm[i + 1:] = reversed(next_perm[i + 1:])
                      return next_perm by for i in range(len(perm) - 2, -1, -1):
          if perm[i] < perm[i + 1]:
              for j in range(len(perm) - 1, i, -1):
                  if perm[i] < perm[j]:
                      next_perm = list(perm)
                      next_perm[i], next_perm[j] = perm[j], perm[i]
                      next_perm[i + 1:] = reversed(next_perm[i + 1:])
                      return next_perm

...
