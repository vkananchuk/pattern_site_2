---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: UnionContext
        children: []
        pos: 1286
        length: 12
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private EvalContext contexts[];
          children: []
          pos: 1328
          length: 31
        - type: field_declaration
          fields:
            text: private boolean prepared;
          children: []
          pos: 1364
          length: 25
        - type: constructor_declaration
          fields:
            text: |-
              public UnionContext(EvalContext parentContext, EvalContext contexts[]) {
                      super(parentContext, new BasicNodeSet());
                      this.contexts = contexts;
                  }
          children: []
          pos: 1395
          length: 162
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getDocumentOrder
              children: []
              pos: 1574
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 1563
              length: 104
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: 'return contexts.length > 1 ? 1 : super.getDocumentOrder();'
                children: []
                pos: 1603
                length: 58
              pos: 1593
              length: 74
          children: []
          pos: 1563
          length: 104
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: setPosition
              children: []
              pos: 1688
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int position
                children: []
                pos: 1700
                length: 12
              pos: 1673
              length: 895
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!prepared"
                        children: []
                        pos: 1728
                        length: 9
                    children: []
                    pos: 1727
                    length: 11
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: prepared = true;
                    children: []
                    pos: 1753
                    length: 16
                  - type: local_variable_declaration
                    fields:
                      text: BasicNodeSet nodeSet = (BasicNodeSet) getNodeSet();
                    children: []
                    pos: 1782
                    length: 51
                  - type: local_variable_declaration
                    fields:
                      text: ArrayList pointers = new ArrayList();
                    children: []
                    pos: 1846
                    length: 37
                  - type: for_statement
                    fields:
                      text: |-
                        for (int i = 0; i < contexts.length; i++) {
                                        EvalContext ctx = (EvalContext) contexts[i];
                                        while (ctx.nextSet()) {
                                            while (ctx.nextNode()) {
                                                NodePointer ptr = ctx.getCurrentNodePointer();
                                                if (!pointers.contains(ptr)) {
                                                    pointers.add(ptr);
                                                }
                                            }
                                        }
                                    }
                    children: []
                    pos: 1896
                    length: 442
                  - type: expression_statement
                    fields:
                      text: sortPointers(pointers);
                    children: []
                    pos: 2351
                    length: 23
                  - type: for_statement
                    fields:
                      text: |-
                        for (Iterator it = pointers.iterator(); it.hasNext();) {
                                        nodeSet.add((Pointer) it.next());
                                    }
                    children: []
                    pos: 2388
                    length: 120
                  pos: 1739
                  length: 779
                pos: 1724
                length: 794
              - type: return_statement
                fields:
                  text: return super.setPosition(position);
                children: []
                pos: 2527
                length: 35
              pos: 1714
              length: 854
          children: []
          pos: 1673
          length: 895
        pos: 1273
        length: 1297
    children: []
    pos: 1273
    length: 1297
  pos: 0
  length: 2570
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: UnionContext
        children: []
        pos: 1217
        length: 12
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private EvalContext contexts[];
          children: []
          pos: 1259
          length: 31
        - type: field_declaration
          fields:
            text: private boolean prepared;
          children: []
          pos: 1295
          length: 25
        - type: constructor_declaration
          fields:
            text: |-
              public UnionContext(EvalContext parentContext, EvalContext contexts[]) {
                      super(parentContext, new BasicNodeSet());
                      this.contexts = contexts;
                  }
          children: []
          pos: 1326
          length: 162
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getDocumentOrder
              children: []
              pos: 1505
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 1494
              length: 104
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: 'return contexts.length > 1 ? 1 : super.getDocumentOrder();'
                children: []
                pos: 1534
                length: 58
              pos: 1524
              length: 74
          children: []
          pos: 1494
          length: 104
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: setPosition
              children: []
              pos: 1619
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: int position
                children: []
                pos: 1631
                length: 12
              pos: 1604
              length: 771
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: unary_expression
                        fields:
                          text: "!prepared"
                        children: []
                        pos: 1659
                        length: 9
                    children: []
                    pos: 1658
                    length: 11
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: prepared = true;
                    children: []
                    pos: 1684
                    length: 16
                  - type: local_variable_declaration
                    fields:
                      text: BasicNodeSet nodeSet = (BasicNodeSet) getNodeSet();
                    children: []
                    pos: 1713
                    length: 51
                  - type: local_variable_declaration
                    fields:
                      text: ArrayList pointers = new ArrayList();
                    children: []
                    pos: 1777
                    length: 37
                  - type: for_statement
                    fields:
                      text: |-
                        for (int i = 0; i < contexts.length; i++) {
                                        EvalContext ctx = (EvalContext) contexts[i];
                                        while (ctx.nextSet()) {
                                            while (ctx.nextNode()) {
                                                NodePointer ptr = ctx.getCurrentNodePointer();
                                                if (!pointers.contains(ptr)) {
                                                    nodeSet.add(ptr);
                                                    pointers.add(ptr);
                                                }
                                            }
                                        }
                                    }
                    children: []
                    pos: 1827
                    length: 488
                  pos: 1670
                  length: 655
                pos: 1655
                length: 670
              - type: return_statement
                fields:
                  text: return super.setPosition(position);
                children: []
                pos: 2334
                length: 35
              pos: 1645
              length: 730
          children: []
          pos: 1604
          length: 771
        pos: 1204
        length: 1173
    children: []
    pos: 1204
    length: 1173
  pos: 0
  length: 2378
text_diff: "--- before\n+++ after\n@@ -17,10 +17,8 @@\n package org.apache.commons.jxpath.ri.axes;\n
  \n import java.util.ArrayList;\n-import java.util.Iterator;\n \n import org.apache.commons.jxpath.BasicNodeSet;\n-import
  org.apache.commons.jxpath.Pointer;\n import org.apache.commons.jxpath.ri.EvalContext;\n
  import org.apache.commons.jxpath.ri.model.NodePointer;\n \n@@ -55,17 +53,13 @@\n
  \                    while (ctx.nextNode()) {\n                         NodePointer
  ptr = ctx.getCurrentNodePointer();\n                         if (!pointers.contains(ptr))
  {\n+                            nodeSet.add(ptr);\n                             pointers.add(ptr);\n
  \                        }\n                     }\n                 }\n             }\n-
  \           sortPointers(pointers);\n-\n-            for (Iterator it = pointers.iterator();
  it.hasNext();) {\n-                nodeSet.add((Pointer) it.next());\n-            }\n
  \        }\n         return super.setPosition(position);\n     }\n-}\n\\ No newline
  at end of file\n+}\n"
tree_diff: |+
  New cluster:
  UPDATE from for (int i = 0; i < contexts.length; i++) {
                  EvalContext ctx = (EvalContext) contexts[i];
                  while (ctx.nextSet()) {
                      while (ctx.nextNode()) {
                          NodePointer ptr = ctx.getCurrentNodePointer();
                          if (!pointers.contains(ptr)) {
                              pointers.add(ptr);
                          }
                      }
                  }
              } to for (int i = 0; i < contexts.length; i++) {
                  EvalContext ctx = (EvalContext) contexts[i];
                  while (ctx.nextSet()) {
                      while (ctx.nextNode()) {
                          NodePointer ptr = ctx.getCurrentNodePointer();
                          if (!pointers.contains(ptr)) {
                              nodeSet.add(ptr);
                              pointers.add(ptr);
                          }
                      }
                  }
              }
  ------------
  ===
  update-node
  ---
  for_statement: for (int i = 0; i < contexts.length; i++) {
                  EvalContext ctx = (EvalContext) contexts[i];
                  while (ctx.nextSet()) {
                      while (ctx.nextNode()) {
                          NodePointer ptr = ctx.getCurrentNodePointer();
                          if (!pointers.contains(ptr)) {
                              pointers.add(ptr);
                          }
                      }
                  }
              } [1896,2338]
  replace for (int i = 0; i < contexts.length; i++) {
                  EvalContext ctx = (EvalContext) contexts[i];
                  while (ctx.nextSet()) {
                      while (ctx.nextNode()) {
                          NodePointer ptr = ctx.getCurrentNodePointer();
                          if (!pointers.contains(ptr)) {
                              pointers.add(ptr);
                          }
                      }
                  }
              } by for (int i = 0; i < contexts.length; i++) {
                  EvalContext ctx = (EvalContext) contexts[i];
                  while (ctx.nextSet()) {
                      while (ctx.nextNode()) {
                          NodePointer ptr = ctx.getCurrentNodePointer();
                          if (!pointers.contains(ptr)) {
                              nodeSet.add(ptr);
                              pointers.add(ptr);
                          }
                      }
                  }
              }

  New cluster:
  ===
  delete-node
  ---
  expression_statement: sortPointers(pointers); [2351,2374]
  ===
  ------------
  ===
  delete-node
  ---
  expression_statement: sortPointers(pointers); [2351,2374]
  ===

  New cluster:
  ===
  delete-node
  ---
  for_statement: for (Iterator it = pointers.iterator(); it.hasNext();) {
                  nodeSet.add((Pointer) it.next());
              } [2388,2508]
  ===
  ------------
  ===
  delete-node
  ---
  for_statement: for (Iterator it = pointers.iterator(); it.hasNext();) {
                  nodeSet.add((Pointer) it.next());
              } [2388,2508]
  ===

...
