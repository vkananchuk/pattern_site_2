---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: NormalDistributionImpl
        children: []
        pos: 1186
        length: 22
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private static final long serialVersionUID = 8589540077390120676L;
          children: []
          pos: 1355
          length: 66
        - type: field_declaration
          fields:
            text: private double mean = 0;
          children: []
          pos: 1469
          length: 24
        - type: field_declaration
          fields:
            text: private double standardDeviation = 1;
          children: []
          pos: 1559
          length: 37
        - type: constructor_declaration
          fields:
            text: |-
              public NormalDistributionImpl(double mean, double sd){
                      super();
                      setMean(mean);
                      setStandardDeviation(sd);
                  }
          children: []
          pos: 1807
          length: 134
        - type: constructor_declaration
          fields:
            text: |-
              public NormalDistributionImpl(){
                      this(0.0, 1.0);
                  }
          children: []
          pos: 2075
          length: 62
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getMean
              children: []
              pos: 2244
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 2230
              length: 52
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return mean;
                children: []
                pos: 2264
                length: 12
              pos: 2254
              length: 28
          children: []
          pos: 2230
          length: 52
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: setMean
              children: []
              pos: 2385
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double mean
                children: []
                pos: 2393
                length: 11
              pos: 2373
              length: 66
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: this.mean = mean;
                children: []
                pos: 2416
                length: 17
              pos: 2406
              length: 33
          children: []
          pos: 2373
          length: 66
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getStandardDeviation
              children: []
              pos: 2569
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 2555
              length: 78
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return standardDeviation;
                children: []
                pos: 2602
                length: 25
              pos: 2592
              length: 41
          children: []
          pos: 2555
          length: 78
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: setStandardDeviation
              children: []
              pos: 2839
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double sd
                children: []
                pos: 2860
                length: 9
              pos: 2827
              length: 230
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_or_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: sd
                            children: []
                            pos: 2885
                            length: 2
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: '0.0'
                            children: []
                            pos: 2891
                            length: 3
                        children: []
                        pos: 2885
                        length: 9
                    children: []
                    pos: 2884
                    length: 11
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: |-
                        throw new IllegalArgumentException(
                                        "Standard deviation must be positive.");
                    children: []
                    pos: 2910
                    length: 92
                  pos: 2896
                  length: 116
                pos: 2881
                length: 131
              - type: expression_statement
                fields:
                  text: standardDeviation = sd;
                children: []
                pos: 3028
                length: 23
              pos: 2871
              length: 186
          children: []
          pos: 2827
          length: 230
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: cumulativeProbability
              children: []
              pos: 3487
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double x
                children: []
                pos: 3509
                length: 8
              pos: 3473
              length: 524
            body:
              type: block
              fields: {}
              children:
              - type: try_statement
                fields:
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: return_statement
                      fields:
                        text: |-
                          return 0.5 * (1.0 + Erf.erf((x - mean) /
                                              (standardDeviation * Math.sqrt(2.0))));
                      children: []
                      pos: 3568
                      length: 100
                    pos: 3554
                    length: 124
                  excepts:
                    type: excepts
                    fields: {}
                    children:
                    - type: catch_clause
                      fields:
                        text: |-
                          catch (MaxIterationsExceededException ex) {
                                      if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                                          return 0.0d;
                                      } else if (x > (mean + 20 * standardDeviation)) {
                                          return 1.0d;
                                      } else {
                                          throw ex;
                                      }
                                  }
                      children: []
                      pos: 3679
                      length: 312
                    pos: 3550
                    length: 441
                children: []
                pos: 3550
                length: 441
              pos: 3540
              length: 457
          children: []
          pos: 3473
          length: 524
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: inverseCumulativeProbability
              children: []
              pos: 4643
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final double p
                children: []
                pos: 4672
                length: 14
              pos: 4629
              length: 300
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: p
                            children: []
                            pos: 4728
                            length: 1
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 4733
                            length: 1
                        children: []
                        pos: 4728
                        length: 6
                    children: []
                    pos: 4727
                    length: 8
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Double.NEGATIVE_INFINITY;
                    children: []
                    pos: 4750
                    length: 32
                  pos: 4736
                  length: 56
                pos: 4724
                length: 68
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: p
                            children: []
                            pos: 4805
                            length: 1
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '1'
                            children: []
                            pos: 4810
                            length: 1
                        children: []
                        pos: 4805
                        length: 6
                    children: []
                    pos: 4804
                    length: 8
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Double.POSITIVE_INFINITY;
                    children: []
                    pos: 4827
                    length: 32
                  pos: 4813
                  length: 56
                pos: 4801
                length: 68
              - type: return_statement
                fields:
                  text: return super.inverseCumulativeProbability(p);
                children: []
                pos: 4878
                length: 45
              pos: 4714
              length: 215
          children: []
          pos: 4629
          length: 300
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getDomainLowerBound
              children: []
              pos: 5360
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double p
                children: []
                pos: 5380
                length: 8
              pos: 5343
              length: 219
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: double ret;
                children: []
                pos: 5400
                length: 11
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: p
                            children: []
                            pos: 5425
                            length: 1
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: ".5"
                            children: []
                            pos: 5429
                            length: 2
                        children: []
                        pos: 5425
                        length: 6
                    children: []
                    pos: 5424
                    length: 8
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ret = -Double.MAX_VALUE;
                    children: []
                    pos: 5447
                    length: 24
                  pos: 5433
                  length: 48
                pos: 5421
                length: 106
              - type: return_statement
                fields:
                  text: return ret;
                children: []
                pos: 5545
                length: 11
              pos: 5390
              length: 172
          children: []
          pos: 5343
          length: 219
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getDomainUpperBound
              children: []
              pos: 5989
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double p
                children: []
                pos: 6009
                length: 8
              pos: 5972
              length: 218
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: double ret;
                children: []
                pos: 6029
                length: 11
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: p
                            children: []
                            pos: 6054
                            length: 1
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: ".5"
                            children: []
                            pos: 6058
                            length: 2
                        children: []
                        pos: 6054
                        length: 6
                    children: []
                    pos: 6053
                    length: 8
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ret = getMean();
                    children: []
                    pos: 6076
                    length: 16
                  pos: 6062
                  length: 40
                pos: 6050
                length: 105
              - type: return_statement
                fields:
                  text: return ret;
                children: []
                pos: 6173
                length: 11
              pos: 6019
              length: 171
          children: []
          pos: 5972
          length: 218
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getInitialDomain
              children: []
              pos: 6538
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double p
                children: []
                pos: 6555
                length: 8
              pos: 6521
              length: 316
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: double ret;
                children: []
                pos: 6575
                length: 11
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: p
                            children: []
                            pos: 6600
                            length: 1
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: ".5"
                            children: []
                            pos: 6604
                            length: 2
                        children: []
                        pos: 6600
                        length: 6
                    children: []
                    pos: 6599
                    length: 8
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ret = getMean() - getStandardDeviation();
                    children: []
                    pos: 6622
                    length: 41
                  pos: 6608
                  length: 65
                pos: 6596
                length: 206
              - type: return_statement
                fields:
                  text: return ret;
                children: []
                pos: 6820
                length: 11
              pos: 6565
              length: 272
          children: []
          pos: 6521
          length: 316
        pos: 1173
        length: 5666
    children: []
    pos: 1173
    length: 5666
  pos: 0
  length: 6840
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: NormalDistributionImpl
        children: []
        pos: 1186
        length: 22
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private static final long serialVersionUID = 8589540077390120676L;
          children: []
          pos: 1355
          length: 66
        - type: field_declaration
          fields:
            text: private double mean = 0;
          children: []
          pos: 1469
          length: 24
        - type: field_declaration
          fields:
            text: private double standardDeviation = 1;
          children: []
          pos: 1559
          length: 37
        - type: constructor_declaration
          fields:
            text: |-
              public NormalDistributionImpl(double mean, double sd){
                      super();
                      setMean(mean);
                      setStandardDeviation(sd);
                  }
          children: []
          pos: 1807
          length: 134
        - type: constructor_declaration
          fields:
            text: |-
              public NormalDistributionImpl(){
                      this(0.0, 1.0);
                  }
          children: []
          pos: 2075
          length: 62
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getMean
              children: []
              pos: 2244
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 2230
              length: 52
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return mean;
                children: []
                pos: 2264
                length: 12
              pos: 2254
              length: 28
          children: []
          pos: 2230
          length: 52
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: setMean
              children: []
              pos: 2385
              length: 7
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double mean
                children: []
                pos: 2393
                length: 11
              pos: 2373
              length: 66
            body:
              type: block
              fields: {}
              children:
              - type: expression_statement
                fields:
                  text: this.mean = mean;
                children: []
                pos: 2416
                length: 17
              pos: 2406
              length: 33
          children: []
          pos: 2373
          length: 66
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getStandardDeviation
              children: []
              pos: 2569
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 2555
              length: 78
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return standardDeviation;
                children: []
                pos: 2602
                length: 25
              pos: 2592
              length: 41
          children: []
          pos: 2555
          length: 78
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: setStandardDeviation
              children: []
              pos: 2839
              length: 20
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double sd
                children: []
                pos: 2860
                length: 9
              pos: 2827
              length: 230
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_or_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: sd
                            children: []
                            pos: 2885
                            length: 2
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: '0.0'
                            children: []
                            pos: 2891
                            length: 3
                        children: []
                        pos: 2885
                        length: 9
                    children: []
                    pos: 2884
                    length: 11
                children:
                - type: block
                  fields: {}
                  children:
                  - type: throw_statement
                    fields:
                      text: |-
                        throw new IllegalArgumentException(
                                        "Standard deviation must be positive.");
                    children: []
                    pos: 2910
                    length: 92
                  pos: 2896
                  length: 116
                pos: 2881
                length: 131
              - type: expression_statement
                fields:
                  text: standardDeviation = sd;
                children: []
                pos: 3028
                length: 23
              pos: 2871
              length: 186
          children: []
          pos: 2827
          length: 230
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: cumulativeProbability
              children: []
              pos: 3487
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double x
                children: []
                pos: 3509
                length: 8
              pos: 3473
              length: 187
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: |-
                    return 0.5 * (1.0 + Erf.erf((x - mean) /
                                        (standardDeviation * Math.sqrt(2.0))));
                children: []
                pos: 3554
                length: 100
              pos: 3540
              length: 120
          children: []
          pos: 3473
          length: 187
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: inverseCumulativeProbability
              children: []
              pos: 4306
              length: 28
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final double p
                children: []
                pos: 4335
                length: 14
              pos: 4292
              length: 300
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: p
                            children: []
                            pos: 4391
                            length: 1
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '0'
                            children: []
                            pos: 4396
                            length: 1
                        children: []
                        pos: 4391
                        length: 6
                    children: []
                    pos: 4390
                    length: 8
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Double.NEGATIVE_INFINITY;
                    children: []
                    pos: 4413
                    length: 32
                  pos: 4399
                  length: 56
                pos: 4387
                length: 68
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: p
                            children: []
                            pos: 4468
                            length: 1
                          right:
                            type: decimal_integer_literal
                            fields:
                              text: '1'
                            children: []
                            pos: 4473
                            length: 1
                        children: []
                        pos: 4468
                        length: 6
                    children: []
                    pos: 4467
                    length: 8
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return Double.POSITIVE_INFINITY;
                    children: []
                    pos: 4490
                    length: 32
                  pos: 4476
                  length: 56
                pos: 4464
                length: 68
              - type: return_statement
                fields:
                  text: return super.inverseCumulativeProbability(p);
                children: []
                pos: 4541
                length: 45
              pos: 4377
              length: 215
          children: []
          pos: 4292
          length: 300
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getDomainLowerBound
              children: []
              pos: 5023
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double p
                children: []
                pos: 5043
                length: 8
              pos: 5006
              length: 219
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: double ret;
                children: []
                pos: 5063
                length: 11
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: p
                            children: []
                            pos: 5088
                            length: 1
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: ".5"
                            children: []
                            pos: 5092
                            length: 2
                        children: []
                        pos: 5088
                        length: 6
                    children: []
                    pos: 5087
                    length: 8
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ret = -Double.MAX_VALUE;
                    children: []
                    pos: 5110
                    length: 24
                  pos: 5096
                  length: 48
                pos: 5084
                length: 106
              - type: return_statement
                fields:
                  text: return ret;
                children: []
                pos: 5208
                length: 11
              pos: 5053
              length: 172
          children: []
          pos: 5006
          length: 219
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getDomainUpperBound
              children: []
              pos: 5652
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double p
                children: []
                pos: 5672
                length: 8
              pos: 5635
              length: 218
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: double ret;
                children: []
                pos: 5692
                length: 11
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: p
                            children: []
                            pos: 5717
                            length: 1
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: ".5"
                            children: []
                            pos: 5721
                            length: 2
                        children: []
                        pos: 5717
                        length: 6
                    children: []
                    pos: 5716
                    length: 8
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ret = getMean();
                    children: []
                    pos: 5739
                    length: 16
                  pos: 5725
                  length: 40
                pos: 5713
                length: 105
              - type: return_statement
                fields:
                  text: return ret;
                children: []
                pos: 5836
                length: 11
              pos: 5682
              length: 171
          children: []
          pos: 5635
          length: 218
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getInitialDomain
              children: []
              pos: 6201
              length: 16
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: double p
                children: []
                pos: 6218
                length: 8
              pos: 6184
              length: 316
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: double ret;
                children: []
                pos: 6238
                length: 11
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: less_than
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: p
                            children: []
                            pos: 6263
                            length: 1
                          right:
                            type: decimal_floating_point_literal
                            fields:
                              text: ".5"
                            children: []
                            pos: 6267
                            length: 2
                        children: []
                        pos: 6263
                        length: 6
                    children: []
                    pos: 6262
                    length: 8
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: ret = getMean() - getStandardDeviation();
                    children: []
                    pos: 6285
                    length: 41
                  pos: 6271
                  length: 65
                pos: 6259
                length: 206
              - type: return_statement
                fields:
                  text: return ret;
                children: []
                pos: 6483
                length: 11
              pos: 6228
              length: 272
          children: []
          pos: 6184
          length: 316
        pos: 1173
        length: 5329
    children: []
    pos: 1173
    length: 5329
  pos: 0
  length: 6503
text_diff: "--- before\n+++ after\n@@ -106,18 +106,8 @@\n      * convergence exception
  is caught and 0 or 1 is returned.\n      */\n     public double cumulativeProbability(double
  x) throws MathException {\n-        try {\n             return 0.5 * (1.0 + Erf.erf((x
  - mean) /\n                     (standardDeviation * Math.sqrt(2.0))));\n-        }
  catch (MaxIterationsExceededException ex) {\n-            if (x < (mean - 20 * standardDeviation))
  { // JDK 1.5 blows at 38\n-                return 0.0d;\n-            } else if
  (x > (mean + 20 * standardDeviation)) {\n-                return 1.0d;\n-            }
  else {\n-                throw ex;\n-            }\n-        }\n     }\n     \n
  \    /**\n"
tree_diff: |+
  New cluster:
  MOVE from method_declaration [3473,3997]
  ------------
  ===
  move-tree
  ---
  block [3554,3678]
      return_statement: return 0.5 * (1.0 + Erf.erf((x - mean) /
                      (standardDeviation * Math.sqrt(2.0)))); [3568,3668]
  to
  method_declaration [3473,3997]
  at 2

  New cluster:
  Unknown cluster type
  ------------
  ===
  delete-tree
  ---
  excepts [3550,3991]
      catch_clause: catch (MaxIterationsExceededException ex) {
              if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                  return 0.0d;
              } else if (x > (mean + 20 * standardDeviation)) {
                  return 1.0d;
              } else {
                  throw ex;
              }
          } [3679,3991]

  New cluster:
  ===
  delete-node
  ---
  block [3540,3997]
  ===
  ------------
  ===
  delete-node
  ---
  block [3540,3997]
  ===
  ===
  delete-node
  ---
  try_statement [3550,3991]
  ===

...
