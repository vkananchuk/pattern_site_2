---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: BuilderBasedDeserializer
        children: []
        pos: 761
        length: 24
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private static final long serialVersionUID = 1L;
          children: []
          pos: 825
          length: 48
        - type: field_declaration
          fields:
            text: protected final AnnotatedMethod _buildMethod;
          children: []
          pos: 879
          length: 45
        - type: constructor_declaration
          fields:
            text: |-
              public BuilderBasedDeserializer(BeanDeserializerBuilder builder,
                          BeanDescription beanDesc,
                          BeanPropertyMap properties, Map<String, SettableBeanProperty> backRefs,
                          Set<String> ignorableProps, boolean ignoreAllUnknown,
                          boolean hasViews)
                  {
                      super(builder, beanDesc, properties, backRefs,
                              ignorableProps, ignoreAllUnknown, hasViews);
                      _buildMethod = builder.getBuildMethod();
                      // 05-Mar-2012, tatu: Can not really make Object Ids work with builders, not yet anyway
                      if (_objectIdReader != null) {
                          throw new IllegalArgumentException("Can not use Object Id with Builder-based deserialization (type "
                                  +beanDesc.getType()+")");
                      }
                  }
          children: []
          pos: 1198
          length: 763
        - type: constructor_declaration
          fields:
            text: |-
              protected BuilderBasedDeserializer(BuilderBasedDeserializer src)
                  {
                      this(src, src._ignoreAllUnknown);
                  }
          children: []
          pos: 2122
          length: 118
        - type: constructor_declaration
          fields:
            text: |-
              protected BuilderBasedDeserializer(BuilderBasedDeserializer src, boolean ignoreAllUnknown)
                  {
                      super(src, ignoreAllUnknown);
                      _buildMethod = src._buildMethod;
                  }
          children: []
          pos: 2246
          length: 181
        - type: constructor_declaration
          fields:
            text: |-
              protected BuilderBasedDeserializer(BuilderBasedDeserializer src, NameTransformer unwrapper) {
                      super(src, unwrapper);
                      _buildMethod = src._buildMethod;
                  }
          children: []
          pos: 2433
          length: 171
        - type: constructor_declaration
          fields:
            text: |-
              public BuilderBasedDeserializer(BuilderBasedDeserializer src, ObjectIdReader oir) {
                      super(src, oir);
                      _buildMethod = src._buildMethod;
                  }
          children: []
          pos: 2610
          length: 155
        - type: constructor_declaration
          fields:
            text: |-
              public BuilderBasedDeserializer(BuilderBasedDeserializer src, Set<String> ignorableProps) {
                      super(src, ignorableProps);
                      _buildMethod = src._buildMethod;
                  }
          children: []
          pos: 2771
          length: 174
        - type: constructor_declaration
          fields:
            text: |-
              public BuilderBasedDeserializer(BuilderBasedDeserializer src, BeanPropertyMap props) {
                      super(src, props);
                      _buildMethod = src._buildMethod;
                  }
          children: []
          pos: 2951
          length: 160
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: unwrappingDeserializer
              children: []
              pos: 3163
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NameTransformer unwrapper
                children: []
                pos: 3186
                length: 25
              pos: 3117
              length: 373
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return new BuilderBasedDeserializer(this, unwrapper);
                children: []
                pos: 3431
                length: 53
              pos: 3217
              length: 273
          children: []
          pos: 3117
          length: 373
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: withObjectIdReader
              children: []
              pos: 3538
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: ObjectIdReader oir
                children: []
                pos: 3557
                length: 18
              pos: 3496
              length: 144
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return new BuilderBasedDeserializer(this, oir);
                children: []
                pos: 3587
                length: 47
              pos: 3577
              length: 63
          children: []
          pos: 3496
          length: 144
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: withIgnorableProperties
              children: []
              pos: 3688
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Set<String> ignorableProps
                children: []
                pos: 3712
                length: 26
              pos: 3646
              length: 168
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return new BuilderBasedDeserializer(this, ignorableProps);
                children: []
                pos: 3750
                length: 58
              pos: 3740
              length: 74
          children: []
          pos: 3646
          length: 168
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: withBeanProperties
              children: []
              pos: 3862
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: BeanPropertyMap props
                children: []
                pos: 3881
                length: 21
              pos: 3820
              length: 149
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return new BuilderBasedDeserializer(this, props);
                children: []
                pos: 3914
                length: 49
              pos: 3904
              length: 65
          children: []
          pos: 3820
          length: 149
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: asArrayDeserializer
              children: []
              pos: 4020
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 3975
              length: 240
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: SettableBeanProperty[] props = _beanProperties.getPropertiesInInsertionOrder();
                children: []
                pos: 4052
                length: 79
              - type: return_statement
                fields:
                  text: return new BeanAsArrayBuilderDeserializer(this, props, _buildMethod);
                children: []
                pos: 4140
                length: 69
              pos: 4042
              length: 173
          children: []
          pos: 3975
          length: 240
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: finishBuild
              children: []
              pos: 4427
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: DeserializationContext ctxt
                children: []
                pos: 4439
                length: 27
              pos: 4404
              length: 432
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 4598
                            length: 4
                          right:
                            type: identifier
                            fields:
                              text: _buildMethod
                            children: []
                            pos: 4606
                            length: 12
                        children: []
                        pos: 4598
                        length: 20
                    children: []
                    pos: 4597
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return builder;
                    children: []
                    pos: 4634
                    length: 15
                  pos: 4620
                  length: 39
                pos: 4594
                length: 65
              - type: try_statement
                fields:
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: return_statement
                      fields:
                        text: return _buildMethod.getMember().invoke(builder);
                      children: []
                      pos: 4686
                      length: 48
                    pos: 4672
                    length: 72
                  excepts:
                    type: excepts
                    fields: {}
                    children:
                    - type: catch_clause
                      fields:
                        text: |-
                          catch (Exception e) {
                                      return wrapInstantiationProblem(e, ctxt);
                                  }
                      children: []
                      pos: 4745
                      length: 85
                    pos: 4668
                    length: 162
                children: []
                pos: 4668
                length: 162
              pos: 4519
              length: 317
          children: []
          pos: 4404
          length: 432
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: deserialize
              children: []
              pos: 4959
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser p
                children: []
                pos: 4971
                length: 12
              pos: 4925
              length: 1589
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JsonToken t = p.getCurrentToken();
                children: []
                pos: 5055
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: t
                            children: []
                            pos: 5133
                            length: 1
                          right:
                            type: field_access
                            fields:
                              text: JsonToken.START_OBJECT
                            children: []
                            pos: 5138
                            length: 22
                        children: []
                        pos: 5133
                        length: 27
                    children: []
                    pos: 5132
                    length: 29
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: t = p.nextToken();
                    children: []
                    pos: 5176
                    length: 18
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: identifier
                            fields:
                              text: _vanillaProcessing
                            children: []
                            pos: 5211
                            length: 18
                        children: []
                        pos: 5210
                        length: 20
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return finishBuild(ctxt, vanillaDeserialize(p, ctxt,
                            t));
                        children: []
                        pos: 5246
                        length: 57
                      pos: 5231
                      length: 86
                    pos: 5207
                    length: 110
                  - type: local_variable_declaration
                    fields:
                      text: Object builder = deserializeFromObject(p, ctxt);
                    children: []
                    pos: 5330
                    length: 48
                  - type: return_statement
                    fields:
                      text: return finishBuild(ctxt, builder);
                    children: []
                    pos: 5391
                    length: 34
                  pos: 5162
                  length: 273
                pos: 5129
                length: 306
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: t
                            children: []
                            pos: 5516
                            length: 1
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 5521
                            length: 4
                        children: []
                        pos: 5516
                        length: 9
                    children: []
                    pos: 5515
                    length: 11
                children:
                - type: block
                  fields: {}
                  children:
                  - type: switch_expression
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: identifier
                            fields:
                              text: t
                            children: []
                            pos: 5549
                            length: 1
                        children: []
                        pos: 5548
                        length: 3
                      body:
                        type: switch_block
                        fields:
                          text: "{\n            case VALUE_STRING:\n                return
                            finishBuild(ctxt, deserializeFromString(p, ctxt));\n            case
                            VALUE_NUMBER_INT:\n                return finishBuild(ctxt,
                            deserializeFromNumber(p, ctxt));\n            case VALUE_NUMBER_FLOAT:\n
                            \           \treturn finishBuild(ctxt, deserializeFromDouble(p,
                            ctxt));\n            case VALUE_EMBEDDED_OBJECT:\n                return
                            p.getEmbeddedObject();\n            case VALUE_TRUE:\n
                            \           case VALUE_FALSE:\n                return
                            finishBuild(ctxt, deserializeFromBoolean(p, ctxt));\n
                            \           case START_ARRAY:\n                // these
                            only work if there's a (delegating) creator...\n                return
                            finishBuild(ctxt, deserializeFromArray(p, ctxt));\n            case
                            FIELD_NAME:\n            case END_OBJECT:\n                return
                            finishBuild(ctxt, deserializeFromObject(p, ctxt));\n            default:\n
                            \           }"
                        children: []
                        pos: 5552
                        length: 885
                    children: []
                    pos: 5541
                    length: 896
                  pos: 5527
                  length: 920
                pos: 5512
                length: 935
              - type: return_statement
                fields:
                  text: return ctxt.handleUnexpectedToken(handledType(), p);
                children: []
                pos: 6456
                length: 52
              pos: 5045
              length: 1469
          children: []
          pos: 4925
          length: 1589
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: deserialize
              children: []
              pos: 6761
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser p
                children: []
                pos: 6773
                length: 12
              pos: 6733
              length: 348
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return finishBuild(ctxt, _deserialize(p, ctxt, builder));
                children: []
                pos: 7018
                length: 57
              pos: 6869
              length: 212
          children: []
          pos: 6733
          length: 348
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: _deserialize
              children: []
              pos: 7294
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser p
                children: []
                pos: 7307
                length: 12
              pos: 7271
              length: 1575
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: _injectables
                            children: []
                            pos: 7448
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 7464
                            length: 4
                        children: []
                        pos: 7448
                        length: 20
                    children: []
                    pos: 7447
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: injectValues(ctxt, builder);
                    children: []
                    pos: 7484
                    length: 28
                  pos: 7470
                  length: 52
                pos: 7444
                length: 78
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: _unwrappedPropertyHandler
                            children: []
                            pos: 7535
                            length: 25
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 7564
                            length: 4
                        children: []
                        pos: 7535
                        length: 33
                    children: []
                    pos: 7534
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return deserializeWithUnwrapped(p, ctxt, builder);
                    children: []
                    pos: 7584
                    length: 50
                  pos: 7570
                  length: 74
                pos: 7531
                length: 113
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: _externalTypeIdHandler
                            children: []
                            pos: 7657
                            length: 22
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 7683
                            length: 4
                        children: []
                        pos: 7657
                        length: 30
                    children: []
                    pos: 7656
                    length: 32
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return deserializeWithExternalTypeId(p, ctxt, builder);
                    children: []
                    pos: 7703
                    length: 55
                  pos: 7689
                  length: 79
                pos: 7653
                length: 115
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: _needViewProcesing
                        children: []
                        pos: 7781
                        length: 18
                    children: []
                    pos: 7780
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Class<?> view = ctxt.getActiveView();
                    children: []
                    pos: 7815
                    length: 37
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: view
                                children: []
                                pos: 7869
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 7877
                                length: 4
                            children: []
                            pos: 7869
                            length: 12
                        children: []
                        pos: 7868
                        length: 14
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return deserializeWithView(p, ctxt, builder, view);
                        children: []
                        pos: 7901
                        length: 51
                      pos: 7883
                      length: 83
                    pos: 7865
                    length: 101
                  pos: 7801
                  length: 175
                pos: 7777
                length: 199
              - type: local_variable_declaration
                fields:
                  text: JsonToken t = p.getCurrentToken();
                children: []
                pos: 7985
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: t
                            children: []
                            pos: 8115
                            length: 1
                          right:
                            type: field_access
                            fields:
                              text: JsonToken.START_OBJECT
                            children: []
                            pos: 8120
                            length: 22
                        children: []
                        pos: 8115
                        length: 27
                    children: []
                    pos: 8114
                    length: 29
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: t = p.nextToken();
                    children: []
                    pos: 8158
                    length: 18
                  pos: 8144
                  length: 42
                pos: 8111
                length: 75
              - type: for_statement
                fields:
                  text: |-
                    for (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {
                                String propName = p.getCurrentName();
                                // Skip field name:
                                p.nextToken();
                                SettableBeanProperty prop = _beanProperties.find(propName);

                                if (prop != null) { // normal case
                                    try {
                                        builder = prop.deserializeSetAndReturn(p, ctxt, builder);
                                    } catch (Exception e) {
                                        wrapAndThrow(e, builder, propName, ctxt);
                                    }
                                    continue;
                                }
                                handleUnknownVanilla(p, ctxt, handledType(), propName);
                            }
                children: []
                pos: 8195
                length: 621
              - type: return_statement
                fields:
                  text: return builder;
                children: []
                pos: 8825
                length: 15
              pos: 7434
              length: 1412
          children: []
          pos: 7271
          length: 1575
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: vanillaDeserialize
              children: []
              pos: 8981
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser p
                children: []
                pos: 9000
                length: 12
              pos: 8960
              length: 877
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Object bean = _valueInstantiator.createUsingDefault(ctxt);
                children: []
                pos: 9128
                length: 58
              - type: for_statement
                fields:
                  text: |-
                    for (; p.getCurrentToken() != JsonToken.END_OBJECT; p.nextToken()) {
                                String propName = p.getCurrentName();
                                // Skip field name:
                                p.nextToken();
                                SettableBeanProperty prop = _beanProperties.find(propName);
                                if (prop != null) { // normal case
                                    try {
                                        bean = prop.deserializeSetAndReturn(p, ctxt, bean);
                                    } catch (Exception e) {
                                        wrapAndThrow(e, bean, propName, ctxt);
                                    }
                                } else {
                                    handleUnknownVanilla(p, ctxt, bean, propName);
                                }
                            }
                children: []
                pos: 9195
                length: 615
              - type: return_statement
                fields:
                  text: return bean;
                children: []
                pos: 9819
                length: 12
              pos: 9118
              length: 719
          children: []
          pos: 8960
          length: 877
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: deserializeFromObject
              children: []
              pos: 9966
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser p
                children: []
                pos: 9988
                length: 12
              pos: 9938
              length: 1522
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: _nonStandardCreation
                        children: []
                        pos: 10101
                        length: 20
                    children: []
                    pos: 10100
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: _unwrappedPropertyHandler
                                children: []
                                pos: 10141
                                length: 25
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 10170
                                length: 4
                            children: []
                            pos: 10141
                            length: 33
                        children: []
                        pos: 10140
                        length: 35
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return deserializeWithUnwrapped(p, ctxt);
                        children: []
                        pos: 10194
                        length: 41
                      pos: 10176
                      length: 73
                    pos: 10137
                    length: 112
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: _externalTypeIdHandler
                                children: []
                                pos: 10266
                                length: 22
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 10292
                                length: 4
                            children: []
                            pos: 10266
                            length: 30
                        children: []
                        pos: 10265
                        length: 32
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return deserializeWithExternalTypeId(p, ctxt);
                        children: []
                        pos: 10316
                        length: 46
                      pos: 10298
                      length: 78
                    pos: 10262
                    length: 114
                  - type: return_statement
                    fields:
                      text: return deserializeFromObjectUsingNonDefault(p, ctxt);
                    children: []
                    pos: 10389
                    length: 53
                  pos: 10123
                  length: 329
                pos: 10097
                length: 355
              - type: local_variable_declaration
                fields:
                  text: Object bean = _valueInstantiator.createUsingDefault(ctxt);
                children: []
                pos: 10461
                length: 58
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: _injectables
                            children: []
                            pos: 10532
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 10548
                            length: 4
                        children: []
                        pos: 10532
                        length: 20
                    children: []
                    pos: 10531
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: injectValues(ctxt, bean);
                    children: []
                    pos: 10568
                    length: 25
                  pos: 10554
                  length: 49
                pos: 10528
                length: 75
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: _needViewProcesing
                        children: []
                        pos: 10616
                        length: 18
                    children: []
                    pos: 10615
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Class<?> view = ctxt.getActiveView();
                    children: []
                    pos: 10650
                    length: 37
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: view
                                children: []
                                pos: 10704
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 10712
                                length: 4
                            children: []
                            pos: 10704
                            length: 12
                        children: []
                        pos: 10703
                        length: 14
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return deserializeWithView(p, ctxt, bean, view);
                        children: []
                        pos: 10736
                        length: 48
                      pos: 10718
                      length: 80
                    pos: 10700
                    length: 98
                  pos: 10636
                  length: 172
                pos: 10612
                length: 196
              - type: for_statement
                fields:
                  text: |-
                    for (; p.getCurrentToken() != JsonToken.END_OBJECT; p.nextToken()) {
                                String propName = p.getCurrentName();
                                // Skip field name:
                                p.nextToken();
                                SettableBeanProperty prop = _beanProperties.find(propName);
                                if (prop != null) { // normal case
                                    try {
                                        bean = prop.deserializeSetAndReturn(p, ctxt, bean);
                                    } catch (Exception e) {
                                        wrapAndThrow(e, bean, propName, ctxt);
                                    }
                                    continue;
                                }
                                handleUnknownVanilla(p, ctxt, bean, propName);
                            }
                children: []
                pos: 10817
                length: 616
              - type: return_statement
                fields:
                  text: return bean;
                children: []
                pos: 11442
                length: 12
              pos: 10087
              length: 1373
          children: []
          pos: 9938
          length: 1522
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: _deserializeUsingPropertyBased
              children: []
              pos: 11912
              length: 30
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final JsonParser p
                children: []
                pos: 11943
                length: 18
              pos: 11841
              length: 3699
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final PropertyBasedCreator creator = _propertyBasedCreator;
                children: []
                pos: 12076
                length: 59
              - type: local_variable_declaration
                fields:
                  text: PropertyValueBuffer buffer = creator.startBuilding(p, ctxt,
                    _objectIdReader);
                children: []
                pos: 12144
                length: 77
              - type: local_variable_declaration
                fields:
                  text: TokenBuffer unknown = null;
                children: []
                pos: 12322
                length: 27
              - type: local_variable_declaration
                fields:
                  text: JsonToken t = p.getCurrentToken();
                children: []
                pos: 12359
                length: 34
              - type: for_statement
                fields:
                  text: |-
                    for (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {
                                String propName = p.getCurrentName();
                                p.nextToken(); // to point to value
                                // creator property?
                                SettableBeanProperty creatorProp = creator.findCreatorProperty(propName);
                                if (creatorProp != null) {
                                    // Last creator property to set?
                                    if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {
                                        p.nextToken(); // to move to following FIELD_NAME/END_OBJECT
                                        Object bean;
                                        try {
                                            bean = creator.build(ctxt, buffer);
                                        } catch (Exception e) {
                                            wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);
                                            continue; // never gets here
                                        }
                                        //  polymorphic?
                                        if (bean.getClass() != _beanType.getRawClass()) {
                                            return handlePolymorphic(p, ctxt, bean, unknown);
                                        }
                                        if (unknown != null) { // nope, just extra unknown stuff...
                                            bean = handleUnknownProperties(ctxt, bean, unknown);
                                        }
                                        // or just clean?
                                        return _deserialize(p, ctxt, bean);
                                    }
                                    continue;
                                }
                                // Object Id property?
                                if (buffer.readIdProperty(propName)) {
                                    continue;
                                }
                                // regular property? needs buffering
                                SettableBeanProperty prop = _beanProperties.find(propName);
                                if (prop != null) {
                                    buffer.bufferProperty(prop, prop.deserialize(p, ctxt));
                                    continue;
                                }
                                // As per [JACKSON-313], things marked as ignorable should not be
                                // passed to any setter
                                if (_ignorableProps != null && _ignorableProps.contains(propName)) {
                                    handleIgnoredProperty(p, ctxt, handledType(), propName);
                                    continue;
                                }
                                // "any property"?
                                if (_anySetter != null) {
                                    buffer.bufferAnyProperty(_anySetter, propName, _anySetter.deserialize(p, ctxt));
                                    continue;
                                }
                                // Ok then, let's collect the whole field; name and value
                                if (unknown == null) {
                                    unknown = new TokenBuffer(p, ctxt);
                                }
                                unknown.writeFieldName(propName);
                                unknown.copyCurrentStructure(p);
                            }
                children: []
                pos: 12402
                length: 2564
              - type: local_variable_declaration
                fields:
                  text: Object bean;
                children: []
                pos: 15010
                length: 12
              - type: try_statement
                fields:
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: expression_statement
                      fields:
                        text: bean = creator.build(ctxt, buffer);
                      children: []
                      pos: 15049
                      length: 35
                    pos: 15035
                    length: 59
                  excepts:
                    type: excepts
                    fields: {}
                    children:
                    - type: catch_clause
                      fields:
                        text: |-
                          catch (Exception e) {
                                      bean = wrapInstantiationProblem(e, ctxt);
                                  }
                      children: []
                      pos: 15095
                      length: 85
                    pos: 15031
                    length: 149
                children: []
                pos: 15031
                length: 149
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: unknown
                            children: []
                            pos: 15193
                            length: 7
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 15204
                            length: 4
                        children: []
                        pos: 15193
                        length: 15
                    children: []
                    pos: 15192
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: bean.getClass()
                                children: []
                                pos: 15256
                                length: 15
                              right:
                                type: method_invocation
                                fields:
                                  text: _beanType.getRawClass()
                                children: []
                                pos: 15275
                                length: 23
                            children: []
                            pos: 15256
                            length: 42
                        children: []
                        pos: 15255
                        length: 44
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return handlePolymorphic(null, ctxt, bean, unknown);
                        children: []
                        pos: 15318
                        length: 52
                      pos: 15300
                      length: 84
                    pos: 15252
                    length: 132
                  - type: return_statement
                    fields:
                      text: return handleUnknownProperties(ctxt, bean, unknown);
                    children: []
                    pos: 15451
                    length: 52
                  pos: 15210
                  length: 303
                pos: 15189
                length: 324
              - type: return_statement
                fields:
                  text: return bean;
                children: []
                pos: 15522
                length: 12
              pos: 12066
              length: 3474
          children: []
          pos: 11841
          length: 3699
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: deserializeWithView
              children: []
              pos: 15774
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser p
                children: []
                pos: 15794
                length: 12
              pos: 15751
              length: 996
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JsonToken t = p.getCurrentToken();
                children: []
                pos: 15949
                length: 34
              - type: for_statement
                fields:
                  text: |-
                    for (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {
                                String propName = p.getCurrentName();
                                // Skip field name:
                                p.nextToken();
                                SettableBeanProperty prop = _beanProperties.find(propName);
                                if (prop != null) {
                                    if (!prop.visibleInView(activeView)) {
                                        p.skipChildren();
                                        continue;
                                    }
                                    try {
                                        bean = prop.deserializeSetAndReturn(p, ctxt, bean);
                                    } catch (Exception e) {
                                        wrapAndThrow(e, bean, propName, ctxt);
                                    }
                                    continue;
                                }
                                handleUnknownVanilla(p, ctxt, bean, propName);
                            }
                children: []
                pos: 15992
                length: 728
              - type: return_statement
                fields:
                  text: return bean;
                children: []
                pos: 16729
                length: 12
              pos: 15939
              length: 808
          children: []
          pos: 15751
          length: 996
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: deserializeWithUnwrapped
              children: []
              pos: 17126
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser p
                children: []
                pos: 17151
                length: 12
              pos: 17075
              length: 2388
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: _delegateDeserializer
                            children: []
                            pos: 17264
                            length: 21
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 17289
                            length: 4
                        children: []
                        pos: 17264
                        length: 29
                    children: []
                    pos: 17263
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return _valueInstantiator.createUsingDelegate(ctxt, _delegateDeserializer.deserialize(p,
                        ctxt));
                    children: []
                    pos: 17309
                    length: 96
                  pos: 17295
                  length: 120
                pos: 17260
                length: 155
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: _propertyBasedCreator
                            children: []
                            pos: 17428
                            length: 21
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 17453
                            length: 4
                        children: []
                        pos: 17428
                        length: 29
                    children: []
                    pos: 17427
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return deserializeUsingPropertyBasedWithUnwrapped(p, ctxt);
                    children: []
                    pos: 17473
                    length: 59
                  pos: 17459
                  length: 83
                pos: 17424
                length: 118
              - type: local_variable_declaration
                fields:
                  text: TokenBuffer tokens = new TokenBuffer(p, ctxt);
                children: []
                pos: 17551
                length: 46
              - type: expression_statement
                fields:
                  text: tokens.writeStartObject();
                children: []
                pos: 17606
                length: 26
              - type: local_variable_declaration
                fields:
                  text: Object bean = _valueInstantiator.createUsingDefault(ctxt);
                children: []
                pos: 17641
                length: 58
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: _injectables
                            children: []
                            pos: 17713
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 17729
                            length: 4
                        children: []
                        pos: 17713
                        length: 20
                    children: []
                    pos: 17712
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: injectValues(ctxt, bean);
                    children: []
                    pos: 17749
                    length: 25
                  pos: 17735
                  length: 49
                pos: 17709
                length: 75
              - type: local_variable_declaration
                fields:
                  text: 'final Class<?> activeView = _needViewProcesing ? ctxt.getActiveView()
                    : null;'
                children: []
                pos: 17794
                length: 77
              - type: for_statement
                fields:
                  text: |-
                    for (; p.getCurrentToken() != JsonToken.END_OBJECT; p.nextToken()) {
                                String propName = p.getCurrentName();
                                p.nextToken();
                                SettableBeanProperty prop = _beanProperties.find(propName);
                                if (prop != null) { // normal case
                                    if (activeView != null && !prop.visibleInView(activeView)) {
                                        p.skipChildren();
                                        continue;
                                    }
                                    try {
                                        bean = prop.deserializeSetAndReturn(p, ctxt, bean);
                                    } catch (Exception e) {
                                        wrapAndThrow(e, bean, propName, ctxt);
                                    }
                                    continue;
                                }
                                // ignorable things should be ignored
                                if (_ignorableProps != null && _ignorableProps.contains(propName)) {
                                    handleIgnoredProperty(p, ctxt, bean, propName);
                                    continue;
                                }
                                // but... others should be passed to unwrapped property deserializers
                                tokens.writeFieldName(propName);
                                tokens.copyCurrentStructure(p);
                                // how about any setter? We'll get copies but...
                                if (_anySetter != null) {
                                    try {
                                        _anySetter.deserializeAndSet(p, ctxt, bean, propName);
                                    } catch (Exception e) {
                                        wrapAndThrow(e, bean, propName, ctxt);
                                    }
                                    continue;
                                }
                            }
                children: []
                pos: 17881
                length: 1447
              - type: expression_statement
                fields:
                  text: tokens.writeEndObject();
                children: []
                pos: 19337
                length: 24
              - type: expression_statement
                fields:
                  text: _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean,
                    tokens);
                children: []
                pos: 19370
                length: 66
              - type: return_statement
                fields:
                  text: return bean;
                children: []
                pos: 19445
                length: 12
              pos: 17250
              length: 2213
          children: []
          pos: 17075
          length: 2388
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: deserializeWithUnwrapped
              children: []
              pos: 19520
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser p
                children: []
                pos: 19545
                length: 12
              pos: 19469
              length: 1856
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JsonToken t = p.getCurrentToken();
                children: []
                pos: 19673
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: t
                            children: []
                            pos: 19720
                            length: 1
                          right:
                            type: field_access
                            fields:
                              text: JsonToken.START_OBJECT
                            children: []
                            pos: 19725
                            length: 22
                        children: []
                        pos: 19720
                        length: 27
                    children: []
                    pos: 19719
                    length: 29
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: t = p.nextToken();
                    children: []
                    pos: 19763
                    length: 18
                  pos: 19749
                  length: 42
                pos: 19716
                length: 75
              - type: local_variable_declaration
                fields:
                  text: TokenBuffer tokens = new TokenBuffer(p, ctxt);
                children: []
                pos: 19800
                length: 46
              - type: expression_statement
                fields:
                  text: tokens.writeStartObject();
                children: []
                pos: 19855
                length: 26
              - type: local_variable_declaration
                fields:
                  text: 'final Class<?> activeView = _needViewProcesing ? ctxt.getActiveView()
                    : null;'
                children: []
                pos: 19890
                length: 77
              - type: for_statement
                fields:
                  text: |-
                    for (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {
                                String propName = p.getCurrentName();
                                SettableBeanProperty prop = _beanProperties.find(propName);
                                p.nextToken();
                                if (prop != null) { // normal case
                                    if (activeView != null && !prop.visibleInView(activeView)) {
                                        p.skipChildren();
                                        continue;
                                    }
                                    try {
                                        bean = prop.deserializeSetAndReturn(p, ctxt, bean);
                                    } catch (Exception e) {
                                        wrapAndThrow(e, bean, propName, ctxt);
                                    }
                                    continue;
                                }
                                if (_ignorableProps != null && _ignorableProps.contains(propName)) {
                                    handleIgnoredProperty(p, ctxt, bean, propName);
                                    continue;
                                }
                                // but... others should be passed to unwrapped property deserializers
                                tokens.writeFieldName(propName);
                                tokens.copyCurrentStructure(p);
                                // how about any setter? We'll get copies but...
                                if (_anySetter != null) {
                                    _anySetter.deserializeAndSet(p, ctxt, bean, propName);
                                }
                            }
                children: []
                pos: 19976
                length: 1214
              - type: expression_statement
                fields:
                  text: tokens.writeEndObject();
                children: []
                pos: 21199
                length: 24
              - type: expression_statement
                fields:
                  text: _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean,
                    tokens);
                children: []
                pos: 21232
                length: 66
              - type: return_statement
                fields:
                  text: return bean;
                children: []
                pos: 21307
                length: 12
              pos: 19663
              length: 1662
          children: []
          pos: 19469
          length: 1856
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: deserializeUsingPropertyBasedWithUnwrapped
              children: []
              pos: 21382
              length: 42
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser p
                children: []
                pos: 21425
                length: 12
              pos: 21331
              length: 2174
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final PropertyBasedCreator creator = _propertyBasedCreator;
                children: []
                pos: 21540
                length: 59
              - type: local_variable_declaration
                fields:
                  text: PropertyValueBuffer buffer = creator.startBuilding(p, ctxt,
                    _objectIdReader);
                children: []
                pos: 21608
                length: 77
              - type: local_variable_declaration
                fields:
                  text: TokenBuffer tokens = new TokenBuffer(p, ctxt);
                children: []
                pos: 21695
                length: 46
              - type: expression_statement
                fields:
                  text: tokens.writeStartObject();
                children: []
                pos: 21750
                length: 26
              - type: local_variable_declaration
                fields:
                  text: JsonToken t = p.getCurrentToken();
                children: []
                pos: 21786
                length: 34
              - type: for_statement
                fields:
                  text: |-
                    for (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {
                                String propName = p.getCurrentName();
                                p.nextToken(); // to point to value
                                // creator property?
                                SettableBeanProperty creatorProp = creator.findCreatorProperty(propName);
                                if (creatorProp != null) {
                                    buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt));
                                    continue;
                                }
                                // Object Id property?
                                if (buffer.readIdProperty(propName)) {
                                    continue;
                                }
                                // regular property? needs buffering
                                SettableBeanProperty prop = _beanProperties.find(propName);
                                if (prop != null) {
                                    buffer.bufferProperty(prop, prop.deserialize(p, ctxt));
                                    continue;
                                }
                                if (_ignorableProps != null && _ignorableProps.contains(propName)) {
                                    handleIgnoredProperty(p, ctxt, handledType(), propName);
                                    continue;
                                }
                                tokens.writeFieldName(propName);
                                tokens.copyCurrentStructure(p);
                                // "any property"?
                                if (_anySetter != null) {
                                    buffer.bufferAnyProperty(_anySetter, propName, _anySetter.deserialize(p, ctxt));
                                }
                            }
                children: []
                pos: 21829
                length: 1301
              - type: local_variable_declaration
                fields:
                  text: Object bean;
                children: []
                pos: 23174
                length: 12
              - type: try_statement
                fields:
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: expression_statement
                      fields:
                        text: bean = creator.build(ctxt, buffer);
                      children: []
                      pos: 23286
                      length: 35
                    pos: 23272
                    length: 59
                  excepts:
                    type: excepts
                    fields: {}
                    children:
                    - type: catch_clause
                      fields:
                        text: |-
                          catch (Exception e) {
                                      return wrapInstantiationProblem(e, ctxt);
                                  }
                      children: []
                      pos: 23332
                      length: 85
                    pos: 23268
                    length: 149
                children: []
                pos: 23268
                length: 149
              - type: return_statement
                fields:
                  text: return _unwrappedPropertyHandler.processUnwrapped(p, ctxt,
                    bean, tokens);
                children: []
                pos: 23426
                length: 73
              pos: 21530
              length: 1975
          children: []
          pos: 21331
          length: 2174
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: deserializeWithExternalTypeId
              children: []
              pos: 23755
              length: 29
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser p
                children: []
                pos: 23785
                length: 12
              pos: 23738
              length: 385
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: _propertyBasedCreator
                            children: []
                            pos: 23898
                            length: 21
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 23923
                            length: 4
                        children: []
                        pos: 23898
                        length: 29
                    children: []
                    pos: 23897
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return deserializeUsingPropertyBasedWithExternalTypeId(p,
                        ctxt);
                    children: []
                    pos: 23943
                    length: 64
                  pos: 23929
                  length: 88
                pos: 23894
                length: 123
              - type: return_statement
                fields:
                  text: return deserializeWithExternalTypeId(p, ctxt, _valueInstantiator.createUsingDefault(ctxt));
                children: []
                pos: 24026
                length: 91
              pos: 23884
              length: 239
          children: []
          pos: 23738
          length: 385
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: deserializeWithExternalTypeId
              children: []
              pos: 24146
              length: 29
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser p
                children: []
                pos: 24176
                length: 12
              pos: 24129
              length: 2259
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: 'final Class<?> activeView = _needViewProcesing ? ctxt.getActiveView()
                    : null;'
                children: []
                pos: 24304
                length: 77
              - type: local_variable_declaration
                fields:
                  text: final ExternalTypeHandler ext = _externalTypeIdHandler.start();
                children: []
                pos: 24390
                length: 63
              - type: for_statement
                fields:
                  text: |-
                    for (JsonToken t = p.getCurrentToken(); t == JsonToken.FIELD_NAME; t = p.nextToken()) {
                                String propName = p.getCurrentName();
                                t = p.nextToken();
                                SettableBeanProperty prop = _beanProperties.find(propName);
                                if (prop != null) { // normal case
                                    // [JACKSON-831]: may have property AND be used as external type id:
                                    if (t.isScalarValue()) {
                                        ext.handleTypePropertyValue(p, ctxt, propName, bean);
                                    }
                                    if (activeView != null && !prop.visibleInView(activeView)) {
                                        p.skipChildren();
                                        continue;
                                    }
                                    try {
                                        bean = prop.deserializeSetAndReturn(p, ctxt, bean);
                                    } catch (Exception e) {
                                        wrapAndThrow(e, bean, propName, ctxt);
                                    }
                                    continue;
                                }
                                // ignorable things should be ignored
                                if (_ignorableProps != null && _ignorableProps.contains(propName)) {
                                    handleIgnoredProperty(p, ctxt, bean, propName);
                                    continue;
                                }
                                // but others are likely to be part of external type id thingy...
                                if (ext.handlePropertyValue(p, ctxt, propName, bean)) {
                                    continue;
                                }
                                // if not, the usual fallback handling:
                                if (_anySetter != null) {
                                    try {
                                        _anySetter.deserializeAndSet(p, ctxt, bean, propName);
                                    } catch (Exception e) {
                                        wrapAndThrow(e, bean, propName, ctxt);
                                    }
                                } else {
                                    // Unknown: let's call handler method
                                    handleUnknownProperty(p, ctxt, bean, propName);
                                }
                            }
                children: []
                pos: 24463
                length: 1807
              - type: return_statement
                fields:
                  text: return ext.complete(p, ctxt, bean);
                children: []
                pos: 26347
                length: 35
              pos: 24294
              length: 2094
          children: []
          pos: 24129
          length: 2259
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: deserializeUsingPropertyBasedWithExternalTypeId
              children: []
              pos: 26411
              length: 47
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser p
                children: []
                pos: 26459
                length: 12
              pos: 26394
              length: 374
            body:
              type: block
              fields: {}
              children:
              - type: throw_statement
                fields:
                  text: throw new IllegalStateException("Deserialization with Builder,
                    External type id, @JsonCreator not yet implemented");
                children: []
                pos: 26646
                length: 116
              pos: 26564
              length: 204
          children: []
          pos: 26394
          length: 374
        pos: 748
        length: 26022
    children: []
    pos: 748
    length: 26022
  pos: 0
  length: 26771
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: BuilderBasedDeserializer
        children: []
        pos: 761
        length: 24
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: private static final long serialVersionUID = 1L;
          children: []
          pos: 825
          length: 48
        - type: field_declaration
          fields:
            text: protected final AnnotatedMethod _buildMethod;
          children: []
          pos: 879
          length: 45
        - type: constructor_declaration
          fields:
            text: |-
              public BuilderBasedDeserializer(BeanDeserializerBuilder builder,
                          BeanDescription beanDesc,
                          BeanPropertyMap properties, Map<String, SettableBeanProperty> backRefs,
                          Set<String> ignorableProps, boolean ignoreAllUnknown,
                          boolean hasViews)
                  {
                      super(builder, beanDesc, properties, backRefs,
                              ignorableProps, ignoreAllUnknown, hasViews);
                      _buildMethod = builder.getBuildMethod();
                      // 05-Mar-2012, tatu: Can not really make Object Ids work with builders, not yet anyway
                      if (_objectIdReader != null) {
                          throw new IllegalArgumentException("Can not use Object Id with Builder-based deserialization (type "
                                  +beanDesc.getType()+")");
                      }
                  }
          children: []
          pos: 1198
          length: 763
        - type: constructor_declaration
          fields:
            text: |-
              protected BuilderBasedDeserializer(BuilderBasedDeserializer src)
                  {
                      this(src, src._ignoreAllUnknown);
                  }
          children: []
          pos: 2122
          length: 118
        - type: constructor_declaration
          fields:
            text: |-
              protected BuilderBasedDeserializer(BuilderBasedDeserializer src, boolean ignoreAllUnknown)
                  {
                      super(src, ignoreAllUnknown);
                      _buildMethod = src._buildMethod;
                  }
          children: []
          pos: 2246
          length: 181
        - type: constructor_declaration
          fields:
            text: |-
              protected BuilderBasedDeserializer(BuilderBasedDeserializer src, NameTransformer unwrapper) {
                      super(src, unwrapper);
                      _buildMethod = src._buildMethod;
                  }
          children: []
          pos: 2433
          length: 171
        - type: constructor_declaration
          fields:
            text: |-
              public BuilderBasedDeserializer(BuilderBasedDeserializer src, ObjectIdReader oir) {
                      super(src, oir);
                      _buildMethod = src._buildMethod;
                  }
          children: []
          pos: 2610
          length: 155
        - type: constructor_declaration
          fields:
            text: |-
              public BuilderBasedDeserializer(BuilderBasedDeserializer src, Set<String> ignorableProps) {
                      super(src, ignorableProps);
                      _buildMethod = src._buildMethod;
                  }
          children: []
          pos: 2771
          length: 174
        - type: constructor_declaration
          fields:
            text: |-
              public BuilderBasedDeserializer(BuilderBasedDeserializer src, BeanPropertyMap props) {
                      super(src, props);
                      _buildMethod = src._buildMethod;
                  }
          children: []
          pos: 2951
          length: 160
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: unwrappingDeserializer
              children: []
              pos: 3163
              length: 22
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: NameTransformer unwrapper
                children: []
                pos: 3186
                length: 25
              pos: 3117
              length: 373
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return new BuilderBasedDeserializer(this, unwrapper);
                children: []
                pos: 3431
                length: 53
              pos: 3217
              length: 273
          children: []
          pos: 3117
          length: 373
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: withObjectIdReader
              children: []
              pos: 3538
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: ObjectIdReader oir
                children: []
                pos: 3557
                length: 18
              pos: 3496
              length: 144
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return new BuilderBasedDeserializer(this, oir);
                children: []
                pos: 3587
                length: 47
              pos: 3577
              length: 63
          children: []
          pos: 3496
          length: 144
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: withIgnorableProperties
              children: []
              pos: 3688
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Set<String> ignorableProps
                children: []
                pos: 3712
                length: 26
              pos: 3646
              length: 168
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return new BuilderBasedDeserializer(this, ignorableProps);
                children: []
                pos: 3750
                length: 58
              pos: 3740
              length: 74
          children: []
          pos: 3646
          length: 168
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: withBeanProperties
              children: []
              pos: 3862
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: BeanPropertyMap props
                children: []
                pos: 3881
                length: 21
              pos: 3820
              length: 149
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return new BuilderBasedDeserializer(this, props);
                children: []
                pos: 3914
                length: 49
              pos: 3904
              length: 65
          children: []
          pos: 3820
          length: 149
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: asArrayDeserializer
              children: []
              pos: 4020
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children: []
              pos: 3975
              length: 240
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: SettableBeanProperty[] props = _beanProperties.getPropertiesInInsertionOrder();
                children: []
                pos: 4052
                length: 79
              - type: return_statement
                fields:
                  text: return new BeanAsArrayBuilderDeserializer(this, props, _buildMethod);
                children: []
                pos: 4140
                length: 69
              pos: 4042
              length: 173
          children: []
          pos: 3975
          length: 240
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: finishBuild
              children: []
              pos: 4427
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: DeserializationContext ctxt
                children: []
                pos: 4439
                length: 27
              pos: 4404
              length: 432
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 4598
                            length: 4
                          right:
                            type: identifier
                            fields:
                              text: _buildMethod
                            children: []
                            pos: 4606
                            length: 12
                        children: []
                        pos: 4598
                        length: 20
                    children: []
                    pos: 4597
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return builder;
                    children: []
                    pos: 4634
                    length: 15
                  pos: 4620
                  length: 39
                pos: 4594
                length: 65
              - type: try_statement
                fields:
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: return_statement
                      fields:
                        text: return _buildMethod.getMember().invoke(builder);
                      children: []
                      pos: 4686
                      length: 48
                    pos: 4672
                    length: 72
                  excepts:
                    type: excepts
                    fields: {}
                    children:
                    - type: catch_clause
                      fields:
                        text: |-
                          catch (Exception e) {
                                      return wrapInstantiationProblem(e, ctxt);
                                  }
                      children: []
                      pos: 4745
                      length: 85
                    pos: 4668
                    length: 162
                children: []
                pos: 4668
                length: 162
              pos: 4519
              length: 317
          children: []
          pos: 4404
          length: 432
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: deserialize
              children: []
              pos: 4959
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser p
                children: []
                pos: 4971
                length: 12
              pos: 4925
              length: 1589
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JsonToken t = p.getCurrentToken();
                children: []
                pos: 5055
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: t
                            children: []
                            pos: 5133
                            length: 1
                          right:
                            type: field_access
                            fields:
                              text: JsonToken.START_OBJECT
                            children: []
                            pos: 5138
                            length: 22
                        children: []
                        pos: 5133
                        length: 27
                    children: []
                    pos: 5132
                    length: 29
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: t = p.nextToken();
                    children: []
                    pos: 5176
                    length: 18
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: identifier
                            fields:
                              text: _vanillaProcessing
                            children: []
                            pos: 5211
                            length: 18
                        children: []
                        pos: 5210
                        length: 20
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return finishBuild(ctxt, vanillaDeserialize(p, ctxt,
                            t));
                        children: []
                        pos: 5246
                        length: 57
                      pos: 5231
                      length: 86
                    pos: 5207
                    length: 110
                  - type: local_variable_declaration
                    fields:
                      text: Object builder = deserializeFromObject(p, ctxt);
                    children: []
                    pos: 5330
                    length: 48
                  - type: return_statement
                    fields:
                      text: return finishBuild(ctxt, builder);
                    children: []
                    pos: 5391
                    length: 34
                  pos: 5162
                  length: 273
                pos: 5129
                length: 306
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: t
                            children: []
                            pos: 5516
                            length: 1
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 5521
                            length: 4
                        children: []
                        pos: 5516
                        length: 9
                    children: []
                    pos: 5515
                    length: 11
                children:
                - type: block
                  fields: {}
                  children:
                  - type: switch_expression
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: identifier
                            fields:
                              text: t
                            children: []
                            pos: 5549
                            length: 1
                        children: []
                        pos: 5548
                        length: 3
                      body:
                        type: switch_block
                        fields:
                          text: "{\n            case VALUE_STRING:\n                return
                            finishBuild(ctxt, deserializeFromString(p, ctxt));\n            case
                            VALUE_NUMBER_INT:\n                return finishBuild(ctxt,
                            deserializeFromNumber(p, ctxt));\n            case VALUE_NUMBER_FLOAT:\n
                            \           \treturn finishBuild(ctxt, deserializeFromDouble(p,
                            ctxt));\n            case VALUE_EMBEDDED_OBJECT:\n                return
                            p.getEmbeddedObject();\n            case VALUE_TRUE:\n
                            \           case VALUE_FALSE:\n                return
                            finishBuild(ctxt, deserializeFromBoolean(p, ctxt));\n
                            \           case START_ARRAY:\n                // these
                            only work if there's a (delegating) creator...\n                return
                            finishBuild(ctxt, deserializeFromArray(p, ctxt));\n            case
                            FIELD_NAME:\n            case END_OBJECT:\n                return
                            finishBuild(ctxt, deserializeFromObject(p, ctxt));\n            default:\n
                            \           }"
                        children: []
                        pos: 5552
                        length: 885
                    children: []
                    pos: 5541
                    length: 896
                  pos: 5527
                  length: 920
                pos: 5512
                length: 935
              - type: return_statement
                fields:
                  text: return ctxt.handleUnexpectedToken(handledType(), p);
                children: []
                pos: 6456
                length: 52
              pos: 5045
              length: 1469
          children: []
          pos: 4925
          length: 1589
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: deserialize
              children: []
              pos: 6761
              length: 11
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser p
                children: []
                pos: 6773
                length: 12
              pos: 6733
              length: 348
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: return finishBuild(ctxt, _deserialize(p, ctxt, builder));
                children: []
                pos: 7018
                length: 57
              pos: 6869
              length: 212
          children: []
          pos: 6733
          length: 348
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: _deserialize
              children: []
              pos: 7294
              length: 12
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser p
                children: []
                pos: 7307
                length: 12
              pos: 7271
              length: 1575
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: _injectables
                            children: []
                            pos: 7448
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 7464
                            length: 4
                        children: []
                        pos: 7448
                        length: 20
                    children: []
                    pos: 7447
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: injectValues(ctxt, builder);
                    children: []
                    pos: 7484
                    length: 28
                  pos: 7470
                  length: 52
                pos: 7444
                length: 78
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: _unwrappedPropertyHandler
                            children: []
                            pos: 7535
                            length: 25
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 7564
                            length: 4
                        children: []
                        pos: 7535
                        length: 33
                    children: []
                    pos: 7534
                    length: 35
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return deserializeWithUnwrapped(p, ctxt, builder);
                    children: []
                    pos: 7584
                    length: 50
                  pos: 7570
                  length: 74
                pos: 7531
                length: 113
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: _externalTypeIdHandler
                            children: []
                            pos: 7657
                            length: 22
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 7683
                            length: 4
                        children: []
                        pos: 7657
                        length: 30
                    children: []
                    pos: 7656
                    length: 32
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return deserializeWithExternalTypeId(p, ctxt, builder);
                    children: []
                    pos: 7703
                    length: 55
                  pos: 7689
                  length: 79
                pos: 7653
                length: 115
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: _needViewProcesing
                        children: []
                        pos: 7781
                        length: 18
                    children: []
                    pos: 7780
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Class<?> view = ctxt.getActiveView();
                    children: []
                    pos: 7815
                    length: 37
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: view
                                children: []
                                pos: 7869
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 7877
                                length: 4
                            children: []
                            pos: 7869
                            length: 12
                        children: []
                        pos: 7868
                        length: 14
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return deserializeWithView(p, ctxt, builder, view);
                        children: []
                        pos: 7901
                        length: 51
                      pos: 7883
                      length: 83
                    pos: 7865
                    length: 101
                  pos: 7801
                  length: 175
                pos: 7777
                length: 199
              - type: local_variable_declaration
                fields:
                  text: JsonToken t = p.getCurrentToken();
                children: []
                pos: 7985
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: t
                            children: []
                            pos: 8115
                            length: 1
                          right:
                            type: field_access
                            fields:
                              text: JsonToken.START_OBJECT
                            children: []
                            pos: 8120
                            length: 22
                        children: []
                        pos: 8115
                        length: 27
                    children: []
                    pos: 8114
                    length: 29
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: t = p.nextToken();
                    children: []
                    pos: 8158
                    length: 18
                  pos: 8144
                  length: 42
                pos: 8111
                length: 75
              - type: for_statement
                fields:
                  text: |-
                    for (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {
                                String propName = p.getCurrentName();
                                // Skip field name:
                                p.nextToken();
                                SettableBeanProperty prop = _beanProperties.find(propName);

                                if (prop != null) { // normal case
                                    try {
                                        builder = prop.deserializeSetAndReturn(p, ctxt, builder);
                                    } catch (Exception e) {
                                        wrapAndThrow(e, builder, propName, ctxt);
                                    }
                                    continue;
                                }
                                handleUnknownVanilla(p, ctxt, handledType(), propName);
                            }
                children: []
                pos: 8195
                length: 621
              - type: return_statement
                fields:
                  text: return builder;
                children: []
                pos: 8825
                length: 15
              pos: 7434
              length: 1412
          children: []
          pos: 7271
          length: 1575
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: vanillaDeserialize
              children: []
              pos: 8981
              length: 18
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser p
                children: []
                pos: 9000
                length: 12
              pos: 8960
              length: 877
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: Object bean = _valueInstantiator.createUsingDefault(ctxt);
                children: []
                pos: 9128
                length: 58
              - type: for_statement
                fields:
                  text: |-
                    for (; p.getCurrentToken() != JsonToken.END_OBJECT; p.nextToken()) {
                                String propName = p.getCurrentName();
                                // Skip field name:
                                p.nextToken();
                                SettableBeanProperty prop = _beanProperties.find(propName);
                                if (prop != null) { // normal case
                                    try {
                                        bean = prop.deserializeSetAndReturn(p, ctxt, bean);
                                    } catch (Exception e) {
                                        wrapAndThrow(e, bean, propName, ctxt);
                                    }
                                } else {
                                    handleUnknownVanilla(p, ctxt, bean, propName);
                                }
                            }
                children: []
                pos: 9195
                length: 615
              - type: return_statement
                fields:
                  text: return bean;
                children: []
                pos: 9819
                length: 12
              pos: 9118
              length: 719
          children: []
          pos: 8960
          length: 877
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: deserializeFromObject
              children: []
              pos: 9966
              length: 21
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser p
                children: []
                pos: 9988
                length: 12
              pos: 9938
              length: 1522
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: _nonStandardCreation
                        children: []
                        pos: 10101
                        length: 20
                    children: []
                    pos: 10100
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: _unwrappedPropertyHandler
                                children: []
                                pos: 10141
                                length: 25
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 10170
                                length: 4
                            children: []
                            pos: 10141
                            length: 33
                        children: []
                        pos: 10140
                        length: 35
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return deserializeWithUnwrapped(p, ctxt);
                        children: []
                        pos: 10194
                        length: 41
                      pos: 10176
                      length: 73
                    pos: 10137
                    length: 112
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: _externalTypeIdHandler
                                children: []
                                pos: 10266
                                length: 22
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 10292
                                length: 4
                            children: []
                            pos: 10266
                            length: 30
                        children: []
                        pos: 10265
                        length: 32
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return deserializeWithExternalTypeId(p, ctxt);
                        children: []
                        pos: 10316
                        length: 46
                      pos: 10298
                      length: 78
                    pos: 10262
                    length: 114
                  - type: return_statement
                    fields:
                      text: return deserializeFromObjectUsingNonDefault(p, ctxt);
                    children: []
                    pos: 10389
                    length: 53
                  pos: 10123
                  length: 329
                pos: 10097
                length: 355
              - type: local_variable_declaration
                fields:
                  text: Object bean = _valueInstantiator.createUsingDefault(ctxt);
                children: []
                pos: 10461
                length: 58
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: _injectables
                            children: []
                            pos: 10532
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 10548
                            length: 4
                        children: []
                        pos: 10532
                        length: 20
                    children: []
                    pos: 10531
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: injectValues(ctxt, bean);
                    children: []
                    pos: 10568
                    length: 25
                  pos: 10554
                  length: 49
                pos: 10528
                length: 75
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: _needViewProcesing
                        children: []
                        pos: 10616
                        length: 18
                    children: []
                    pos: 10615
                    length: 20
                children:
                - type: block
                  fields: {}
                  children:
                  - type: local_variable_declaration
                    fields:
                      text: Class<?> view = ctxt.getActiveView();
                    children: []
                    pos: 10650
                    length: 37
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: identifier
                                fields:
                                  text: view
                                children: []
                                pos: 10704
                                length: 4
                              right:
                                type: null_literal
                                fields: {}
                                children: []
                                pos: 10712
                                length: 4
                            children: []
                            pos: 10704
                            length: 12
                        children: []
                        pos: 10703
                        length: 14
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return deserializeWithView(p, ctxt, bean, view);
                        children: []
                        pos: 10736
                        length: 48
                      pos: 10718
                      length: 80
                    pos: 10700
                    length: 98
                  pos: 10636
                  length: 172
                pos: 10612
                length: 196
              - type: for_statement
                fields:
                  text: |-
                    for (; p.getCurrentToken() != JsonToken.END_OBJECT; p.nextToken()) {
                                String propName = p.getCurrentName();
                                // Skip field name:
                                p.nextToken();
                                SettableBeanProperty prop = _beanProperties.find(propName);
                                if (prop != null) { // normal case
                                    try {
                                        bean = prop.deserializeSetAndReturn(p, ctxt, bean);
                                    } catch (Exception e) {
                                        wrapAndThrow(e, bean, propName, ctxt);
                                    }
                                    continue;
                                }
                                handleUnknownVanilla(p, ctxt, bean, propName);
                            }
                children: []
                pos: 10817
                length: 616
              - type: return_statement
                fields:
                  text: return bean;
                children: []
                pos: 11442
                length: 12
              pos: 10087
              length: 1373
          children: []
          pos: 9938
          length: 1522
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: _deserializeUsingPropertyBased
              children: []
              pos: 11912
              length: 30
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: final JsonParser p
                children: []
                pos: 11943
                length: 18
              pos: 11841
              length: 3699
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final PropertyBasedCreator creator = _propertyBasedCreator;
                children: []
                pos: 12076
                length: 59
              - type: local_variable_declaration
                fields:
                  text: PropertyValueBuffer buffer = creator.startBuilding(p, ctxt,
                    _objectIdReader);
                children: []
                pos: 12144
                length: 77
              - type: local_variable_declaration
                fields:
                  text: TokenBuffer unknown = null;
                children: []
                pos: 12322
                length: 27
              - type: local_variable_declaration
                fields:
                  text: JsonToken t = p.getCurrentToken();
                children: []
                pos: 12359
                length: 34
              - type: for_statement
                fields:
                  text: |-
                    for (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {
                                String propName = p.getCurrentName();
                                p.nextToken(); // to point to value
                                // creator property?
                                SettableBeanProperty creatorProp = creator.findCreatorProperty(propName);
                                if (creatorProp != null) {
                                    // Last creator property to set?
                                    if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {
                                        p.nextToken(); // to move to following FIELD_NAME/END_OBJECT
                                        Object bean;
                                        try {
                                            bean = creator.build(ctxt, buffer);
                                        } catch (Exception e) {
                                            wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);
                                            continue; // never gets here
                                        }
                                        //  polymorphic?
                                        if (bean.getClass() != _beanType.getRawClass()) {
                                            return handlePolymorphic(p, ctxt, bean, unknown);
                                        }
                                        if (unknown != null) { // nope, just extra unknown stuff...
                                            bean = handleUnknownProperties(ctxt, bean, unknown);
                                        }
                                        // or just clean?
                                        return _deserialize(p, ctxt, bean);
                                    }
                                    continue;
                                }
                                // Object Id property?
                                if (buffer.readIdProperty(propName)) {
                                    continue;
                                }
                                // regular property? needs buffering
                                SettableBeanProperty prop = _beanProperties.find(propName);
                                if (prop != null) {
                                    buffer.bufferProperty(prop, prop.deserialize(p, ctxt));
                                    continue;
                                }
                                // As per [JACKSON-313], things marked as ignorable should not be
                                // passed to any setter
                                if (_ignorableProps != null && _ignorableProps.contains(propName)) {
                                    handleIgnoredProperty(p, ctxt, handledType(), propName);
                                    continue;
                                }
                                // "any property"?
                                if (_anySetter != null) {
                                    buffer.bufferAnyProperty(_anySetter, propName, _anySetter.deserialize(p, ctxt));
                                    continue;
                                }
                                // Ok then, let's collect the whole field; name and value
                                if (unknown == null) {
                                    unknown = new TokenBuffer(p, ctxt);
                                }
                                unknown.writeFieldName(propName);
                                unknown.copyCurrentStructure(p);
                            }
                children: []
                pos: 12402
                length: 2564
              - type: local_variable_declaration
                fields:
                  text: Object bean;
                children: []
                pos: 15010
                length: 12
              - type: try_statement
                fields:
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: expression_statement
                      fields:
                        text: bean = creator.build(ctxt, buffer);
                      children: []
                      pos: 15049
                      length: 35
                    pos: 15035
                    length: 59
                  excepts:
                    type: excepts
                    fields: {}
                    children:
                    - type: catch_clause
                      fields:
                        text: |-
                          catch (Exception e) {
                                      bean = wrapInstantiationProblem(e, ctxt);
                                  }
                      children: []
                      pos: 15095
                      length: 85
                    pos: 15031
                    length: 149
                children: []
                pos: 15031
                length: 149
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: unknown
                            children: []
                            pos: 15193
                            length: 7
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 15204
                            length: 4
                        children: []
                        pos: 15193
                        length: 15
                    children: []
                    pos: 15192
                    length: 17
                children:
                - type: block
                  fields: {}
                  children:
                  - type: if_statement
                    fields:
                      condition:
                        type: parenthesized_expression
                        fields:
                          expression:
                            type: not_equals
                            fields:
                              left:
                                type: method_invocation
                                fields:
                                  text: bean.getClass()
                                children: []
                                pos: 15256
                                length: 15
                              right:
                                type: method_invocation
                                fields:
                                  text: _beanType.getRawClass()
                                children: []
                                pos: 15275
                                length: 23
                            children: []
                            pos: 15256
                            length: 42
                        children: []
                        pos: 15255
                        length: 44
                    children:
                    - type: block
                      fields: {}
                      children:
                      - type: return_statement
                        fields:
                          text: return handlePolymorphic(null, ctxt, bean, unknown);
                        children: []
                        pos: 15318
                        length: 52
                      pos: 15300
                      length: 84
                    pos: 15252
                    length: 132
                  - type: return_statement
                    fields:
                      text: return handleUnknownProperties(ctxt, bean, unknown);
                    children: []
                    pos: 15451
                    length: 52
                  pos: 15210
                  length: 303
                pos: 15189
                length: 324
              - type: return_statement
                fields:
                  text: return bean;
                children: []
                pos: 15522
                length: 12
              pos: 12066
              length: 3474
          children: []
          pos: 11841
          length: 3699
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: deserializeWithView
              children: []
              pos: 15774
              length: 19
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser p
                children: []
                pos: 15794
                length: 12
              pos: 15751
              length: 996
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JsonToken t = p.getCurrentToken();
                children: []
                pos: 15949
                length: 34
              - type: for_statement
                fields:
                  text: |-
                    for (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {
                                String propName = p.getCurrentName();
                                // Skip field name:
                                p.nextToken();
                                SettableBeanProperty prop = _beanProperties.find(propName);
                                if (prop != null) {
                                    if (!prop.visibleInView(activeView)) {
                                        p.skipChildren();
                                        continue;
                                    }
                                    try {
                                        bean = prop.deserializeSetAndReturn(p, ctxt, bean);
                                    } catch (Exception e) {
                                        wrapAndThrow(e, bean, propName, ctxt);
                                    }
                                    continue;
                                }
                                handleUnknownVanilla(p, ctxt, bean, propName);
                            }
                children: []
                pos: 15992
                length: 728
              - type: return_statement
                fields:
                  text: return bean;
                children: []
                pos: 16729
                length: 12
              pos: 15939
              length: 808
          children: []
          pos: 15751
          length: 996
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: deserializeWithUnwrapped
              children: []
              pos: 17126
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser p
                children: []
                pos: 17151
                length: 12
              pos: 17075
              length: 2388
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: _delegateDeserializer
                            children: []
                            pos: 17264
                            length: 21
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 17289
                            length: 4
                        children: []
                        pos: 17264
                        length: 29
                    children: []
                    pos: 17263
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return _valueInstantiator.createUsingDelegate(ctxt, _delegateDeserializer.deserialize(p,
                        ctxt));
                    children: []
                    pos: 17309
                    length: 96
                  pos: 17295
                  length: 120
                pos: 17260
                length: 155
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: _propertyBasedCreator
                            children: []
                            pos: 17428
                            length: 21
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 17453
                            length: 4
                        children: []
                        pos: 17428
                        length: 29
                    children: []
                    pos: 17427
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return deserializeUsingPropertyBasedWithUnwrapped(p, ctxt);
                    children: []
                    pos: 17473
                    length: 59
                  pos: 17459
                  length: 83
                pos: 17424
                length: 118
              - type: local_variable_declaration
                fields:
                  text: TokenBuffer tokens = new TokenBuffer(p, ctxt);
                children: []
                pos: 17551
                length: 46
              - type: expression_statement
                fields:
                  text: tokens.writeStartObject();
                children: []
                pos: 17606
                length: 26
              - type: local_variable_declaration
                fields:
                  text: Object bean = _valueInstantiator.createUsingDefault(ctxt);
                children: []
                pos: 17641
                length: 58
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: _injectables
                            children: []
                            pos: 17713
                            length: 12
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 17729
                            length: 4
                        children: []
                        pos: 17713
                        length: 20
                    children: []
                    pos: 17712
                    length: 22
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: injectValues(ctxt, bean);
                    children: []
                    pos: 17749
                    length: 25
                  pos: 17735
                  length: 49
                pos: 17709
                length: 75
              - type: local_variable_declaration
                fields:
                  text: 'final Class<?> activeView = _needViewProcesing ? ctxt.getActiveView()
                    : null;'
                children: []
                pos: 17794
                length: 77
              - type: for_statement
                fields:
                  text: |-
                    for (; p.getCurrentToken() != JsonToken.END_OBJECT; p.nextToken()) {
                                String propName = p.getCurrentName();
                                p.nextToken();
                                SettableBeanProperty prop = _beanProperties.find(propName);
                                if (prop != null) { // normal case
                                    if (activeView != null && !prop.visibleInView(activeView)) {
                                        p.skipChildren();
                                        continue;
                                    }
                                    try {
                                        bean = prop.deserializeSetAndReturn(p, ctxt, bean);
                                    } catch (Exception e) {
                                        wrapAndThrow(e, bean, propName, ctxt);
                                    }
                                    continue;
                                }
                                // ignorable things should be ignored
                                if (_ignorableProps != null && _ignorableProps.contains(propName)) {
                                    handleIgnoredProperty(p, ctxt, bean, propName);
                                    continue;
                                }
                                // but... others should be passed to unwrapped property deserializers
                                tokens.writeFieldName(propName);
                                tokens.copyCurrentStructure(p);
                                // how about any setter? We'll get copies but...
                                if (_anySetter != null) {
                                    try {
                                        _anySetter.deserializeAndSet(p, ctxt, bean, propName);
                                    } catch (Exception e) {
                                        wrapAndThrow(e, bean, propName, ctxt);
                                    }
                                    continue;
                                }
                            }
                children: []
                pos: 17881
                length: 1447
              - type: expression_statement
                fields:
                  text: tokens.writeEndObject();
                children: []
                pos: 19337
                length: 24
              - type: expression_statement
                fields:
                  text: _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean,
                    tokens);
                children: []
                pos: 19370
                length: 66
              - type: return_statement
                fields:
                  text: return bean;
                children: []
                pos: 19445
                length: 12
              pos: 17250
              length: 2213
          children: []
          pos: 17075
          length: 2388
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: deserializeWithUnwrapped
              children: []
              pos: 19520
              length: 24
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser p
                children: []
                pos: 19545
                length: 12
              pos: 19469
              length: 1856
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: JsonToken t = p.getCurrentToken();
                children: []
                pos: 19673
                length: 34
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: t
                            children: []
                            pos: 19720
                            length: 1
                          right:
                            type: field_access
                            fields:
                              text: JsonToken.START_OBJECT
                            children: []
                            pos: 19725
                            length: 22
                        children: []
                        pos: 19720
                        length: 27
                    children: []
                    pos: 19719
                    length: 29
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: t = p.nextToken();
                    children: []
                    pos: 19763
                    length: 18
                  pos: 19749
                  length: 42
                pos: 19716
                length: 75
              - type: local_variable_declaration
                fields:
                  text: TokenBuffer tokens = new TokenBuffer(p, ctxt);
                children: []
                pos: 19800
                length: 46
              - type: expression_statement
                fields:
                  text: tokens.writeStartObject();
                children: []
                pos: 19855
                length: 26
              - type: local_variable_declaration
                fields:
                  text: 'final Class<?> activeView = _needViewProcesing ? ctxt.getActiveView()
                    : null;'
                children: []
                pos: 19890
                length: 77
              - type: for_statement
                fields:
                  text: |-
                    for (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {
                                String propName = p.getCurrentName();
                                SettableBeanProperty prop = _beanProperties.find(propName);
                                p.nextToken();
                                if (prop != null) { // normal case
                                    if (activeView != null && !prop.visibleInView(activeView)) {
                                        p.skipChildren();
                                        continue;
                                    }
                                    try {
                                        bean = prop.deserializeSetAndReturn(p, ctxt, bean);
                                    } catch (Exception e) {
                                        wrapAndThrow(e, bean, propName, ctxt);
                                    }
                                    continue;
                                }
                                if (_ignorableProps != null && _ignorableProps.contains(propName)) {
                                    handleIgnoredProperty(p, ctxt, bean, propName);
                                    continue;
                                }
                                // but... others should be passed to unwrapped property deserializers
                                tokens.writeFieldName(propName);
                                tokens.copyCurrentStructure(p);
                                // how about any setter? We'll get copies but...
                                if (_anySetter != null) {
                                    _anySetter.deserializeAndSet(p, ctxt, bean, propName);
                                }
                            }
                children: []
                pos: 19976
                length: 1214
              - type: expression_statement
                fields:
                  text: tokens.writeEndObject();
                children: []
                pos: 21199
                length: 24
              - type: expression_statement
                fields:
                  text: _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean,
                    tokens);
                children: []
                pos: 21232
                length: 66
              - type: return_statement
                fields:
                  text: return bean;
                children: []
                pos: 21307
                length: 12
              pos: 19663
              length: 1662
          children: []
          pos: 19469
          length: 1856
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: deserializeUsingPropertyBasedWithUnwrapped
              children: []
              pos: 21382
              length: 42
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser p
                children: []
                pos: 21425
                length: 12
              pos: 21331
              length: 3137
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: final PropertyBasedCreator creator = _propertyBasedCreator;
                children: []
                pos: 21540
                length: 59
              - type: local_variable_declaration
                fields:
                  text: PropertyValueBuffer buffer = creator.startBuilding(p, ctxt,
                    _objectIdReader);
                children: []
                pos: 21608
                length: 77
              - type: local_variable_declaration
                fields:
                  text: TokenBuffer tokens = new TokenBuffer(p, ctxt);
                children: []
                pos: 21695
                length: 46
              - type: expression_statement
                fields:
                  text: tokens.writeStartObject();
                children: []
                pos: 21750
                length: 26
              - type: local_variable_declaration
                fields:
                  text: JsonToken t = p.getCurrentToken();
                children: []
                pos: 21786
                length: 34
              - type: for_statement
                fields:
                  text: |-
                    for (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {
                                String propName = p.getCurrentName();
                                p.nextToken(); // to point to value
                                // creator property?
                                SettableBeanProperty creatorProp = creator.findCreatorProperty(propName);
                                if (creatorProp != null) {
                                    if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {
                                        t = p.nextToken();
                                        Object bean;
                                        try {
                                            bean = creator.build(ctxt, buffer);
                                        } catch (Exception e) {
                                            wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);
                                            continue;
                                        }
                                        while (t == JsonToken.FIELD_NAME) {
                                            p.nextToken();
                                            tokens.copyCurrentStructure(p);
                                            t = p.nextToken();
                                        }
                                        tokens.writeEndObject();
                                        if (bean.getClass() != _beanType.getRawClass()) {
                                            ctxt.reportMappingException("Can not create polymorphic instances with unwrapped values");
                                            return null;
                                        }
                                        return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);
                                    }
                                    continue;
                                }
                                // Object Id property?
                                if (buffer.readIdProperty(propName)) {
                                    continue;
                                }
                                // regular property? needs buffering
                                SettableBeanProperty prop = _beanProperties.find(propName);
                                if (prop != null) {
                                    buffer.bufferProperty(prop, prop.deserialize(p, ctxt));
                                    continue;
                                }
                                if (_ignorableProps != null && _ignorableProps.contains(propName)) {
                                    handleIgnoredProperty(p, ctxt, handledType(), propName);
                                    continue;
                                }
                                tokens.writeFieldName(propName);
                                tokens.copyCurrentStructure(p);
                                // "any property"?
                                if (_anySetter != null) {
                                    buffer.bufferAnyProperty(_anySetter, propName, _anySetter.deserialize(p, ctxt));
                                }
                            }
                children: []
                pos: 21829
                length: 2264
              - type: local_variable_declaration
                fields:
                  text: Object bean;
                children: []
                pos: 24137
                length: 12
              - type: try_statement
                fields:
                  body:
                    type: block
                    fields: {}
                    children:
                    - type: expression_statement
                      fields:
                        text: bean = creator.build(ctxt, buffer);
                      children: []
                      pos: 24249
                      length: 35
                    pos: 24235
                    length: 59
                  excepts:
                    type: excepts
                    fields: {}
                    children:
                    - type: catch_clause
                      fields:
                        text: |-
                          catch (Exception e) {
                                      return wrapInstantiationProblem(e, ctxt);
                                  }
                      children: []
                      pos: 24295
                      length: 85
                    pos: 24231
                    length: 149
                children: []
                pos: 24231
                length: 149
              - type: return_statement
                fields:
                  text: return _unwrappedPropertyHandler.processUnwrapped(p, ctxt,
                    bean, tokens);
                children: []
                pos: 24389
                length: 73
              pos: 21530
              length: 2938
          children: []
          pos: 21331
          length: 3137
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: deserializeWithExternalTypeId
              children: []
              pos: 24718
              length: 29
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser p
                children: []
                pos: 24748
                length: 12
              pos: 24701
              length: 385
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: not_equals
                        fields:
                          left:
                            type: identifier
                            fields:
                              text: _propertyBasedCreator
                            children: []
                            pos: 24861
                            length: 21
                          right:
                            type: null_literal
                            fields: {}
                            children: []
                            pos: 24886
                            length: 4
                        children: []
                        pos: 24861
                        length: 29
                    children: []
                    pos: 24860
                    length: 31
                children:
                - type: block
                  fields: {}
                  children:
                  - type: return_statement
                    fields:
                      text: return deserializeUsingPropertyBasedWithExternalTypeId(p,
                        ctxt);
                    children: []
                    pos: 24906
                    length: 64
                  pos: 24892
                  length: 88
                pos: 24857
                length: 123
              - type: return_statement
                fields:
                  text: return deserializeWithExternalTypeId(p, ctxt, _valueInstantiator.createUsingDefault(ctxt));
                children: []
                pos: 24989
                length: 91
              pos: 24847
              length: 239
          children: []
          pos: 24701
          length: 385
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: deserializeWithExternalTypeId
              children: []
              pos: 25109
              length: 29
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser p
                children: []
                pos: 25139
                length: 12
              pos: 25092
              length: 2259
            body:
              type: block
              fields: {}
              children:
              - type: local_variable_declaration
                fields:
                  text: 'final Class<?> activeView = _needViewProcesing ? ctxt.getActiveView()
                    : null;'
                children: []
                pos: 25267
                length: 77
              - type: local_variable_declaration
                fields:
                  text: final ExternalTypeHandler ext = _externalTypeIdHandler.start();
                children: []
                pos: 25353
                length: 63
              - type: for_statement
                fields:
                  text: |-
                    for (JsonToken t = p.getCurrentToken(); t == JsonToken.FIELD_NAME; t = p.nextToken()) {
                                String propName = p.getCurrentName();
                                t = p.nextToken();
                                SettableBeanProperty prop = _beanProperties.find(propName);
                                if (prop != null) { // normal case
                                    // [JACKSON-831]: may have property AND be used as external type id:
                                    if (t.isScalarValue()) {
                                        ext.handleTypePropertyValue(p, ctxt, propName, bean);
                                    }
                                    if (activeView != null && !prop.visibleInView(activeView)) {
                                        p.skipChildren();
                                        continue;
                                    }
                                    try {
                                        bean = prop.deserializeSetAndReturn(p, ctxt, bean);
                                    } catch (Exception e) {
                                        wrapAndThrow(e, bean, propName, ctxt);
                                    }
                                    continue;
                                }
                                // ignorable things should be ignored
                                if (_ignorableProps != null && _ignorableProps.contains(propName)) {
                                    handleIgnoredProperty(p, ctxt, bean, propName);
                                    continue;
                                }
                                // but others are likely to be part of external type id thingy...
                                if (ext.handlePropertyValue(p, ctxt, propName, bean)) {
                                    continue;
                                }
                                // if not, the usual fallback handling:
                                if (_anySetter != null) {
                                    try {
                                        _anySetter.deserializeAndSet(p, ctxt, bean, propName);
                                    } catch (Exception e) {
                                        wrapAndThrow(e, bean, propName, ctxt);
                                    }
                                } else {
                                    // Unknown: let's call handler method
                                    handleUnknownProperty(p, ctxt, bean, propName);
                                }
                            }
                children: []
                pos: 25426
                length: 1807
              - type: return_statement
                fields:
                  text: return ext.complete(p, ctxt, bean);
                children: []
                pos: 27310
                length: 35
              pos: 25257
              length: 2094
          children: []
          pos: 25092
          length: 2259
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: deserializeUsingPropertyBasedWithExternalTypeId
              children: []
              pos: 27374
              length: 47
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonParser p
                children: []
                pos: 27422
                length: 12
              pos: 27357
              length: 374
            body:
              type: block
              fields: {}
              children:
              - type: throw_statement
                fields:
                  text: throw new IllegalStateException("Deserialization with Builder,
                    External type id, @JsonCreator not yet implemented");
                children: []
                pos: 27609
                length: 116
              pos: 27527
              length: 204
          children: []
          pos: 27357
          length: 374
        pos: 748
        length: 26985
    children: []
    pos: 748
    length: 26985
  pos: 0
  length: 27734
text_diff: |
  --- before
  +++ after
  @@ -580,7 +580,27 @@
               // creator property?
               SettableBeanProperty creatorProp = creator.findCreatorProperty(propName);
               if (creatorProp != null) {
  -                buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt));
  +                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {
  +                    t = p.nextToken();
  +                    Object bean;
  +                    try {
  +                        bean = creator.build(ctxt, buffer);
  +                    } catch (Exception e) {
  +                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);
  +                        continue;
  +                    }
  +                    while (t == JsonToken.FIELD_NAME) {
  +                        p.nextToken();
  +                        tokens.copyCurrentStructure(p);
  +                        t = p.nextToken();
  +                    }
  +                    tokens.writeEndObject();
  +                    if (bean.getClass() != _beanType.getRawClass()) {
  +                        ctxt.reportMappingException("Can not create polymorphic instances with unwrapped values");
  +                        return null;
  +                    }
  +                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);
  +                }
                   continue;
               }
               // Object Id property?
tree_diff: |+
  New cluster:
  UPDATE from for (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {
              String propName = p.getCurrentName();
              p.nextToken(); // to point to value
              // creator property?
              SettableBeanProperty creatorProp = creator.findCreatorProperty(propName);
              if (creatorProp != null) {
                  buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt));
                  continue;
              }
              // Object Id property?
              if (buffer.readIdProperty(propName)) {
                  continue;
              }
              // regular property? needs buffering
              SettableBeanProperty prop = _beanProperties.find(propName);
              if (prop != null) {
                  buffer.bufferProperty(prop, prop.deserialize(p, ctxt));
                  continue;
              }
              if (_ignorableProps != null && _ignorableProps.contains(propName)) {
                  handleIgnoredProperty(p, ctxt, handledType(), propName);
                  continue;
              }
              tokens.writeFieldName(propName);
              tokens.copyCurrentStructure(p);
              // "any property"?
              if (_anySetter != null) {
                  buffer.bufferAnyProperty(_anySetter, propName, _anySetter.deserialize(p, ctxt));
              }
          } to for (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {
              String propName = p.getCurrentName();
              p.nextToken(); // to point to value
              // creator property?
              SettableBeanProperty creatorProp = creator.findCreatorProperty(propName);
              if (creatorProp != null) {
                  if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {
                      t = p.nextToken();
                      Object bean;
                      try {
                          bean = creator.build(ctxt, buffer);
                      } catch (Exception e) {
                          wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);
                          continue;
                      }
                      while (t == JsonToken.FIELD_NAME) {
                          p.nextToken();
                          tokens.copyCurrentStructure(p);
                          t = p.nextToken();
                      }
                      tokens.writeEndObject();
                      if (bean.getClass() != _beanType.getRawClass()) {
                          ctxt.reportMappingException("Can not create polymorphic instances with unwrapped values");
                          return null;
                      }
                      return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);
                  }
                  continue;
              }
              // Object Id property?
              if (buffer.readIdProperty(propName)) {
                  continue;
              }
              // regular property? needs buffering
              SettableBeanProperty prop = _beanProperties.find(propName);
              if (prop != null) {
                  buffer.bufferProperty(prop, prop.deserialize(p, ctxt));
                  continue;
              }
              if (_ignorableProps != null && _ignorableProps.contains(propName)) {
                  handleIgnoredProperty(p, ctxt, handledType(), propName);
                  continue;
              }
              tokens.writeFieldName(propName);
              tokens.copyCurrentStructure(p);
              // "any property"?
              if (_anySetter != null) {
                  buffer.bufferAnyProperty(_anySetter, propName, _anySetter.deserialize(p, ctxt));
              }
          }
  ------------
  ===
  update-node
  ---
  for_statement: for (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {
              String propName = p.getCurrentName();
              p.nextToken(); // to point to value
              // creator property?
              SettableBeanProperty creatorProp = creator.findCreatorProperty(propName);
              if (creatorProp != null) {
                  buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt));
                  continue;
              }
              // Object Id property?
              if (buffer.readIdProperty(propName)) {
                  continue;
              }
              // regular property? needs buffering
              SettableBeanProperty prop = _beanProperties.find(propName);
              if (prop != null) {
                  buffer.bufferProperty(prop, prop.deserialize(p, ctxt));
                  continue;
              }
              if (_ignorableProps != null && _ignorableProps.contains(propName)) {
                  handleIgnoredProperty(p, ctxt, handledType(), propName);
                  continue;
              }
              tokens.writeFieldName(propName);
              tokens.copyCurrentStructure(p);
              // "any property"?
              if (_anySetter != null) {
                  buffer.bufferAnyProperty(_anySetter, propName, _anySetter.deserialize(p, ctxt));
              }
          } [21829,23130]
  replace for (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {
              String propName = p.getCurrentName();
              p.nextToken(); // to point to value
              // creator property?
              SettableBeanProperty creatorProp = creator.findCreatorProperty(propName);
              if (creatorProp != null) {
                  buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt));
                  continue;
              }
              // Object Id property?
              if (buffer.readIdProperty(propName)) {
                  continue;
              }
              // regular property? needs buffering
              SettableBeanProperty prop = _beanProperties.find(propName);
              if (prop != null) {
                  buffer.bufferProperty(prop, prop.deserialize(p, ctxt));
                  continue;
              }
              if (_ignorableProps != null && _ignorableProps.contains(propName)) {
                  handleIgnoredProperty(p, ctxt, handledType(), propName);
                  continue;
              }
              tokens.writeFieldName(propName);
              tokens.copyCurrentStructure(p);
              // "any property"?
              if (_anySetter != null) {
                  buffer.bufferAnyProperty(_anySetter, propName, _anySetter.deserialize(p, ctxt));
              }
          } by for (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {
              String propName = p.getCurrentName();
              p.nextToken(); // to point to value
              // creator property?
              SettableBeanProperty creatorProp = creator.findCreatorProperty(propName);
              if (creatorProp != null) {
                  if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {
                      t = p.nextToken();
                      Object bean;
                      try {
                          bean = creator.build(ctxt, buffer);
                      } catch (Exception e) {
                          wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);
                          continue;
                      }
                      while (t == JsonToken.FIELD_NAME) {
                          p.nextToken();
                          tokens.copyCurrentStructure(p);
                          t = p.nextToken();
                      }
                      tokens.writeEndObject();
                      if (bean.getClass() != _beanType.getRawClass()) {
                          ctxt.reportMappingException("Can not create polymorphic instances with unwrapped values");
                          return null;
                      }
                      return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);
                  }
                  continue;
              }
              // Object Id property?
              if (buffer.readIdProperty(propName)) {
                  continue;
              }
              // regular property? needs buffering
              SettableBeanProperty prop = _beanProperties.find(propName);
              if (prop != null) {
                  buffer.bufferProperty(prop, prop.deserialize(p, ctxt));
                  continue;
              }
              if (_ignorableProps != null && _ignorableProps.contains(propName)) {
                  handleIgnoredProperty(p, ctxt, handledType(), propName);
                  continue;
              }
              tokens.writeFieldName(propName);
              tokens.copyCurrentStructure(p);
              // "any property"?
              if (_anySetter != null) {
                  buffer.bufferAnyProperty(_anySetter, propName, _anySetter.deserialize(p, ctxt));
              }
          }

...
