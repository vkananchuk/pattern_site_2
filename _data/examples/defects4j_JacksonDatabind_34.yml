---
language: java
before_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: NumberSerializer
        children: []
        pos: 696
        length: 16
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: public final static NumberSerializer instance = new NumberSerializer(Number.class);
          children: []
          pos: 852
          length: 83
        - type: field_declaration
          fields:
            text: protected final boolean _isInt;
          children: []
          pos: 941
          length: 31
        - type: constructor_declaration
          fields:
            text: |-
              public NumberSerializer(Class<? extends Number> rawType) {
                      super(rawType, false);
                      // since this will NOT be constructed for Integer or Long, only case is:
                      _isInt = (rawType == BigInteger.class);
                  }
          children: []
          pos: 1012
          length: 224
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: serialize
              children: []
              pos: 1268
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Number value
                children: []
                pos: 1278
                length: 12
              pos: 1242
              length: 1169
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: value instanceof BigDecimal
                        children: []
                        pos: 1429
                        length: 27
                    children: []
                    pos: 1428
                    length: 29
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: g.writeNumber((BigDecimal) value);
                    children: []
                    pos: 1472
                    length: 34
                  pos: 1458
                  length: 58
                pos: 1425
                length: 980
              pos: 1361
              length: 1050
          children: []
          pos: 1242
          length: 1169
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getSchema
              children: []
              pos: 2447
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: SerializerProvider provider
                children: []
                pos: 2457
                length: 27
              pos: 2417
              length: 161
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: 'return createSchemaNode(_isInt ? "integer" : "number", true);'
                children: []
                pos: 2511
                length: 61
              pos: 2501
              length: 77
          children: []
          pos: 2417
          length: 161
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: acceptJsonFormatVisitor
              children: []
              pos: 2610
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonFormatVisitorWrapper visitor
                children: []
                pos: 2634
                length: 32
              pos: 2584
              length: 636
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: _isInt
                        children: []
                        pos: 2733
                        length: 6
                    children: []
                    pos: 2732
                    length: 8
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: visitIntFormat(visitor, typeHint, JsonParser.NumberType.BIG_INTEGER);
                    children: []
                    pos: 2755
                    length: 69
                  pos: 2741
                  length: 93
                pos: 2729
                length: 485
              pos: 2719
              length: 501
          children: []
          pos: 2584
          length: 636
        pos: 639
        length: 2583
    children: []
    pos: 639
    length: 2583
  pos: 0
  length: 3222
after_tree:
  type: program
  fields: {}
  children:
  - type: class_declaration
    fields:
      name:
        type: identifier
        fields:
          text: NumberSerializer
        children: []
        pos: 696
        length: 16
      body:
        type: class_body
        fields: {}
        children:
        - type: field_declaration
          fields:
            text: public final static NumberSerializer instance = new NumberSerializer(Number.class);
          children: []
          pos: 852
          length: 83
        - type: field_declaration
          fields:
            text: protected final boolean _isInt;
          children: []
          pos: 941
          length: 31
        - type: constructor_declaration
          fields:
            text: |-
              public NumberSerializer(Class<? extends Number> rawType) {
                      super(rawType, false);
                      // since this will NOT be constructed for Integer or Long, only case is:
                      _isInt = (rawType == BigInteger.class);
                  }
          children: []
          pos: 1012
          length: 224
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: serialize
              children: []
              pos: 1268
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: Number value
                children: []
                pos: 1278
                length: 12
              pos: 1242
              length: 1169
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: instanceof_expression
                        fields:
                          text: value instanceof BigDecimal
                        children: []
                        pos: 1429
                        length: 27
                    children: []
                    pos: 1428
                    length: 29
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: g.writeNumber((BigDecimal) value);
                    children: []
                    pos: 1472
                    length: 34
                  pos: 1458
                  length: 58
                pos: 1425
                length: 980
              pos: 1361
              length: 1050
          children: []
          pos: 1242
          length: 1169
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: getSchema
              children: []
              pos: 2447
              length: 9
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: SerializerProvider provider
                children: []
                pos: 2457
                length: 27
              pos: 2417
              length: 161
            body:
              type: block
              fields: {}
              children:
              - type: return_statement
                fields:
                  text: 'return createSchemaNode(_isInt ? "integer" : "number", true);'
                children: []
                pos: 2511
                length: 61
              pos: 2501
              length: 77
          children: []
          pos: 2417
          length: 161
        - type: method_declaration
          fields:
            name:
              type: identifier
              fields:
                text: acceptJsonFormatVisitor
              children: []
              pos: 2610
              length: 23
            parameters:
              type: method_parameters
              fields: {}
              children:
              - type: formal_parameter
                fields:
                  text: JsonFormatVisitorWrapper visitor
                children: []
                pos: 2634
                length: 32
              pos: 2584
              length: 636
            body:
              type: block
              fields: {}
              children:
              - type: if_statement
                fields:
                  condition:
                    type: parenthesized_expression
                    fields:
                      expression:
                        type: identifier
                        fields:
                          text: _isInt
                        children: []
                        pos: 2733
                        length: 6
                    children: []
                    pos: 2732
                    length: 8
                children:
                - type: block
                  fields: {}
                  children:
                  - type: expression_statement
                    fields:
                      text: visitIntFormat(visitor, typeHint, JsonParser.NumberType.BIG_INTEGER);
                    children: []
                    pos: 2755
                    length: 69
                  pos: 2741
                  length: 93
                pos: 2729
                length: 485
              pos: 2719
              length: 501
          children: []
          pos: 2584
          length: 636
        pos: 639
        length: 2583
    children: []
    pos: 639
    length: 2583
  pos: 0
  length: 3222
text_diff: |
  --- before
  +++ after
  @@ -78,7 +78,7 @@
           } else {
               Class<?> h = handledType();
               if (h == BigDecimal.class) {
  -                visitFloatFormat(visitor, typeHint, JsonParser.NumberType.BIG_DECIMAL);
  +                visitFloatFormat(visitor, typeHint, JsonParser.NumberType.BIG_INTEGER);
               } else {
                   // otherwise bit unclear what to call... but let's try:
                   /*JsonNumberFormatVisitor v2 =*/ visitor.expectNumberFormat(typeHint);
tree_diff: ''
